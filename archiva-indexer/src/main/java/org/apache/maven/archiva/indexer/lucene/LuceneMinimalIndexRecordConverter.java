begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|lucene
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|DateTools
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|NumberTools
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|record
operator|.
name|MinimalArtifactIndexRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|record
operator|.
name|MinimalIndexRecordFields
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|record
operator|.
name|RepositoryIndexRecord
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_comment
comment|/**  * Convert the minimal index record to a Lucene document.  *  * @author<a href="mailto:brett@apache.org">Brett Porter</a>  */
end_comment

begin_class
specifier|public
class|class
name|LuceneMinimalIndexRecordConverter
implements|implements
name|LuceneIndexRecordConverter
block|{
specifier|public
name|Document
name|convert
parameter_list|(
name|RepositoryIndexRecord
name|record
parameter_list|)
block|{
name|MinimalArtifactIndexRecord
name|rec
init|=
operator|(
name|MinimalArtifactIndexRecord
operator|)
name|record
decl_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|addTokenizedField
argument_list|(
name|document
argument_list|,
name|MinimalIndexRecordFields
operator|.
name|FILENAME
argument_list|,
name|rec
operator|.
name|getFilename
argument_list|()
argument_list|)
expr_stmt|;
name|addUntokenizedField
argument_list|(
name|document
argument_list|,
name|MinimalIndexRecordFields
operator|.
name|LAST_MODIFIED
argument_list|,
name|DateTools
operator|.
name|timeToString
argument_list|(
name|rec
operator|.
name|getLastModified
argument_list|()
argument_list|,
name|DateTools
operator|.
name|Resolution
operator|.
name|SECOND
argument_list|)
argument_list|)
expr_stmt|;
name|addUntokenizedField
argument_list|(
name|document
argument_list|,
name|MinimalIndexRecordFields
operator|.
name|FILE_SIZE
argument_list|,
name|NumberTools
operator|.
name|longToString
argument_list|(
name|rec
operator|.
name|getSize
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addUntokenizedField
argument_list|(
name|document
argument_list|,
name|MinimalIndexRecordFields
operator|.
name|MD5
argument_list|,
name|rec
operator|.
name|getMd5Checksum
argument_list|()
argument_list|)
expr_stmt|;
name|addTokenizedField
argument_list|(
name|document
argument_list|,
name|MinimalIndexRecordFields
operator|.
name|CLASSES
argument_list|,
name|StringUtils
operator|.
name|join
argument_list|(
name|rec
operator|.
name|getClasses
argument_list|()
operator|.
name|iterator
argument_list|()
argument_list|,
literal|"\n"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|document
return|;
block|}
specifier|public
name|RepositoryIndexRecord
name|convert
parameter_list|(
name|Document
name|document
parameter_list|)
throws|throws
name|ParseException
block|{
name|MinimalArtifactIndexRecord
name|record
init|=
operator|new
name|MinimalArtifactIndexRecord
argument_list|()
decl_stmt|;
name|record
operator|.
name|setFilename
argument_list|(
name|document
operator|.
name|get
argument_list|(
name|MinimalIndexRecordFields
operator|.
name|FILENAME
argument_list|)
argument_list|)
expr_stmt|;
name|record
operator|.
name|setLastModified
argument_list|(
name|DateTools
operator|.
name|stringToTime
argument_list|(
name|document
operator|.
name|get
argument_list|(
name|MinimalIndexRecordFields
operator|.
name|LAST_MODIFIED
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|record
operator|.
name|setSize
argument_list|(
name|NumberTools
operator|.
name|stringToLong
argument_list|(
name|document
operator|.
name|get
argument_list|(
name|MinimalIndexRecordFields
operator|.
name|FILE_SIZE
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|record
operator|.
name|setMd5Checksum
argument_list|(
name|document
operator|.
name|get
argument_list|(
name|MinimalIndexRecordFields
operator|.
name|MD5
argument_list|)
argument_list|)
expr_stmt|;
name|record
operator|.
name|setClasses
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|document
operator|.
name|get
argument_list|(
name|MinimalIndexRecordFields
operator|.
name|CLASSES
argument_list|)
operator|.
name|split
argument_list|(
literal|"\n"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|record
return|;
block|}
specifier|private
specifier|static
name|void
name|addUntokenizedField
parameter_list|(
name|Document
name|document
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|name
argument_list|,
name|value
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|,
name|Field
operator|.
name|Index
operator|.
name|UN_TOKENIZED
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|void
name|addTokenizedField
parameter_list|(
name|Document
name|document
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|name
argument_list|,
name|value
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|,
name|Field
operator|.
name|Index
operator|.
name|TOKENIZED
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

