begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|constraints
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|AbstractArchivaDatabaseTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ArtifactDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ArchivaDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaArtifact
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * ArtifactsByChecksumConstraintTest  *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @author<a href="mailto:oching@apache.org">Maria Odea Ching</a>  * @version  */
end_comment

begin_class
specifier|public
class|class
name|ArtifactsByChecksumConstraintTest
extends|extends
name|AbstractArchivaDatabaseTestCase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|SHA1_HASH3
init|=
literal|"f3f653289f3217c65324830ab3415bc92feddefa"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|SHA1_HASH2
init|=
literal|"a49810ad3eba8651677ab57cd40a0f76fdef9538"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|SHA1_HASH1
init|=
literal|"232f01b24b1617c46a3d4b0ab3415bc9237dcdec"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MD5_HASH3
init|=
literal|"5440efd724c9a5246ddc148662a4f20a"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MD5_HASH2
init|=
literal|"4685525525d82dea68c6a6cd5a08f726"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MD5_HASH1
init|=
literal|"53e3b856aa1a3f3cb7fe0f7ac6163aaf"
decl_stmt|;
specifier|private
name|ArtifactDAO
name|artifactDao
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|ArchivaDAO
name|dao
init|=
operator|(
name|ArchivaDAO
operator|)
name|lookup
argument_list|(
name|ArchivaDAO
operator|.
name|ROLE
argument_list|,
literal|"jdo"
argument_list|)
decl_stmt|;
name|artifactDao
operator|=
name|dao
operator|.
name|getArtifactDAO
argument_list|()
expr_stmt|;
block|}
specifier|public
name|ArchivaArtifact
name|createArtifact
parameter_list|(
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|)
block|{
name|ArchivaArtifact
name|artifact
init|=
name|artifactDao
operator|.
name|createArtifact
argument_list|(
literal|"org.apache.maven.archiva.test"
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|)
decl_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setLastModified
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setRepositoryId
argument_list|(
literal|"testable_repo"
argument_list|)
expr_stmt|;
return|return
name|artifact
return|;
block|}
specifier|public
name|void
name|testConstraintSHA1
parameter_list|()
throws|throws
name|Exception
block|{
name|ArchivaArtifact
name|artifact
decl_stmt|;
comment|// Setup artifacts in fresh DB.
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-sha1-one"
argument_list|,
literal|"1.0"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumSHA1
argument_list|(
name|SHA1_HASH1
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-sha1-one"
argument_list|,
literal|"1.1"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumSHA1
argument_list|(
name|SHA1_HASH1
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-sha1-one"
argument_list|,
literal|"1.2"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumSHA1
argument_list|(
name|SHA1_HASH1
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-sha1-two"
argument_list|,
literal|"1.0"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumSHA1
argument_list|(
name|SHA1_HASH1
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-sha1-two"
argument_list|,
literal|"2.0"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumSHA1
argument_list|(
name|SHA1_HASH3
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-sha1-two"
argument_list|,
literal|"2.1"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumSHA1
argument_list|(
name|SHA1_HASH2
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-sha1-two"
argument_list|,
literal|"3.0"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumSHA1
argument_list|(
name|SHA1_HASH2
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|"Artifacts by SHA1 Checksum"
argument_list|,
literal|4
argument_list|,
operator|new
name|ArtifactsByChecksumConstraint
argument_list|(
name|SHA1_HASH1
argument_list|,
name|ArtifactsByChecksumConstraint
operator|.
name|SHA1_CONDITION
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|"Artifacts by SHA1 Checksum"
argument_list|,
literal|2
argument_list|,
operator|new
name|ArtifactsByChecksumConstraint
argument_list|(
name|SHA1_HASH2
argument_list|,
name|ArtifactsByChecksumConstraint
operator|.
name|SHA1_CONDITION
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|"Artifacts by SHA1 Checksum"
argument_list|,
literal|1
argument_list|,
operator|new
name|ArtifactsByChecksumConstraint
argument_list|(
name|SHA1_HASH3
argument_list|,
name|ArtifactsByChecksumConstraint
operator|.
name|SHA1_CONDITION
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testConstraintMD5
parameter_list|()
throws|throws
name|Exception
block|{
name|ArchivaArtifact
name|artifact
decl_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-md5-one"
argument_list|,
literal|"1.0"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumMD5
argument_list|(
name|MD5_HASH1
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-md5-one"
argument_list|,
literal|"1.1"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumMD5
argument_list|(
name|MD5_HASH1
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-md5-one"
argument_list|,
literal|"1.2"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumMD5
argument_list|(
name|MD5_HASH1
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-md5-two"
argument_list|,
literal|"1.0"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumMD5
argument_list|(
name|MD5_HASH1
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-md5-two"
argument_list|,
literal|"2.0"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumMD5
argument_list|(
name|MD5_HASH3
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-md5-two"
argument_list|,
literal|"2.1"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumMD5
argument_list|(
name|MD5_HASH2
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-md5-two"
argument_list|,
literal|"3.0"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumMD5
argument_list|(
name|MD5_HASH2
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|"Artifacts by MD5 Checksum"
argument_list|,
literal|4
argument_list|,
operator|new
name|ArtifactsByChecksumConstraint
argument_list|(
name|MD5_HASH1
argument_list|,
name|ArtifactsByChecksumConstraint
operator|.
name|MD5_CONDITION
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|"Artifacts by MD5 Checksum"
argument_list|,
literal|2
argument_list|,
operator|new
name|ArtifactsByChecksumConstraint
argument_list|(
name|MD5_HASH2
argument_list|,
name|ArtifactsByChecksumConstraint
operator|.
name|MD5_CONDITION
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|"Artifacts by MD5 Checksum"
argument_list|,
literal|1
argument_list|,
operator|new
name|ArtifactsByChecksumConstraint
argument_list|(
name|MD5_HASH3
argument_list|,
name|ArtifactsByChecksumConstraint
operator|.
name|MD5_CONDITION
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testConstraintOR
parameter_list|()
throws|throws
name|Exception
block|{
name|ArchivaArtifact
name|artifact
decl_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-one"
argument_list|,
literal|"1.0"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumMD5
argument_list|(
name|MD5_HASH1
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-one"
argument_list|,
literal|"1.1"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumMD5
argument_list|(
name|MD5_HASH1
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-one"
argument_list|,
literal|"1.2"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumMD5
argument_list|(
name|MD5_HASH1
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-two"
argument_list|,
literal|"1.0"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumMD5
argument_list|(
name|MD5_HASH1
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-two"
argument_list|,
literal|"2.0"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumMD5
argument_list|(
name|MD5_HASH3
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-two"
argument_list|,
literal|"2.1"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumMD5
argument_list|(
name|MD5_HASH2
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|createArtifact
argument_list|(
literal|"test-two"
argument_list|,
literal|"3.0"
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumMD5
argument_list|(
name|MD5_HASH2
argument_list|)
expr_stmt|;
name|artifactDao
operator|.
name|saveArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|"Artifacts by MD5 Checksum"
argument_list|,
literal|4
argument_list|,
operator|new
name|ArtifactsByChecksumConstraint
argument_list|(
name|MD5_HASH1
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|"Artifacts by MD5 Checksum"
argument_list|,
literal|2
argument_list|,
operator|new
name|ArtifactsByChecksumConstraint
argument_list|(
name|MD5_HASH2
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|"Artifacts by MD5 Checksum"
argument_list|,
literal|1
argument_list|,
operator|new
name|ArtifactsByChecksumConstraint
argument_list|(
name|MD5_HASH3
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertConstraint
parameter_list|(
name|String
name|msg
parameter_list|,
name|int
name|count
parameter_list|,
name|ArtifactsByChecksumConstraint
name|constraint
parameter_list|)
throws|throws
name|Exception
block|{
name|List
name|results
init|=
name|artifactDao
operator|.
name|queryArtifacts
argument_list|(
name|constraint
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|msg
operator|+
literal|": Not Null"
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|+
literal|": Results.size"
argument_list|,
name|count
argument_list|,
name|results
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

