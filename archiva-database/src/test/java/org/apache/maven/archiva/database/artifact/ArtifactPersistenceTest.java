begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|artifact
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|AbstractArchivaDatabaseTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ArchivaDatabaseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|factory
operator|.
name|ArtifactFactory
import|;
end_import

begin_comment
comment|/**  * ArtifactPersistenceTest   *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|ArtifactPersistenceTest
extends|extends
name|AbstractArchivaDatabaseTestCase
block|{
specifier|private
name|ArtifactFactory
name|artifactFactory
decl_stmt|;
specifier|private
name|ArtifactPersistence
name|db
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|artifactFactory
operator|=
operator|(
name|ArtifactFactory
operator|)
name|lookup
argument_list|(
name|ArtifactFactory
operator|.
name|ROLE
argument_list|)
expr_stmt|;
name|db
operator|=
operator|(
name|ArtifactPersistence
operator|)
name|lookup
argument_list|(
name|ArtifactPersistence
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testLookup
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|db
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testAddArtifact
parameter_list|()
throws|throws
name|ArchivaDatabaseException
block|{
name|String
name|groupId
init|=
literal|"org.apache.maven.archiva"
decl_stmt|;
name|String
name|artifactId
init|=
literal|"archiva-test-artifact"
decl_stmt|;
name|String
name|version
init|=
literal|"1.0"
decl_stmt|;
name|Artifact
name|artifact
init|=
name|artifactFactory
operator|.
name|createArtifact
argument_list|(
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
name|Artifact
operator|.
name|SCOPE_COMPILE
argument_list|,
literal|"jar"
argument_list|)
decl_stmt|;
name|db
operator|.
name|create
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|Artifact
name|fetched
init|=
name|db
operator|.
name|read
argument_list|(
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Should have fetched an Artifact."
argument_list|,
name|fetched
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Should have fetched the expected Artifact."
argument_list|,
name|artifact
argument_list|,
name|fetched
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

