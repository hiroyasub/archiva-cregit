begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|jdo
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ArchivaDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ArchivaDatabaseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|Constraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ObjectNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|constraints
operator|.
name|ArchivaRepositoryByUrlConstraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaArtifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|RepositoryContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|RepositoryContentKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|logging
operator|.
name|AbstractLogEnabled
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * JdoArchivaDAO   *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  *   * @plexus.component role="org.apache.maven.archiva.database.ArchivaDAO"  *                   role-hint="jdo"  */
end_comment

begin_class
specifier|public
class|class
name|JdoArchivaDAO
extends|extends
name|AbstractLogEnabled
implements|implements
name|ArchivaDAO
block|{
comment|/**      * @plexus.requirement      */
specifier|private
name|JdoAccess
name|jdo
decl_stmt|;
comment|/* .\ Archiva Repository \.____________________________________________________________ */
specifier|public
name|ArchivaRepository
name|createRepository
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|url
parameter_list|)
block|{
name|ArchivaRepository
name|repo
decl_stmt|;
try|try
block|{
name|repo
operator|=
name|getRepository
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ArchivaDatabaseException
name|e
parameter_list|)
block|{
name|repo
operator|=
operator|new
name|ArchivaRepository
argument_list|()
expr_stmt|;
name|repo
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setUrl
argument_list|(
name|url
argument_list|)
expr_stmt|;
block|}
return|return
name|repo
return|;
block|}
specifier|public
name|List
name|getRepositories
parameter_list|()
throws|throws
name|ObjectNotFoundException
throws|,
name|ArchivaDatabaseException
block|{
return|return
name|jdo
operator|.
name|getAllObjects
argument_list|(
name|ArchivaRepository
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
name|ArchivaRepository
name|getRepository
parameter_list|(
name|String
name|id
parameter_list|)
throws|throws
name|ObjectNotFoundException
throws|,
name|ArchivaDatabaseException
block|{
return|return
operator|(
name|ArchivaRepository
operator|)
name|jdo
operator|.
name|getObjectById
argument_list|(
name|ArchivaRepository
operator|.
name|class
argument_list|,
name|id
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|public
name|List
name|queryRepository
parameter_list|(
name|Constraint
name|constraint
parameter_list|)
throws|throws
name|ObjectNotFoundException
throws|,
name|ArchivaDatabaseException
block|{
return|return
name|jdo
operator|.
name|getAllObjects
argument_list|(
name|ArchivaRepository
operator|.
name|class
argument_list|,
name|constraint
argument_list|)
return|;
block|}
specifier|public
name|ArchivaRepository
name|saveRepository
parameter_list|(
name|ArchivaRepository
name|repository
parameter_list|)
block|{
return|return
operator|(
name|ArchivaRepository
operator|)
name|jdo
operator|.
name|saveObject
argument_list|(
name|repository
argument_list|)
return|;
block|}
specifier|public
name|void
name|deleteRepository
parameter_list|(
name|ArchivaRepository
name|repository
parameter_list|)
throws|throws
name|ArchivaDatabaseException
block|{
name|jdo
operator|.
name|removeObject
argument_list|(
name|repository
argument_list|)
expr_stmt|;
block|}
comment|/* .\ Repository Content \.____________________________________________________________ */
specifier|public
name|RepositoryContent
name|createRepositoryContent
parameter_list|(
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|String
name|repositoryId
parameter_list|)
block|{
name|RepositoryContent
name|repoContent
decl_stmt|;
try|try
block|{
name|repoContent
operator|=
name|getRepositoryContent
argument_list|(
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
name|repositoryId
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ArchivaDatabaseException
name|e
parameter_list|)
block|{
name|repoContent
operator|=
operator|new
name|RepositoryContent
argument_list|(
name|repositoryId
argument_list|,
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|)
expr_stmt|;
block|}
return|return
name|repoContent
return|;
block|}
specifier|public
name|RepositoryContent
name|getRepositoryContent
parameter_list|(
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|String
name|repositoryId
parameter_list|)
throws|throws
name|ObjectNotFoundException
throws|,
name|ArchivaDatabaseException
block|{
name|RepositoryContentKey
name|key
init|=
operator|new
name|RepositoryContentKey
argument_list|()
decl_stmt|;
name|key
operator|.
name|groupId
operator|=
name|groupId
expr_stmt|;
name|key
operator|.
name|artifactId
operator|=
name|artifactId
expr_stmt|;
name|key
operator|.
name|version
operator|=
name|version
expr_stmt|;
name|key
operator|.
name|repositoryId
operator|=
name|repositoryId
expr_stmt|;
return|return
operator|(
name|RepositoryContent
operator|)
name|jdo
operator|.
name|getObjectById
argument_list|(
name|RepositoryContent
operator|.
name|class
argument_list|,
name|key
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|public
name|List
name|queryRepositoryContents
parameter_list|(
name|Constraint
name|constraint
parameter_list|)
throws|throws
name|ObjectNotFoundException
throws|,
name|ArchivaDatabaseException
block|{
return|return
name|jdo
operator|.
name|getAllObjects
argument_list|(
name|RepositoryContent
operator|.
name|class
argument_list|,
name|constraint
argument_list|)
return|;
block|}
specifier|public
name|RepositoryContent
name|saveRepositoryContent
parameter_list|(
name|RepositoryContent
name|repoContent
parameter_list|)
throws|throws
name|ArchivaDatabaseException
block|{
return|return
operator|(
name|RepositoryContent
operator|)
name|jdo
operator|.
name|saveObject
argument_list|(
name|repoContent
argument_list|)
return|;
block|}
specifier|public
name|void
name|deleteRepositoryContent
parameter_list|(
name|RepositoryContent
name|repoContent
parameter_list|)
throws|throws
name|ArchivaDatabaseException
block|{
name|jdo
operator|.
name|removeObject
argument_list|(
name|repoContent
argument_list|)
expr_stmt|;
block|}
comment|/* .\ Archiva Artifact \. _____________________________________________________________ */
specifier|public
name|ArchivaArtifact
name|createArtifact
parameter_list|(
name|RepositoryContent
name|repoContent
parameter_list|,
name|String
name|classifier
parameter_list|,
name|String
name|type
parameter_list|)
block|{
name|ArchivaArtifact
name|artifact
decl_stmt|;
try|try
block|{
name|artifact
operator|=
name|getArtifact
argument_list|(
name|repoContent
argument_list|,
name|classifier
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ArchivaDatabaseException
name|e
parameter_list|)
block|{
name|artifact
operator|=
operator|new
name|ArchivaArtifact
argument_list|()
expr_stmt|;
name|artifact
operator|.
name|setContentKey
argument_list|(
name|repoContent
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|setClassifier
argument_list|(
name|classifier
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
block|}
return|return
name|artifact
return|;
block|}
specifier|public
name|ArchivaArtifact
name|getArtifact
parameter_list|(
name|RepositoryContent
name|repoContent
parameter_list|,
name|String
name|classifier
parameter_list|,
name|String
name|type
parameter_list|)
throws|throws
name|ObjectNotFoundException
throws|,
name|ArchivaDatabaseException
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|List
name|queryArtifacts
parameter_list|(
name|Constraint
name|constraint
parameter_list|)
throws|throws
name|ObjectNotFoundException
throws|,
name|ArchivaDatabaseException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|ArchivaArtifact
name|saveArtifact
parameter_list|(
name|ArchivaArtifact
name|artifact
parameter_list|)
throws|throws
name|ArchivaDatabaseException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|deleteArtifact
parameter_list|(
name|ArchivaArtifact
name|artifact
parameter_list|)
throws|throws
name|ArchivaDatabaseException
block|{
comment|// TODO Auto-generated method stub
block|}
block|}
end_class

end_unit

