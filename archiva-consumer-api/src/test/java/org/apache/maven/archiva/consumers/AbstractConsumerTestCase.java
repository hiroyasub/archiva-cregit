begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|consumers
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|layout
operator|.
name|ArtifactRepositoryLayout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|PlexusTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|util
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * AbstractConsumerTestCase   *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|AbstractConsumerTestCase
extends|extends
name|PlexusTestCase
block|{
specifier|protected
name|ArchivaRepository
name|getLegacyRepository
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|repoBaseDir
init|=
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"src/test/legacy-repository"
argument_list|)
decl_stmt|;
name|ArchivaRepository
name|repository
init|=
name|createRepository
argument_list|(
name|repoBaseDir
argument_list|,
literal|"legacy"
argument_list|)
decl_stmt|;
name|resetRepositoryState
argument_list|(
name|repository
argument_list|)
expr_stmt|;
return|return
name|repository
return|;
block|}
specifier|protected
name|ArchivaRepository
name|getDefaultRepository
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|repoBaseDir
init|=
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"src/test/repository"
argument_list|)
decl_stmt|;
name|ArchivaRepository
name|repository
init|=
name|createRepository
argument_list|(
name|repoBaseDir
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|resetRepositoryState
argument_list|(
name|repository
argument_list|)
expr_stmt|;
return|return
name|repository
return|;
block|}
specifier|private
name|void
name|resetRepositoryState
parameter_list|(
name|ArchivaRepository
name|repository
parameter_list|)
throws|throws
name|IOException
block|{
name|File
name|repoBaseDir
init|=
operator|new
name|File
argument_list|(
name|repository
operator|.
name|getRepositoryURL
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|List
name|tmpfiles
init|=
name|FileUtils
operator|.
name|getFiles
argument_list|(
name|repoBaseDir
argument_list|,
literal|".*"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|it
init|=
name|tmpfiles
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|File
name|hit
init|=
operator|(
name|File
operator|)
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|hit
operator|.
name|exists
argument_list|()
condition|)
block|{
if|if
condition|(
name|hit
operator|.
name|isFile
argument_list|()
condition|)
block|{
name|hit
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hit
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|hit
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|protected
name|ArchivaRepository
name|createRepository
parameter_list|(
name|File
name|basedir
parameter_list|,
name|String
name|layout
parameter_list|)
throws|throws
name|Exception
block|{
name|ArtifactRepositoryLayout
name|repoLayout
init|=
operator|(
name|ArtifactRepositoryLayout
operator|)
name|lookup
argument_list|(
name|ArtifactRepositoryLayout
operator|.
name|ROLE
argument_list|,
name|layout
argument_list|)
decl_stmt|;
name|ArchivaRepository
name|repo
init|=
operator|new
name|ArchivaRepository
argument_list|()
decl_stmt|;
name|repo
operator|.
name|setId
argument_list|(
literal|"discoveryRepo"
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setUrl
argument_list|(
literal|"file://"
operator|+
name|basedir
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setLayout
argument_list|(
name|repoLayout
argument_list|)
expr_stmt|;
return|return
name|repo
return|;
block|}
specifier|public
name|List
name|getLegacyLayoutArtifactPaths
parameter_list|()
block|{
name|List
name|files
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"invalid/jars/1.0/invalid-1.0.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"invalid/jars/invalid-1.0.rar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"invalid/jars/invalid.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"invalid/invalid-1.0.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"javax.sql/jars/jdbc-2.0.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org.apache.maven/jars/some-ejb-1.0-client.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org.apache.maven/jars/testing-1.0.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org.apache.maven/jars/testing-1.0-sources.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org.apache.maven/jars/testing-UNKNOWN.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org.apache.maven/jars/testing-1.0.zip"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org.apache.maven/jars/testing-1.0-20050611.112233-1.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org.apache.maven/jars/testing-1.0.tar.gz"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org.apache.maven.update/jars/test-not-updated-1.0.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org.apache.maven.update/jars/test-updated-1.0.jar"
argument_list|)
expr_stmt|;
return|return
name|files
return|;
block|}
specifier|public
name|List
name|getDefaultLayoutArtifactPaths
parameter_list|()
block|{
name|List
name|files
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"invalid/invalid/1.0-20050611.123456-1/invalid-1.0-20050611.123456-1.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"invalid/invalid/1.0-SNAPSHOT/invalid-1.0.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"invalid/invalid/1.0/invalid-1.0b.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"invalid/invalid/1.0/invalid-2.0.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"invalid/invalid-1.0.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/test/1.0-SNAPSHOT/wrong-artifactId-1.0-20050611.112233-1.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/test/1.0-SNAPSHOT/test-1.0-20050611.112233-1-javadoc.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/test/1.0-SNAPSHOT/test-1.0-20050611.112233-1.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/A/1.0/A-1.0.war"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/A/1.0/A-1.0.pom"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/B/2.0/B-2.0.pom"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/B/1.0/B-1.0.pom"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/some-ejb/1.0/some-ejb-1.0-client.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/C/1.0/C-1.0.war"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/C/1.0/C-1.0.pom"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/update/test-not-updated/1.0/test-not-updated-1.0.pom"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/update/test-not-updated/1.0/test-not-updated-1.0.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/update/test-updated/1.0/test-updated-1.0.pom"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/update/test-updated/1.0/test-updated-1.0.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/discovery/1.0/discovery-1.0.pom"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/testing/1.0/testing-1.0-test-sources.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/testing/1.0/testing-1.0.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/testing/1.0/testing-1.0-sources.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/testing/1.0/testing-1.0.zip"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/testing/1.0/testing-1.0.tar.gz"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/samplejar/2.0/samplejar-2.0.pom"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/samplejar/2.0/samplejar-2.0.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.pom"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"org/apache/testgroup/discovery/1.0/discovery-1.0.pom"
argument_list|)
expr_stmt|;
name|files
operator|.
name|add
argument_list|(
literal|"javax/sql/jdbc/2.0/jdbc-2.0.jar"
argument_list|)
expr_stmt|;
return|return
name|files
return|;
block|}
block|}
end_class

end_unit

