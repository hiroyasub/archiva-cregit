<!--
  ~ Copyright 2005-2006 The Apache Software Foundation.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<plexus>
  <components>
    <!--
     | Logger manager
     -->
    <component>
      <role>org.codehaus.plexus.logging.LoggerManager</role>
      <implementation>org.codehaus.plexus.logging.log4j.Log4JLoggerManager</implementation>
      <lifecycle-handler>basic</lifecycle-handler>

      <configuration>
        <threshold>WARN</threshold>
        <default-appender>console,rolling</default-appender>

        <appenders>
          <appender>
            <id>console</id>
            <threshold>DEBUG</threshold>
            <type>org.apache.log4j.ConsoleAppender</type>
            <conversion-pattern>%d [%t] %-5p %-30c{1} - %m%n</conversion-pattern>
          </appender>

          <appender>
            <id>rolling</id>
            <threshold>DEBUG</threshold>
            <type>org.apache.log4j.DailyRollingFileAppender</type>
            <conversion-pattern>%-4r [%t] %-5p %c %x - %m%n</conversion-pattern>

            <properties>
              <property>
                <name>file</name>
                <value>${plexus.home}/logs/archiva.log</value>
              </property>
              <property>
                <name>append</name>
                <value>true</value>
              </property>
              <property>
                <name>datePattern</name>
                <value>'.'yyyy-MM-dd</value>
              </property>
            </properties>
          </appender>

          <appender>
            <id>audit</id>
            <threshold>DEBUG</threshold>
            <type>org.apache.log4j.DailyRollingFileAppender</type>
            <conversion-pattern>%-4r [%t] %-5p %c %x - %m%n</conversion-pattern>

            <properties>
              <property>
                <name>file</name>
                <value>${plexus.home}/logs/audit.log</value>
              </property>
              <property>
                <name>append</name>
                <value>true</value>
              </property>
              <property>
                <name>datePattern</name>
                <value>'.'yyyy-MM-dd</value>
              </property>
            </properties>
          </appender>
        </appenders>

        <levels>
          <level>
            <hierarchy>org.apache.maven.archiva.web.servlet.repository.RepositoryMapping</hierarchy>
            <level>DEBUG, audit</level>
          </level>

          <!-- Help identify bugs during testing -->
          <level>
            <hierarchy>org.apache.maven</hierarchy>
            <level>DEBUG</level>
          </level>
          <level>
            <hierarchy>org.codehaus.plexus.security</hierarchy>
            <level>DEBUG</level>
          </level>
          <!-- squelch noisy objects (for now) -->
          <level>
            <hierarchy>org.codehaus.plexus.mailsender.MailSender</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>org.quartz</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>org.apache.jasper</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>com.opensymphony.xwork</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>com.opensymphony.webwork</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>org.codehaus.plexus.PlexusContainer</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>JPOX</hierarchy>
            <level>WARN</level>
          </level>
          <!--
                    <level>
                      <hierarchy>JPOX.RDBMS.SQL</hierarchy>
                      <level>DEBUG</level>
                    </level>
          -->
          <level>
            <hierarchy>freemarker</hierarchy>
            <level>WARN</level>
          </level>
        </levels>
      </configuration>
    </component>

    <!-- plexus security components -->
    <component>
      <role>org.codehaus.plexus.security.system.ApplicationDetails</role>
      <implementation>org.codehaus.plexus.security.system.DefaultApplicationDetails</implementation>
      <description>DefaultApplicationDetails</description>
      <configuration>
        <application-name>Unconfigured Application Name</application-name>
        <!-- Do not include the trailing '/' on the url. -->
        <application-url>http://localhost:9090</application-url>
        <timestamp-format>EEE, d MMM yyyy HH:mm:ss Z</timestamp-format>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.security.system.EmailSettings</role>
      <implementation>org.codehaus.plexus.security.system.DefaultEmailSettings</implementation>
      <description>DefaultEmailSettings</description>
      <configuration>
        <feedback>/feedback.action</feedback>
        <from-address>security@unconfigured.com</from-address>
        <from-username>Unconfigured Username</from-username>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.security.system.SecuritySystem</role>
      <implementation>org.codehaus.plexus.security.system.DefaultSecuritySystem</implementation>
      <role-hint>default</role-hint>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.security.authentication.AuthenticationManager</role>
          <role-hint>default</role-hint>
          <field-name>authnManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.authorization.Authorizer</role>
          <role-hint>rbac</role-hint>
          <field-name>authorizer</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.user.UserManager</role>
          <role-hint>jdo</role-hint>
          <field-name>userManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.keys.KeyManager</role>
          <role-hint>jdo</role-hint>
          <field-name>keyManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.policy.UserSecurityPolicy</role>
          <role-hint>default</role-hint>
          <field-name>policy</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.system.ApplicationDetails</role>
          <field-name>applicationDetails</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.system.EmailSettings</role>
          <field-name>emailSettings</field-name>
        </requirement>
      </requirements>
    </component>
    <component>
      <role>org.codehaus.plexus.security.authorization.Authorizer</role>
      <role-hint>rbac</role-hint>
      <implementation>org.codehaus.plexus.security.authorization.rbac.RbacAuthorizer</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.security.rbac.RBACManager</role>
          <role-hint>jdo</role-hint>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.user.UserManager</role>
          <role-hint>jdo</role-hint>
          <field-name>userManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.authorization.rbac.evaluator.PermissionEvaluator</role>
          <role-hint>default</role-hint>
        </requirement>
      </requirements>
    </component>
    <component>
      <role>org.codehaus.plexus.security.policy.PasswordRule</role>
      <role-hint>character-length</role-hint>
      <implementation>org.codehaus.plexus.security.policy.rules.CharacterLengthPasswordRule</implementation>
      <description>Basic Password Rule, Checks for non-empty passwords that have between {@link
        #setMinimumCharacters(int)} and {@link #setMaximumCharacters(int)} characters in length.
      </description>
      <configuration>
        <enabled>true</enabled>
        <minimum-characters>1</minimum-characters>
        <maximum-characters>8</maximum-characters>
      </configuration>
    </component>
    <component>
      <role>org.codehaus.plexus.security.policy.PasswordRule</role>
      <role-hint>reuse</role-hint>
      <implementation>org.codehaus.plexus.security.policy.rules.ReusePasswordRule</implementation>
      <description>Password Rule, Checks supplied password found at {@link User#getPassword()} against the {@link
        User#getPreviousEncodedPasswords()} to ensure that a password is not reused.
      </description>
      <configuration>
        <enabled>true</enabled>
      </configuration>
    </component>
    <component>
      <role>org.codehaus.plexus.security.policy.PasswordRule</role>
      <role-hint>numerical-count</role-hint>
      <implementation>org.codehaus.plexus.security.policy.rules.NumericalPasswordRule</implementation>
      <description>Basic Password Rule, Checks for non-empty passwords that have at least {@link #setMinimumCount(int)}
        of numerical characters contained within.
      </description>
      <configuration>
        <enabled>true</enabled>
        <minimum-count>1</minimum-count>
      </configuration>
    </component>
    <component>
      <role>org.codehaus.plexus.security.policy.PasswordRule</role>
      <role-hint>must-have</role-hint>
      <implementation>org.codehaus.plexus.security.policy.rules.MustHavePasswordRule</implementation>
      <description>Basic Password Rule, Checks for non-empty Passwords in non guest users.</description>
      <configuration>
        <enabled>true</enabled>
      </configuration>
    </component>
    <component>
      <role>org.codehaus.plexus.security.policy.PasswordRule</role>
      <role-hint>alpha-count</role-hint>
      <implementation>org.codehaus.plexus.security.policy.rules.AlphaPasswordRule</implementation>
      <description>Basic Password Rule, Checks for non-empty passwords that have at least {@link #setMinimumCount(int)}
        of alpha characters contained within.
      </description>
      <configuration>
        <enabled>true</enabled>
        <minimum-count>1</minimum-count>
      </configuration>
    </component>
    <component>
      <role>org.codehaus.plexus.security.policy.UserSecurityPolicy</role>
      <role-hint>default</role-hint>
      <implementation>org.codehaus.plexus.security.policy.DefaultUserSecurityPolicy</implementation>
      <description>User Security Policy.</description>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.security.policy.PasswordEncoder</role>
          <role-hint>sha256</role-hint>
          <field-name>passwordEncoder</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.policy.UserValidationSettings</role>
          <field-name>userValidationSettings</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.policy.PasswordRule</role>
          <field-name>rules</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.policy.RememberMeSettings</role>
          <field-name>rememberMeSettings</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.policy.SingleSignOnSettings</role>
          <field-name>singleSignOnSettings</field-name>
        </requirement>
      </requirements>
      <configuration>
        <previous-passwords-count>6</previous-passwords-count>
        <login-attempt-count>3</login-attempt-count>
        <password-expiration-days>90</password-expiration-days>
      </configuration>
    </component>
    <component>
      <role>org.codehaus.plexus.security.policy.RememberMeSettings</role>
      <implementation>org.codehaus.plexus.security.policy.DefaultRememberMeSettings</implementation>
      <description>DefaultRememberMeSettings</description>
      <configuration>
        <enabled>true</enabled>
        <cookie-timeout>525600</cookie-timeout>
      </configuration>
    </component>
    <component>
      <role>org.codehaus.plexus.security.policy.SingleSignOnSettings</role>
      <implementation>org.codehaus.plexus.security.policy.DefaultSingleSignOnSettings</implementation>
      <description>DefaultSingleSignOnSettings</description>
      <configuration>
        <enabled>true</enabled>
        <cookie-timeout>30</cookie-timeout>
      </configuration>
    </component>
    <component>
      <role>org.codehaus.plexus.security.policy.UserValidationSettings</role>
      <implementation>org.codehaus.plexus.security.policy.DefaultUserValidationSettings</implementation>
      <description>DefaultUserValidationSettings</description>
      <configuration>
        <email-validation-required>true</email-validation-required>
        <!-- This is a timeout for the validation url (in minutes) - 2880 = 48 hours -->
        <email-validation-timeout>2880</email-validation-timeout>
        <email-login-path>/security/login!login.action</email-login-path>
        <email-subject>Unconfigured Subject Line</email-subject>
      </configuration>
    </component>
    <component>
      <role>org.codehaus.plexus.mailsender.MailSender</role>
      <implementation>org.codehaus.plexus.mailsender.javamail.JavamailMailSender</implementation>
      <configuration>
        <smtp-host>localhost</smtp-host>
        <smtp-port>25</smtp-port>
        <sslProvider>com.sun.net.ssl.internal.ssl.Provider</sslProvider>
        <!--
        <username>mylogin</username>
        <password>mypassword</password>
        <sslMode>true</sslMode>
        -->
      </configuration>
    </component>


    <component>
      <role>org.codehaus.plexus.jdo.JdoFactory</role>
      <role-hint>users</role-hint>
      <implementation>org.codehaus.plexus.jdo.DataSourceConfigurableJdoFactory</implementation>
      <configuration>

        <connectionFactoryName>java:comp/env/jdbc/users</connectionFactoryName>
        <shutdownConnectionFactoryName>java:comp/env/jdbc/shutdown</shutdownConnectionFactoryName>

        <!-- JPOX and JDO configuration -->
        <persistenceManagerFactoryClass>org.jpox.PersistenceManagerFactoryImpl</persistenceManagerFactoryClass>
        <otherProperties>
          <property>
            <name>org.jpox.autoCreateSchema</name>
            <value>true</value>
          </property>
          <property>
            <name>org.jpox.validateTables</name>
            <value>false</value>
          </property>
          <property>
            <name>org.jpox.validateColumns</name>
            <value>false</value>
          </property>
          <property>
            <name>org.jpox.validateConstraints</name>
            <value>false</value>
          </property>
          <property>
            <name>org.jpox.transactionIsolation</name>
            <value>READ_UNCOMMITTED</value>
          </property>
          <property>
            <name>org.jpox.poid.transactionIsolation</name>
            <value>READ_UNCOMMITTED</value>
          </property>
          <property>
            <name>org.jpox.rdbms.dateTimezone</name>
            <value>JDK_DEFAULT_TIMEZONE</value>
          </property>
        </otherProperties>
      </configuration>
    </component>

  </components>

  <!-- Override default configuration of components -->
  <lifecycle-handler-manager implementation="org.codehaus.plexus.lifecycle.DefaultLifecycleHandlerManager">
    <default-lifecycle-handler-id>webapp</default-lifecycle-handler-id>
    <lifecycle-handlers>
      <lifecycle-handler implementation="org.codehaus.plexus.personality.plexus.PlexusLifecycleHandler">
        <id>webapp</id>
        <name>Web Application Component Lifecycle Handler</name>
        <begin-segment>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.LogEnablePhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.CompositionPhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.ContextualizePhase"/>
          <phase implementation="org.codehaus.plexus.xwork.ConfigurationPhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.ServiceablePhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializePhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.StartPhase"/>
        </begin-segment>
        <suspend-segment>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.SuspendPhase"/>
        </suspend-segment>
        <resume-segment>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.ResumePhase"/>
        </resume-segment>
        <end-segment>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.StopPhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.DisposePhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.LogDisablePhase"/>
        </end-segment>
      </lifecycle-handler>
    </lifecycle-handlers>
  </lifecycle-handler-manager>

  <load-on-start>
    <component>
      <role>org.apache.maven.archiva.scheduler.RepositoryTaskScheduler</role>
    </component>
    <component>
      <role>org.codehaus.plexus.taskqueue.execution.TaskQueueExecutor</role>
      <role-hint>indexer</role-hint>
    </component>
  </load-on-start>
</plexus>
