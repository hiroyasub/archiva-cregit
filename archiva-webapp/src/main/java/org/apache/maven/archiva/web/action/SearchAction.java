begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|action
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queryParser
operator|.
name|MultiFieldQueryParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queryParser
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TermQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ConfiguredRepositoryFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|RepositoryArtifactIndex
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|RepositoryArtifactIndexFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|RepositoryIndexException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|RepositoryIndexSearchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|lucene
operator|.
name|LuceneQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|lucene
operator|.
name|LuceneRepositoryArtifactIndex
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|record
operator|.
name|StandardIndexRecordFields
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|util
operator|.
name|VersionMerger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|xwork
operator|.
name|action
operator|.
name|PlexusActionSupport
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_comment
comment|/**  * Search all indexed fields by the given criteria.  *  * @plexus.component role="com.opensymphony.xwork.Action" role-hint="searchAction"  */
end_comment

begin_class
specifier|public
class|class
name|SearchAction
extends|extends
name|PlexusActionSupport
block|{
comment|/**      * Query string.      */
specifier|private
name|String
name|q
decl_stmt|;
comment|/**      * The MD5 to search by.      */
specifier|private
name|String
name|md5
decl_stmt|;
comment|/**      * Search results.      */
specifier|private
name|Collection
name|searchResults
decl_stmt|;
comment|/**      * @plexus.requirement role-hint="lucene"      */
specifier|private
name|RepositoryArtifactIndexFactory
name|factory
decl_stmt|;
comment|/**      * @plexus.requirement      */
specifier|private
name|ConfiguredRepositoryFactory
name|repositoryFactory
decl_stmt|;
comment|/**      * @plexus.requirement      */
specifier|private
name|ArchivaConfiguration
name|archivaConfiguration
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|RESULTS
init|=
literal|"results"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ARTIFACT
init|=
literal|"artifact"
decl_stmt|;
specifier|private
name|String
name|infoMessage
decl_stmt|;
specifier|public
name|String
name|quickSearch
parameter_list|()
throws|throws
name|MalformedURLException
throws|,
name|RepositoryIndexException
throws|,
name|RepositoryIndexSearchException
throws|,
name|ParseException
block|{
comment|// TODO: give action message if indexing is in progress
assert|assert
name|q
operator|!=
literal|null
operator|&&
name|q
operator|.
name|length
argument_list|()
operator|!=
literal|0
assert|;
name|RepositoryArtifactIndex
name|index
init|=
name|getIndex
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|index
operator|.
name|exists
argument_list|()
condition|)
block|{
name|addActionError
argument_list|(
literal|"The repository is not yet indexed. Please wait, and then try again."
argument_list|)
expr_stmt|;
return|return
name|ERROR
return|;
block|}
name|MultiFieldQueryParser
name|parser
init|=
operator|new
name|MultiFieldQueryParser
argument_list|(
operator|new
name|String
index|[]
block|{
name|StandardIndexRecordFields
operator|.
name|GROUPID
block|,
name|StandardIndexRecordFields
operator|.
name|ARTIFACTID
block|,
name|StandardIndexRecordFields
operator|.
name|BASE_VERSION
block|,
name|StandardIndexRecordFields
operator|.
name|CLASSIFIER
block|,
name|StandardIndexRecordFields
operator|.
name|CLASSES
block|,
name|StandardIndexRecordFields
operator|.
name|FILES
block|,
name|StandardIndexRecordFields
operator|.
name|TYPE
block|,
name|StandardIndexRecordFields
operator|.
name|PROJECT_NAME
block|,
name|StandardIndexRecordFields
operator|.
name|PROJECT_DESCRIPTION
block|}
argument_list|,
name|LuceneRepositoryArtifactIndex
operator|.
name|getAnalyzer
argument_list|()
argument_list|)
decl_stmt|;
name|searchResults
operator|=
name|index
operator|.
name|search
argument_list|(
operator|new
name|LuceneQuery
argument_list|(
name|parser
operator|.
name|parse
argument_list|(
name|q
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|searchResults
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|addActionError
argument_list|(
literal|"No results found"
argument_list|)
expr_stmt|;
return|return
name|INPUT
return|;
block|}
name|searchResults
operator|=
name|VersionMerger
operator|.
name|merge
argument_list|(
name|searchResults
argument_list|)
expr_stmt|;
return|return
name|SUCCESS
return|;
block|}
specifier|public
name|String
name|findArtifact
parameter_list|()
throws|throws
name|Exception
block|{
comment|// TODO: give action message if indexing is in progress
assert|assert
name|md5
operator|!=
literal|null
operator|&&
name|md5
operator|.
name|length
argument_list|()
operator|!=
literal|0
assert|;
name|RepositoryArtifactIndex
name|index
init|=
name|getIndex
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|index
operator|.
name|exists
argument_list|()
condition|)
block|{
name|addActionError
argument_list|(
literal|"The repository is not yet indexed. Please wait, and then try again."
argument_list|)
expr_stmt|;
return|return
name|ERROR
return|;
block|}
name|searchResults
operator|=
name|index
operator|.
name|search
argument_list|(
operator|new
name|LuceneQuery
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
name|StandardIndexRecordFields
operator|.
name|MD5
argument_list|,
name|md5
operator|.
name|toLowerCase
argument_list|()
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|searchResults
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|addActionError
argument_list|(
literal|"No results found"
argument_list|)
expr_stmt|;
return|return
name|INPUT
return|;
block|}
if|if
condition|(
name|searchResults
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
block|{
return|return
name|ARTIFACT
return|;
block|}
else|else
block|{
return|return
name|RESULTS
return|;
block|}
block|}
specifier|private
name|RepositoryArtifactIndex
name|getIndex
parameter_list|()
throws|throws
name|RepositoryIndexException
block|{
name|Configuration
name|configuration
init|=
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|File
name|indexPath
init|=
operator|new
name|File
argument_list|(
name|configuration
operator|.
name|getIndexPath
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|factory
operator|.
name|createStandardIndex
argument_list|(
name|indexPath
argument_list|)
return|;
block|}
specifier|public
name|String
name|doInput
parameter_list|()
block|{
return|return
name|INPUT
return|;
block|}
specifier|public
name|String
name|getQ
parameter_list|()
block|{
return|return
name|q
return|;
block|}
specifier|public
name|void
name|setQ
parameter_list|(
name|String
name|q
parameter_list|)
block|{
name|this
operator|.
name|q
operator|=
name|q
expr_stmt|;
block|}
specifier|public
name|String
name|getMd5
parameter_list|()
block|{
return|return
name|md5
return|;
block|}
specifier|public
name|void
name|setMd5
parameter_list|(
name|String
name|md5
parameter_list|)
block|{
name|this
operator|.
name|md5
operator|=
name|md5
expr_stmt|;
block|}
specifier|public
name|Collection
name|getSearchResults
parameter_list|()
block|{
return|return
name|searchResults
return|;
block|}
specifier|public
name|String
name|getInfoMessage
parameter_list|()
block|{
return|return
name|infoMessage
return|;
block|}
specifier|public
name|void
name|setInfoMessage
parameter_list|(
name|String
name|infoMessage
parameter_list|)
block|{
name|this
operator|.
name|infoMessage
operator|=
name|infoMessage
expr_stmt|;
block|}
block|}
end_class

end_unit

