begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|servlet
operator|.
name|repository
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|it
operator|.
name|could
operator|.
name|webdav
operator|.
name|DAVTransaction
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequestWrapper
import|;
end_import

begin_comment
comment|/**  * RepositoryRequest  *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|RepositoryRequest
extends|extends
name|HttpServletRequestWrapper
block|{
specifier|private
name|String
name|repoUrlName
decl_stmt|;
specifier|public
name|RepositoryRequest
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|String
name|repoUrlName
parameter_list|)
block|{
name|super
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|this
operator|.
name|repoUrlName
operator|=
literal|""
expr_stmt|;
if|if
condition|(
name|repoUrlName
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|repoUrlName
operator|=
name|repoUrlName
expr_stmt|;
block|}
block|}
comment|/**      * Adjust the path info value to remove reference to repoUrlName.      * This is done to satisfy the needs of {@link DAVTransaction}      */
specifier|public
name|String
name|getPathInfo
parameter_list|()
block|{
name|String
name|pathInfo
init|=
name|super
operator|.
name|getPathInfo
argument_list|()
decl_stmt|;
if|if
condition|(
name|pathInfo
operator|==
literal|null
condition|)
block|{
return|return
literal|""
return|;
block|}
if|if
condition|(
operator|(
name|pathInfo
operator|.
name|length
argument_list|()
operator|>
literal|1
operator|)
operator|&&
operator|(
name|pathInfo
operator|.
name|charAt
argument_list|(
literal|0
argument_list|)
operator|==
literal|'/'
operator|)
condition|)
block|{
name|pathInfo
operator|=
name|pathInfo
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|pathInfo
operator|.
name|startsWith
argument_list|(
name|repoUrlName
argument_list|)
condition|)
block|{
name|pathInfo
operator|=
name|pathInfo
operator|.
name|substring
argument_list|(
name|repoUrlName
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|pathInfo
return|;
block|}
specifier|public
name|String
name|getServletPath
parameter_list|()
block|{
return|return
name|super
operator|.
name|getServletPath
argument_list|()
operator|+
literal|"/"
operator|+
name|this
operator|.
name|repoUrlName
return|;
block|}
block|}
end_class

end_unit

