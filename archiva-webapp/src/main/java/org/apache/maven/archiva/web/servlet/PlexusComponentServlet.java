begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|servlet
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|PlexusContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|component
operator|.
name|repository
operator|.
name|exception
operator|.
name|ComponentLookupException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|xwork
operator|.
name|PlexusLifecycleListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|Servlet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * PlexusComponentServlet - This is merely a servlet facade against a loaded  * plexus component called foo  *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|PlexusComponentServlet
implements|implements
name|Servlet
block|{
specifier|private
name|PlexusContainer
name|plexus
decl_stmt|;
specifier|private
name|PlexusServlet
name|servletProxy
decl_stmt|;
specifier|private
name|boolean
name|isInitialized
init|=
literal|false
decl_stmt|;
specifier|public
name|void
name|destroy
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
condition|)
block|{
name|servletProxy
operator|.
name|servletDestroy
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|ServletConfig
name|getServletConfig
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
condition|)
block|{
return|return
name|servletProxy
operator|.
name|getServletConfig
argument_list|()
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getServletInfo
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
condition|)
block|{
return|return
name|servletProxy
operator|.
name|getServletInfo
argument_list|()
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|init
parameter_list|(
name|ServletConfig
name|config
parameter_list|)
throws|throws
name|ServletException
block|{
name|isInitialized
operator|=
literal|false
expr_stmt|;
name|plexus
operator|=
operator|(
name|PlexusContainer
operator|)
name|config
operator|.
name|getServletContext
argument_list|()
operator|.
name|getAttribute
argument_list|(
name|PlexusLifecycleListener
operator|.
name|KEY
argument_list|)
expr_stmt|;
name|String
name|componentKey
init|=
name|config
operator|.
name|getInitParameter
argument_list|(
literal|"key"
argument_list|)
decl_stmt|;
try|try
block|{
name|Object
name|obj
init|=
name|plexus
operator|.
name|lookup
argument_list|(
name|PlexusServlet
operator|.
name|ROLE
argument_list|,
name|componentKey
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|PlexusServlet
operator|)
condition|)
block|{
throw|throw
operator|new
name|ServletException
argument_list|(
literal|"Class "
operator|+
name|obj
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" does not implement "
operator|+
name|PlexusServlet
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
throw|;
block|}
name|servletProxy
operator|=
operator|(
name|PlexusServlet
operator|)
name|obj
expr_stmt|;
name|servletProxy
operator|.
name|setServletConfig
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|isInitialized
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ComponentLookupException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServletException
argument_list|(
literal|"Unable to initialize PlexusComponentServlet."
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|void
name|service
parameter_list|(
name|ServletRequest
name|req
parameter_list|,
name|ServletResponse
name|res
parameter_list|)
throws|throws
name|ServletException
throws|,
name|IOException
block|{
if|if
condition|(
operator|!
name|isInitialized
condition|)
block|{
throw|throw
operator|new
name|ServletException
argument_list|(
literal|"PlexusComponentServlet is not initialized correctly!"
argument_list|)
throw|;
block|}
if|if
condition|(
operator|!
operator|(
name|req
operator|instanceof
name|HttpServletRequest
operator|)
condition|)
block|{
throw|throw
operator|new
name|ServletException
argument_list|(
literal|"PlexusComponentServlet can only handle HttpServletRequests."
argument_list|)
throw|;
block|}
if|if
condition|(
operator|!
operator|(
name|res
operator|instanceof
name|HttpServletResponse
operator|)
condition|)
block|{
throw|throw
operator|new
name|ServletException
argument_list|(
literal|"PlexusComponentServlet can only handle HttpServletResponse."
argument_list|)
throw|;
block|}
name|HttpServletRequest
name|request
init|=
operator|(
name|HttpServletRequest
operator|)
name|req
decl_stmt|;
name|HttpServletResponse
name|response
init|=
operator|(
name|HttpServletResponse
operator|)
name|res
decl_stmt|;
name|servletProxy
operator|.
name|servletRequest
argument_list|(
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

