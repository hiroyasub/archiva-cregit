begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|action
operator|.
name|admin
package|;
end_package

begin_comment
comment|/*  * Copyright 2001-2006 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|util
operator|.
name|RoleManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|security
operator|.
name|policy
operator|.
name|UserSecurityPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|security
operator|.
name|ui
operator|.
name|web
operator|.
name|action
operator|.
name|AbstractUserCredentialsAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|security
operator|.
name|ui
operator|.
name|web
operator|.
name|model
operator|.
name|EditUserCredentials
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|security
operator|.
name|user
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|security
operator|.
name|user
operator|.
name|UserManager
import|;
end_import

begin_comment
comment|/**  * AddAdminUserAction   *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  *   * @plexus.component role="com.opensymphony.xwork.Action"  *                   role-hint="addAdminAction"  *                   instantiation-strategy="per-lookup"  */
end_comment

begin_class
specifier|public
class|class
name|AddAdminUserAction
extends|extends
name|AbstractUserCredentialsAction
block|{
comment|/**      * @plexus.requirement      */
specifier|private
name|RoleManager
name|roleManager
decl_stmt|;
comment|/**      * @plexus.requirement      */
specifier|private
name|UserManager
name|userManager
decl_stmt|;
comment|/**      * @plexus.requirement      */
specifier|private
name|UserSecurityPolicy
name|userSecurityPolicy
decl_stmt|;
specifier|private
name|EditUserCredentials
name|user
decl_stmt|;
specifier|public
name|String
name|show
parameter_list|()
block|{
if|if
condition|(
name|user
operator|==
literal|null
condition|)
block|{
name|user
operator|=
operator|new
name|EditUserCredentials
argument_list|(
name|RoleManager
operator|.
name|ADMIN_USERNAME
argument_list|)
expr_stmt|;
block|}
return|return
name|INPUT
return|;
block|}
specifier|public
name|String
name|submit
parameter_list|()
block|{
if|if
condition|(
name|user
operator|==
literal|null
condition|)
block|{
name|user
operator|=
operator|new
name|EditUserCredentials
argument_list|(
name|RoleManager
operator|.
name|ADMIN_USERNAME
argument_list|)
expr_stmt|;
name|addActionError
argument_list|(
literal|"Invalid admin credentials, try again."
argument_list|)
expr_stmt|;
return|return
name|ERROR
return|;
block|}
name|getLogger
argument_list|()
operator|.
name|info
argument_list|(
literal|"user = "
operator|+
name|user
argument_list|)
expr_stmt|;
comment|// ugly hack to get around lack of cross module plexus-cdc efforts.
name|super
operator|.
name|manager
operator|=
name|userManager
expr_stmt|;
name|super
operator|.
name|securityPolicy
operator|=
name|userSecurityPolicy
expr_stmt|;
comment|// TODO: Fix plexus-cdc to operate properly for cross-module creation efforts.
name|internalUser
operator|=
name|user
expr_stmt|;
name|validateCredentialsStrict
argument_list|()
expr_stmt|;
if|if
condition|(
name|userManager
operator|.
name|userExists
argument_list|(
name|RoleManager
operator|.
name|ADMIN_USERNAME
argument_list|)
condition|)
block|{
comment|// Means that the role name exist already.
comment|// We need to fail fast and return to the previous page.
name|addActionError
argument_list|(
literal|"Admin User exists in database (someone else probably created the user before you)."
argument_list|)
expr_stmt|;
return|return
name|ERROR
return|;
block|}
if|if
condition|(
name|hasActionErrors
argument_list|()
operator|||
name|hasFieldErrors
argument_list|()
condition|)
block|{
return|return
name|ERROR
return|;
block|}
name|User
name|u
init|=
name|userManager
operator|.
name|createUser
argument_list|(
name|RoleManager
operator|.
name|ADMIN_USERNAME
argument_list|,
name|user
operator|.
name|getFullName
argument_list|()
argument_list|,
name|user
operator|.
name|getEmail
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|u
operator|==
literal|null
condition|)
block|{
name|addActionError
argument_list|(
literal|"Unable to operate on null user."
argument_list|)
expr_stmt|;
return|return
name|ERROR
return|;
block|}
name|u
operator|.
name|setPassword
argument_list|(
name|user
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|u
operator|.
name|setLocked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|u
operator|.
name|setPasswordChangeRequired
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|userManager
operator|.
name|addUser
argument_list|(
name|u
argument_list|)
expr_stmt|;
name|roleManager
operator|.
name|addAdminUser
argument_list|(
name|u
operator|.
name|getPrincipal
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|SUCCESS
return|;
block|}
specifier|public
name|EditUserCredentials
name|getUser
parameter_list|()
block|{
return|return
name|user
return|;
block|}
specifier|public
name|void
name|setUser
parameter_list|(
name|EditUserCredentials
name|user
parameter_list|)
block|{
name|this
operator|.
name|user
operator|=
name|user
expr_stmt|;
block|}
block|}
end_class

end_unit

