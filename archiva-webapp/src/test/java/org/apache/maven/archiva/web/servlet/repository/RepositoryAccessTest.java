begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|servlet
operator|.
name|repository
package|;
end_package

begin_comment
comment|/*  * Copyright 2001-2006 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|servlet
operator|.
name|PlexusServlet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|PlexusTestCase
import|;
end_import

begin_comment
comment|/**  * RepositoryAccessTest   *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|RepositoryAccessTest
extends|extends
name|PlexusTestCase
block|{
specifier|private
name|void
name|assertRequestPath
parameter_list|(
name|String
name|expectedId
parameter_list|,
name|String
name|expectedPath
parameter_list|,
name|String
name|rawpath
parameter_list|)
throws|throws
name|Exception
block|{
name|RepositoryAccess
name|repoaccess
init|=
operator|(
name|RepositoryAccess
operator|)
name|lookup
argument_list|(
name|PlexusServlet
operator|.
name|ROLE
argument_list|,
literal|"repositoryAccess"
argument_list|)
decl_stmt|;
name|RepositoryAccess
operator|.
name|RequestPath
name|requestPath
init|=
name|repoaccess
operator|.
name|getRepositoryPath
argument_list|(
name|rawpath
argument_list|)
decl_stmt|;
if|if
condition|(
name|expectedId
operator|==
literal|null
condition|)
block|{
comment|// special case, should be null.
name|assertNull
argument_list|(
name|requestPath
argument_list|)
expr_stmt|;
return|return;
block|}
name|assertNotNull
argument_list|(
name|requestPath
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedId
argument_list|,
name|requestPath
operator|.
name|repoId
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedPath
argument_list|,
name|requestPath
operator|.
name|path
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetRepoPath
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Test for paths with no id.
name|assertRequestPath
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertRequestPath
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|assertRequestPath
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|"/"
argument_list|)
expr_stmt|;
comment|// Test for paths with root browse
name|assertRequestPath
argument_list|(
literal|"central"
argument_list|,
literal|"/"
argument_list|,
literal|"/central"
argument_list|)
expr_stmt|;
name|assertRequestPath
argument_list|(
literal|"central"
argument_list|,
literal|"/"
argument_list|,
literal|"/central/"
argument_list|)
expr_stmt|;
name|assertRequestPath
argument_list|(
literal|"snapshots"
argument_list|,
literal|"/"
argument_list|,
literal|"/snapshots/"
argument_list|)
expr_stmt|;
comment|// Test for paths deep within repository.
name|assertRequestPath
argument_list|(
literal|"central"
argument_list|,
literal|"/org/apache/maven/"
argument_list|,
literal|"/central/org/apache/maven/"
argument_list|)
expr_stmt|;
name|assertRequestPath
argument_list|(
literal|"snapshots"
argument_list|,
literal|"/org/codehaus/mojo"
argument_list|,
literal|"/snapshots/org/codehaus/mojo"
argument_list|)
expr_stmt|;
name|assertRequestPath
argument_list|(
literal|"central"
argument_list|,
literal|"/org/apache/maven/archiva/metadata.xml"
argument_list|,
literal|"/central/org/apache/maven/archiva/metadata.xml"
argument_list|)
expr_stmt|;
name|assertRequestPath
argument_list|(
literal|"sandbox"
argument_list|,
literal|"/org/company/experiment/1.0/experiment-1.0.jar.pom"
argument_list|,
literal|"/sandbox/org/company/experiment/1.0/experiment-1.0.jar.pom"
argument_list|)
expr_stmt|;
comment|// Test for paths with "/../" nastyness
name|assertRequestPath
argument_list|(
literal|"central"
argument_list|,
literal|"/"
argument_list|,
literal|"/central/.."
argument_list|)
expr_stmt|;
name|assertRequestPath
argument_list|(
literal|"central"
argument_list|,
literal|"/"
argument_list|,
literal|"/central/../../../"
argument_list|)
expr_stmt|;
name|assertRequestPath
argument_list|(
literal|"central"
argument_list|,
literal|"/"
argument_list|,
literal|"/central/org/../../etc/passwd"
argument_list|)
expr_stmt|;
name|assertRequestPath
argument_list|(
literal|"central"
argument_list|,
literal|"/etc/passwd"
argument_list|,
literal|"/central//etc/passwd"
argument_list|)
expr_stmt|;
name|assertRequestPath
argument_list|(
literal|"central"
argument_list|,
literal|"/org/codehaus/mojo"
argument_list|,
literal|"/central/org/apache/../codehaus/mojo"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

