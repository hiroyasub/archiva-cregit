begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  *  * This class is used to provide additional query parameters to search queries.  * These parameters are hints for the metadata repository implementation, some parameters may be ignored.  *  * The defaults are:  *<li>  *<ul>Sort order: ascending</ul>  *<ul>Offset: 0</ul>  *<ul>Limit: Long.MAX_VALUE</ul>  *<ul>Sort fields: empty, which means it depends on the query</ul>  *</li>  *  * @author Martin Stockhammer<martin_s@apache.org>  */
end_comment

begin_class
specifier|public
class|class
name|QueryParameter
block|{
specifier|final
name|boolean
name|ascending
decl_stmt|;
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|sortFields
decl_stmt|;
specifier|final
name|long
name|offset
decl_stmt|;
specifier|final
name|long
name|limit
decl_stmt|;
specifier|public
name|QueryParameter
parameter_list|(
name|boolean
name|isAscending
parameter_list|,
name|long
name|offset
parameter_list|,
name|long
name|limit
parameter_list|,
name|String
modifier|...
name|sortFields
parameter_list|)
block|{
name|this
operator|.
name|ascending
operator|=
name|isAscending
expr_stmt|;
name|this
operator|.
name|offset
operator|=
name|offset
expr_stmt|;
name|this
operator|.
name|limit
operator|=
name|limit
expr_stmt|;
name|this
operator|.
name|sortFields
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
name|sortFields
argument_list|)
expr_stmt|;
block|}
specifier|public
name|QueryParameter
parameter_list|(
name|long
name|offset
parameter_list|,
name|long
name|limit
parameter_list|)
block|{
name|this
operator|.
name|offset
operator|=
name|offset
expr_stmt|;
name|this
operator|.
name|limit
operator|=
name|limit
expr_stmt|;
name|this
operator|.
name|ascending
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|sortFields
operator|=
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
specifier|public
name|QueryParameter
parameter_list|(
name|boolean
name|isAscending
parameter_list|,
name|long
name|offset
parameter_list|,
name|long
name|limit
parameter_list|)
block|{
name|this
operator|.
name|ascending
operator|=
name|isAscending
expr_stmt|;
name|this
operator|.
name|offset
operator|=
name|offset
expr_stmt|;
name|this
operator|.
name|limit
operator|=
name|limit
expr_stmt|;
name|this
operator|.
name|sortFields
operator|=
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
specifier|public
name|QueryParameter
parameter_list|(
name|long
name|limit
parameter_list|)
block|{
name|this
operator|.
name|offset
operator|=
literal|0
expr_stmt|;
name|this
operator|.
name|ascending
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|limit
operator|=
name|limit
expr_stmt|;
name|this
operator|.
name|sortFields
operator|=
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
specifier|public
name|QueryParameter
parameter_list|()
block|{
name|this
operator|.
name|ascending
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|sortFields
operator|=
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|this
operator|.
name|offset
operator|=
literal|0
expr_stmt|;
name|this
operator|.
name|limit
operator|=
name|Long
operator|.
name|MAX_VALUE
expr_stmt|;
block|}
specifier|public
name|boolean
name|isAscending
parameter_list|()
block|{
return|return
name|ascending
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getSortFields
parameter_list|()
block|{
return|return
name|sortFields
return|;
block|}
specifier|public
name|long
name|getOffset
parameter_list|()
block|{
return|return
name|offset
return|;
block|}
specifier|public
name|long
name|getLimit
parameter_list|()
block|{
return|return
name|limit
return|;
block|}
block|}
end_class

end_unit

