begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|scheduled
operator|.
name|tasks
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|scheduled
operator|.
name|DefaultArchivaTaskScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|spring
operator|.
name|PlexusInSpringTestCase
import|;
end_import

begin_class
specifier|public
class|class
name|TaskCreatorTest
extends|extends
name|PlexusInSpringTestCase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|REPO_ID
init|=
literal|"test-repo"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TASKNAME_SUFFIX
init|=
literal|"test-task"
decl_stmt|;
specifier|public
name|void
name|testCreateRepositoryTask
parameter_list|()
throws|throws
name|Exception
block|{
name|RepositoryTask
name|task
init|=
name|TaskCreator
operator|.
name|createRepositoryTask
argument_list|(
name|REPO_ID
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect repository id set."
argument_list|,
name|REPO_ID
argument_list|,
name|task
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect queue policy set."
argument_list|,
name|ArchivaTask
operator|.
name|QUEUE_POLICY_WAIT
argument_list|,
name|task
operator|.
name|getQueuePolicy
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect task name set."
argument_list|,
name|DefaultArchivaTaskScheduler
operator|.
name|REPOSITORY_JOB
operator|+
literal|":"
operator|+
name|REPO_ID
argument_list|,
name|task
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCreateRepositoryTaskWithTaskNameSuffix
parameter_list|()
throws|throws
name|Exception
block|{
name|RepositoryTask
name|task
init|=
name|TaskCreator
operator|.
name|createRepositoryTask
argument_list|(
name|REPO_ID
argument_list|,
name|TASKNAME_SUFFIX
argument_list|)
decl_stmt|;
name|assertBasicTaskDetails
argument_list|(
name|task
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCreateRepositoryTaskScanAllArtifacts
parameter_list|()
throws|throws
name|Exception
block|{
name|RepositoryTask
name|task
init|=
name|TaskCreator
operator|.
name|createRepositoryTask
argument_list|(
name|REPO_ID
argument_list|,
name|TASKNAME_SUFFIX
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertBasicTaskDetails
argument_list|(
name|task
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|task
operator|.
name|scanAll
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCreateRepositoryTaskDoNotScanAllArtifacts
parameter_list|()
throws|throws
name|Exception
block|{
name|RepositoryTask
name|task
init|=
name|TaskCreator
operator|.
name|createRepositoryTask
argument_list|(
name|REPO_ID
argument_list|,
name|TASKNAME_SUFFIX
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertBasicTaskDetails
argument_list|(
name|task
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|task
operator|.
name|scanAll
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCreateRepositoryTaskForArtifactUpdateAllRelated
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|resource
init|=
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"target/test-classes/test.jar"
argument_list|)
decl_stmt|;
name|RepositoryTask
name|task
init|=
name|TaskCreator
operator|.
name|createRepositoryTask
argument_list|(
name|REPO_ID
argument_list|,
name|TASKNAME_SUFFIX
argument_list|,
name|resource
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertBasicTaskDetails
argument_list|(
name|task
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect resource file set."
argument_list|,
name|resource
argument_list|,
name|task
operator|.
name|getResourceFile
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|task
operator|.
name|updateRelatedArtifacts
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCreateRepositoryTaskForArtifactDoNotUpdateAllRelated
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|resource
init|=
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"target/test-classes/test.jar"
argument_list|)
decl_stmt|;
name|RepositoryTask
name|task
init|=
name|TaskCreator
operator|.
name|createRepositoryTask
argument_list|(
name|REPO_ID
argument_list|,
name|TASKNAME_SUFFIX
argument_list|,
name|resource
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertBasicTaskDetails
argument_list|(
name|task
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect resource file set."
argument_list|,
name|resource
argument_list|,
name|task
operator|.
name|getResourceFile
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|task
operator|.
name|updateRelatedArtifacts
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCreateIndexingTask
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|resource
init|=
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"target/test-classes/test.jar"
argument_list|)
decl_stmt|;
name|ArtifactIndexingTask
name|task
init|=
name|TaskCreator
operator|.
name|createIndexingTask
argument_list|(
name|REPO_ID
argument_list|,
name|resource
argument_list|,
name|ArtifactIndexingTask
operator|.
name|ADD
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect repository id set."
argument_list|,
name|REPO_ID
argument_list|,
name|task
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect queue policy set."
argument_list|,
name|ArchivaTask
operator|.
name|QUEUE_POLICY_WAIT
argument_list|,
name|task
operator|.
name|getQueuePolicy
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect task name set."
argument_list|,
name|DefaultArchivaTaskScheduler
operator|.
name|INDEXING_JOB
operator|+
literal|":"
operator|+
name|REPO_ID
operator|+
literal|":"
operator|+
name|resource
operator|.
name|getName
argument_list|()
operator|+
literal|":"
operator|+
name|ArtifactIndexingTask
operator|.
name|ADD
argument_list|,
name|task
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect action set."
argument_list|,
name|ArtifactIndexingTask
operator|.
name|ADD
argument_list|,
name|task
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect resource file set."
argument_list|,
name|resource
argument_list|,
name|task
operator|.
name|getResourceFile
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertBasicTaskDetails
parameter_list|(
name|RepositoryTask
name|task
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Incorrect repository id set."
argument_list|,
name|REPO_ID
argument_list|,
name|task
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect task name set."
argument_list|,
name|DefaultArchivaTaskScheduler
operator|.
name|REPOSITORY_JOB
operator|+
literal|":"
operator|+
name|REPO_ID
operator|+
literal|":"
operator|+
name|TASKNAME_SUFFIX
argument_list|,
name|task
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Incorrect queue policy set."
argument_list|,
name|ArchivaTask
operator|.
name|QUEUE_POLICY_WAIT
argument_list|,
name|task
operator|.
name|getQueuePolicy
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

