begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|maven
operator|.
name|content
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|filelock
operator|.
name|FileLockManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|VersionComparator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|FileType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|FileTypes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|maven
operator|.
name|MavenMetadataReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArtifactReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|model
operator|.
name|ProjectReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|model
operator|.
name|VersionedReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|EditableManagedRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ManagedRepositoryContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|LayoutException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ManagedRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|BaseRepositoryContentLayout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RepositoryContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|BaseArtifactTypes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|ContentItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|DataItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|ItemNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|ItemSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|Namespace
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|base
operator|.
name|ArchivaContentItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|base
operator|.
name|ArchivaItemSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|maven
operator|.
name|MavenManagedRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|maven
operator|.
name|metadata
operator|.
name|storage
operator|.
name|ArtifactMappingProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|storage
operator|.
name|StorageAsset
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Named
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|attribute
operator|.
name|FileTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Stream
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * ManagedDefaultRepositoryContentTest  */
end_comment

begin_class
specifier|public
class|class
name|ManagedDefaultRepositoryContentTest
extends|extends
name|AbstractBaseRepositoryContentLayoutTest
block|{
specifier|private
name|ManagedDefaultRepositoryContent
name|repoContent
decl_stmt|;
annotation|@
name|Inject
name|FileTypes
name|fileTypes
decl_stmt|;
annotation|@
name|Inject
annotation|@
name|Named
argument_list|(
literal|"archivaConfiguration#default"
argument_list|)
name|ArchivaConfiguration
name|archivaConfiguration
decl_stmt|;
annotation|@
name|Inject
name|List
argument_list|<
name|?
extends|extends
name|ArtifactMappingProvider
argument_list|>
name|artifactMappingProviders
decl_stmt|;
annotation|@
name|Inject
name|MavenContentHelper
name|contentHelper
decl_stmt|;
annotation|@
name|Inject
annotation|@
name|Named
argument_list|(
literal|"metadataReader#maven"
argument_list|)
name|MavenMetadataReader
name|metadataReader
decl_stmt|;
annotation|@
name|Inject
name|FileLockManager
name|fileLockManager
decl_stmt|;
specifier|private
name|Path
name|getRepositoryPath
parameter_list|(
name|String
name|repoName
parameter_list|)
block|{
try|try
block|{
return|return
name|Paths
operator|.
name|get
argument_list|(
name|Thread
operator|.
name|currentThread
argument_list|( )
operator|.
name|getContextClassLoader
argument_list|( )
operator|.
name|getResource
argument_list|(
literal|"repositories/"
operator|+
name|repoName
argument_list|)
operator|.
name|toURI
argument_list|( )
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Could not resolve repository path "
operator|+
name|e
operator|.
name|getMessage
argument_list|( )
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|Path
name|repoDir
init|=
name|getRepositoryPath
argument_list|(
literal|"default-repository"
argument_list|)
decl_stmt|;
name|MavenManagedRepository
name|repository
init|=
name|createRepository
argument_list|(
literal|"testRepo"
argument_list|,
literal|"Unit Test Repo"
argument_list|,
name|repoDir
argument_list|)
decl_stmt|;
name|FileType
name|fileType
init|=
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getRepositoryScanning
argument_list|()
operator|.
name|getFileTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|fileType
operator|.
name|addPattern
argument_list|(
literal|"**/*.xml"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FileTypes
operator|.
name|ARTIFACTS
argument_list|,
name|fileType
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|fileTypes
operator|.
name|afterConfigurationChange
argument_list|(
literal|null
argument_list|,
literal|"fileType"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|repoContent
operator|=
operator|new
name|ManagedDefaultRepositoryContent
argument_list|(
name|repository
argument_list|,
name|artifactMappingProviders
argument_list|,
name|fileTypes
argument_list|,
name|fileLockManager
argument_list|)
expr_stmt|;
name|repoContent
operator|.
name|setMavenContentHelper
argument_list|(
name|contentHelper
argument_list|)
expr_stmt|;
name|repoContent
operator|.
name|setMetadataReader
argument_list|(
name|metadataReader
argument_list|)
expr_stmt|;
comment|//repoContent = (ManagedRepositoryContent) lookup( ManagedRepositoryContent.class, "default" );
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetVersionsSnapshotA
parameter_list|()
throws|throws
name|Exception
block|{
name|assertArtifactVersions
argument_list|(
literal|"snap_shots_a"
argument_list|,
literal|"1.0-alpha-11-SNAPSHOT"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"1.0-alpha-11-SNAPSHOT"
block|,
literal|"1.0-alpha-11-20070221.194724-2"
block|,
literal|"1.0-alpha-11-20070302.212723-3"
block|,
literal|"1.0-alpha-11-20070303.152828-4"
block|,
literal|"1.0-alpha-11-20070305.215149-5"
block|,
literal|"1.0-alpha-11-20070307.170909-6"
block|,
literal|"1.0-alpha-11-20070314.211405-9"
block|,
literal|"1.0-alpha-11-20070316.175232-11"
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testToMetadataPathFromProjectReference
parameter_list|()
block|{
name|ProjectReference
name|reference
init|=
operator|new
name|ProjectReference
argument_list|()
decl_stmt|;
name|reference
operator|.
name|setGroupId
argument_list|(
literal|"com.foo"
argument_list|)
expr_stmt|;
name|reference
operator|.
name|setArtifactId
argument_list|(
literal|"foo-tool"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"com/foo/foo-tool/maven-metadata.xml"
argument_list|,
name|repoContent
operator|.
name|toMetadataPath
argument_list|(
name|reference
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testToMetadataPathFromVersionReference
parameter_list|()
block|{
name|VersionedReference
name|reference
init|=
operator|new
name|VersionedReference
argument_list|()
decl_stmt|;
name|reference
operator|.
name|setGroupId
argument_list|(
literal|"com.foo"
argument_list|)
expr_stmt|;
name|reference
operator|.
name|setArtifactId
argument_list|(
literal|"foo-tool"
argument_list|)
expr_stmt|;
name|reference
operator|.
name|setVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"com/foo/foo-tool/1.0/maven-metadata.xml"
argument_list|,
name|repoContent
operator|.
name|toMetadataPath
argument_list|(
name|reference
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|Override
specifier|public
name|void
name|testToPathOnNullArtifactReference
parameter_list|()
block|{
try|try
block|{
name|ArtifactReference
name|reference
init|=
literal|null
decl_stmt|;
name|repoContent
operator|.
name|toPath
argument_list|(
name|reference
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have failed due to null artifact reference."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
comment|/* expected path */
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExcludeMetadataFile
parameter_list|()
throws|throws
name|Exception
block|{
name|assertVersions
argument_list|(
literal|"include_xml"
argument_list|,
literal|"1.0"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"1.0"
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertVersions
parameter_list|(
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|String
index|[]
name|expectedVersions
parameter_list|)
throws|throws
name|Exception
block|{
comment|// Use the test metadata-repository, which is already setup for
comment|// These kind of version tests.
name|Path
name|repoDir
init|=
name|getRepositoryPath
argument_list|(
literal|"metadata-repository"
argument_list|)
decl_stmt|;
operator|(
operator|(
name|EditableManagedRepository
operator|)
name|repoContent
operator|.
name|getRepository
argument_list|()
operator|)
operator|.
name|setLocation
argument_list|(
name|repoDir
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toUri
argument_list|()
argument_list|)
expr_stmt|;
comment|// Request the versions.
comment|// Sort the list (for asserts later)
specifier|final
name|VersionComparator
name|comparator
init|=
operator|new
name|VersionComparator
argument_list|( )
decl_stmt|;
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.archiva.metadata.tests"
argument_list|)
operator|.
name|withProjectId
argument_list|(
name|artifactId
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|versions
init|=
name|repoContent
operator|.
name|getVersions
argument_list|(
name|selector
argument_list|)
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|v
lambda|->
name|v
operator|.
name|getVersion
argument_list|()
argument_list|)
operator|.
name|sorted
argument_list|(
name|comparator
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
name|expectedVersions
argument_list|,
name|versions
operator|.
name|toArray
argument_list|( )
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertArtifactVersions
parameter_list|(
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|String
index|[]
name|expectedVersions
parameter_list|)
throws|throws
name|Exception
block|{
comment|// Use the test metadata-repository, which is already setup for
comment|// These kind of version tests.
name|Path
name|repoDir
init|=
name|getRepositoryPath
argument_list|(
literal|"metadata-repository"
argument_list|)
decl_stmt|;
operator|(
operator|(
name|EditableManagedRepository
operator|)
name|repoContent
operator|.
name|getRepository
argument_list|()
operator|)
operator|.
name|setLocation
argument_list|(
name|repoDir
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toUri
argument_list|()
argument_list|)
expr_stmt|;
comment|// Request the versions.
comment|// Sort the list (for asserts later)
specifier|final
name|VersionComparator
name|comparator
init|=
operator|new
name|VersionComparator
argument_list|( )
decl_stmt|;
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.archiva.metadata.tests"
argument_list|)
operator|.
name|withProjectId
argument_list|(
name|artifactId
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|versions
init|=
name|repoContent
operator|.
name|getArtifactVersions
argument_list|(
name|selector
argument_list|)
operator|.
name|stream
argument_list|()
operator|.
name|sorted
argument_list|(
name|comparator
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
name|expectedVersions
argument_list|,
name|versions
operator|.
name|toArray
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getTestGetProjectWithIllegalArgs
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|repoContent
operator|.
name|getProject
argument_list|(
name|selector
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Should throw IllegalArgumentException if no project id is given"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
comment|// Everything fine
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|( )
operator|.
name|contains
argument_list|(
literal|"Project id must be set"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|getTestGetVersionWithIllegalArgs
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|repoContent
operator|.
name|getVersion
argument_list|(
name|selector
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Should throw IllegalArgumentException if no project id is given"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
comment|// Everything fine
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|( )
operator|.
name|contains
argument_list|(
literal|"Project id must be set"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|selector
operator|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"shared"
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
try|try
block|{
name|repoContent
operator|.
name|getVersion
argument_list|(
name|selector
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Should throw IllegalArgumentException if no version is given"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
comment|// Everything fine
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|( )
operator|.
name|contains
argument_list|(
literal|"Version must be set"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|getTestGetArtifactWithIllegalArgs
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|withArtifactId
argument_list|(
literal|"shared"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|repoContent
operator|.
name|getArtifact
argument_list|(
name|selector
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Should throw IllegalArgumentException if no project id is given"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
comment|// Everything fine
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|( )
operator|.
name|contains
argument_list|(
literal|"Project id must be set"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|selector
operator|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"shared"
argument_list|)
operator|.
name|withArtifactId
argument_list|(
literal|"shared"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
try|try
block|{
name|repoContent
operator|.
name|getArtifact
argument_list|(
name|selector
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Should throw IllegalArgumentException if no version is given"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
comment|// Everything fine
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|( )
operator|.
name|contains
argument_list|(
literal|"Version must be set"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|selector
operator|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"shared"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
try|try
block|{
name|repoContent
operator|.
name|getArtifact
argument_list|(
name|selector
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Should throw IllegalArgumentException if no artifact id is given"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
comment|// Everything fine
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|( )
operator|.
name|contains
argument_list|(
literal|"Artifact id must be set"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetProjects
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Namespace
name|ns
init|=
name|repoContent
operator|.
name|getNamespace
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ns
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Project
argument_list|>
name|projects
init|=
name|repoContent
operator|.
name|getProjects
argument_list|(
name|ns
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|12
argument_list|,
name|projects
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|String
index|[]
name|expected
init|=
operator|new
name|String
index|[]
block|{
literal|"A"
block|,
literal|"B"
block|,
literal|"C"
block|,
literal|"archiva"
block|,
literal|"discovery"
block|,
literal|"maven-parent"
block|,
literal|"samplejar"
block|,
literal|"shared"
block|,
literal|"some-ejb"
block|,
literal|"test"
block|,
literal|"testing"
block|,
literal|"update"
block|}
decl_stmt|;
name|Object
index|[]
name|actual
init|=
name|projects
operator|.
name|stream
argument_list|( )
operator|.
name|map
argument_list|(
name|p
lambda|->
name|p
operator|.
name|getId
argument_list|( )
argument_list|)
operator|.
name|sorted
argument_list|( )
operator|.
name|toArray
argument_list|( )
decl_stmt|;
name|assertArrayEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetProjectsWithSelector
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Project
argument_list|>
name|projects
init|=
name|repoContent
operator|.
name|getProjects
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|12
argument_list|,
name|projects
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|String
index|[]
name|expected
init|=
operator|new
name|String
index|[]
block|{
literal|"A"
block|,
literal|"B"
block|,
literal|"C"
block|,
literal|"archiva"
block|,
literal|"discovery"
block|,
literal|"maven-parent"
block|,
literal|"samplejar"
block|,
literal|"shared"
block|,
literal|"some-ejb"
block|,
literal|"test"
block|,
literal|"testing"
block|,
literal|"update"
block|}
decl_stmt|;
name|Object
index|[]
name|actual
init|=
name|projects
operator|.
name|stream
argument_list|( )
operator|.
name|map
argument_list|(
name|p
lambda|->
name|p
operator|.
name|getId
argument_list|( )
argument_list|)
operator|.
name|sorted
argument_list|( )
operator|.
name|toArray
argument_list|( )
decl_stmt|;
name|assertArrayEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetVersionsWithIllegalSelector
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|List
argument_list|<
name|?
extends|extends
name|Version
argument_list|>
name|versions
init|=
name|repoContent
operator|.
name|getVersions
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
literal|"IllegalArgumentException expected, when project id not set"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Project id not set, while retrieving versions."
argument_list|,
name|e
operator|.
name|getMessage
argument_list|( )
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetVersionsWithSelector
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Version
argument_list|>
name|versions
init|=
name|repoContent
operator|.
name|getVersions
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|versions
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|versions
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|ArtifactReference
name|toArtifactReference
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|LayoutException
block|{
return|return
name|repoContent
operator|.
name|toArtifactReference
argument_list|(
name|path
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|ItemSelector
name|toItemSelector
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|LayoutException
block|{
return|return
name|repoContent
operator|.
name|toItemSelector
argument_list|(
name|path
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|String
name|toPath
parameter_list|(
name|ArtifactReference
name|reference
parameter_list|)
block|{
return|return
name|repoContent
operator|.
name|toPath
argument_list|(
name|reference
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|String
name|toPath
parameter_list|(
name|ItemSelector
name|selector
parameter_list|)
block|{
return|return
name|repoContent
operator|.
name|toPath
argument_list|(
name|selector
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|ManagedRepositoryContent
name|getManaged
parameter_list|( )
block|{
return|return
name|repoContent
return|;
block|}
annotation|@
name|Override
specifier|protected
name|RepositoryContent
name|getContent
parameter_list|( )
block|{
return|return
name|repoContent
return|;
block|}
specifier|private
name|Path
name|setupRepoCopy
parameter_list|(
name|String
name|source
parameter_list|,
name|String
name|target
parameter_list|)
throws|throws
name|IOException
block|{
name|Path
name|defaultRepo
init|=
name|getRepositoryPath
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|Path
name|newRepo
init|=
name|defaultRepo
operator|.
name|getParent
argument_list|( )
operator|.
name|resolve
argument_list|(
name|target
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|copyDirectory
argument_list|(
name|defaultRepo
operator|.
name|toFile
argument_list|( )
argument_list|,
name|newRepo
operator|.
name|toFile
argument_list|( )
argument_list|)
expr_stmt|;
name|MavenManagedRepository
name|repository
init|=
name|createRepository
argument_list|(
literal|"testRepo"
argument_list|,
literal|"Unit Test Repo"
argument_list|,
name|newRepo
argument_list|)
decl_stmt|;
name|FileType
name|fileType
init|=
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getRepositoryScanning
argument_list|()
operator|.
name|getFileTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|fileType
operator|.
name|addPattern
argument_list|(
literal|"**/*.xml"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FileTypes
operator|.
name|ARTIFACTS
argument_list|,
name|fileType
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|fileTypes
operator|.
name|afterConfigurationChange
argument_list|(
literal|null
argument_list|,
literal|"fileType"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|repoContent
operator|=
operator|new
name|ManagedDefaultRepositoryContent
argument_list|(
name|repository
argument_list|,
name|artifactMappingProviders
argument_list|,
name|fileTypes
argument_list|,
name|fileLockManager
argument_list|)
expr_stmt|;
return|return
name|newRepo
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteArtifactWithType
parameter_list|()
throws|throws
name|IOException
throws|,
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ContentNotFoundException
throws|,
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ContentAccessException
block|{
name|Path
name|deleteRepo
init|=
name|setupRepoCopy
argument_list|(
literal|"delete-repository"
argument_list|,
literal|"delete-repository-2"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0-source.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar.md5"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar.sha1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.pom"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ArtifactReference
name|ref
init|=
operator|new
name|ArtifactReference
argument_list|( )
decl_stmt|;
name|ref
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.maven"
argument_list|)
expr_stmt|;
name|ref
operator|.
name|setArtifactId
argument_list|(
literal|"samplejar"
argument_list|)
expr_stmt|;
name|ref
operator|.
name|setVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|ref
operator|.
name|setType
argument_list|(
literal|"jar"
argument_list|)
expr_stmt|;
name|repoContent
operator|.
name|deleteArtifact
argument_list|(
name|ref
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0-source.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar.md5"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar.sha1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.pom"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteArtifactWithClassifier
parameter_list|()
throws|throws
name|IOException
throws|,
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ContentNotFoundException
throws|,
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ContentAccessException
block|{
name|Path
name|deleteRepo
init|=
name|setupRepoCopy
argument_list|(
literal|"default-repository"
argument_list|,
literal|"default-repository-2"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0-source.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0-source.jar.sha1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar.md5"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar.sha1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.pom"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ArtifactReference
name|ref
init|=
operator|new
name|ArtifactReference
argument_list|( )
decl_stmt|;
name|ref
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.maven"
argument_list|)
expr_stmt|;
name|ref
operator|.
name|setArtifactId
argument_list|(
literal|"samplejar"
argument_list|)
expr_stmt|;
name|ref
operator|.
name|setVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|ref
operator|.
name|setClassifier
argument_list|(
literal|"source"
argument_list|)
expr_stmt|;
name|ref
operator|.
name|setType
argument_list|(
literal|"jar"
argument_list|)
expr_stmt|;
name|repoContent
operator|.
name|deleteArtifact
argument_list|(
name|ref
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0-source.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0-source.jar.sha1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar.md5"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar.sha1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.pom"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteArtifactWithoutType
parameter_list|()
throws|throws
name|IOException
throws|,
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ContentNotFoundException
throws|,
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ContentAccessException
block|{
name|Path
name|deleteRepo
init|=
name|setupRepoCopy
argument_list|(
literal|"default-repository"
argument_list|,
literal|"default-repository-2"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0-source.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0-source.jar.sha1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar.md5"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar.sha1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.pom"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ArtifactReference
name|ref
init|=
operator|new
name|ArtifactReference
argument_list|( )
decl_stmt|;
name|ref
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.maven"
argument_list|)
expr_stmt|;
name|ref
operator|.
name|setArtifactId
argument_list|(
literal|"samplejar"
argument_list|)
expr_stmt|;
name|ref
operator|.
name|setVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|repoContent
operator|.
name|deleteArtifact
argument_list|(
name|ref
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteVersion
parameter_list|()
throws|throws
name|IOException
throws|,
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ContentNotFoundException
throws|,
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ContentAccessException
block|{
name|Path
name|deleteRepo
init|=
name|setupRepoCopy
argument_list|(
literal|"delete-repository"
argument_list|,
literal|"delete-repository-2"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0-source.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar.md5"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar.sha1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.pom"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|VersionedReference
name|ref
init|=
operator|new
name|VersionedReference
argument_list|( )
operator|.
name|groupId
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|artifactId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|version
argument_list|(
literal|"1.0"
argument_list|)
decl_stmt|;
name|repoContent
operator|.
name|deleteVersion
argument_list|(
name|ref
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteProject
parameter_list|()
throws|throws
name|IOException
throws|,
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ContentNotFoundException
throws|,
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ContentAccessException
block|{
name|Path
name|deleteRepo
init|=
name|setupRepoCopy
argument_list|(
literal|"delete-repository"
argument_list|,
literal|"delete-repository-2"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0-source.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar.md5"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar.sha1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.pom"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ProjectReference
name|ref
init|=
operator|new
name|ProjectReference
argument_list|( )
operator|.
name|groupId
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|artifactId
argument_list|(
literal|"samplejar"
argument_list|)
decl_stmt|;
name|repoContent
operator|.
name|deleteProject
argument_list|(
name|ref
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|deleteRepo
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetArtifactStreamWithVersionSelector
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"javax.sql"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"jdbc"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"2.0"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
init|(
name|Stream
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|stream
init|=
name|repoContent
operator|.
name|newArtifactStream
argument_list|(
name|selector
argument_list|)
init|)
block|{
name|assertNotNull
argument_list|(
name|stream
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|stream
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|( )
argument_list|)
decl_stmt|;
name|checkArtifactListWithVersionSelector1
argument_list|(
name|results
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetArtifactListWithVersionSelector
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"javax.sql"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"jdbc"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"2.0"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|checkArtifactListWithVersionSelector1
argument_list|(
name|results
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkArtifactListWithVersionSelector1
parameter_list|(
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|results
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|Artifact
name|mainArtifact
init|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equals
argument_list|(
literal|"jdbc-2.0.jar"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|( )
operator|.
name|get
argument_list|( )
decl_stmt|;
name|assertNotNull
argument_list|(
name|mainArtifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BaseArtifactTypes
operator|.
name|MAIN
argument_list|,
name|mainArtifact
operator|.
name|getDataType
argument_list|( )
argument_list|)
expr_stmt|;
name|Artifact
name|metaArtifact
init|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equals
argument_list|(
literal|"maven-metadata-repository.xml"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|( )
operator|.
name|get
argument_list|( )
decl_stmt|;
name|assertNotNull
argument_list|(
name|metaArtifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MavenTypes
operator|.
name|REPOSITORY_METADATA
argument_list|,
name|metaArtifact
operator|.
name|getDataType
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetArtifactStreamWithVersionSelector2
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.axis2"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"axis2"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.3-SNAPSHOT"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
init|(
name|Stream
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|stream
init|=
name|repoContent
operator|.
name|newArtifactStream
argument_list|(
name|selector
argument_list|)
init|)
block|{
name|assertNotNull
argument_list|(
name|stream
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|stream
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|( )
argument_list|)
decl_stmt|;
name|checkArtifactListWithVersionSelector2
argument_list|(
name|results
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetArtifactListWithVersionSelector2
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.axis2"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"axis2"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.3-SNAPSHOT"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|checkArtifactListWithVersionSelector2
argument_list|(
name|results
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkArtifactListWithVersionSelector2
parameter_list|(
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|39
argument_list|,
name|results
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equals
argument_list|(
literal|"axis2-1.3-20070725.210059-1.pom"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|( )
operator|.
name|get
argument_list|( )
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"pom"
argument_list|,
name|artifact
operator|.
name|getExtension
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BaseArtifactTypes
operator|.
name|MAIN
argument_list|,
name|artifact
operator|.
name|getDataType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.3-SNAPSHOT"
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|( )
operator|.
name|getVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.3-20070725.210059-1"
argument_list|,
name|artifact
operator|.
name|getArtifactVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|".pom"
argument_list|,
name|artifact
operator|.
name|getRemainder
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"axis2"
argument_list|,
name|artifact
operator|.
name|getId
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"axis2"
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|( )
operator|.
name|getProject
argument_list|( )
operator|.
name|getId
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.axis2"
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|( )
operator|.
name|getProject
argument_list|( )
operator|.
name|getNamespace
argument_list|( )
operator|.
name|getNamespace
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|artifact
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"pom"
argument_list|,
name|artifact
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|artifact
operator|=
literal|null
expr_stmt|;
name|artifact
operator|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equals
argument_list|(
literal|"axis2-1.3-20070725.210059-1.pom.md5"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|( )
operator|.
name|get
argument_list|( )
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"md5"
argument_list|,
name|artifact
operator|.
name|getExtension
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BaseArtifactTypes
operator|.
name|RELATED
argument_list|,
name|artifact
operator|.
name|getDataType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.3-SNAPSHOT"
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|( )
operator|.
name|getVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.3-20070725.210059-1"
argument_list|,
name|artifact
operator|.
name|getArtifactVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|".pom.md5"
argument_list|,
name|artifact
operator|.
name|getRemainder
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"axis2"
argument_list|,
name|artifact
operator|.
name|getId
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"axis2"
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|( )
operator|.
name|getProject
argument_list|( )
operator|.
name|getId
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.axis2"
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|( )
operator|.
name|getProject
argument_list|( )
operator|.
name|getNamespace
argument_list|( )
operator|.
name|getNamespace
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|artifact
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"md5"
argument_list|,
name|artifact
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|artifact
operator|=
literal|null
expr_stmt|;
name|artifact
operator|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equals
argument_list|(
literal|"maven-metadata.xml"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|( )
operator|.
name|get
argument_list|( )
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BaseArtifactTypes
operator|.
name|METADATA
argument_list|,
name|artifact
operator|.
name|getDataType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.3-SNAPSHOT"
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|( )
operator|.
name|getVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"xml"
argument_list|,
name|artifact
operator|.
name|getExtension
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetArtifactListWithArtifactSelector1
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.axis2"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"axis2"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.3-SNAPSHOT"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.3-20070731.113304-21"
argument_list|)
operator|.
name|withExtension
argument_list|(
literal|"pom"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|checkArtifactListWithArtifactSelector1
argument_list|(
name|results
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetArtifactStreamWithArtifactSelector1
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.axis2"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"axis2"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.3-SNAPSHOT"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.3-20070731.113304-21"
argument_list|)
operator|.
name|withExtension
argument_list|(
literal|"pom"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
try|try
init|(
name|Stream
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|newArtifactStream
argument_list|(
name|selector
argument_list|)
init|)
block|{
name|checkArtifactListWithArtifactSelector1
argument_list|(
name|results
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|checkArtifactListWithArtifactSelector1
parameter_list|(
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|results
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|results
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"pom"
argument_list|,
name|artifact
operator|.
name|getExtension
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BaseArtifactTypes
operator|.
name|MAIN
argument_list|,
name|artifact
operator|.
name|getDataType
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetArtifactListWithArtifactSelector2
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.axis2"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"axis2"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.3-SNAPSHOT"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.3-20070731.113304-21"
argument_list|)
operator|.
name|withExtension
argument_list|(
literal|"pom"
argument_list|)
operator|.
name|includeRelatedArtifacts
argument_list|()
operator|.
name|build
argument_list|( )
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|checkArtifactListWithArtifactSelector2
argument_list|(
name|results
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetArtifactStreamWithArtifactSelector2
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.axis2"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"axis2"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.3-SNAPSHOT"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.3-20070731.113304-21"
argument_list|)
operator|.
name|withExtension
argument_list|(
literal|"pom"
argument_list|)
operator|.
name|includeRelatedArtifacts
argument_list|()
operator|.
name|build
argument_list|( )
decl_stmt|;
try|try
init|(
name|Stream
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|newArtifactStream
argument_list|(
name|selector
argument_list|)
init|)
block|{
name|checkArtifactListWithArtifactSelector2
argument_list|(
name|results
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|checkArtifactListWithArtifactSelector2
parameter_list|(
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|results
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"axis2-1.3-20070731.113304-21.pom"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|( )
operator|.
name|get
argument_list|( )
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"pom"
argument_list|,
name|artifact
operator|.
name|getExtension
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BaseArtifactTypes
operator|.
name|MAIN
argument_list|,
name|artifact
operator|.
name|getDataType
argument_list|( )
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"axis2-1.3-20070731.113304-21.pom.sha1"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|( )
operator|.
name|get
argument_list|( )
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sha1"
argument_list|,
name|artifact
operator|.
name|getExtension
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BaseArtifactTypes
operator|.
name|RELATED
argument_list|,
name|artifact
operator|.
name|getDataType
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testArtifactListWithProjectSelector
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven.shared"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"maven-downloader"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|checkArtifactListWithProjectSelector
argument_list|(
name|results
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testArtifactStreamWithProjectSelector
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven.shared"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"maven-downloader"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|Stream
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|newArtifactStream
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|checkArtifactListWithProjectSelector
argument_list|(
name|results
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkArtifactListWithProjectSelector
parameter_list|(
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|27
argument_list|,
name|results
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"maven-metadata.xml"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|( )
operator|.
name|get
argument_list|( )
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"xml"
argument_list|,
name|artifact
operator|.
name|getExtension
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BaseArtifactTypes
operator|.
name|METADATA
argument_list|,
name|artifact
operator|.
name|getDataType
argument_list|( )
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"maven-downloader-1.0-sources.jar"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|( )
operator|.
name|get
argument_list|( )
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BaseArtifactTypes
operator|.
name|MAIN
argument_list|,
name|artifact
operator|.
name|getDataType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sources"
argument_list|,
name|artifact
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"java-source"
argument_list|,
name|artifact
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"maven-downloader-1.0-sources.jar.sha1"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|( )
operator|.
name|get
argument_list|( )
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BaseArtifactTypes
operator|.
name|RELATED
argument_list|,
name|artifact
operator|.
name|getDataType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sources"
argument_list|,
name|artifact
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sha1"
argument_list|,
name|artifact
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|".jar.sha1"
argument_list|,
name|artifact
operator|.
name|getRemainder
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testArtifactListWithNamespaceSelector
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.multilevel"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|results
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|results
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getFileName
argument_list|( )
operator|.
name|startsWith
argument_list|(
literal|"testproj1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testArtifactListWithNamespaceSelectorRecursive
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.multilevel"
argument_list|)
operator|.
name|recurse
argument_list|()
operator|.
name|build
argument_list|( )
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|checkArtifactListWithNamespaceSelectorRecursive
argument_list|(
name|results
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testArtifactStreamWithNamespaceSelectorRecursive
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.multilevel"
argument_list|)
operator|.
name|recurse
argument_list|()
operator|.
name|build
argument_list|( )
decl_stmt|;
name|Stream
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|newArtifactStream
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|checkArtifactListWithNamespaceSelectorRecursive
argument_list|(
name|results
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkArtifactListWithNamespaceSelectorRecursive
parameter_list|(
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|results
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"testproj2-1.0.pom"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|( )
operator|.
name|get
argument_list|( )
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|artifact
operator|.
name|getAsset
argument_list|( )
operator|.
name|getParent
argument_list|( )
operator|.
name|getPath
argument_list|( )
operator|.
name|split
argument_list|(
literal|"/"
argument_list|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"testproj1-1.0.pom"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|( )
operator|.
name|get
argument_list|( )
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|artifact
operator|.
name|getAsset
argument_list|( )
operator|.
name|getParent
argument_list|( )
operator|.
name|getPath
argument_list|( )
operator|.
name|split
argument_list|(
literal|"/"
argument_list|)
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testArtifactListWithArtifactSelector1
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"test"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0-SNAPSHOT"
argument_list|)
operator|.
name|withArtifactId
argument_list|(
literal|"test"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.0-20050611.112233-1"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|results
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"test-1.0-20050611.112233-1.jar"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|artifact
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testArtifactListWithArtifactSelector2
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"test"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0-SNAPSHOT"
argument_list|)
operator|.
name|withClassifier
argument_list|(
literal|"*"
argument_list|)
operator|.
name|withArtifactId
argument_list|(
literal|"test"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.0-20050611.112233-1"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|results
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"test-1.0-20050611.112233-1-javadoc.jar"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"javadoc"
argument_list|,
name|artifact
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"javadoc"
argument_list|,
name|artifact
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testArtifactListWithArtifactSelector3
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"test"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0-SNAPSHOT"
argument_list|)
operator|.
name|withClassifier
argument_list|(
literal|"*"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.0-20050611.112233-1"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|results
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"test-1.0-20050611.112233-1-javadoc.jar"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"javadoc"
argument_list|,
name|artifact
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"javadoc"
argument_list|,
name|artifact
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"wrong-artifactId-1.0-20050611.112233-1.jar"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|artifact
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"wrong-artifactId"
argument_list|,
name|artifact
operator|.
name|getId
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testArtifactListWithArtifactSelector4
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"test"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0-SNAPSHOT"
argument_list|)
operator|.
name|withClassifier
argument_list|(
literal|""
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|results
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"test-1.0-20050611.112233-1-javadoc.jar"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"javadoc"
argument_list|,
name|artifact
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"javadoc"
argument_list|,
name|artifact
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"wrong-artifactId-1.0-20050611.112233-1.jar"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|artifact
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"wrong-artifactId"
argument_list|,
name|artifact
operator|.
name|getId
argument_list|( )
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"wrong-artifactId-1.0-20050611.1122x-1.jar"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|artifact
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"wrong-artifactId"
argument_list|,
name|artifact
operator|.
name|getId
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|artifact
operator|.
name|getArtifactVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"test-1.0-20050611.1122x-1.jar"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|artifact
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|artifact
operator|.
name|getId
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.0-20050611.1122x-1"
argument_list|,
name|artifact
operator|.
name|getArtifactVersion
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testArtifactListWithArtifactSelectorWithClassifier
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"test"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0-SNAPSHOT"
argument_list|)
operator|.
name|withArtifactId
argument_list|(
literal|"test"
argument_list|)
operator|.
name|withClassifier
argument_list|(
literal|"javadoc"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.0-20050611.112233-1"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|results
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"test-1.0-20050611.112233-1-javadoc.jar"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"javadoc"
argument_list|,
name|artifact
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"javadoc"
argument_list|,
name|artifact
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testArtifactListWithArtifactSelectorWrongArtifact
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"test"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0-SNAPSHOT"
argument_list|)
operator|.
name|withArtifactId
argument_list|(
literal|"wrong-artifactId"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.0-20050611.112233-1"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|results
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"wrong-artifactId-1.0-20050611.112233-1.jar"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testArtifactListWithArtifactSelectorVersionPattern
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"test"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0-SNAPSHOT"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.0-*"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|results
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"wrong-artifactId-1.0-20050611.112233-1.jar"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNewItemStreamWithNamespace1
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.axis2"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Stream
argument_list|<
name|?
extends|extends
name|ContentItem
argument_list|>
name|stream
init|=
name|repoContent
operator|.
name|newItemStream
argument_list|(
name|selector
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|ContentItem
argument_list|>
name|result
init|=
name|stream
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|( )
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|41
argument_list|,
name|result
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|ContentItem
name|item
init|=
name|result
operator|.
name|get
argument_list|(
literal|39
argument_list|)
decl_stmt|;
name|Version
name|version
init|=
name|item
operator|.
name|adapt
argument_list|(
name|Version
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.3-SNAPSHOT"
argument_list|,
name|version
operator|.
name|getVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|Project
name|project
init|=
name|result
operator|.
name|get
argument_list|(
literal|40
argument_list|)
operator|.
name|adapt
argument_list|(
name|Project
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"axis2"
argument_list|,
name|project
operator|.
name|getId
argument_list|( )
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|.
name|stream
argument_list|( )
operator|.
name|anyMatch
argument_list|(
name|a
lambda|->
literal|"axis2-1.3-20070725.210059-1.pom"
operator|.
name|equals
argument_list|(
name|a
operator|.
name|getAsset
argument_list|( )
operator|.
name|getName
argument_list|( )
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNewItemStreamWithNamespace2
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|recurse
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
name|Stream
argument_list|<
name|?
extends|extends
name|ContentItem
argument_list|>
name|stream
init|=
name|repoContent
operator|.
name|newItemStream
argument_list|(
name|selector
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|ContentItem
argument_list|>
name|result
init|=
name|stream
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|( )
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|170
argument_list|,
name|result
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|92
argument_list|,
name|result
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|instanceof
name|DataItem
argument_list|)
operator|.
name|count
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetArtifactFromContentItem
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Namespace
name|ns
init|=
name|repoContent
operator|.
name|getNamespace
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|artifacts
init|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|ns
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|39
argument_list|,
name|artifacts
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|artifacts2
init|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
operator|(
name|ContentItem
operator|)
name|ns
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
name|artifacts
operator|.
name|toArray
argument_list|()
argument_list|,
name|artifacts2
operator|.
name|toArray
argument_list|()
argument_list|)
expr_stmt|;
name|selector
operator|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven.shared"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"maven-downloader"
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|Project
name|project
init|=
name|repoContent
operator|.
name|getProject
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|artifacts
operator|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|27
argument_list|,
name|artifacts
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|artifacts2
operator|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
operator|(
name|ContentItem
operator|)
name|project
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|artifacts
operator|.
name|toArray
argument_list|()
argument_list|,
name|artifacts2
operator|.
name|toArray
argument_list|()
argument_list|)
expr_stmt|;
name|selector
operator|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven.shared"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"maven-downloader"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.1"
argument_list|)
operator|.
name|build
argument_list|( )
expr_stmt|;
name|Version
name|version
init|=
name|repoContent
operator|.
name|getVersion
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|artifacts
operator|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|12
argument_list|,
name|artifacts
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|artifacts2
operator|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
operator|(
name|ContentItem
operator|)
name|version
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|artifacts
operator|.
name|toArray
argument_list|()
argument_list|,
name|artifacts2
operator|.
name|toArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetRelatedArtifactsFromArtifact
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven.shared"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"maven-downloader"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.1"
argument_list|)
operator|.
name|withExtension
argument_list|(
literal|"jar"
argument_list|)
operator|.
name|withArtifactId
argument_list|(
literal|"maven-downloader"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|Artifact
name|artifact
init|=
name|repoContent
operator|.
name|getArtifact
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|artifacts
init|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|artifact
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|artifacts
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testToItemFromPath
parameter_list|()
throws|throws
name|LayoutException
block|{
name|String
name|path
init|=
literal|"/org/apache/maven/shared"
decl_stmt|;
name|ContentItem
name|item
init|=
name|repoContent
operator|.
name|toItem
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|ArchivaContentItem
argument_list|)
expr_stmt|;
name|path
operator|=
literal|"/org/apache/maven/shared/maven-downloader"
expr_stmt|;
name|item
operator|=
name|repoContent
operator|.
name|toItem
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|ArchivaContentItem
argument_list|)
expr_stmt|;
name|path
operator|=
literal|"/org/apache/maven/shared/maven-downloader/1.1"
expr_stmt|;
name|item
operator|=
name|repoContent
operator|.
name|toItem
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|ArchivaContentItem
argument_list|)
expr_stmt|;
name|path
operator|=
literal|"/org/apache/maven/shared/maven-downloader/1.1/maven-downloader-1.1.jar"
expr_stmt|;
name|item
operator|=
name|repoContent
operator|.
name|toItem
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Artifact
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testToItemFromAssetPath
parameter_list|()
throws|throws
name|LayoutException
block|{
name|StorageAsset
name|path
init|=
name|repoContent
operator|.
name|getRepository
argument_list|()
operator|.
name|getAsset
argument_list|(
literal|"/org/apache/maven/shared"
argument_list|)
decl_stmt|;
name|ContentItem
name|item
init|=
name|repoContent
operator|.
name|toItem
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|ArchivaContentItem
argument_list|)
expr_stmt|;
name|path
operator|=
name|repoContent
operator|.
name|getRepository
argument_list|( )
operator|.
name|getAsset
argument_list|(
literal|"/org/apache/maven/shared/maven-downloader"
argument_list|)
expr_stmt|;
name|item
operator|=
name|repoContent
operator|.
name|toItem
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|ArchivaContentItem
argument_list|)
expr_stmt|;
name|path
operator|=
name|repoContent
operator|.
name|getRepository
argument_list|( )
operator|.
name|getAsset
argument_list|(
literal|"/org/apache/maven/shared/maven-downloader/1.1"
argument_list|)
expr_stmt|;
name|item
operator|=
name|repoContent
operator|.
name|toItem
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|ArchivaContentItem
argument_list|)
expr_stmt|;
name|path
operator|=
name|repoContent
operator|.
name|getRepository
argument_list|( )
operator|.
name|getAsset
argument_list|(
literal|"/org/apache/maven/shared/maven-downloader/1.1/maven-downloader-1.1.jar"
argument_list|)
expr_stmt|;
name|item
operator|=
name|repoContent
operator|.
name|toItem
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|DataItem
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHasContent
parameter_list|()
throws|throws
name|LayoutException
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven.shared"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"maven-downloader"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.1"
argument_list|)
operator|.
name|withArtifactId
argument_list|(
literal|"maven-downloader"
argument_list|)
operator|.
name|withExtension
argument_list|(
literal|"jar"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|repoContent
operator|.
name|hasContent
argument_list|(
name|selector
argument_list|)
argument_list|)
expr_stmt|;
name|selector
operator|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven.shared"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"maven-downloader"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.1"
argument_list|)
operator|.
name|withArtifactId
argument_list|(
literal|"maven-downloader"
argument_list|)
operator|.
name|withExtension
argument_list|(
literal|"zip"
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
name|repoContent
operator|.
name|hasContent
argument_list|(
name|selector
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetItemWithNamespaceSelector
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|ContentItem
name|item
init|=
name|repoContent
operator|.
name|getItem
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Namespace
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetItemWithProjectSelector
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"shared"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|ContentItem
name|item
init|=
name|repoContent
operator|.
name|getItem
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Project
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetItemWithVersionSelector
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"2.0"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|ContentItem
name|item
init|=
name|repoContent
operator|.
name|getItem
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Version
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetItemWithArtifactSelector
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"2.0"
argument_list|)
operator|.
name|withArtifactId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|ContentItem
name|item
init|=
name|repoContent
operator|.
name|getItem
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Artifact
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetNamespaceFromPath
parameter_list|()
block|{
name|StorageAsset
name|path
init|=
name|repoContent
operator|.
name|getRepository
argument_list|( )
operator|.
name|getAsset
argument_list|(
literal|"/org/apache/axis2"
argument_list|)
decl_stmt|;
name|Namespace
name|ns
init|=
name|repoContent
operator|.
name|getNamespaceFromPath
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ns
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.axis2"
argument_list|,
name|ns
operator|.
name|getNamespace
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testArtifactListWithArtifactSelectorAndRelated
parameter_list|()
block|{
name|ItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|withArtifactId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|withExtension
argument_list|(
literal|"jar"
argument_list|)
operator|.
name|includeRelatedArtifacts
argument_list|()
operator|.
name|build
argument_list|( )
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Artifact
argument_list|>
name|results
init|=
name|repoContent
operator|.
name|getArtifacts
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|results
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"samplejar-1.0.jar"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BaseArtifactTypes
operator|.
name|MAIN
argument_list|,
name|artifact
operator|.
name|getDataType
argument_list|( )
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"samplejar-1.0.jar.md5"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BaseArtifactTypes
operator|.
name|RELATED
argument_list|,
name|artifact
operator|.
name|getDataType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"md5"
argument_list|,
name|artifact
operator|.
name|getExtension
argument_list|( )
argument_list|)
expr_stmt|;
name|artifact
operator|=
name|results
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getFileName
argument_list|( )
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"samplejar-1.0.jar.sha1"
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BaseArtifactTypes
operator|.
name|RELATED
argument_list|,
name|artifact
operator|.
name|getDataType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sha1"
argument_list|,
name|artifact
operator|.
name|getExtension
argument_list|( )
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Path
name|copyRepository
parameter_list|(
name|String
name|repoName
parameter_list|)
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
name|Path
name|tempDir
init|=
name|Files
operator|.
name|createTempDirectory
argument_list|(
literal|"archiva-repocontent"
argument_list|)
decl_stmt|;
name|Path
name|repoSource
init|=
name|Paths
operator|.
name|get
argument_list|(
name|Thread
operator|.
name|currentThread
argument_list|( )
operator|.
name|getContextClassLoader
argument_list|( )
operator|.
name|getResource
argument_list|(
literal|"repositories/"
operator|+
name|repoName
argument_list|)
operator|.
name|toURI
argument_list|( )
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoSource
argument_list|)
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|copyDirectory
argument_list|(
name|repoSource
operator|.
name|toFile
argument_list|( )
argument_list|,
name|tempDir
operator|.
name|toFile
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|tempDir
return|;
block|}
specifier|private
name|ManagedRepository
name|createManagedRepoWithContent
parameter_list|(
name|String
name|sourceRepoName
parameter_list|)
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
name|Path
name|repoDir
init|=
name|copyRepository
argument_list|(
name|sourceRepoName
argument_list|)
decl_stmt|;
name|MavenManagedRepository
name|repo
init|=
name|createRepository
argument_list|(
name|sourceRepoName
argument_list|,
name|sourceRepoName
argument_list|,
name|repoDir
argument_list|)
decl_stmt|;
name|ManagedDefaultRepositoryContent
name|deleteRepoContent
init|=
operator|new
name|ManagedDefaultRepositoryContent
argument_list|(
name|repo
argument_list|,
name|artifactMappingProviders
argument_list|,
name|fileTypes
argument_list|,
name|fileLockManager
argument_list|)
decl_stmt|;
name|deleteRepoContent
operator|.
name|setMavenContentHelper
argument_list|(
name|contentHelper
argument_list|)
expr_stmt|;
return|return
name|repo
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|deleteNamespaceItem
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
throws|,
name|ItemNotFoundException
block|{
name|ManagedRepository
name|repo
init|=
name|createManagedRepoWithContent
argument_list|(
literal|"delete-repository"
argument_list|)
decl_stmt|;
name|ManagedRepositoryContent
name|myRepoContent
init|=
name|repo
operator|.
name|getContent
argument_list|( )
decl_stmt|;
name|Path
name|repoRoot
init|=
name|repo
operator|.
name|getAsset
argument_list|(
literal|""
argument_list|)
operator|.
name|getFilePath
argument_list|( )
decl_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ArchivaItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ContentItem
name|item
init|=
name|myRepoContent
operator|.
name|getItem
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Namespace
argument_list|)
expr_stmt|;
name|myRepoContent
operator|.
name|deleteItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Sub namespaces are deleted too
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/sub/samplejar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|selector
operator|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.test"
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|item
operator|=
name|myRepoContent
operator|.
name|getItem
argument_list|(
name|selector
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Namespace
argument_list|)
expr_stmt|;
name|myRepoContent
operator|.
name|deleteItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/sub/samplejar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|deleteProjectItem
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
throws|,
name|ItemNotFoundException
block|{
name|ManagedRepository
name|repo
init|=
name|createManagedRepoWithContent
argument_list|(
literal|"delete-repository"
argument_list|)
decl_stmt|;
name|ManagedRepositoryContent
name|myRepoContent
init|=
name|repo
operator|.
name|getContent
argument_list|( )
decl_stmt|;
name|Path
name|repoRoot
init|=
name|repo
operator|.
name|getAsset
argument_list|(
literal|""
argument_list|)
operator|.
name|getFilePath
argument_list|( )
decl_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/A"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ArchivaItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"A"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ContentItem
name|item
init|=
name|myRepoContent
operator|.
name|getItem
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Project
argument_list|)
expr_stmt|;
name|myRepoContent
operator|.
name|deleteItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/2.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/A"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/sub/samplejar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|selector
operator|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.test"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|item
operator|=
name|myRepoContent
operator|.
name|getItem
argument_list|(
name|selector
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Project
argument_list|)
expr_stmt|;
name|myRepoContent
operator|.
name|deleteItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/sub/samplejar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|deleteVersionItem
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
throws|,
name|ItemNotFoundException
block|{
name|ManagedRepository
name|repo
init|=
name|createManagedRepoWithContent
argument_list|(
literal|"delete-repository"
argument_list|)
decl_stmt|;
name|ManagedRepositoryContent
name|myRepoContent
init|=
name|repo
operator|.
name|getContent
argument_list|( )
decl_stmt|;
name|Path
name|repoRoot
init|=
name|repo
operator|.
name|getAsset
argument_list|(
literal|""
argument_list|)
operator|.
name|getFilePath
argument_list|( )
decl_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/A/1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ArchivaItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"A"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ContentItem
name|item
init|=
name|myRepoContent
operator|.
name|getItem
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Version
argument_list|)
expr_stmt|;
name|myRepoContent
operator|.
name|deleteItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/A"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/2.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/A/1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/sub/samplejar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|selector
operator|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.test"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"2.0"
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|item
operator|=
name|myRepoContent
operator|.
name|getItem
argument_list|(
name|selector
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Version
argument_list|)
expr_stmt|;
name|myRepoContent
operator|.
name|deleteItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/2.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/sub/samplejar/1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/sub/samplejar/2.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|deleteArtifactItem
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
throws|,
name|ItemNotFoundException
block|{
name|ManagedRepository
name|repo
init|=
name|createManagedRepoWithContent
argument_list|(
literal|"delete-repository"
argument_list|)
decl_stmt|;
name|ManagedRepositoryContent
name|myRepoContent
init|=
name|repo
operator|.
name|getContent
argument_list|( )
decl_stmt|;
name|Path
name|repoRoot
init|=
name|repo
operator|.
name|getAsset
argument_list|(
literal|""
argument_list|)
operator|.
name|getFilePath
argument_list|( )
decl_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/A/1.0/A-1.0.pom"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/A/1.0/A-1.0.war"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ArchivaItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"A"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|withArtifactId
argument_list|(
literal|"A"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|withExtension
argument_list|(
literal|"pom"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ContentItem
name|item
init|=
name|myRepoContent
operator|.
name|getItem
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Artifact
argument_list|)
expr_stmt|;
name|myRepoContent
operator|.
name|deleteItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/2.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/A/1.0/A-1.0.pom"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/A/1.0/A-1.0.war"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0.jar.md5"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0.jar.sha1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0.pom"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0-source.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|selector
operator|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.test"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|withArtifactId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|withExtension
argument_list|(
literal|"jar"
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|item
operator|=
name|myRepoContent
operator|.
name|getItem
argument_list|(
name|selector
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Artifact
argument_list|)
expr_stmt|;
name|myRepoContent
operator|.
name|deleteItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0.jar.md5"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0.jar.sha1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0.pom"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0-source.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/2.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/sub/samplejar/1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/sub/samplejar/2.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|selector
operator|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.test"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|withArtifactId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|withClassifier
argument_list|(
literal|"source"
argument_list|)
operator|.
name|withExtension
argument_list|(
literal|"jar"
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|item
operator|=
name|myRepoContent
operator|.
name|getItem
argument_list|(
name|selector
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Artifact
argument_list|)
expr_stmt|;
name|myRepoContent
operator|.
name|deleteItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0.jar.md5"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0.jar.sha1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0.pom"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0-source.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0-source.jar.sha1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/2.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/sub/samplejar/1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/sub/samplejar/2.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|selector
operator|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.test"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|withArtifactId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|withExtension
argument_list|(
literal|"jar.md5"
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|item
operator|=
name|myRepoContent
operator|.
name|getItem
argument_list|(
name|selector
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Artifact
argument_list|)
expr_stmt|;
name|myRepoContent
operator|.
name|deleteItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0.jar.md5"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0.jar.sha1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0.pom"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0-source.jar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/1.0/samplejar-1.0-source.jar.sha1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/samplejar/2.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/sub/samplejar/1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/test/sub/samplejar/2.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|deleteItemNotFound
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
throws|,
name|ItemNotFoundException
block|{
name|ManagedRepository
name|repo
init|=
name|createManagedRepoWithContent
argument_list|(
literal|"delete-repository"
argument_list|)
decl_stmt|;
name|ManagedRepositoryContent
name|myRepoContent
init|=
name|repo
operator|.
name|getContent
argument_list|( )
decl_stmt|;
name|Path
name|repoRoot
init|=
name|repo
operator|.
name|getAsset
argument_list|(
literal|""
argument_list|)
operator|.
name|getFilePath
argument_list|( )
decl_stmt|;
name|ArchivaItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.test2"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|ContentItem
name|item
init|=
name|myRepoContent
operator|.
name|getItem
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Namespace
argument_list|)
expr_stmt|;
try|try
block|{
name|myRepoContent
operator|.
name|deleteItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"ItemNotFoundException expected for non existing namespace"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ItemNotFoundException
name|e
parameter_list|)
block|{
block|}
name|selector
operator|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.test"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"samplejar2"
argument_list|)
operator|.
name|build
argument_list|( )
expr_stmt|;
name|item
operator|=
name|myRepoContent
operator|.
name|getItem
argument_list|(
name|selector
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Project
argument_list|)
expr_stmt|;
try|try
block|{
name|myRepoContent
operator|.
name|deleteItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"ItemNotFoundException expected for non existing project"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ItemNotFoundException
name|e
parameter_list|)
block|{
block|}
name|selector
operator|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.test"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.1"
argument_list|)
operator|.
name|build
argument_list|( )
expr_stmt|;
name|item
operator|=
name|myRepoContent
operator|.
name|getItem
argument_list|(
name|selector
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Version
argument_list|)
expr_stmt|;
try|try
block|{
name|myRepoContent
operator|.
name|deleteItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"ItemNotFoundException expected for non existing version"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ItemNotFoundException
name|e
parameter_list|)
block|{
block|}
name|selector
operator|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.test"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|withArtifactId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|withExtension
argument_list|(
literal|"jax"
argument_list|)
operator|.
name|build
argument_list|( )
expr_stmt|;
name|item
operator|=
name|myRepoContent
operator|.
name|getItem
argument_list|(
name|selector
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|instanceof
name|Artifact
argument_list|)
expr_stmt|;
try|try
block|{
name|myRepoContent
operator|.
name|deleteItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"ItemNotFoundException expected for non existing artifact"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ItemNotFoundException
name|e
parameter_list|)
block|{
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddArtifact
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
throws|,
name|LayoutException
block|{
name|ManagedRepository
name|repo
init|=
name|createManagedRepoWithContent
argument_list|(
literal|"delete-repository"
argument_list|)
decl_stmt|;
name|ManagedRepositoryContent
name|myRepoContent
init|=
name|repo
operator|.
name|getContent
argument_list|( )
decl_stmt|;
name|BaseRepositoryContentLayout
name|layout
init|=
name|myRepoContent
operator|.
name|getLayout
argument_list|(
name|BaseRepositoryContentLayout
operator|.
name|class
argument_list|)
decl_stmt|;
name|Path
name|repoRoot
init|=
name|repo
operator|.
name|getAsset
argument_list|(
literal|""
argument_list|)
operator|.
name|getFilePath
argument_list|( )
decl_stmt|;
name|Path
name|tmpFile
init|=
name|Files
operator|.
name|createTempFile
argument_list|(
literal|"archiva-mvn-repotest"
argument_list|,
literal|"jar"
argument_list|)
decl_stmt|;
try|try
init|(
name|OutputStream
name|outputStream
init|=
name|Files
operator|.
name|newOutputStream
argument_list|(
name|tmpFile
argument_list|)
init|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|255
condition|;
name|i
operator|++
control|)
block|{
name|outputStream
operator|.
name|write
argument_list|(
literal|"test.test.test\n"
operator|.
name|getBytes
argument_list|(
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|Path
name|file
init|=
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/2.0/samplejar-2.0.jar"
argument_list|)
decl_stmt|;
name|FileTime
name|lmt
init|=
name|Files
operator|.
name|getLastModifiedTime
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|ArchivaItemSelector
name|selector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"2.0"
argument_list|)
operator|.
name|withArtifactId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"2.0"
argument_list|)
operator|.
name|withExtension
argument_list|(
literal|"jar"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|Artifact
name|artifact
init|=
name|layout
operator|.
name|getArtifact
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|layout
operator|.
name|addArtifact
argument_list|(
name|tmpFile
argument_list|,
name|artifact
argument_list|)
expr_stmt|;
name|FileTime
name|lmtAfter
init|=
name|Files
operator|.
name|getLastModifiedTime
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|assertNotEquals
argument_list|(
name|lmtAfter
argument_list|,
name|lmt
argument_list|)
expr_stmt|;
name|Reader
name|ln
init|=
name|Files
operator|.
name|newBufferedReader
argument_list|(
name|file
argument_list|,
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
decl_stmt|;
name|char
index|[]
name|content
init|=
operator|new
name|char
index|[
literal|50
index|]
decl_stmt|;
name|ln
operator|.
name|read
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|String
argument_list|(
name|content
argument_list|)
operator|.
name|startsWith
argument_list|(
literal|"test.test.test"
argument_list|)
argument_list|)
expr_stmt|;
name|tmpFile
operator|=
name|Files
operator|.
name|createTempFile
argument_list|(
literal|"archiva-mvn-repotest"
argument_list|,
literal|"jar"
argument_list|)
expr_stmt|;
try|try
init|(
name|OutputStream
name|outputStream
init|=
name|Files
operator|.
name|newOutputStream
argument_list|(
name|tmpFile
argument_list|)
init|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|255
condition|;
name|i
operator|++
control|)
block|{
name|outputStream
operator|.
name|write
argument_list|(
literal|"test.test.test\n"
operator|.
name|getBytes
argument_list|(
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|file
operator|=
name|repoRoot
operator|.
name|resolve
argument_list|(
literal|"org/apache/maven/samplejar/2.0/samplejar-2.0.test"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|file
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|tmpFile
argument_list|)
argument_list|)
expr_stmt|;
name|selector
operator|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"2.0"
argument_list|)
operator|.
name|withArtifactId
argument_list|(
literal|"samplejar"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"2.0"
argument_list|)
operator|.
name|withExtension
argument_list|(
literal|"test"
argument_list|)
operator|.
name|build
argument_list|( )
expr_stmt|;
name|artifact
operator|=
name|layout
operator|.
name|getArtifact
argument_list|(
name|selector
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addArtifact
argument_list|(
name|tmpFile
argument_list|,
name|artifact
argument_list|)
expr_stmt|;
name|ln
operator|=
name|Files
operator|.
name|newBufferedReader
argument_list|(
name|file
argument_list|,
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
expr_stmt|;
name|ln
operator|.
name|read
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|String
argument_list|(
name|content
argument_list|)
operator|.
name|startsWith
argument_list|(
literal|"test.test.test"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getExistingMetadataItem
parameter_list|()
block|{
comment|// org/apache/maven/some-ejb/1.0
name|ArchivaItemSelector
name|versionSelector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"some-ejb"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|Version
name|version
init|=
name|repoContent
operator|.
name|getVersion
argument_list|(
name|versionSelector
argument_list|)
decl_stmt|;
name|DataItem
name|metaData
init|=
name|repoContent
operator|.
name|getMetadataItem
argument_list|(
name|version
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|metaData
operator|.
name|exists
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/org/apache/maven/some-ejb/1.0/maven-metadata.xml"
argument_list|,
name|metaData
operator|.
name|getAsset
argument_list|( )
operator|.
name|getPath
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getNonExistingMetadataItem
parameter_list|()
block|{
comment|// org/apache/maven/some-ejb/1.0
name|ArchivaItemSelector
name|versionSelector
init|=
name|ArchivaItemSelector
operator|.
name|builder
argument_list|( )
operator|.
name|withNamespace
argument_list|(
literal|"javax.sql"
argument_list|)
operator|.
name|withProjectId
argument_list|(
literal|"jdbc"
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"2.0"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|Version
name|version
init|=
name|repoContent
operator|.
name|getVersion
argument_list|(
name|versionSelector
argument_list|)
decl_stmt|;
name|DataItem
name|metaData
init|=
name|repoContent
operator|.
name|getMetadataItem
argument_list|(
name|version
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|metaData
operator|.
name|exists
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/javax/sql/jdbc/2.0/maven-metadata.xml"
argument_list|,
name|metaData
operator|.
name|getAsset
argument_list|( )
operator|.
name|getPath
argument_list|( )
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

