begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|scheduler
operator|.
name|indexing
operator|.
name|maven
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|ArchivaIndexManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|IndexCreationFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|EditableRemoteRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|EditableRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RemoteRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RepositoryProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RepositoryRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RepositoryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|UnsupportedURIException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|features
operator|.
name|IndexCreationFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|features
operator|.
name|RemoteIndexFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|test
operator|.
name|utils
operator|.
name|ArchivaSpringJUnit4ClassRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|index
operator|.
name|FlatSearchRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|index
operator|.
name|FlatSearchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|index
operator|.
name|Indexer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|index
operator|.
name|MAVEN
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|index
operator|.
name|context
operator|.
name|IndexingContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|index
operator|.
name|expr
operator|.
name|StringSearchExpression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|index_shaded
operator|.
name|lucene
operator|.
name|search
operator|.
name|BooleanClause
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|index_shaded
operator|.
name|lucene
operator|.
name|search
operator|.
name|BooleanQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|HttpConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|ServerConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|DefaultServlet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|ServletContextHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|ServletHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|scheduling
operator|.
name|concurrent
operator|.
name|ThreadPoolTaskScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|ArchivaSpringJUnit4ClassRunner
operator|.
name|class
argument_list|)
annotation|@
name|ContextConfiguration
argument_list|(
name|locations
operator|=
block|{
literal|"classpath*:/META-INF/spring-context.xml"
block|,
literal|"classpath*:/spring-context.xml"
block|}
argument_list|)
specifier|public
class|class
name|DownloadRemoteIndexTaskTest
block|{
specifier|private
name|Server
name|server
decl_stmt|;
specifier|private
name|ServerConnector
name|serverConnector
decl_stmt|;
specifier|private
name|int
name|port
decl_stmt|;
specifier|private
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
annotation|@
name|Inject
name|DefaultDownloadRemoteIndexScheduler
name|downloadRemoteIndexScheduler
decl_stmt|;
annotation|@
name|Inject
name|Indexer
name|indexer
decl_stmt|;
annotation|@
name|Inject
name|RepositoryRegistry
name|repositoryRegistry
decl_stmt|;
annotation|@
name|Inject
name|RepositoryProvider
name|repositoryProvider
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|initialize
parameter_list|()
throws|throws
name|Exception
block|{
name|Path
name|cfgFile
init|=
name|Paths
operator|.
name|get
argument_list|(
literal|"target/appserver-base/conf/archiva.xml"
argument_list|)
decl_stmt|;
if|if
condition|(
name|Files
operator|.
name|exists
argument_list|(
name|cfgFile
argument_list|)
condition|)
block|{
name|Files
operator|.
name|delete
argument_list|(
name|cfgFile
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|repositoryRegistry
operator|.
name|removeRepository
argument_list|(
literal|"test-repo-re"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// Ignore
block|}
name|server
operator|=
operator|new
name|Server
argument_list|( )
expr_stmt|;
name|serverConnector
operator|=
operator|new
name|ServerConnector
argument_list|(
name|server
argument_list|,
operator|new
name|HttpConnectionFactory
argument_list|()
argument_list|)
expr_stmt|;
name|server
operator|.
name|addConnector
argument_list|(
name|serverConnector
argument_list|)
expr_stmt|;
name|createContext
argument_list|(
name|server
argument_list|,
name|Paths
operator|.
name|get
argument_list|(
literal|"src/test/"
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
name|this
operator|.
name|port
operator|=
name|serverConnector
operator|.
name|getLocalPort
argument_list|()
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"start server on port {}"
argument_list|,
name|this
operator|.
name|port
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|createContext
parameter_list|(
name|Server
name|server
parameter_list|,
name|Path
name|repositoryDirectory
parameter_list|)
throws|throws
name|IOException
block|{
name|ServletContextHandler
name|context
init|=
operator|new
name|ServletContextHandler
argument_list|()
decl_stmt|;
name|context
operator|.
name|setResourceBase
argument_list|(
name|repositoryDirectory
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|setContextPath
argument_list|(
literal|"/"
argument_list|)
expr_stmt|;
name|ServletHolder
name|sh
init|=
operator|new
name|ServletHolder
argument_list|(
name|DefaultServlet
operator|.
name|class
argument_list|)
decl_stmt|;
name|context
operator|.
name|addServlet
argument_list|(
name|sh
argument_list|,
literal|"/"
argument_list|)
expr_stmt|;
name|server
operator|.
name|setHandler
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|server
operator|!=
literal|null
condition|)
block|{
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
name|Path
name|cfgFile
init|=
name|Paths
operator|.
name|get
argument_list|(
literal|"target/appserver-base/conf/archiva.xml"
argument_list|)
decl_stmt|;
if|if
condition|(
name|Files
operator|.
name|exists
argument_list|(
name|cfgFile
argument_list|)
condition|)
block|{
name|Files
operator|.
name|delete
argument_list|(
name|cfgFile
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|downloadAndMergeRemoteIndexInEmptyIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|Path
name|repoDirectory
init|=
name|Paths
operator|.
name|get
argument_list|(
name|FileUtils
operator|.
name|getBasedir
argument_list|( )
argument_list|,
literal|"target/repo-"
operator|+
name|Long
operator|.
name|toString
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|( )
argument_list|)
argument_list|)
decl_stmt|;
name|RemoteRepository
name|remoteRepository
init|=
name|getRemoteRepository
argument_list|(
name|repoDirectory
argument_list|)
decl_stmt|;
name|repositoryRegistry
operator|.
name|putRepository
argument_list|(
name|remoteRepository
argument_list|)
expr_stmt|;
name|repositoryRegistry
operator|.
name|reload
argument_list|()
expr_stmt|;
name|downloadRemoteIndexScheduler
operator|.
name|startup
argument_list|()
expr_stmt|;
name|downloadRemoteIndexScheduler
operator|.
name|scheduleDownloadRemote
argument_list|(
literal|"test-repo-re"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
operator|(
operator|(
name|ThreadPoolTaskScheduler
operator|)
name|downloadRemoteIndexScheduler
operator|.
name|getTaskScheduler
argument_list|()
operator|)
operator|.
name|getScheduledExecutor
argument_list|()
operator|.
name|awaitTermination
argument_list|(
literal|10
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
name|repositoryRegistry
operator|.
name|removeRepository
argument_list|(
literal|"test-repo-re"
argument_list|)
expr_stmt|;
comment|// search
name|BooleanQuery
operator|.
name|Builder
name|iQuery
init|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
decl_stmt|;
name|iQuery
operator|.
name|add
argument_list|(
name|indexer
operator|.
name|constructQuery
argument_list|(
name|MAVEN
operator|.
name|GROUP_ID
argument_list|,
operator|new
name|StringSearchExpression
argument_list|(
literal|"commons-logging"
argument_list|)
argument_list|)
argument_list|,
name|BooleanClause
operator|.
name|Occur
operator|.
name|SHOULD
argument_list|)
expr_stmt|;
name|remoteRepository
operator|=
name|getRemoteRepository
argument_list|(
name|repoDirectory
argument_list|)
expr_stmt|;
name|FlatSearchRequest
name|rq
init|=
operator|new
name|FlatSearchRequest
argument_list|(
name|iQuery
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|rq
operator|.
name|setContexts
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|remoteRepository
operator|.
name|getIndexingContext
argument_list|()
operator|.
name|getBaseContext
argument_list|(
name|IndexingContext
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|FlatSearchResponse
name|response
init|=
name|indexer
operator|.
name|searchFlat
argument_list|(
name|rq
argument_list|)
decl_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"returned hit count:{}"
argument_list|,
name|response
operator|.
name|getReturnedHitsCount
argument_list|()
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|response
operator|.
name|getReturnedHitsCount
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|8
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|RemoteRepository
name|getRemoteRepository
parameter_list|(
name|Path
name|repoDirectory
parameter_list|)
throws|throws
name|IOException
throws|,
name|URISyntaxException
throws|,
name|UnsupportedURIException
throws|,
name|RepositoryException
block|{
name|EditableRemoteRepository
name|remoteRepository
init|=
name|repositoryProvider
operator|.
name|createRemoteInstance
argument_list|(
literal|"test-repo-re"
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|Path
name|indexDirectory
init|=
name|repoDirectory
operator|.
name|resolve
argument_list|(
literal|"index"
argument_list|)
decl_stmt|;
name|Files
operator|.
name|createDirectories
argument_list|(
name|indexDirectory
argument_list|)
expr_stmt|;
name|remoteRepository
operator|.
name|setLocation
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://localhost:"
operator|+
name|port
argument_list|)
argument_list|)
expr_stmt|;
name|repoDirectory
operator|.
name|toFile
argument_list|()
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
name|createIndexingContext
argument_list|(
name|remoteRepository
argument_list|)
expr_stmt|;
name|RemoteIndexFeature
name|rif
init|=
name|remoteRepository
operator|.
name|getFeature
argument_list|(
name|RemoteIndexFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|rif
operator|.
name|setDownloadRemoteIndex
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|rif
operator|.
name|setIndexUri
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://localhost:"
operator|+
name|port
operator|+
literal|"/index-updates/"
argument_list|)
argument_list|)
expr_stmt|;
name|IndexCreationFeature
name|icf
init|=
name|remoteRepository
operator|.
name|getFeature
argument_list|(
name|IndexCreationFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|( )
decl_stmt|;
name|icf
operator|.
name|setLocalIndexPath
argument_list|(
name|remoteRepository
operator|.
name|getAsset
argument_list|(
literal|"index"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|remoteRepository
return|;
block|}
specifier|private
name|void
name|createIndexingContext
parameter_list|(
name|EditableRepository
name|editableRepo
parameter_list|)
throws|throws
name|RepositoryException
block|{
if|if
condition|(
name|editableRepo
operator|.
name|supportsFeature
argument_list|(
name|IndexCreationFeature
operator|.
name|class
argument_list|)
condition|)
block|{
name|ArchivaIndexManager
name|idxManager
init|=
name|getIndexManager
argument_list|(
name|editableRepo
operator|.
name|getType
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|editableRepo
operator|.
name|setIndexingContext
argument_list|(
name|idxManager
operator|.
name|createContext
argument_list|(
name|editableRepo
argument_list|)
argument_list|)
expr_stmt|;
name|idxManager
operator|.
name|updateLocalIndexPath
argument_list|(
name|editableRepo
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IndexCreationFailedException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryException
argument_list|(
literal|"Could not create index for repository "
operator|+
name|editableRepo
operator|.
name|getId
argument_list|()
operator|+
literal|": "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
specifier|public
name|ArchivaIndexManager
name|getIndexManager
parameter_list|(
name|RepositoryType
name|type
parameter_list|)
block|{
return|return
name|repositoryRegistry
operator|.
name|getIndexManager
argument_list|(
name|type
argument_list|)
return|;
block|}
block|}
end_class

end_unit

