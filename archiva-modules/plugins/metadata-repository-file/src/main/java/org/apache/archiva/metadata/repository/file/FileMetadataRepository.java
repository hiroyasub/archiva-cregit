begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|file
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ArtifactMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ProjectBuildMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ProjectMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|MetadataRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_comment
comment|/**  * @plexus.component role="org.apache.archiva.metadata.repository.MetadataRepository"  */
end_comment

begin_class
specifier|public
class|class
name|FileMetadataRepository
implements|implements
name|MetadataRepository
block|{
comment|/**      * TODO: this isn't suitable for production use      * @plexus.configuration      */
specifier|private
name|File
name|directory
init|=
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.home"
argument_list|)
argument_list|,
literal|".archiva-metadata"
argument_list|)
decl_stmt|;
specifier|public
name|void
name|updateProject
parameter_list|(
name|String
name|repoId
parameter_list|,
name|ProjectMetadata
name|project
parameter_list|)
block|{
comment|// TODO: this is a more braindead implementation than we would normally expect, for prototyping purposes
try|try
block|{
name|File
name|projectDirectory
init|=
operator|new
name|File
argument_list|(
name|this
operator|.
name|directory
argument_list|,
name|repoId
operator|+
literal|"/"
operator|+
name|project
operator|.
name|getNamespace
argument_list|()
operator|+
literal|"/"
operator|+
name|project
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"namespace"
argument_list|,
name|project
operator|.
name|getNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"id"
argument_list|,
name|project
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|writeProperties
argument_list|(
name|properties
argument_list|,
name|projectDirectory
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// TODO!
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|updateBuild
parameter_list|(
name|String
name|repoId
parameter_list|,
name|String
name|namespace
parameter_list|,
name|String
name|projectId
parameter_list|,
name|ProjectBuildMetadata
name|build
parameter_list|)
block|{
name|File
name|directory
init|=
operator|new
name|File
argument_list|(
name|this
operator|.
name|directory
argument_list|,
name|repoId
operator|+
literal|"/"
operator|+
name|namespace
operator|+
literal|"/"
operator|+
name|projectId
argument_list|)
decl_stmt|;
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"id"
argument_list|,
name|build
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|writeProperties
argument_list|(
name|properties
argument_list|,
operator|new
name|File
argument_list|(
name|directory
argument_list|,
name|build
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// TODO
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
comment|//To change body of catch statement use File | Settings | File Templates.
block|}
block|}
specifier|public
name|void
name|updateArtifact
parameter_list|(
name|String
name|repoId
parameter_list|,
name|String
name|namespace
parameter_list|,
name|String
name|projectId
parameter_list|,
name|String
name|buildId
parameter_list|,
name|ArtifactMetadata
name|artifact
parameter_list|)
block|{
name|File
name|directory
init|=
operator|new
name|File
argument_list|(
name|this
operator|.
name|directory
argument_list|,
name|repoId
operator|+
literal|"/"
operator|+
name|namespace
operator|+
literal|"/"
operator|+
name|projectId
operator|+
literal|"/"
operator|+
name|buildId
argument_list|)
decl_stmt|;
name|Properties
name|properties
init|=
name|readProperties
argument_list|(
name|directory
argument_list|)
decl_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"updated:"
operator|+
name|artifact
operator|.
name|getId
argument_list|()
argument_list|,
name|Long
operator|.
name|toString
argument_list|(
name|artifact
operator|.
name|getUpdated
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"size:"
operator|+
name|artifact
operator|.
name|getId
argument_list|()
argument_list|,
name|Long
operator|.
name|toString
argument_list|(
name|artifact
operator|.
name|getSize
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"version:"
operator|+
name|artifact
operator|.
name|getId
argument_list|()
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|writeProperties
argument_list|(
name|properties
argument_list|,
name|directory
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// TODO
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
comment|//To change body of catch statement use File | Settings | File Templates.
block|}
block|}
specifier|private
name|Properties
name|readProperties
parameter_list|(
name|File
name|directory
parameter_list|)
block|{
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|FileInputStream
name|in
init|=
literal|null
decl_stmt|;
try|try
block|{
name|in
operator|=
operator|new
name|FileInputStream
argument_list|(
operator|new
name|File
argument_list|(
name|directory
argument_list|,
literal|"metadata.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|properties
operator|.
name|load
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
comment|// skip - use blank properties
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// TODO
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
comment|//To change body of catch statement use File | Settings | File Templates.
block|}
finally|finally
block|{
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
return|return
name|properties
return|;
block|}
specifier|public
name|ProjectMetadata
name|getProject
parameter_list|(
name|String
name|repoId
parameter_list|,
name|String
name|groupId
parameter_list|,
name|String
name|projectId
parameter_list|)
block|{
name|File
name|directory
init|=
operator|new
name|File
argument_list|(
name|this
operator|.
name|directory
argument_list|,
name|repoId
operator|+
literal|"/"
operator|+
name|projectId
argument_list|)
decl_stmt|;
name|Properties
name|properties
init|=
name|readProperties
argument_list|(
name|directory
argument_list|)
decl_stmt|;
name|ProjectMetadata
name|project
init|=
operator|new
name|ProjectMetadata
argument_list|()
decl_stmt|;
name|project
operator|.
name|setNamespace
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"namespace"
argument_list|)
argument_list|)
expr_stmt|;
name|project
operator|.
name|setId
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|project
return|;
block|}
specifier|public
name|ProjectBuildMetadata
name|getProjectBuild
parameter_list|(
name|String
name|repoId
parameter_list|,
name|String
name|groupId
parameter_list|,
name|String
name|projectId
parameter_list|,
name|String
name|buildId
parameter_list|)
block|{
name|File
name|directory
init|=
operator|new
name|File
argument_list|(
name|this
operator|.
name|directory
argument_list|,
name|repoId
operator|+
literal|"/"
operator|+
name|projectId
operator|+
literal|"/"
operator|+
name|buildId
argument_list|)
decl_stmt|;
name|Properties
name|properties
init|=
name|readProperties
argument_list|(
name|directory
argument_list|)
decl_stmt|;
name|ProjectBuildMetadata
name|build
init|=
operator|new
name|ProjectBuildMetadata
argument_list|()
decl_stmt|;
name|build
operator|.
name|setId
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|build
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|String
argument_list|>
name|getArtifactVersions
parameter_list|(
name|String
name|repoId
parameter_list|,
name|String
name|namespace
parameter_list|,
name|String
name|projectId
parameter_list|,
name|String
name|buildId
parameter_list|)
block|{
name|File
name|directory
init|=
operator|new
name|File
argument_list|(
name|this
operator|.
name|directory
argument_list|,
name|repoId
operator|+
literal|"/"
operator|+
name|projectId
operator|+
literal|"/"
operator|+
name|buildId
argument_list|)
decl_stmt|;
name|Properties
name|properties
init|=
name|readProperties
argument_list|(
name|directory
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|versions
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
name|entry
range|:
name|properties
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|String
name|name
init|=
operator|(
name|String
operator|)
name|entry
operator|.
name|getKey
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|startsWith
argument_list|(
literal|"version:"
argument_list|)
condition|)
block|{
name|versions
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|versions
return|;
block|}
specifier|private
name|void
name|writeProperties
parameter_list|(
name|Properties
name|properties
parameter_list|,
name|File
name|directory
parameter_list|)
throws|throws
name|IOException
block|{
name|directory
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|FileOutputStream
name|os
init|=
operator|new
name|FileOutputStream
argument_list|(
operator|new
name|File
argument_list|(
name|directory
argument_list|,
literal|"metadata.xml"
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|properties
operator|.
name|storeToXML
argument_list|(
name|os
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|os
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

