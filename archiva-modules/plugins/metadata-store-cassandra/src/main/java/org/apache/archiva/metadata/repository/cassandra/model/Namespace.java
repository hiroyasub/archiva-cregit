begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|cassandra
operator|.
name|model
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|com
operator|.
name|netflix
operator|.
name|astyanax
operator|.
name|entitystore
operator|.
name|Serializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|cassandra
operator|.
name|CassandraUtils
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Column
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Id
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  */
end_comment

begin_class
annotation|@
name|Entity
comment|//@Table( name = "namespace", schema = "ArchivaKeySpace@archiva")
specifier|public
class|class
name|Namespace
implements|implements
name|Serializable
block|{
annotation|@
name|Id
annotation|@
name|Column
argument_list|(
name|name
operator|=
literal|"id"
argument_list|)
annotation|@
name|Serializer
argument_list|(
name|DeflateStringSerializer
operator|.
name|class
argument_list|)
specifier|private
name|String
name|id
decl_stmt|;
annotation|@
name|Column
argument_list|(
name|name
operator|=
literal|"name"
argument_list|)
annotation|@
name|Serializer
argument_list|(
name|DeflateStringSerializer
operator|.
name|class
argument_list|)
specifier|private
name|String
name|name
decl_stmt|;
annotation|@
name|Column
argument_list|(
name|name
operator|=
literal|"repository"
argument_list|)
specifier|private
name|Repository
name|repository
decl_stmt|;
comment|//@ManyToOne(cascade = { CascadeType.ALL }, fetch = FetchType.EAGER)
comment|//@JoinColumn(name = "repository_id")
comment|//private transient Repository repository;
specifier|public
name|Namespace
parameter_list|()
block|{
comment|// no op
block|}
specifier|public
name|Namespace
parameter_list|(
name|String
name|id
parameter_list|,
name|Repository
name|repository
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
operator|new
name|KeyBuilder
argument_list|()
operator|.
name|withNamespace
argument_list|(
name|id
argument_list|)
operator|.
name|withRepositoryId
argument_list|(
name|repository
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|id
expr_stmt|;
name|this
operator|.
name|repository
operator|=
name|repository
expr_stmt|;
block|}
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|Repository
name|getRepository
parameter_list|()
block|{
return|return
name|repository
return|;
block|}
specifier|public
name|void
name|setRepository
parameter_list|(
name|Repository
name|repository
parameter_list|)
block|{
name|this
operator|.
name|repository
operator|=
name|repository
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|Namespace
name|namespace
init|=
operator|(
name|Namespace
operator|)
name|o
decl_stmt|;
if|if
condition|(
operator|!
name|id
operator|.
name|equals
argument_list|(
name|namespace
operator|.
name|id
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|repository
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|namespace
operator|.
name|repository
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
name|int
name|result
init|=
name|id
operator|.
name|hashCode
argument_list|()
decl_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
name|repository
operator|.
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
specifier|final
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|(
literal|"Namespace{"
argument_list|)
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"id='"
argument_list|)
operator|.
name|append
argument_list|(
name|id
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", name='"
argument_list|)
operator|.
name|append
argument_list|(
name|name
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", repository='"
argument_list|)
operator|.
name|append
argument_list|(
name|repository
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'}'
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
specifier|static
class|class
name|KeyBuilder
block|{
specifier|private
name|String
name|namespace
decl_stmt|;
specifier|private
name|String
name|repositoryId
decl_stmt|;
specifier|public
name|KeyBuilder
parameter_list|()
block|{
block|}
specifier|public
name|KeyBuilder
name|withNamespace
parameter_list|(
name|Namespace
name|namespace
parameter_list|)
block|{
name|this
operator|.
name|namespace
operator|=
name|namespace
operator|.
name|getName
argument_list|()
expr_stmt|;
name|this
operator|.
name|repositoryId
operator|=
name|namespace
operator|.
name|getRepository
argument_list|()
operator|.
name|getId
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|KeyBuilder
name|withNamespace
parameter_list|(
name|String
name|namespace
parameter_list|)
block|{
name|this
operator|.
name|namespace
operator|=
name|namespace
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|KeyBuilder
name|withRepositoryId
parameter_list|(
name|String
name|repositoryId
parameter_list|)
block|{
name|this
operator|.
name|repositoryId
operator|=
name|repositoryId
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|String
name|build
parameter_list|()
block|{
comment|// FIXME add some controls
return|return
name|CassandraUtils
operator|.
name|generateKey
argument_list|(
name|this
operator|.
name|repositoryId
argument_list|,
name|this
operator|.
name|namespace
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

