begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|reports
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|MetadataFacet
import|;
end_import

begin_class
specifier|public
class|class
name|RepositoryProblemFacet
implements|implements
name|MetadataFacet
block|{
specifier|public
specifier|static
specifier|final
name|String
name|FACET_ID
init|=
literal|"org.apache.archiva.reports"
decl_stmt|;
specifier|private
name|String
name|repositoryId
decl_stmt|;
specifier|private
name|String
name|namespace
decl_stmt|;
specifier|private
name|String
name|project
decl_stmt|;
specifier|private
name|String
name|version
decl_stmt|;
specifier|private
name|String
name|id
decl_stmt|;
specifier|private
name|String
name|message
decl_stmt|;
specifier|private
name|String
name|problem
decl_stmt|;
specifier|public
name|String
name|getFacetId
parameter_list|()
block|{
return|return
name|FACET_ID
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|createName
argument_list|(
name|namespace
argument_list|,
name|project
argument_list|,
name|version
argument_list|,
name|id
argument_list|)
return|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|toProperties
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"repositoryId"
argument_list|,
name|repositoryId
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"namespace"
argument_list|,
name|namespace
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|project
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"version"
argument_list|,
name|version
argument_list|)
expr_stmt|;
if|if
condition|(
name|id
operator|!=
literal|null
condition|)
block|{
name|map
operator|.
name|put
argument_list|(
literal|"id"
argument_list|,
name|id
argument_list|)
expr_stmt|;
block|}
name|map
operator|.
name|put
argument_list|(
literal|"message"
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"problem"
argument_list|,
name|problem
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
specifier|public
name|void
name|fromProperties
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
parameter_list|)
block|{
name|repositoryId
operator|=
name|properties
operator|.
name|get
argument_list|(
literal|"repositoryId"
argument_list|)
expr_stmt|;
name|namespace
operator|=
name|properties
operator|.
name|get
argument_list|(
literal|"namespace"
argument_list|)
expr_stmt|;
name|project
operator|=
name|properties
operator|.
name|get
argument_list|(
literal|"project"
argument_list|)
expr_stmt|;
name|version
operator|=
name|properties
operator|.
name|get
argument_list|(
literal|"version"
argument_list|)
expr_stmt|;
name|id
operator|=
name|properties
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
expr_stmt|;
name|message
operator|=
name|properties
operator|.
name|get
argument_list|(
literal|"message"
argument_list|)
expr_stmt|;
name|problem
operator|=
name|properties
operator|.
name|get
argument_list|(
literal|"problem"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setRepositoryId
parameter_list|(
name|String
name|repositoryId
parameter_list|)
block|{
name|this
operator|.
name|repositoryId
operator|=
name|repositoryId
expr_stmt|;
block|}
specifier|public
name|void
name|setNamespace
parameter_list|(
name|String
name|namespace
parameter_list|)
block|{
name|this
operator|.
name|namespace
operator|=
name|namespace
expr_stmt|;
block|}
specifier|public
name|String
name|getRepositoryId
parameter_list|()
block|{
return|return
name|repositoryId
return|;
block|}
specifier|public
name|String
name|getNamespace
parameter_list|()
block|{
return|return
name|namespace
return|;
block|}
specifier|public
name|void
name|setProject
parameter_list|(
name|String
name|project
parameter_list|)
block|{
name|this
operator|.
name|project
operator|=
name|project
expr_stmt|;
block|}
specifier|public
name|String
name|getProject
parameter_list|()
block|{
return|return
name|project
return|;
block|}
specifier|public
name|void
name|setVersion
parameter_list|(
name|String
name|version
parameter_list|)
block|{
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
block|}
specifier|public
name|String
name|getVersion
parameter_list|()
block|{
return|return
name|version
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
specifier|public
name|void
name|setMessage
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|this
operator|.
name|message
operator|=
name|message
expr_stmt|;
block|}
specifier|public
name|String
name|getMessage
parameter_list|()
block|{
return|return
name|message
return|;
block|}
specifier|public
name|void
name|setProblem
parameter_list|(
name|String
name|problem
parameter_list|)
block|{
name|this
operator|.
name|problem
operator|=
name|problem
expr_stmt|;
block|}
specifier|public
name|String
name|getProblem
parameter_list|()
block|{
return|return
name|problem
return|;
block|}
specifier|public
specifier|static
name|String
name|createName
parameter_list|(
name|String
name|namespace
parameter_list|,
name|String
name|project
parameter_list|,
name|String
name|projectVersion
parameter_list|,
name|String
name|id
parameter_list|)
block|{
name|String
name|name
init|=
name|namespace
operator|+
literal|"/"
operator|+
name|project
operator|+
literal|"/"
operator|+
name|projectVersion
decl_stmt|;
if|if
condition|(
name|id
operator|!=
literal|null
condition|)
block|{
name|name
operator|=
name|name
operator|+
literal|"/"
operator|+
name|id
expr_stmt|;
block|}
return|return
name|name
return|;
block|}
block|}
end_class

end_unit

