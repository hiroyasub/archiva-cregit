begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|audit
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|MetadataFacet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TimeZone
import|;
end_import

begin_comment
comment|/**  * AuditEvent  *  *  */
end_comment

begin_class
specifier|public
class|class
name|AuditEvent
implements|implements
name|MetadataFacet
block|{
specifier|public
specifier|static
specifier|final
name|String
name|TIMESTAMP_FORMAT
init|=
literal|"yyyy/MM/dd/HHmmss.SSS"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CREATE_DIR
init|=
literal|"Created Directory"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CREATE_FILE
init|=
literal|"Created File"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|REMOVE_DIR
init|=
literal|"Removed Directory"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|REMOVE_FILE
init|=
literal|"Removed File"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MODIFY_FILE
init|=
literal|"Modified File"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MOVE_FILE
init|=
literal|"Moved File"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MOVE_DIRECTORY
init|=
literal|"Moved Directory"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|COPY_DIRECTORY
init|=
literal|"Copied Directory"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|COPY_FILE
init|=
literal|"Copied File"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|UPLOAD_FILE
init|=
literal|"Uploaded File"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ADD_LEGACY_PATH
init|=
literal|"Added Legacy Artifact Path"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|REMOVE_LEGACY_PATH
init|=
literal|"Removed Legacy Artifact Path"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PURGE_ARTIFACT
init|=
literal|"Purged Artifact"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PURGE_FILE
init|=
literal|"Purged Support File"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|REMOVE_SCANNED
init|=
literal|"Removed in Filesystem"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MERGING_REPOSITORIES
init|=
literal|"Merged Artifact"
decl_stmt|;
comment|// configuration events
specifier|public
specifier|static
specifier|final
name|String
name|ADD_MANAGED_REPO
init|=
literal|"Added Managed Repository"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MODIFY_MANAGED_REPO
init|=
literal|"Updated Managed Repository"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DELETE_MANAGED_REPO
init|=
literal|"Deleted Managed Repository"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ADD_REMOTE_REPO
init|=
literal|"Added Remote Repository"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MODIFY_REMOTE_REPO
init|=
literal|"Updated Remote Repository"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DELETE_REMOTE_REPO
init|=
literal|"Deleted Remote Repository"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ADD_REPO_GROUP
init|=
literal|"Added Repository Group"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DELETE_REPO_GROUP
init|=
literal|"Deleted Repository Group"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MODIFY_REPO_GROUP
init|=
literal|"Modify Repository Group"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ADD_REPO_TO_GROUP
init|=
literal|"Added Repository to Group"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DELETE_REPO_FROM_GROUP
init|=
literal|"Deleted Repository from Group"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ENABLE_REPO_CONSUMER
init|=
literal|"Enabled Content Consumer"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DISABLE_REPO_CONSUMER
init|=
literal|"Disabled Content Consumer"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ADD_PATTERN
init|=
literal|"Added File Type Pattern"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|REMOVE_PATTERN
init|=
literal|"Removed File Type Pattern"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MERGE_REPO_REMOTE
init|=
literal|"Merged Staging Repository Triggered Remotely"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ADD_PROXY_CONNECTOR
init|=
literal|"Added Proxy Connector"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DELETE_PROXY_CONNECTOR
init|=
literal|"Deleted Proxy Connector"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MODIFY_PROXY_CONNECTOR
init|=
literal|"Updated Proxy Connector"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ADD_NETWORK_PROXY
init|=
literal|"Added Network Proxy"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DELETE_NETWORK_PROXY
init|=
literal|"Deleted Network Proxy"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MODIFY_NETWORK_PROXY
init|=
literal|"Updated Network Proxy"
decl_stmt|;
specifier|private
name|String
name|repositoryId
decl_stmt|;
specifier|private
name|String
name|userId
decl_stmt|;
specifier|private
name|String
name|remoteIP
decl_stmt|;
comment|// TODO: change to artifact reference? does it ever refer to just a path?
specifier|private
name|String
name|resource
decl_stmt|;
specifier|private
name|String
name|action
decl_stmt|;
specifier|private
name|Date
name|timestamp
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|FACET_ID
init|=
literal|"org.apache.archiva.audit"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|TimeZone
name|UTC_TIME_ZONE
init|=
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"UTC"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|TS_LENGTH
init|=
name|TIMESTAMP_FORMAT
operator|.
name|length
argument_list|()
decl_stmt|;
specifier|public
name|AuditEvent
parameter_list|()
block|{
comment|/* do nothing */
block|}
specifier|public
name|AuditEvent
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|repositoryId
parameter_list|)
block|{
name|String
name|ts
init|=
name|name
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|TS_LENGTH
argument_list|)
decl_stmt|;
try|try
block|{
name|timestamp
operator|=
name|createNameFormat
argument_list|()
operator|.
name|parse
argument_list|(
name|ts
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParseException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Improperly formatted timestamp for audit log event: "
operator|+
name|ts
argument_list|,
name|e
argument_list|)
throw|;
block|}
if|if
condition|(
name|name
operator|.
name|length
argument_list|()
operator|>
name|TS_LENGTH
condition|)
block|{
if|if
condition|(
name|name
operator|.
name|charAt
argument_list|(
name|TS_LENGTH
argument_list|)
operator|!=
literal|'/'
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Improperly formatted name for audit log event, no / separator between timestamp and resource: "
operator|+
name|name
argument_list|)
throw|;
block|}
block|}
name|this
operator|.
name|repositoryId
operator|=
name|repositoryId
expr_stmt|;
block|}
specifier|public
name|AuditEvent
parameter_list|(
name|String
name|repoId
parameter_list|,
name|String
name|user
parameter_list|,
name|String
name|resource
parameter_list|,
name|String
name|action
parameter_list|)
block|{
name|this
operator|.
name|repositoryId
operator|=
name|repoId
expr_stmt|;
name|this
operator|.
name|userId
operator|=
name|user
expr_stmt|;
name|this
operator|.
name|resource
operator|=
name|resource
expr_stmt|;
name|this
operator|.
name|action
operator|=
name|action
expr_stmt|;
name|this
operator|.
name|timestamp
operator|=
name|Calendar
operator|.
name|getInstance
argument_list|()
operator|.
name|getTime
argument_list|()
expr_stmt|;
block|}
specifier|public
name|String
name|getRepositoryId
parameter_list|()
block|{
return|return
name|repositoryId
return|;
block|}
specifier|public
name|void
name|setRepositoryId
parameter_list|(
name|String
name|repositoryId
parameter_list|)
block|{
name|this
operator|.
name|repositoryId
operator|=
name|repositoryId
expr_stmt|;
block|}
specifier|public
name|String
name|getUserId
parameter_list|()
block|{
return|return
name|userId
return|;
block|}
specifier|public
name|void
name|setUserId
parameter_list|(
name|String
name|userId
parameter_list|)
block|{
name|this
operator|.
name|userId
operator|=
name|userId
expr_stmt|;
block|}
specifier|public
name|String
name|getResource
parameter_list|()
block|{
return|return
name|resource
return|;
block|}
specifier|public
name|void
name|setResource
parameter_list|(
name|String
name|resource
parameter_list|)
block|{
name|this
operator|.
name|resource
operator|=
name|resource
expr_stmt|;
block|}
specifier|public
name|String
name|getAction
parameter_list|()
block|{
return|return
name|action
return|;
block|}
specifier|public
name|void
name|setAction
parameter_list|(
name|String
name|action
parameter_list|)
block|{
name|this
operator|.
name|action
operator|=
name|action
expr_stmt|;
block|}
specifier|public
name|String
name|getRemoteIP
parameter_list|()
block|{
return|return
name|remoteIP
return|;
block|}
specifier|public
name|void
name|setRemoteIP
parameter_list|(
name|String
name|remoteIP
parameter_list|)
block|{
name|this
operator|.
name|remoteIP
operator|=
name|remoteIP
expr_stmt|;
block|}
specifier|public
name|Date
name|getTimestamp
parameter_list|()
block|{
return|return
name|timestamp
return|;
block|}
specifier|public
name|void
name|setTimestamp
parameter_list|(
name|Date
name|timestamp
parameter_list|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|timestamp
expr_stmt|;
block|}
specifier|public
name|String
name|getFacetId
parameter_list|()
block|{
return|return
name|FACET_ID
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
comment|// use the hashCode here to make it unique if multiple events occur at a certain timestamp. None of the other
comment|// fields is unique on its own
return|return
name|createNameFormat
argument_list|()
operator|.
name|format
argument_list|(
name|timestamp
argument_list|)
operator|+
literal|"/"
operator|+
name|Integer
operator|.
name|toHexString
argument_list|(
name|hashCode
argument_list|()
argument_list|)
return|;
comment|// TODO: a simple incremental counter might be better since it will retain ordering, but then we need to do a
comment|//  bit of locking...
block|}
specifier|private
specifier|static
name|SimpleDateFormat
name|createNameFormat
parameter_list|()
block|{
name|SimpleDateFormat
name|fmt
init|=
operator|new
name|SimpleDateFormat
argument_list|(
name|TIMESTAMP_FORMAT
argument_list|)
decl_stmt|;
name|fmt
operator|.
name|setTimeZone
argument_list|(
name|UTC_TIME_ZONE
argument_list|)
expr_stmt|;
return|return
name|fmt
return|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|toProperties
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"action"
argument_list|,
name|this
operator|.
name|action
argument_list|)
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|userId
operator|!=
literal|null
condition|)
block|{
name|properties
operator|.
name|put
argument_list|(
literal|"user"
argument_list|,
name|this
operator|.
name|userId
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|remoteIP
operator|!=
literal|null
condition|)
block|{
name|properties
operator|.
name|put
argument_list|(
literal|"remoteIP"
argument_list|,
name|this
operator|.
name|remoteIP
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|resource
operator|!=
literal|null
condition|)
block|{
name|properties
operator|.
name|put
argument_list|(
literal|"resource"
argument_list|,
name|this
operator|.
name|resource
argument_list|)
expr_stmt|;
block|}
return|return
name|properties
return|;
block|}
specifier|public
name|void
name|fromProperties
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
parameter_list|)
block|{
name|this
operator|.
name|action
operator|=
name|properties
operator|.
name|get
argument_list|(
literal|"action"
argument_list|)
expr_stmt|;
name|this
operator|.
name|remoteIP
operator|=
name|properties
operator|.
name|get
argument_list|(
literal|"remoteIP"
argument_list|)
expr_stmt|;
name|this
operator|.
name|userId
operator|=
name|properties
operator|.
name|get
argument_list|(
literal|"user"
argument_list|)
expr_stmt|;
name|this
operator|.
name|resource
operator|=
name|properties
operator|.
name|get
argument_list|(
literal|"resource"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|AuditEvent
name|that
init|=
operator|(
name|AuditEvent
operator|)
name|o
decl_stmt|;
if|if
condition|(
operator|!
name|action
operator|.
name|equals
argument_list|(
name|that
operator|.
name|action
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|remoteIP
operator|!=
literal|null
condition|?
operator|!
name|remoteIP
operator|.
name|equals
argument_list|(
name|that
operator|.
name|remoteIP
argument_list|)
else|:
name|that
operator|.
name|remoteIP
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|repositoryId
operator|!=
literal|null
condition|?
operator|!
name|repositoryId
operator|.
name|equals
argument_list|(
name|that
operator|.
name|repositoryId
argument_list|)
else|:
name|that
operator|.
name|repositoryId
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|resource
operator|!=
literal|null
condition|?
operator|!
name|resource
operator|.
name|equals
argument_list|(
name|that
operator|.
name|resource
argument_list|)
else|:
name|that
operator|.
name|resource
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|timestamp
operator|.
name|equals
argument_list|(
name|that
operator|.
name|timestamp
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|userId
operator|!=
literal|null
condition|?
operator|!
name|userId
operator|.
name|equals
argument_list|(
name|that
operator|.
name|userId
argument_list|)
else|:
name|that
operator|.
name|userId
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
name|int
name|result
init|=
name|repositoryId
operator|!=
literal|null
condition|?
name|repositoryId
operator|.
name|hashCode
argument_list|()
else|:
literal|0
decl_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
operator|(
name|userId
operator|!=
literal|null
condition|?
name|userId
operator|.
name|hashCode
argument_list|()
else|:
literal|0
operator|)
expr_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
operator|(
name|remoteIP
operator|!=
literal|null
condition|?
name|remoteIP
operator|.
name|hashCode
argument_list|()
else|:
literal|0
operator|)
expr_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
operator|(
name|resource
operator|!=
literal|null
condition|?
name|resource
operator|.
name|hashCode
argument_list|()
else|:
literal|0
operator|)
expr_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
name|action
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
name|timestamp
operator|.
name|hashCode
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
specifier|final
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"AuditEvent"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"{repositoryId='"
argument_list|)
operator|.
name|append
argument_list|(
name|repositoryId
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", userId='"
argument_list|)
operator|.
name|append
argument_list|(
name|userId
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", remoteIP='"
argument_list|)
operator|.
name|append
argument_list|(
name|remoteIP
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", resource='"
argument_list|)
operator|.
name|append
argument_list|(
name|resource
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", action='"
argument_list|)
operator|.
name|append
argument_list|(
name|action
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", timestamp="
argument_list|)
operator|.
name|append
argument_list|(
name|timestamp
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'}'
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

