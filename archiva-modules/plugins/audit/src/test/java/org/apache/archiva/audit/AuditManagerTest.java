begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|audit
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|model
operator|.
name|ManagedRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|facets
operator|.
name|AuditEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|MetadataRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|RepositorySession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|RepositorySessionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|test
operator|.
name|utils
operator|.
name|ArchivaBlockJUnit4ClassRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|DecimalFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TimeZone
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|ArchivaBlockJUnit4ClassRunner
operator|.
name|class
argument_list|)
specifier|public
class|class
name|AuditManagerTest
extends|extends
name|TestCase
block|{
specifier|private
name|DefaultAuditManager
name|auditManager
decl_stmt|;
specifier|private
name|MetadataRepository
name|metadataRepository
decl_stmt|;
specifier|private
name|RepositorySessionFactory
name|repositorySessionFactory
decl_stmt|;
specifier|private
name|RepositorySession
name|session
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|AUDIT_EVENT_BASE
init|=
literal|"2010/01/18/123456."
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_REPO_ID
init|=
literal|"test-repo"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_REPO_ID_2
init|=
literal|"repo2"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_USER
init|=
literal|"test_user"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_RESOURCE_BASE
init|=
literal|"test/resource"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_IP_ADDRESS
init|=
literal|"127.0.0.1"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|SimpleDateFormat
name|TIMESTAMP_FORMAT
init|=
name|createTimestampFormat
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|DecimalFormat
name|MILLIS_FORMAT
init|=
operator|new
name|DecimalFormat
argument_list|(
literal|"000"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|SimpleDateFormat
name|createTimestampFormat
parameter_list|()
block|{
name|SimpleDateFormat
name|fmt
init|=
operator|new
name|SimpleDateFormat
argument_list|(
name|AuditEvent
operator|.
name|TIMESTAMP_FORMAT
argument_list|)
decl_stmt|;
name|fmt
operator|.
name|setTimeZone
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|fmt
return|;
block|}
annotation|@
name|Override
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|auditManager
operator|=
operator|new
name|DefaultAuditManager
argument_list|()
expr_stmt|;
name|metadataRepository
operator|=
name|mock
argument_list|(
name|MetadataRepository
operator|.
name|class
argument_list|)
expr_stmt|;
name|repositorySessionFactory
operator|=
name|mock
argument_list|(
name|RepositorySessionFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|session
operator|=
name|mock
argument_list|(
name|RepositorySession
operator|.
name|class
argument_list|)
expr_stmt|;
name|auditManager
operator|.
name|setRepositorySessionFactory
argument_list|(
name|repositorySessionFactory
argument_list|)
expr_stmt|;
name|ManagedRepositoryConfiguration
name|repository
init|=
operator|new
name|ManagedRepositoryConfiguration
argument_list|()
decl_stmt|;
name|repository
operator|.
name|setId
argument_list|(
name|TEST_REPO_ID
argument_list|)
expr_stmt|;
name|repository
operator|.
name|setLocation
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetMostRecentEvents
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|numEvents
init|=
literal|11
decl_stmt|;
name|List
argument_list|<
name|AuditEvent
argument_list|>
name|expectedEvents
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|numEvents
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numEvents
condition|;
name|i
operator|++
control|)
block|{
name|AuditEvent
name|event
init|=
name|createEvent
argument_list|(
name|AUDIT_EVENT_BASE
operator|+
name|MILLIS_FORMAT
operator|.
name|format
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|expectedEvents
operator|.
name|add
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
name|when
argument_list|(
name|repositorySessionFactory
operator|.
name|createSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|getEventNames
argument_list|(
name|expectedEvents
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|AuditEvent
name|event
range|:
name|expectedEvents
operator|.
name|subList
argument_list|(
literal|1
argument_list|,
name|expectedEvents
operator|.
name|size
argument_list|()
argument_list|)
control|)
block|{
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|event
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|AuditEvent
argument_list|>
name|events
init|=
name|auditManager
operator|.
name|getMostRecentAuditEvents
argument_list|(
name|metadataRepository
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|TEST_REPO_ID
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|events
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|numEvents
operator|-
literal|1
argument_list|,
name|events
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|expectedTimestampCounter
init|=
name|numEvents
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|AuditEvent
name|event
range|:
name|events
control|)
block|{
name|String
name|num
init|=
name|MILLIS_FORMAT
operator|.
name|format
argument_list|(
name|expectedTimestampCounter
argument_list|)
decl_stmt|;
name|assertTestEvent
argument_list|(
name|event
argument_list|,
name|AUDIT_EVENT_BASE
operator|+
name|num
argument_list|,
name|getDefaultTestResourceName
argument_list|(
name|num
argument_list|)
argument_list|)
expr_stmt|;
name|expectedTimestampCounter
operator|--
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetMostRecentEventsLessThan10
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|numEvents
init|=
literal|5
decl_stmt|;
name|List
argument_list|<
name|AuditEvent
argument_list|>
name|expectedEvents
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|numEvents
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numEvents
condition|;
name|i
operator|++
control|)
block|{
name|expectedEvents
operator|.
name|add
argument_list|(
name|createEvent
argument_list|(
name|AUDIT_EVENT_BASE
operator|+
name|MILLIS_FORMAT
operator|.
name|format
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|when
argument_list|(
name|repositorySessionFactory
operator|.
name|createSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|getEventNames
argument_list|(
name|expectedEvents
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|AuditEvent
name|event
range|:
name|expectedEvents
control|)
block|{
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|event
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|AuditEvent
argument_list|>
name|events
init|=
name|auditManager
operator|.
name|getMostRecentAuditEvents
argument_list|(
name|metadataRepository
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|TEST_REPO_ID
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|events
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|numEvents
argument_list|,
name|events
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|expectedTimestampCounter
init|=
name|numEvents
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|AuditEvent
name|event
range|:
name|events
control|)
block|{
name|String
name|num
init|=
name|MILLIS_FORMAT
operator|.
name|format
argument_list|(
name|expectedTimestampCounter
argument_list|)
decl_stmt|;
name|assertTestEvent
argument_list|(
name|event
argument_list|,
name|AUDIT_EVENT_BASE
operator|+
name|num
argument_list|,
name|getDefaultTestResourceName
argument_list|(
name|num
argument_list|)
argument_list|)
expr_stmt|;
name|expectedTimestampCounter
operator|--
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetMostRecentEventsInterleavedRepositories
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|numEvents
init|=
literal|11
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|eventNames
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|( )
decl_stmt|;
name|List
argument_list|<
name|AuditEvent
argument_list|>
name|events
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|eventNames
operator|.
name|put
argument_list|(
name|TEST_REPO_ID
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|( )
argument_list|)
expr_stmt|;
name|eventNames
operator|.
name|put
argument_list|(
name|TEST_REPO_ID_2
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|( )
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numEvents
condition|;
name|i
operator|++
control|)
block|{
name|String
name|repositoryId
init|=
name|i
operator|%
literal|2
operator|==
literal|0
condition|?
name|TEST_REPO_ID
else|:
name|TEST_REPO_ID_2
decl_stmt|;
name|String
name|num
init|=
name|MILLIS_FORMAT
operator|.
name|format
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|AuditEvent
name|event
init|=
name|createEvent
argument_list|(
name|repositoryId
argument_list|,
name|AUDIT_EVENT_BASE
operator|+
name|num
argument_list|,
name|getDefaultTestResourceName
argument_list|(
name|num
argument_list|)
argument_list|)
decl_stmt|;
name|events
operator|.
name|add
argument_list|(
name|event
argument_list|)
expr_stmt|;
name|eventNames
operator|.
name|get
argument_list|(
name|repositoryId
argument_list|)
operator|.
name|add
argument_list|(
name|event
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|when
argument_list|(
name|repositorySessionFactory
operator|.
name|createSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|eventNames
operator|.
name|get
argument_list|(
name|TEST_REPO_ID
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID_2
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|eventNames
operator|.
name|get
argument_list|(
name|TEST_REPO_ID_2
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|AuditEvent
name|event
range|:
name|events
operator|.
name|subList
argument_list|(
literal|1
argument_list|,
name|events
operator|.
name|size
argument_list|()
argument_list|)
control|)
block|{
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|event
operator|.
name|getRepositoryId
argument_list|()
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|event
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
name|events
operator|=
name|auditManager
operator|.
name|getMostRecentAuditEvents
argument_list|(
name|metadataRepository
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|TEST_REPO_ID_2
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|events
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|numEvents
operator|-
literal|1
argument_list|,
name|events
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|expectedTimestampCounter
init|=
name|numEvents
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|AuditEvent
name|event
range|:
name|events
control|)
block|{
name|String
name|num
init|=
name|MILLIS_FORMAT
operator|.
name|format
argument_list|(
name|expectedTimestampCounter
argument_list|)
decl_stmt|;
name|String
name|expectedRepoId
init|=
name|expectedTimestampCounter
operator|%
literal|2
operator|==
literal|0
condition|?
name|TEST_REPO_ID
else|:
name|TEST_REPO_ID_2
decl_stmt|;
name|assertTestEvent
argument_list|(
name|event
argument_list|,
name|expectedRepoId
argument_list|,
name|AUDIT_EVENT_BASE
operator|+
name|num
argument_list|,
name|getDefaultTestResourceName
argument_list|(
name|num
argument_list|)
argument_list|)
expr_stmt|;
name|expectedTimestampCounter
operator|--
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetMostRecentEventsWhenEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|repositorySessionFactory
operator|.
name|createSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|auditManager
operator|.
name|getMostRecentAuditEvents
argument_list|(
name|metadataRepository
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|TEST_REPO_ID
argument_list|)
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddAuditEvent
parameter_list|()
throws|throws
name|Exception
block|{
name|AuditEvent
name|event
init|=
name|createEvent
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|repositorySessionFactory
operator|.
name|createSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|metadataRepository
operator|.
name|addMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|event
argument_list|)
expr_stmt|;
name|auditManager
operator|.
name|addAuditEvent
argument_list|(
name|metadataRepository
argument_list|,
name|event
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddAuditEventNoRepositoryId
parameter_list|()
throws|throws
name|Exception
block|{
name|AuditEvent
name|event
init|=
name|createEvent
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|setRepositoryId
argument_list|(
literal|null
argument_list|)
expr_stmt|;
comment|// should just be ignored
name|auditManager
operator|.
name|addAuditEvent
argument_list|(
name|metadataRepository
argument_list|,
name|event
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteStats
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|repositorySessionFactory
operator|.
name|createSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|metadataRepository
operator|.
name|removeMetadataFacets
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|)
expr_stmt|;
name|auditManager
operator|.
name|deleteAuditEvents
argument_list|(
name|metadataRepository
argument_list|,
name|TEST_REPO_ID
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetEventsRangeInside
parameter_list|()
throws|throws
name|Exception
block|{
name|Date
name|current
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|AuditEvent
name|event1
init|=
name|createEvent
argument_list|(
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|12345
argument_list|)
argument_list|)
decl_stmt|;
name|Date
name|expectedTimestamp
init|=
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|3000
argument_list|)
decl_stmt|;
name|AuditEvent
name|expectedEvent
init|=
name|createEvent
argument_list|(
name|expectedTimestamp
argument_list|)
decl_stmt|;
name|AuditEvent
name|event3
init|=
name|createEvent
argument_list|(
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|1000
argument_list|)
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|repositorySessionFactory
operator|.
name|createSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|event1
operator|.
name|getName
argument_list|()
argument_list|,
name|expectedEvent
operator|.
name|getName
argument_list|()
argument_list|,
name|event3
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// only match the middle one
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|expectedEvent
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expectedEvent
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AuditEvent
argument_list|>
name|events
init|=
name|auditManager
operator|.
name|getAuditEventsInRange
argument_list|(
name|metadataRepository
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|TEST_REPO_ID
argument_list|)
argument_list|,
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|4000
argument_list|)
argument_list|,
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|2000
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|events
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTestEvent
argument_list|(
name|events
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|TIMESTAMP_FORMAT
operator|.
name|format
argument_list|(
name|expectedTimestamp
argument_list|)
argument_list|,
name|expectedEvent
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetEventsRangeUpperOutside
parameter_list|()
throws|throws
name|Exception
block|{
name|Date
name|current
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|AuditEvent
name|event1
init|=
name|createEvent
argument_list|(
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|12345
argument_list|)
argument_list|)
decl_stmt|;
name|Date
name|expectedTimestamp
init|=
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|3000
argument_list|)
decl_stmt|;
name|AuditEvent
name|expectedEvent2
init|=
name|createEvent
argument_list|(
name|expectedTimestamp
argument_list|)
decl_stmt|;
name|Date
name|ts3
init|=
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|1000
argument_list|)
decl_stmt|;
name|AuditEvent
name|expectedEvent3
init|=
name|createEvent
argument_list|(
name|ts3
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|repositorySessionFactory
operator|.
name|createSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|event1
operator|.
name|getName
argument_list|()
argument_list|,
name|expectedEvent2
operator|.
name|getName
argument_list|()
argument_list|,
name|expectedEvent3
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|expectedEvent2
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expectedEvent2
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|expectedEvent3
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expectedEvent3
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AuditEvent
argument_list|>
name|events
init|=
name|auditManager
operator|.
name|getAuditEventsInRange
argument_list|(
name|metadataRepository
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|TEST_REPO_ID
argument_list|)
argument_list|,
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|4000
argument_list|)
argument_list|,
name|current
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|events
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTestEvent
argument_list|(
name|events
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|TIMESTAMP_FORMAT
operator|.
name|format
argument_list|(
name|ts3
argument_list|)
argument_list|,
name|expectedEvent3
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertTestEvent
argument_list|(
name|events
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TIMESTAMP_FORMAT
operator|.
name|format
argument_list|(
name|expectedTimestamp
argument_list|)
argument_list|,
name|expectedEvent2
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetEventsRangeLowerOutside
parameter_list|()
throws|throws
name|Exception
block|{
name|Date
name|current
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|Date
name|ts1
init|=
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|12345
argument_list|)
decl_stmt|;
name|AuditEvent
name|expectedEvent1
init|=
name|createEvent
argument_list|(
name|ts1
argument_list|)
decl_stmt|;
name|Date
name|expectedTimestamp
init|=
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|3000
argument_list|)
decl_stmt|;
name|AuditEvent
name|expectedEvent2
init|=
name|createEvent
argument_list|(
name|expectedTimestamp
argument_list|)
decl_stmt|;
name|AuditEvent
name|event3
init|=
name|createEvent
argument_list|(
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|1000
argument_list|)
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|repositorySessionFactory
operator|.
name|createSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|expectedEvent1
operator|.
name|getName
argument_list|()
argument_list|,
name|expectedEvent2
operator|.
name|getName
argument_list|()
argument_list|,
name|event3
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|expectedEvent1
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expectedEvent1
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|expectedEvent2
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expectedEvent2
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AuditEvent
argument_list|>
name|events
init|=
name|auditManager
operator|.
name|getAuditEventsInRange
argument_list|(
name|metadataRepository
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|TEST_REPO_ID
argument_list|)
argument_list|,
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|20000
argument_list|)
argument_list|,
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|2000
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|events
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTestEvent
argument_list|(
name|events
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|TIMESTAMP_FORMAT
operator|.
name|format
argument_list|(
name|expectedTimestamp
argument_list|)
argument_list|,
name|expectedEvent2
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertTestEvent
argument_list|(
name|events
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TIMESTAMP_FORMAT
operator|.
name|format
argument_list|(
name|ts1
argument_list|)
argument_list|,
name|expectedEvent1
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetEventsRangeLowerAndUpperOutside
parameter_list|()
throws|throws
name|Exception
block|{
name|Date
name|current
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|Date
name|ts1
init|=
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|12345
argument_list|)
decl_stmt|;
name|AuditEvent
name|expectedEvent1
init|=
name|createEvent
argument_list|(
name|ts1
argument_list|)
decl_stmt|;
name|Date
name|expectedTimestamp
init|=
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|3000
argument_list|)
decl_stmt|;
name|AuditEvent
name|expectedEvent2
init|=
name|createEvent
argument_list|(
name|expectedTimestamp
argument_list|)
decl_stmt|;
name|Date
name|ts3
init|=
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|1000
argument_list|)
decl_stmt|;
name|AuditEvent
name|expectedEvent3
init|=
name|createEvent
argument_list|(
name|ts3
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|repositorySessionFactory
operator|.
name|createSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|expectedEvent1
operator|.
name|getName
argument_list|()
argument_list|,
name|expectedEvent2
operator|.
name|getName
argument_list|()
argument_list|,
name|expectedEvent3
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|expectedEvent1
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expectedEvent1
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|expectedEvent2
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expectedEvent2
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|expectedEvent3
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expectedEvent3
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AuditEvent
argument_list|>
name|events
init|=
name|auditManager
operator|.
name|getAuditEventsInRange
argument_list|(
name|metadataRepository
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|TEST_REPO_ID
argument_list|)
argument_list|,
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|20000
argument_list|)
argument_list|,
name|current
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|events
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTestEvent
argument_list|(
name|events
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|TIMESTAMP_FORMAT
operator|.
name|format
argument_list|(
name|ts3
argument_list|)
argument_list|,
name|expectedEvent3
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertTestEvent
argument_list|(
name|events
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TIMESTAMP_FORMAT
operator|.
name|format
argument_list|(
name|expectedTimestamp
argument_list|)
argument_list|,
name|expectedEvent2
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertTestEvent
argument_list|(
name|events
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TIMESTAMP_FORMAT
operator|.
name|format
argument_list|(
name|ts1
argument_list|)
argument_list|,
name|expectedEvent1
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetEventsWithResource
parameter_list|()
throws|throws
name|Exception
block|{
name|Date
name|current
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|Date
name|ts1
init|=
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|12345
argument_list|)
decl_stmt|;
name|AuditEvent
name|expectedEvent1
init|=
name|createEvent
argument_list|(
name|ts1
argument_list|)
decl_stmt|;
name|Date
name|expectedTimestamp
init|=
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|3000
argument_list|)
decl_stmt|;
name|AuditEvent
name|expectedEvent2
init|=
name|createEvent
argument_list|(
name|expectedTimestamp
argument_list|)
decl_stmt|;
name|expectedEvent2
operator|.
name|setResource
argument_list|(
literal|"different-resource"
argument_list|)
expr_stmt|;
name|Date
name|ts3
init|=
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|1000
argument_list|)
decl_stmt|;
name|AuditEvent
name|expectedEvent3
init|=
name|createEvent
argument_list|(
name|ts3
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|repositorySessionFactory
operator|.
name|createSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|expectedEvent1
operator|.
name|getName
argument_list|()
argument_list|,
name|expectedEvent2
operator|.
name|getName
argument_list|()
argument_list|,
name|expectedEvent3
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|expectedEvent1
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expectedEvent1
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|expectedEvent2
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expectedEvent2
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|expectedEvent3
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expectedEvent3
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AuditEvent
argument_list|>
name|events
init|=
name|auditManager
operator|.
name|getAuditEventsInRange
argument_list|(
name|metadataRepository
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|TEST_REPO_ID
argument_list|)
argument_list|,
name|TEST_RESOURCE_BASE
argument_list|,
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|20000
argument_list|)
argument_list|,
name|current
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|events
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTestEvent
argument_list|(
name|events
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|TIMESTAMP_FORMAT
operator|.
name|format
argument_list|(
name|ts3
argument_list|)
argument_list|,
name|expectedEvent3
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertTestEvent
argument_list|(
name|events
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TIMESTAMP_FORMAT
operator|.
name|format
argument_list|(
name|ts1
argument_list|)
argument_list|,
name|expectedEvent1
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetEventsWithNonExistantResource
parameter_list|()
throws|throws
name|Exception
block|{
name|Date
name|current
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|AuditEvent
name|expectedEvent1
init|=
name|createEvent
argument_list|(
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|12345
argument_list|)
argument_list|)
decl_stmt|;
name|Date
name|expectedTimestamp
init|=
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|3000
argument_list|)
decl_stmt|;
name|AuditEvent
name|expectedEvent2
init|=
name|createEvent
argument_list|(
name|expectedTimestamp
argument_list|)
decl_stmt|;
name|expectedEvent2
operator|.
name|setResource
argument_list|(
literal|"different-resource"
argument_list|)
expr_stmt|;
name|AuditEvent
name|expectedEvent3
init|=
name|createEvent
argument_list|(
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|1000
argument_list|)
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|repositorySessionFactory
operator|.
name|createSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|expectedEvent1
operator|.
name|getName
argument_list|()
argument_list|,
name|expectedEvent2
operator|.
name|getName
argument_list|()
argument_list|,
name|expectedEvent3
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|expectedEvent1
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expectedEvent1
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|expectedEvent2
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expectedEvent2
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|expectedEvent3
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expectedEvent3
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AuditEvent
argument_list|>
name|events
init|=
name|auditManager
operator|.
name|getAuditEventsInRange
argument_list|(
name|metadataRepository
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|TEST_REPO_ID
argument_list|)
argument_list|,
literal|"foo"
argument_list|,
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|20000
argument_list|)
argument_list|,
name|current
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|events
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetEventsRangeMultipleRepositories
parameter_list|()
throws|throws
name|Exception
block|{
name|Date
name|current
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|Date
name|ts1
init|=
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|12345
argument_list|)
decl_stmt|;
name|AuditEvent
name|expectedEvent1
init|=
name|createEvent
argument_list|(
name|ts1
argument_list|)
decl_stmt|;
name|Date
name|expectedTimestamp
init|=
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|3000
argument_list|)
decl_stmt|;
name|AuditEvent
name|expectedEvent2
init|=
name|createEvent
argument_list|(
name|expectedTimestamp
argument_list|)
decl_stmt|;
name|expectedEvent2
operator|.
name|setRepositoryId
argument_list|(
name|TEST_REPO_ID_2
argument_list|)
expr_stmt|;
name|Date
name|ts3
init|=
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|1000
argument_list|)
decl_stmt|;
name|AuditEvent
name|expectedEvent3
init|=
name|createEvent
argument_list|(
name|ts3
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|repositorySessionFactory
operator|.
name|createSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|expectedEvent1
operator|.
name|getName
argument_list|()
argument_list|,
name|expectedEvent3
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID_2
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|expectedEvent2
operator|.
name|getName
argument_list|( )
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|expectedEvent1
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expectedEvent1
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID_2
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|expectedEvent2
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expectedEvent2
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|,
name|expectedEvent3
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expectedEvent3
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AuditEvent
argument_list|>
name|events
init|=
name|auditManager
operator|.
name|getAuditEventsInRange
argument_list|(
name|metadataRepository
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|TEST_REPO_ID_2
argument_list|)
argument_list|,
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|20000
argument_list|)
argument_list|,
name|current
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|events
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTestEvent
argument_list|(
name|events
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|TIMESTAMP_FORMAT
operator|.
name|format
argument_list|(
name|ts3
argument_list|)
argument_list|,
name|expectedEvent3
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertTestEvent
argument_list|(
name|events
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TEST_REPO_ID_2
argument_list|,
name|TIMESTAMP_FORMAT
operator|.
name|format
argument_list|(
name|expectedTimestamp
argument_list|)
argument_list|,
name|expectedEvent2
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertTestEvent
argument_list|(
name|events
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|TIMESTAMP_FORMAT
operator|.
name|format
argument_list|(
name|ts1
argument_list|)
argument_list|,
name|expectedEvent1
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetEventsRangeNotInside
parameter_list|()
throws|throws
name|Exception
block|{
name|Date
name|current
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|String
name|name1
init|=
name|createEvent
argument_list|(
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|12345
argument_list|)
argument_list|)
operator|.
name|getName
argument_list|()
decl_stmt|;
name|Date
name|expectedTimestamp
init|=
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|3000
argument_list|)
decl_stmt|;
name|String
name|name2
init|=
name|createEvent
argument_list|(
name|expectedTimestamp
argument_list|)
operator|.
name|getName
argument_list|()
decl_stmt|;
name|String
name|name3
init|=
name|createEvent
argument_list|(
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|1000
argument_list|)
argument_list|)
operator|.
name|getName
argument_list|()
decl_stmt|;
name|when
argument_list|(
name|repositorySessionFactory
operator|.
name|createSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|session
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|AuditEvent
operator|.
name|FACET_ID
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|name1
argument_list|,
name|name2
argument_list|,
name|name3
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AuditEvent
argument_list|>
name|events
init|=
name|auditManager
operator|.
name|getAuditEventsInRange
argument_list|(
name|metadataRepository
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|TEST_REPO_ID
argument_list|)
argument_list|,
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|20000
argument_list|)
argument_list|,
operator|new
name|Date
argument_list|(
name|current
operator|.
name|getTime
argument_list|()
operator|-
literal|16000
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|events
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|String
name|getDefaultTestResourceName
parameter_list|(
name|String
name|num
parameter_list|)
block|{
return|return
name|TEST_RESOURCE_BASE
operator|+
literal|"/"
operator|+
name|num
operator|+
literal|".xml"
return|;
block|}
specifier|private
specifier|static
name|AuditEvent
name|createEvent
parameter_list|(
name|Date
name|timestamp
parameter_list|)
throws|throws
name|ParseException
block|{
return|return
name|createEvent
argument_list|(
name|TIMESTAMP_FORMAT
operator|.
name|format
argument_list|(
name|timestamp
argument_list|)
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|AuditEvent
name|createEvent
parameter_list|(
name|String
name|ts
parameter_list|)
throws|throws
name|ParseException
block|{
return|return
name|createEvent
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|ts
argument_list|,
name|getDefaultTestResourceName
argument_list|(
name|ts
operator|.
name|substring
argument_list|(
name|AUDIT_EVENT_BASE
operator|.
name|length
argument_list|()
argument_list|,
name|AUDIT_EVENT_BASE
operator|.
name|length
argument_list|()
operator|+
literal|3
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|AuditEvent
name|createEvent
parameter_list|(
name|String
name|repositoryId
parameter_list|,
name|String
name|timestamp
parameter_list|,
name|String
name|resource
parameter_list|)
throws|throws
name|ParseException
block|{
name|AuditEvent
name|event
init|=
operator|new
name|AuditEvent
argument_list|()
decl_stmt|;
name|event
operator|.
name|setTimestamp
argument_list|(
name|TIMESTAMP_FORMAT
operator|.
name|parse
argument_list|(
name|timestamp
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|setAction
argument_list|(
name|AuditEvent
operator|.
name|UPLOAD_FILE
argument_list|)
expr_stmt|;
name|event
operator|.
name|setRemoteIP
argument_list|(
name|TEST_IP_ADDRESS
argument_list|)
expr_stmt|;
name|event
operator|.
name|setRepositoryId
argument_list|(
name|repositoryId
argument_list|)
expr_stmt|;
name|event
operator|.
name|setUserId
argument_list|(
name|TEST_USER
argument_list|)
expr_stmt|;
name|event
operator|.
name|setResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
return|return
name|event
return|;
block|}
specifier|private
specifier|static
name|void
name|assertTestEvent
parameter_list|(
name|AuditEvent
name|event
parameter_list|,
name|String
name|timestamp
parameter_list|,
name|String
name|resource
parameter_list|)
block|{
name|assertTestEvent
argument_list|(
name|event
argument_list|,
name|TEST_REPO_ID
argument_list|,
name|timestamp
argument_list|,
name|resource
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|assertTestEvent
parameter_list|(
name|AuditEvent
name|event
parameter_list|,
name|String
name|repositoryId
parameter_list|,
name|String
name|timestamp
parameter_list|,
name|String
name|resource
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|timestamp
argument_list|,
name|TIMESTAMP_FORMAT
operator|.
name|format
argument_list|(
name|event
operator|.
name|getTimestamp
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|UPLOAD_FILE
argument_list|,
name|event
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_IP_ADDRESS
argument_list|,
name|event
operator|.
name|getRemoteIP
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|repositoryId
argument_list|,
name|event
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_USER
argument_list|,
name|event
operator|.
name|getUserId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|resource
argument_list|,
name|event
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|getEventNames
parameter_list|(
name|List
argument_list|<
name|AuditEvent
argument_list|>
name|events
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|names
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|events
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|AuditEvent
name|event
range|:
name|events
control|)
block|{
name|names
operator|.
name|add
argument_list|(
name|event
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|names
return|;
block|}
block|}
end_class

end_unit

