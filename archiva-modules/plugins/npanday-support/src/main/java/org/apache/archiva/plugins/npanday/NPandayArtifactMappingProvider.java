begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|plugins
operator|.
name|npanday
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|storage
operator|.
name|maven2
operator|.
name|ArtifactMappingProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"artifactMappingProvider#npanday"
argument_list|)
specifier|public
class|class
name|NPandayArtifactMappingProvider
implements|implements
name|ArtifactMappingProvider
block|{
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|extensionToTypeMap
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|typeToExtensionMap
decl_stmt|;
specifier|public
name|NPandayArtifactMappingProvider
parameter_list|()
block|{
name|extensionToTypeMap
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
comment|// TODO: this could be one of many - we need to look up the artifact metadata from the POM instead
comment|//       should do this anyway so that plugins don't compete for providing an extension
name|extensionToTypeMap
operator|.
name|put
argument_list|(
literal|"dll"
argument_list|,
literal|"dotnet-library"
argument_list|)
expr_stmt|;
name|extensionToTypeMap
operator|.
name|put
argument_list|(
literal|"netmodule"
argument_list|,
literal|"dotnet-module"
argument_list|)
expr_stmt|;
name|extensionToTypeMap
operator|.
name|put
argument_list|(
literal|"exe"
argument_list|,
literal|"dotnet-executable"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"dotnet-library"
argument_list|,
literal|"dll"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"dotnet-library-config"
argument_list|,
literal|"dll.config"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"dotnet-executable"
argument_list|,
literal|"exe"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"dotnet-executable-config"
argument_list|,
literal|"exe.config"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"dotnet-module"
argument_list|,
literal|"netmodule"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"dotnet-maven-plugin"
argument_list|,
literal|"dll"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"asp"
argument_list|,
literal|"dll"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"visual-studio-addin"
argument_list|,
literal|"dll"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"sharp-develop-addin"
argument_list|,
literal|"dll"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"nar"
argument_list|,
literal|"nar"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"dotnet-symbols"
argument_list|,
literal|"pdb"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"ole-type-library"
argument_list|,
literal|"tlb"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"dotnet-vsdocs"
argument_list|,
literal|"xml"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"dotnet-archive"
argument_list|,
literal|"zip"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"dotnet-gac"
argument_list|,
literal|"dll"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"gac"
argument_list|,
literal|"dll"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"gac_msil"
argument_list|,
literal|"dll"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"gac_msil4"
argument_list|,
literal|"dll"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"gac_32"
argument_list|,
literal|"dll"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"gac_32_4"
argument_list|,
literal|"dll"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"gac_64"
argument_list|,
literal|"dll"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"gac_64_4"
argument_list|,
literal|"dll"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"com_reference"
argument_list|,
literal|"dll"
argument_list|)
expr_stmt|;
comment|// Legacy types
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"library"
argument_list|,
literal|"dll"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"gac_generic"
argument_list|,
literal|"dll"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"netplugin"
argument_list|,
literal|"dll"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"module"
argument_list|,
literal|"netmodule"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"exe.config"
argument_list|,
literal|"exe.config"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"winexe"
argument_list|,
literal|"exe"
argument_list|)
expr_stmt|;
name|typeToExtensionMap
operator|.
name|put
argument_list|(
literal|"exe"
argument_list|,
literal|"exe"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|mapClassifierAndExtensionToType
parameter_list|(
name|String
name|classifier
parameter_list|,
name|String
name|ext
parameter_list|)
block|{
comment|// we don't need classifier
return|return
name|extensionToTypeMap
operator|.
name|get
argument_list|(
name|ext
argument_list|)
return|;
block|}
specifier|public
name|String
name|mapTypeToExtension
parameter_list|(
name|String
name|type
parameter_list|)
block|{
return|return
name|typeToExtensionMap
operator|.
name|get
argument_list|(
name|type
argument_list|)
return|;
block|}
block|}
end_class

end_unit

