begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|maven2
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|AbstractRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ManagedRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|RemoteRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|EditableRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ManagedRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|PasswordCredentials
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ReleaseScheme
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RemoteRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RepositoryProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RepositoryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|features
operator|.
name|ArtifactCleanupFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|features
operator|.
name|IndexCreationFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|features
operator|.
name|RemoteIndexFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|features
operator|.
name|StagingRepositoryFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|Duration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|Period
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * Provider for the maven2 repository implementations  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"mavenRepositoryProvider"
argument_list|)
specifier|public
class|class
name|MavenRepositoryProvider
implements|implements
name|RepositoryProvider
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MavenRepositoryProvider
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|Set
argument_list|<
name|RepositoryType
argument_list|>
name|TYPES
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|(  )
decl_stmt|;
static|static
block|{
name|TYPES
operator|.
name|add
argument_list|(
name|RepositoryType
operator|.
name|MAVEN
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|RepositoryType
argument_list|>
name|provides
parameter_list|( )
block|{
return|return
name|TYPES
return|;
block|}
annotation|@
name|Override
specifier|public
name|ManagedRepository
name|createManagedInstance
parameter_list|(
name|ManagedRepositoryConfiguration
name|cfg
parameter_list|)
block|{
name|MavenManagedRepository
name|repo
init|=
operator|new
name|MavenManagedRepository
argument_list|(
name|cfg
operator|.
name|getId
argument_list|()
argument_list|,
name|cfg
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
if|if
condition|(
name|cfg
operator|.
name|getLocation
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"file:"
argument_list|)
condition|)
block|{
name|repo
operator|.
name|setLocation
argument_list|(
operator|new
name|URI
argument_list|(
name|cfg
operator|.
name|getLocation
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|repo
operator|.
name|setLocation
argument_list|(
operator|new
name|URI
argument_list|(
literal|"file://"
operator|+
name|cfg
operator|.
name|getLocation
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Could not set repository uri "
operator|+
name|cfg
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|setBaseConfig
argument_list|(
name|repo
argument_list|,
name|cfg
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setSchedulingDefinition
argument_list|(
name|cfg
operator|.
name|getRefreshCronExpression
argument_list|()
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setBlocksRedeployment
argument_list|(
name|cfg
operator|.
name|isBlockRedeployments
argument_list|()
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setScanned
argument_list|(
name|cfg
operator|.
name|isScanned
argument_list|()
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|ReleaseScheme
argument_list|>
name|schemes
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|(  )
decl_stmt|;
if|if
condition|(
name|cfg
operator|.
name|isReleases
argument_list|()
condition|)
block|{
name|repo
operator|.
name|addActiveReleaseScheme
argument_list|(
name|ReleaseScheme
operator|.
name|RELEASE
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|cfg
operator|.
name|isSnapshots
argument_list|()
condition|)
block|{
name|repo
operator|.
name|addActiveReleaseScheme
argument_list|(
name|ReleaseScheme
operator|.
name|SNAPSHOT
argument_list|)
expr_stmt|;
block|}
name|StagingRepositoryFeature
name|stagingRepositoryFeature
init|=
name|repo
operator|.
name|getFeature
argument_list|(
name|StagingRepositoryFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|stagingRepositoryFeature
operator|.
name|setStageRepoNeeded
argument_list|(
name|cfg
operator|.
name|isStageRepoNeeded
argument_list|()
argument_list|)
expr_stmt|;
comment|// TODO: staging repository  -> here or in repositoryregistry?
name|IndexCreationFeature
name|indexCreationFeature
init|=
name|repo
operator|.
name|getFeature
argument_list|(
name|IndexCreationFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|( )
decl_stmt|;
name|indexCreationFeature
operator|.
name|setSkipPackedIndexCreation
argument_list|(
name|cfg
operator|.
name|isSkipPackedIndexCreation
argument_list|()
argument_list|)
expr_stmt|;
name|ArtifactCleanupFeature
name|artifactCleanupFeature
init|=
name|repo
operator|.
name|getFeature
argument_list|(
name|ArtifactCleanupFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|artifactCleanupFeature
operator|.
name|setDeleteReleasedSnapshots
argument_list|(
name|cfg
operator|.
name|isDeleteReleasedSnapshots
argument_list|()
argument_list|)
expr_stmt|;
name|artifactCleanupFeature
operator|.
name|setRetentionCount
argument_list|(
name|cfg
operator|.
name|getRetentionCount
argument_list|()
argument_list|)
expr_stmt|;
name|artifactCleanupFeature
operator|.
name|setRetentionTime
argument_list|(
name|Period
operator|.
name|ofDays
argument_list|(
name|cfg
operator|.
name|getRetentionTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|repo
return|;
block|}
annotation|@
name|Override
specifier|public
name|RemoteRepository
name|createRemoteInstance
parameter_list|(
name|RemoteRepositoryConfiguration
name|cfg
parameter_list|)
block|{
name|MavenRemoteRepository
name|repo
init|=
operator|new
name|MavenRemoteRepository
argument_list|(
name|cfg
operator|.
name|getId
argument_list|( )
argument_list|,
name|cfg
operator|.
name|getName
argument_list|( )
argument_list|)
decl_stmt|;
name|setBaseConfig
argument_list|(
name|repo
argument_list|,
name|cfg
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setCheckPath
argument_list|(
name|cfg
operator|.
name|getCheckPath
argument_list|()
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setSchedulingDefinition
argument_list|(
name|cfg
operator|.
name|getRefreshCronExpression
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|repo
operator|.
name|setLocation
argument_list|(
operator|new
name|URI
argument_list|(
name|cfg
operator|.
name|getUrl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Could not set remote url "
operator|+
name|cfg
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|RemoteIndexFeature
name|remoteIndexFeature
init|=
name|repo
operator|.
name|getFeature
argument_list|(
name|RemoteIndexFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|remoteIndexFeature
operator|.
name|setDownloadRemoteIndex
argument_list|(
name|cfg
operator|.
name|isDownloadRemoteIndex
argument_list|()
argument_list|)
expr_stmt|;
name|remoteIndexFeature
operator|.
name|setDownloadRemoteIndexOnStartup
argument_list|(
name|cfg
operator|.
name|isDownloadRemoteIndexOnStartup
argument_list|()
argument_list|)
expr_stmt|;
name|remoteIndexFeature
operator|.
name|setDownloadTimeout
argument_list|(
name|Duration
operator|.
name|ofSeconds
argument_list|(
name|cfg
operator|.
name|getRemoteDownloadTimeout
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|remoteIndexFeature
operator|.
name|setProxyId
argument_list|(
name|cfg
operator|.
name|getRemoteDownloadNetworkProxyId
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|cfg
operator|.
name|isDownloadRemoteIndex
argument_list|()
condition|)
block|{
try|try
block|{
name|remoteIndexFeature
operator|.
name|setIndexUri
argument_list|(
operator|new
name|URI
argument_list|(
name|cfg
operator|.
name|getRemoteIndexUrl
argument_list|( )
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Could not set remote index url "
operator|+
name|cfg
operator|.
name|getRemoteIndexUrl
argument_list|( )
argument_list|)
expr_stmt|;
name|remoteIndexFeature
operator|.
name|setDownloadRemoteIndex
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|remoteIndexFeature
operator|.
name|setDownloadRemoteIndexOnStartup
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
name|repo
operator|.
name|setExtraHeaders
argument_list|(
name|cfg
operator|.
name|getExtraHeaders
argument_list|()
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setExtraParameters
argument_list|(
name|cfg
operator|.
name|getExtraParameters
argument_list|()
argument_list|)
expr_stmt|;
name|PasswordCredentials
name|credentials
init|=
operator|new
name|PasswordCredentials
argument_list|()
decl_stmt|;
name|credentials
operator|.
name|setPassword
argument_list|(
name|cfg
operator|.
name|getPassword
argument_list|()
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|credentials
operator|.
name|setUsername
argument_list|(
name|cfg
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setCredentials
argument_list|(
name|credentials
argument_list|)
expr_stmt|;
return|return
name|repo
return|;
block|}
specifier|private
name|void
name|setBaseConfig
parameter_list|(
name|EditableRepository
name|repo
parameter_list|,
name|AbstractRepositoryConfiguration
name|cfg
parameter_list|)
block|{
name|repo
operator|.
name|setDescription
argument_list|(
name|Locale
operator|.
name|getDefault
argument_list|( )
argument_list|,
name|cfg
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|indexDir
init|=
name|cfg
operator|.
name|getIndexDir
argument_list|()
decl_stmt|;
try|try
block|{
if|if
condition|(
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|indexDir
argument_list|)
condition|)
block|{
name|repo
operator|.
name|setIndex
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setIndexPath
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|indexDir
operator|.
name|startsWith
argument_list|(
literal|"file://"
argument_list|)
condition|)
block|{
name|repo
operator|.
name|setIndexPath
argument_list|(
operator|new
name|URI
argument_list|(
name|indexDir
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|repo
operator|.
name|setIndexPath
argument_list|(
operator|new
name|URI
argument_list|(
literal|"file://"
operator|+
name|indexDir
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Could not set index path "
operator|+
name|cfg
operator|.
name|getIndexDir
argument_list|()
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setIndex
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
name|repo
operator|.
name|setLayout
argument_list|(
name|cfg
operator|.
name|getLayout
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

