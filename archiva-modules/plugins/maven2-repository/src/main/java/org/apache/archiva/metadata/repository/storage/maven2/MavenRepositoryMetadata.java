begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|storage
operator|.
name|maven2
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
specifier|public
class|class
name|MavenRepositoryMetadata
block|{
specifier|private
name|String
name|groupId
decl_stmt|;
specifier|private
name|String
name|artifactId
decl_stmt|;
specifier|private
name|String
name|version
decl_stmt|;
specifier|private
name|String
name|lastUpdated
decl_stmt|;
specifier|private
name|String
name|latestVersion
decl_stmt|;
specifier|private
name|String
name|releasedVersion
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|availableVersions
decl_stmt|;
specifier|private
name|Snapshot
name|snapshotVersion
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Plugin
argument_list|>
name|plugins
init|=
operator|new
name|ArrayList
argument_list|<
name|Plugin
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|List
argument_list|<
name|Plugin
argument_list|>
name|getPlugins
parameter_list|()
block|{
return|return
name|plugins
return|;
block|}
specifier|public
name|void
name|setGroupId
parameter_list|(
name|String
name|groupId
parameter_list|)
block|{
name|this
operator|.
name|groupId
operator|=
name|groupId
expr_stmt|;
block|}
specifier|public
name|void
name|setArtifactId
parameter_list|(
name|String
name|artifactId
parameter_list|)
block|{
name|this
operator|.
name|artifactId
operator|=
name|artifactId
expr_stmt|;
block|}
specifier|public
name|void
name|setVersion
parameter_list|(
name|String
name|version
parameter_list|)
block|{
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
block|}
specifier|public
name|void
name|setLastUpdated
parameter_list|(
name|String
name|lastUpdated
parameter_list|)
block|{
name|this
operator|.
name|lastUpdated
operator|=
name|lastUpdated
expr_stmt|;
block|}
specifier|public
name|void
name|setLatestVersion
parameter_list|(
name|String
name|latestVersion
parameter_list|)
block|{
name|this
operator|.
name|latestVersion
operator|=
name|latestVersion
expr_stmt|;
block|}
specifier|public
name|void
name|setReleasedVersion
parameter_list|(
name|String
name|releasedVersion
parameter_list|)
block|{
name|this
operator|.
name|releasedVersion
operator|=
name|releasedVersion
expr_stmt|;
block|}
specifier|public
name|void
name|setAvailableVersions
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|availableVersions
parameter_list|)
block|{
name|this
operator|.
name|availableVersions
operator|=
name|availableVersions
expr_stmt|;
block|}
specifier|public
name|void
name|setSnapshotVersion
parameter_list|(
name|Snapshot
name|snapshotVersion
parameter_list|)
block|{
name|this
operator|.
name|snapshotVersion
operator|=
name|snapshotVersion
expr_stmt|;
block|}
specifier|public
name|void
name|addPlugin
parameter_list|(
name|Plugin
name|plugin
parameter_list|)
block|{
name|this
operator|.
name|plugins
operator|.
name|add
argument_list|(
name|plugin
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getGroupId
parameter_list|()
block|{
return|return
name|groupId
return|;
block|}
specifier|public
name|String
name|getArtifactId
parameter_list|()
block|{
return|return
name|artifactId
return|;
block|}
specifier|public
name|String
name|getVersion
parameter_list|()
block|{
return|return
name|version
return|;
block|}
specifier|public
name|String
name|getLastUpdated
parameter_list|()
block|{
return|return
name|lastUpdated
return|;
block|}
specifier|public
name|String
name|getLatestVersion
parameter_list|()
block|{
return|return
name|latestVersion
return|;
block|}
specifier|public
name|String
name|getReleasedVersion
parameter_list|()
block|{
return|return
name|releasedVersion
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getAvailableVersions
parameter_list|()
block|{
return|return
name|availableVersions
return|;
block|}
specifier|public
name|Snapshot
name|getSnapshotVersion
parameter_list|()
block|{
return|return
name|snapshotVersion
return|;
block|}
specifier|public
specifier|static
class|class
name|Snapshot
block|{
specifier|private
name|String
name|timestamp
decl_stmt|;
specifier|private
name|int
name|buildNumber
decl_stmt|;
specifier|public
name|void
name|setTimestamp
parameter_list|(
name|String
name|timestamp
parameter_list|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|timestamp
expr_stmt|;
block|}
specifier|public
name|void
name|setBuildNumber
parameter_list|(
name|int
name|buildNumber
parameter_list|)
block|{
name|this
operator|.
name|buildNumber
operator|=
name|buildNumber
expr_stmt|;
block|}
specifier|public
name|int
name|getBuildNumber
parameter_list|()
block|{
return|return
name|buildNumber
return|;
block|}
specifier|public
name|String
name|getTimestamp
parameter_list|()
block|{
return|return
name|timestamp
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|Plugin
block|{
specifier|private
name|String
name|prefix
decl_stmt|;
specifier|private
name|String
name|artifactId
decl_stmt|;
specifier|private
name|String
name|name
decl_stmt|;
specifier|public
name|void
name|setPrefix
parameter_list|(
name|String
name|prefix
parameter_list|)
block|{
name|this
operator|.
name|prefix
operator|=
name|prefix
expr_stmt|;
block|}
specifier|public
name|void
name|setArtifactId
parameter_list|(
name|String
name|artifactId
parameter_list|)
block|{
name|this
operator|.
name|artifactId
operator|=
name|artifactId
expr_stmt|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getPrefix
parameter_list|()
block|{
return|return
name|prefix
return|;
block|}
specifier|public
name|String
name|getArtifactId
parameter_list|()
block|{
return|return
name|artifactId
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|Plugin
name|plugin
init|=
operator|(
name|Plugin
operator|)
name|o
decl_stmt|;
if|if
condition|(
operator|!
name|artifactId
operator|.
name|equals
argument_list|(
name|plugin
operator|.
name|artifactId
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|name
operator|!=
literal|null
condition|?
operator|!
name|name
operator|.
name|equals
argument_list|(
name|plugin
operator|.
name|name
argument_list|)
else|:
name|plugin
operator|.
name|name
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|prefix
operator|.
name|equals
argument_list|(
name|plugin
operator|.
name|prefix
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
name|int
name|result
init|=
name|prefix
operator|.
name|hashCode
argument_list|()
decl_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
name|artifactId
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
operator|(
name|name
operator|!=
literal|null
condition|?
name|name
operator|.
name|hashCode
argument_list|()
else|:
literal|0
operator|)
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
block|}
end_class

end_unit

