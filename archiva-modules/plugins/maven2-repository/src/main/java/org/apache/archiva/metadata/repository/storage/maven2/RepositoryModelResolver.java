begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|storage
operator|.
name|maven2
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|storage
operator|.
name|RepositoryPathTranslator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|model
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|model
operator|.
name|building
operator|.
name|FileModelSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|model
operator|.
name|building
operator|.
name|ModelSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|model
operator|.
name|resolution
operator|.
name|InvalidRepositoryException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|model
operator|.
name|resolution
operator|.
name|ModelResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|model
operator|.
name|resolution
operator|.
name|UnresolvableModelException
import|;
end_import

begin_class
specifier|public
class|class
name|RepositoryModelResolver
implements|implements
name|ModelResolver
block|{
specifier|private
name|File
name|basedir
decl_stmt|;
specifier|private
name|RepositoryPathTranslator
name|pathTranslator
decl_stmt|;
specifier|public
name|RepositoryModelResolver
parameter_list|(
name|File
name|basedir
parameter_list|,
name|RepositoryPathTranslator
name|pathTranslator
parameter_list|)
block|{
name|this
operator|.
name|basedir
operator|=
name|basedir
expr_stmt|;
name|this
operator|.
name|pathTranslator
operator|=
name|pathTranslator
expr_stmt|;
block|}
specifier|public
name|ModelSource
name|resolveModel
parameter_list|(
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|)
throws|throws
name|UnresolvableModelException
block|{
name|String
name|filename
init|=
name|artifactId
operator|+
literal|"-"
operator|+
name|version
operator|+
literal|".pom"
decl_stmt|;
comment|// TODO: we need to convert 1.0-20091120.112233-1 type paths to baseVersion for the below call - add a test
return|return
operator|new
name|FileModelSource
argument_list|(
name|pathTranslator
operator|.
name|toFile
argument_list|(
name|basedir
argument_list|,
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
name|filename
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|void
name|addRepository
parameter_list|(
name|Repository
name|repository
parameter_list|)
throws|throws
name|InvalidRepositoryException
block|{
comment|// we just ignore repositories outside of the current one for now
comment|// TODO: it'd be nice to look them up from Archiva's set, but we want to do that by URL / mapping, not just the
comment|//       ID since they will rarely match
block|}
specifier|public
name|ModelResolver
name|newCopy
parameter_list|()
block|{
return|return
operator|new
name|RepositoryModelResolver
argument_list|(
name|basedir
argument_list|,
name|pathTranslator
argument_list|)
return|;
block|}
block|}
end_class

end_unit

