begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|maven2
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ManagedRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|RemoteRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ManagedRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ReleaseScheme
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RemoteRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RepositoryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|UnsupportedFeatureException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|features
operator|.
name|ArtifactCleanupFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|features
operator|.
name|IndexCreationFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|features
operator|.
name|RemoteIndexFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|features
operator|.
name|StagingRepositoryFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|test
operator|.
name|utils
operator|.
name|ArchivaSpringJUnit4ClassRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Named
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|Period
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * @author Martin Stockhammer<martin_s@apache.org>  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|ArchivaSpringJUnit4ClassRunner
operator|.
name|class
argument_list|)
annotation|@
name|ContextConfiguration
argument_list|(
block|{
literal|"classpath*:/META-INF/spring-context.xml"
block|,
literal|"classpath:/spring-context-no-mock-conf.xml"
block|}
argument_list|)
specifier|public
class|class
name|MavenRepositoryProviderTest
block|{
annotation|@
name|Inject
annotation|@
name|Named
argument_list|(
literal|"archivaConfiguration#default"
argument_list|)
name|ArchivaConfiguration
name|archivaConfiguration
decl_stmt|;
name|MavenRepositoryProvider
name|provider
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|provider
operator|=
operator|new
name|MavenRepositoryProvider
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|provides
parameter_list|( )
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|provider
operator|.
name|provides
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|RepositoryType
operator|.
name|MAVEN
argument_list|,
name|provider
operator|.
name|provides
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createManagedInstance
parameter_list|( )
throws|throws
name|Exception
block|{
name|assertNotNull
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
name|ManagedRepositoryConfiguration
name|repo
init|=
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getManagedRepositories
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|ManagedRepository
name|mr
init|=
name|provider
operator|.
name|createManagedInstance
argument_list|(
name|repo
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|mr
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|mr
operator|.
name|getLocation
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"/repositories/internal"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Archiva Managed Internal Repository"
argument_list|,
name|mr
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|mr
operator|.
name|getActiveReleaseSchemes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ReleaseScheme
operator|.
name|RELEASE
argument_list|,
name|mr
operator|.
name|getActiveReleaseSchemes
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"internal"
argument_list|,
name|mr
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|mr
operator|.
name|blocksRedeployments
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0 0 * * * ?"
argument_list|,
name|mr
operator|.
name|getSchedulingDefinition
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|mr
operator|.
name|isScanned
argument_list|()
argument_list|)
expr_stmt|;
name|ArtifactCleanupFeature
name|artifactCleanupFeature
init|=
name|mr
operator|.
name|getFeature
argument_list|(
name|ArtifactCleanupFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Period
operator|.
name|ofDays
argument_list|(
literal|30
argument_list|)
argument_list|,
name|artifactCleanupFeature
operator|.
name|getRetentionTime
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|artifactCleanupFeature
operator|.
name|isDeleteReleasedSnapshots
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|artifactCleanupFeature
operator|.
name|getRetentionCount
argument_list|()
argument_list|)
expr_stmt|;
name|IndexCreationFeature
name|indexCreationFeature
init|=
name|mr
operator|.
name|getFeature
argument_list|(
name|IndexCreationFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|indexCreationFeature
operator|.
name|getIndexPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|indexCreationFeature
operator|.
name|getIndexPath
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"/repositories/internal/.indexer"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|indexCreationFeature
operator|.
name|getIndexPath
argument_list|()
operator|.
name|isAbsolute
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|indexCreationFeature
operator|.
name|isSkipPackedIndexCreation
argument_list|()
argument_list|)
expr_stmt|;
name|StagingRepositoryFeature
name|stagingRepositoryFeature
init|=
name|mr
operator|.
name|getFeature
argument_list|(
name|StagingRepositoryFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|stagingRepositoryFeature
operator|.
name|isStageRepoNeeded
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|stagingRepositoryFeature
operator|.
name|getStagingRepository
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createRemoteInstance
parameter_list|( )
throws|throws
name|Exception
block|{
name|assertNotNull
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
name|RemoteRepositoryConfiguration
name|repo
init|=
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getRemoteRepositories
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|RemoteRepository
name|mr
init|=
name|provider
operator|.
name|createRemoteInstance
argument_list|(
name|repo
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|mr
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"https://repo.maven.apache.org/maven2"
argument_list|,
name|mr
operator|.
name|getLocation
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Central Repository"
argument_list|,
name|mr
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"central"
argument_list|,
name|mr
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0 0 08 ? * SUN"
argument_list|,
name|mr
operator|.
name|getSchedulingDefinition
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|mr
operator|.
name|isScanned
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|mr
operator|.
name|getLoginCredentials
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|ArtifactCleanupFeature
name|artifactCleanupFeature
init|=
name|mr
operator|.
name|getFeature
argument_list|(
name|ArtifactCleanupFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|( )
decl_stmt|;
throw|throw
operator|new
name|Exception
argument_list|(
literal|"artifactCleanupFeature should not be available"
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|UnsupportedFeatureException
name|e
parameter_list|)
block|{
comment|// correct
block|}
try|try
block|{
name|IndexCreationFeature
name|indexCreationFeature
init|=
name|mr
operator|.
name|getFeature
argument_list|(
name|IndexCreationFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|( )
decl_stmt|;
throw|throw
operator|new
name|Exception
argument_list|(
literal|"indexCreationFeature should not be available"
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|UnsupportedFeatureException
name|e
parameter_list|)
block|{
comment|// correct
block|}
try|try
block|{
name|StagingRepositoryFeature
name|stagingRepositoryFeature
init|=
name|mr
operator|.
name|getFeature
argument_list|(
name|StagingRepositoryFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|( )
decl_stmt|;
throw|throw
operator|new
name|Exception
argument_list|(
literal|"stagingRepositoryFeature should not be available"
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|UnsupportedFeatureException
name|e
parameter_list|)
block|{
comment|// correct
block|}
name|RemoteIndexFeature
name|remoteIndexFeature
init|=
name|mr
operator|.
name|getFeature
argument_list|(
name|RemoteIndexFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|remoteIndexFeature
operator|.
name|getProxyId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

