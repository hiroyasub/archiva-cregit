begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|storage
operator|.
name|maven2
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|FileUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ManagedRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ProxyConnectorConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|RemoteRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ArtifactMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|Dependency
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|License
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|MailingList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ProjectVersionMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|maven2
operator|.
name|MavenArtifactFacet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|filter
operator|.
name|AllFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|filter
operator|.
name|ExcludesFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|filter
operator|.
name|Filter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|storage
operator|.
name|ReadMetadataRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|storage
operator|.
name|RepositoryStorageMetadataInvalidException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|storage
operator|.
name|RepositoryStorageMetadataNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|proxy
operator|.
name|common
operator|.
name|WagonFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|proxy
operator|.
name|common
operator|.
name|WagonFactoryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|test
operator|.
name|utils
operator|.
name|ArchivaSpringJUnit4ClassRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|wagon
operator|.
name|Wagon
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Named
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|ArchivaSpringJUnit4ClassRunner
operator|.
name|class
argument_list|)
annotation|@
name|ContextConfiguration
argument_list|(
name|locations
operator|=
block|{
literal|"classpath*:/META-INF/spring-context.xml"
block|,
literal|"classpath:/spring-context.xml"
block|}
argument_list|)
specifier|public
class|class
name|Maven2RepositoryMetadataResolverTest
extends|extends
name|TestCase
block|{
specifier|private
specifier|static
specifier|final
name|Filter
argument_list|<
name|String
argument_list|>
name|ALL
init|=
operator|new
name|AllFilter
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|Inject
annotation|@
name|Named
argument_list|(
name|value
operator|=
literal|"repositoryStorage#maven2"
argument_list|)
specifier|private
name|Maven2RepositoryStorage
name|storage
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_REPO_ID
init|=
literal|"test"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_REMOTE_REPO_ID
init|=
literal|"central"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ASF_SCM_CONN_BASE
init|=
literal|"scm:svn:http://svn.apache.org/repos/asf/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ASF_SCM_DEV_CONN_BASE
init|=
literal|"scm:svn:https://svn.apache.org/repos/asf/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ASF_SCM_VIEWVC_BASE
init|=
literal|"http://svn.apache.org/viewvc/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_SCM_CONN_BASE
init|=
literal|"scm:svn:http://svn.example.com/repos/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_SCM_DEV_CONN_BASE
init|=
literal|"scm:svn:https://svn.example.com/repos/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_SCM_URL_BASE
init|=
literal|"http://svn.example.com/repos/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|EMPTY_MD5
init|=
literal|"d41d8cd98f00b204e9800998ecf8427e"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|EMPTY_SHA1
init|=
literal|"da39a3ee5e6b4b0d3255bfef95601890afd80709"
decl_stmt|;
annotation|@
name|Inject
annotation|@
name|Named
argument_list|(
name|value
operator|=
literal|"archivaConfiguration#default"
argument_list|)
specifier|protected
name|ArchivaConfiguration
name|configuration
decl_stmt|;
specifier|private
name|WagonFactory
name|wagonFactory
decl_stmt|;
name|ManagedRepositoryConfiguration
name|testRepo
decl_stmt|;
name|Configuration
name|c
decl_stmt|;
annotation|@
name|Before
annotation|@
name|Override
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|c
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|testRepo
operator|=
operator|new
name|ManagedRepositoryConfiguration
argument_list|()
expr_stmt|;
name|testRepo
operator|.
name|setId
argument_list|(
name|TEST_REPO_ID
argument_list|)
expr_stmt|;
name|testRepo
operator|.
name|setLocation
argument_list|(
operator|new
name|File
argument_list|(
literal|"target/test-repository"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|testRepo
operator|.
name|setReleases
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|testRepo
operator|.
name|setSnapshots
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|c
operator|.
name|addManagedRepository
argument_list|(
name|testRepo
argument_list|)
expr_stmt|;
name|RemoteRepositoryConfiguration
name|testRemoteRepo
init|=
operator|new
name|RemoteRepositoryConfiguration
argument_list|()
decl_stmt|;
name|testRemoteRepo
operator|.
name|setId
argument_list|(
name|TEST_REMOTE_REPO_ID
argument_list|)
expr_stmt|;
name|testRemoteRepo
operator|.
name|setLayout
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
name|testRemoteRepo
operator|.
name|setName
argument_list|(
literal|"Central Repository"
argument_list|)
expr_stmt|;
name|testRemoteRepo
operator|.
name|setUrl
argument_list|(
literal|"http://central.repo.com/maven2"
argument_list|)
expr_stmt|;
name|testRemoteRepo
operator|.
name|setTimeout
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|c
operator|.
name|addRemoteRepository
argument_list|(
name|testRemoteRepo
argument_list|)
expr_stmt|;
name|ProxyConnectorConfiguration
name|proxyConnector
init|=
operator|new
name|ProxyConnectorConfiguration
argument_list|()
decl_stmt|;
name|proxyConnector
operator|.
name|setSourceRepoId
argument_list|(
name|TEST_REPO_ID
argument_list|)
expr_stmt|;
name|proxyConnector
operator|.
name|setTargetRepoId
argument_list|(
name|TEST_REMOTE_REPO_ID
argument_list|)
expr_stmt|;
name|proxyConnector
operator|.
name|setDisabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|c
operator|.
name|addProxyConnector
argument_list|(
name|proxyConnector
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|save
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|getManagedRepositories
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isSnapshots
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|getManagedRepositories
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isReleases
argument_list|()
argument_list|)
expr_stmt|;
name|wagonFactory
operator|=
name|mock
argument_list|(
name|WagonFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|storage
operator|.
name|setWagonFactory
argument_list|(
name|wagonFactory
argument_list|)
expr_stmt|;
name|Wagon
name|wagon
init|=
operator|new
name|MockWagon
argument_list|()
decl_stmt|;
name|when
argument_list|(
name|wagonFactory
operator|.
name|getWagon
argument_list|(
operator|new
name|WagonFactoryRequest
argument_list|()
operator|.
name|protocol
argument_list|(
literal|"wagon#http"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|wagon
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testModelWithJdkProfileActivation
parameter_list|()
throws|throws
name|Exception
block|{
name|ReadMetadataRequest
name|readMetadataRequest
init|=
operator|new
name|ReadMetadataRequest
argument_list|()
operator|.
name|repositoryId
argument_list|(
name|TEST_REPO_ID
argument_list|)
operator|.
name|namespace
argument_list|(
literal|"org.apache.maven"
argument_list|)
operator|.
name|projectId
argument_list|(
literal|"maven-archiver"
argument_list|)
operator|.
name|projectVersion
argument_list|(
literal|"2.4.1"
argument_list|)
decl_stmt|;
name|ProjectVersionMetadata
name|metadata
init|=
name|storage
operator|.
name|readProjectVersionMetadata
argument_list|(
name|readMetadataRequest
argument_list|)
decl_stmt|;
name|MavenProjectFacet
name|facet
init|=
operator|(
name|MavenProjectFacet
operator|)
name|metadata
operator|.
name|getFacet
argument_list|(
name|MavenProjectFacet
operator|.
name|FACET_ID
argument_list|)
decl_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetProjectVersionMetadata
parameter_list|()
throws|throws
name|Exception
block|{
name|ProjectVersionMetadata
name|metadata
init|=
name|storage
operator|.
name|readProjectVersionMetadata
argument_list|(
operator|new
name|ReadMetadataRequest
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-common"
argument_list|,
literal|"1.2.1"
argument_list|)
argument_list|)
decl_stmt|;
name|MavenProjectFacet
name|facet
init|=
operator|(
name|MavenProjectFacet
operator|)
name|metadata
operator|.
name|getFacet
argument_list|(
name|MavenProjectFacet
operator|.
name|FACET_ID
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|facet
operator|.
name|getPackaging
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://archiva.apache.org/ref/1.2.1/archiva-base/archiva-common"
argument_list|,
name|metadata
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.archiva"
argument_list|,
name|facet
operator|.
name|getParent
argument_list|()
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"archiva-base"
argument_list|,
name|facet
operator|.
name|getParent
argument_list|()
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.2.1"
argument_list|,
name|facet
operator|.
name|getParent
argument_list|()
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"archiva-common"
argument_list|,
name|facet
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.archiva"
argument_list|,
name|facet
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"continuum"
argument_list|,
name|metadata
operator|.
name|getCiManagement
argument_list|()
operator|.
name|getSystem
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://vmbuild.apache.org/continuum"
argument_list|,
name|metadata
operator|.
name|getCiManagement
argument_list|()
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|metadata
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
comment|// TODO: this would be better
comment|//        assertEquals(
comment|//            "Archiva is an application for managing one or more remote repositories, including administration, artifact handling, browsing and searching.",
comment|//            metadata.getDescription() );
name|assertEquals
argument_list|(
literal|"1.2.1"
argument_list|,
name|metadata
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jira"
argument_list|,
name|metadata
operator|.
name|getIssueManagement
argument_list|()
operator|.
name|getSystem
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://jira.codehaus.org/browse/MRM"
argument_list|,
name|metadata
operator|.
name|getIssueManagement
argument_list|()
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
name|checkApacheLicense
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Archiva Base :: Common"
argument_list|,
name|metadata
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|path
init|=
literal|"archiva/tags/archiva-1.2.1/archiva-modules/archiva-base/archiva-common"
decl_stmt|;
name|assertEquals
argument_list|(
name|ASF_SCM_CONN_BASE
operator|+
name|path
argument_list|,
name|metadata
operator|.
name|getScm
argument_list|()
operator|.
name|getConnection
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ASF_SCM_DEV_CONN_BASE
operator|+
name|path
argument_list|,
name|metadata
operator|.
name|getScm
argument_list|()
operator|.
name|getDeveloperConnection
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ASF_SCM_VIEWVC_BASE
operator|+
name|path
argument_list|,
name|metadata
operator|.
name|getScm
argument_list|()
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
name|checkOrganizationApache
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|metadata
operator|.
name|getMailingLists
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertMailingList
argument_list|(
literal|"users"
argument_list|,
name|metadata
operator|.
name|getMailingLists
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"Archiva User List"
argument_list|,
literal|true
argument_list|,
literal|"http://www.nabble.com/archiva-users-f16426.html"
argument_list|)
expr_stmt|;
name|assertMailingList
argument_list|(
literal|"dev"
argument_list|,
name|metadata
operator|.
name|getMailingLists
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"Archiva Developer List"
argument_list|,
literal|true
argument_list|,
literal|"http://www.nabble.com/archiva-dev-f16427.html"
argument_list|)
expr_stmt|;
name|assertMailingList
argument_list|(
literal|"commits"
argument_list|,
name|metadata
operator|.
name|getMailingLists
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"Archiva Commits List"
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertMailingList
argument_list|(
literal|"issues"
argument_list|,
name|metadata
operator|.
name|getMailingLists
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|"Archiva Issues List"
argument_list|,
literal|false
argument_list|,
literal|"http://www.nabble.com/Archiva---Issues-f29617.html"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Dependency
argument_list|>
name|dependencies
init|=
name|metadata
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|dependencies
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"commons-lang"
argument_list|,
literal|"commons-lang"
argument_list|,
literal|"2.2"
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"commons-io"
argument_list|,
literal|"commons-io"
argument_list|,
literal|"1.4"
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"org.slf4j"
argument_list|,
literal|"slf4j-api"
argument_list|,
literal|"1.5.0"
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|"org.codehaus.plexus"
argument_list|,
literal|"plexus-component-api"
argument_list|,
literal|"1.0-alpha-22"
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|"org.codehaus.plexus"
argument_list|,
literal|"plexus-spring"
argument_list|,
literal|"1.2"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|"xalan"
argument_list|,
literal|"xalan"
argument_list|,
literal|"2.7.0"
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|6
argument_list|)
argument_list|,
literal|"dom4j"
argument_list|,
literal|"dom4j"
argument_list|,
literal|"1.6.1"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|7
argument_list|)
argument_list|,
literal|"junit"
argument_list|,
literal|"junit"
argument_list|,
literal|"3.8.1"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|8
argument_list|)
argument_list|,
literal|"easymock"
argument_list|,
literal|"easymock"
argument_list|,
literal|"1.2_Java1.3"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|9
argument_list|)
argument_list|,
literal|"easymock"
argument_list|,
literal|"easymockclassextension"
argument_list|,
literal|"1.2"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetArtifactMetadata
parameter_list|()
throws|throws
name|Exception
block|{
name|Collection
argument_list|<
name|ArtifactMetadata
argument_list|>
name|springArtifacts
init|=
name|storage
operator|.
name|readArtifactsMetadata
argument_list|(
operator|new
name|ReadMetadataRequest
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.codehaus.plexus"
argument_list|,
literal|"plexus-spring"
argument_list|,
literal|"1.2"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|artifacts
init|=
operator|new
name|ArrayList
argument_list|<
name|ArtifactMetadata
argument_list|>
argument_list|(
name|springArtifacts
argument_list|)
decl_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|artifacts
argument_list|,
operator|new
name|Comparator
argument_list|<
name|ArtifactMetadata
argument_list|>
argument_list|()
block|{
specifier|public
name|int
name|compare
parameter_list|(
name|ArtifactMetadata
name|o1
parameter_list|,
name|ArtifactMetadata
name|o2
parameter_list|)
block|{
return|return
name|o1
operator|.
name|getId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|o2
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ArtifactMetadata
name|artifactMetadata
init|=
name|artifacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"plexus-spring-1.2-sources.jar"
argument_list|,
name|artifactMetadata
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|MavenArtifactFacet
name|facet
init|=
operator|(
name|MavenArtifactFacet
operator|)
name|artifactMetadata
operator|.
name|getFacet
argument_list|(
name|MavenArtifactFacet
operator|.
name|FACET_ID
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|facet
operator|.
name|getBuildNumber
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|facet
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sources"
argument_list|,
name|facet
operator|.
name|getClassifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"java-source"
argument_list|,
name|facet
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|artifactMetadata
operator|=
name|artifacts
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"plexus-spring-1.2.jar"
argument_list|,
name|artifactMetadata
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|facet
operator|=
operator|(
name|MavenArtifactFacet
operator|)
name|artifactMetadata
operator|.
name|getFacet
argument_list|(
name|MavenArtifactFacet
operator|.
name|FACET_ID
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|facet
operator|.
name|getBuildNumber
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|facet
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|facet
operator|.
name|getClassifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|facet
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|artifactMetadata
operator|=
name|artifacts
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"plexus-spring-1.2.pom"
argument_list|,
name|artifactMetadata
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|facet
operator|=
operator|(
name|MavenArtifactFacet
operator|)
name|artifactMetadata
operator|.
name|getFacet
argument_list|(
name|MavenArtifactFacet
operator|.
name|FACET_ID
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|facet
operator|.
name|getBuildNumber
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|facet
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|facet
operator|.
name|getClassifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"pom"
argument_list|,
name|facet
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetArtifactMetadataSnapshots
parameter_list|()
throws|throws
name|Exception
block|{
name|Collection
argument_list|<
name|ArtifactMetadata
argument_list|>
name|testArtifacts
init|=
name|storage
operator|.
name|readArtifactsMetadata
argument_list|(
operator|new
name|ReadMetadataRequest
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"test-artifact"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|artifacts
init|=
operator|new
name|ArrayList
argument_list|<
name|ArtifactMetadata
argument_list|>
argument_list|(
name|testArtifacts
argument_list|)
decl_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|artifacts
argument_list|,
operator|new
name|Comparator
argument_list|<
name|ArtifactMetadata
argument_list|>
argument_list|()
block|{
specifier|public
name|int
name|compare
parameter_list|(
name|ArtifactMetadata
name|o1
parameter_list|,
name|ArtifactMetadata
name|o2
parameter_list|)
block|{
return|return
name|o1
operator|.
name|getId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|o2
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ArtifactMetadata
name|artifactMetadata
init|=
name|artifacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"test-artifact-1.0-20100308.230825-1.jar"
argument_list|,
name|artifactMetadata
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|MavenArtifactFacet
name|facet
init|=
operator|(
name|MavenArtifactFacet
operator|)
name|artifactMetadata
operator|.
name|getFacet
argument_list|(
name|MavenArtifactFacet
operator|.
name|FACET_ID
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|facet
operator|.
name|getBuildNumber
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"20100308.230825"
argument_list|,
name|facet
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|facet
operator|.
name|getClassifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|facet
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|artifactMetadata
operator|=
name|artifacts
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test-artifact-1.0-20100308.230825-1.pom"
argument_list|,
name|artifactMetadata
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|facet
operator|=
operator|(
name|MavenArtifactFacet
operator|)
name|artifactMetadata
operator|.
name|getFacet
argument_list|(
name|MavenArtifactFacet
operator|.
name|FACET_ID
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|facet
operator|.
name|getBuildNumber
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"20100308.230825"
argument_list|,
name|facet
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|facet
operator|.
name|getClassifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"pom"
argument_list|,
name|facet
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|artifactMetadata
operator|=
name|artifacts
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test-artifact-1.0-20100310.014828-2-javadoc.jar"
argument_list|,
name|artifactMetadata
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|facet
operator|=
operator|(
name|MavenArtifactFacet
operator|)
name|artifactMetadata
operator|.
name|getFacet
argument_list|(
name|MavenArtifactFacet
operator|.
name|FACET_ID
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|facet
operator|.
name|getBuildNumber
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"20100310.014828"
argument_list|,
name|facet
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"javadoc"
argument_list|,
name|facet
operator|.
name|getClassifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"javadoc"
argument_list|,
name|facet
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|artifactMetadata
operator|=
name|artifacts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test-artifact-1.0-20100310.014828-2-sources.jar"
argument_list|,
name|artifactMetadata
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|facet
operator|=
operator|(
name|MavenArtifactFacet
operator|)
name|artifactMetadata
operator|.
name|getFacet
argument_list|(
name|MavenArtifactFacet
operator|.
name|FACET_ID
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|facet
operator|.
name|getBuildNumber
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"20100310.014828"
argument_list|,
name|facet
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sources"
argument_list|,
name|facet
operator|.
name|getClassifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"java-source"
argument_list|,
name|facet
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|artifactMetadata
operator|=
name|artifacts
operator|.
name|get
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test-artifact-1.0-20100310.014828-2.jar"
argument_list|,
name|artifactMetadata
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|facet
operator|=
operator|(
name|MavenArtifactFacet
operator|)
name|artifactMetadata
operator|.
name|getFacet
argument_list|(
name|MavenArtifactFacet
operator|.
name|FACET_ID
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|facet
operator|.
name|getBuildNumber
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"20100310.014828"
argument_list|,
name|facet
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|facet
operator|.
name|getClassifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|facet
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|artifactMetadata
operator|=
name|artifacts
operator|.
name|get
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test-artifact-1.0-20100310.014828-2.pom"
argument_list|,
name|artifactMetadata
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|facet
operator|=
operator|(
name|MavenArtifactFacet
operator|)
name|artifactMetadata
operator|.
name|getFacet
argument_list|(
name|MavenArtifactFacet
operator|.
name|FACET_ID
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|facet
operator|.
name|getBuildNumber
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"20100310.014828"
argument_list|,
name|facet
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|facet
operator|.
name|getClassifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"pom"
argument_list|,
name|facet
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertDependency
parameter_list|(
name|Dependency
name|dependency
parameter_list|,
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|)
block|{
name|assertDependency
argument_list|(
name|dependency
argument_list|,
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
literal|"compile"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertDependency
parameter_list|(
name|Dependency
name|dependency
parameter_list|,
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|String
name|scope
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|artifactId
argument_list|,
name|dependency
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|dependency
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|version
argument_list|,
name|dependency
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|groupId
argument_list|,
name|dependency
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|scope
argument_list|,
name|dependency
operator|.
name|getScope
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|dependency
operator|.
name|getClassifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|dependency
operator|.
name|getSystemPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetProjectVersionMetadataForTimestampedSnapshot
parameter_list|()
throws|throws
name|Exception
block|{
name|ProjectVersionMetadata
name|metadata
init|=
name|storage
operator|.
name|readProjectVersionMetadata
argument_list|(
operator|new
name|ReadMetadataRequest
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache"
argument_list|,
literal|"apache"
argument_list|,
literal|"5-SNAPSHOT"
argument_list|)
argument_list|)
decl_stmt|;
name|MavenProjectFacet
name|facet
init|=
operator|(
name|MavenProjectFacet
operator|)
name|metadata
operator|.
name|getFacet
argument_list|(
name|MavenProjectFacet
operator|.
name|FACET_ID
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"pom"
argument_list|,
name|facet
operator|.
name|getPackaging
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://www.apache.org/"
argument_list|,
name|metadata
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|facet
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache"
argument_list|,
name|facet
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"apache"
argument_list|,
name|facet
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|metadata
operator|.
name|getCiManagement
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|metadata
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
comment|// TODO: this would be better
comment|//        assertEquals(
comment|//            "The Apache Software Foundation provides support for the Apache community of open-source software projects. " +
comment|//                "The Apache projects are characterized by a collaborative, consensus based development process, an open " +
comment|//                "and pragmatic software license, and a desire to create high quality software that leads the way in its " +
comment|//                "field. We consider ourselves not simply a group of projects sharing a server, but rather a community of " +
comment|//                "developers and users.", metadata.getDescription() );
name|assertEquals
argument_list|(
literal|"5-SNAPSHOT"
argument_list|,
name|metadata
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|metadata
operator|.
name|getIssueManagement
argument_list|()
argument_list|)
expr_stmt|;
name|checkApacheLicense
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The Apache Software Foundation"
argument_list|,
name|metadata
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|path
init|=
literal|"maven/pom/trunk/asf"
decl_stmt|;
name|assertEquals
argument_list|(
name|ASF_SCM_CONN_BASE
operator|+
name|path
argument_list|,
name|metadata
operator|.
name|getScm
argument_list|()
operator|.
name|getConnection
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ASF_SCM_DEV_CONN_BASE
operator|+
name|path
argument_list|,
name|metadata
operator|.
name|getScm
argument_list|()
operator|.
name|getDeveloperConnection
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ASF_SCM_VIEWVC_BASE
operator|+
name|path
argument_list|,
name|metadata
operator|.
name|getScm
argument_list|()
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
name|checkOrganizationApache
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|metadata
operator|.
name|getMailingLists
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertMailingList
argument_list|(
name|metadata
operator|.
name|getMailingLists
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"Apache Announce List"
argument_list|,
literal|"http://mail-archives.apache.org/mod_mbox/www-announce/"
argument_list|,
literal|"announce@apache.org"
argument_list|,
literal|"announce-subscribe@apache.org"
argument_list|,
literal|"announce-unsubscribe@apache.org"
argument_list|,
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|Dependency
operator|>
name|emptyList
argument_list|()
argument_list|,
name|metadata
operator|.
name|getDependencies
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetProjectVersionMetadataForTimestampedSnapshotMissingMetadata
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|storage
operator|.
name|readProjectVersionMetadata
argument_list|(
operator|new
name|ReadMetadataRequest
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"missing-metadata"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should not be found"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RepositoryStorageMetadataNotFoundException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"missing-pom"
argument_list|,
name|e
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetProjectVersionMetadataForTimestampedSnapshotMalformedMetadata
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|storage
operator|.
name|readProjectVersionMetadata
argument_list|(
operator|new
name|ReadMetadataRequest
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"malformed-metadata"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should not be found"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RepositoryStorageMetadataNotFoundException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"missing-pom"
argument_list|,
name|e
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetProjectVersionMetadataForTimestampedSnapshotIncompleteMetadata
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|storage
operator|.
name|readProjectVersionMetadata
argument_list|(
operator|new
name|ReadMetadataRequest
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"incomplete-metadata"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should not be found"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RepositoryStorageMetadataNotFoundException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"missing-pom"
argument_list|,
name|e
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetProjectVersionMetadataForInvalidPom
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|storage
operator|.
name|readProjectVersionMetadata
argument_list|(
operator|new
name|ReadMetadataRequest
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"invalid-pom"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have received an exception due to invalid POM"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RepositoryStorageMetadataInvalidException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"invalid-pom"
argument_list|,
name|e
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetProjectVersionMetadataForMislocatedPom
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|storage
operator|.
name|readProjectVersionMetadata
argument_list|(
operator|new
name|ReadMetadataRequest
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"mislocated-pom"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have received an exception due to mislocated POM"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RepositoryStorageMetadataInvalidException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"mislocated-pom"
argument_list|,
name|e
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetProjectVersionMetadataForMissingPom
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|storage
operator|.
name|readProjectVersionMetadata
argument_list|(
operator|new
name|ReadMetadataRequest
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"missing-pom"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should not be found"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RepositoryStorageMetadataNotFoundException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"missing-pom"
argument_list|,
name|e
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetRootNamespaces
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"com"
argument_list|,
literal|"org"
argument_list|)
argument_list|,
name|storage
operator|.
name|listRootNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetNamespaces
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"example"
argument_list|)
argument_list|,
name|storage
operator|.
name|listNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"test"
argument_list|)
argument_list|,
name|storage
operator|.
name|listNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|storage
operator|.
name|listNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"apache"
argument_list|,
literal|"codehaus"
argument_list|)
argument_list|,
name|storage
operator|.
name|listNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"archiva"
argument_list|,
literal|"maven"
argument_list|)
argument_list|,
name|storage
operator|.
name|listNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|storage
operator|.
name|listNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.archiva"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"plugins"
argument_list|,
literal|"shared"
argument_list|)
argument_list|,
name|storage
operator|.
name|listNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.maven"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|storage
operator|.
name|listNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.maven.plugins"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|storage
operator|.
name|listNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.maven.shared"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"plexus"
argument_list|)
argument_list|,
name|storage
operator|.
name|listNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.codehaus"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|storage
operator|.
name|listNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.codehaus.plexus"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetProjects
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|storage
operator|.
name|listProjects
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|storage
operator|.
name|listProjects
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"incomplete-metadata"
argument_list|,
literal|"invalid-pom"
argument_list|,
literal|"malformed-metadata"
argument_list|,
literal|"mislocated-pom"
argument_list|,
literal|"missing-metadata"
argument_list|,
literal|"missing-parent"
argument_list|,
literal|"test-artifact"
argument_list|)
argument_list|,
name|storage
operator|.
name|listProjects
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|storage
operator|.
name|listProjects
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"apache"
argument_list|)
argument_list|,
name|storage
operator|.
name|listProjects
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"archiva"
argument_list|,
literal|"archiva-base"
argument_list|,
literal|"archiva-common"
argument_list|,
literal|"archiva-modules"
argument_list|,
literal|"archiva-parent"
argument_list|)
argument_list|,
name|storage
operator|.
name|listProjects
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.archiva"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"maven-archiver"
argument_list|,
literal|"maven-parent"
argument_list|)
argument_list|,
name|storage
operator|.
name|listProjects
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.maven"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|storage
operator|.
name|listProjects
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.maven.plugins"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"maven-downloader"
argument_list|,
literal|"maven-shared-components"
argument_list|)
argument_list|,
name|storage
operator|.
name|listProjects
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.maven.shared"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetProjectVersions
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1.0-SNAPSHOT"
argument_list|)
argument_list|,
name|storage
operator|.
name|listProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"incomplete-metadata"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1.0-SNAPSHOT"
argument_list|)
argument_list|,
name|storage
operator|.
name|listProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"malformed-metadata"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1.0-SNAPSHOT"
argument_list|)
argument_list|,
name|storage
operator|.
name|listProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"missing-metadata"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1.0"
argument_list|)
argument_list|,
name|storage
operator|.
name|listProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"invalid-pom"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"4"
argument_list|,
literal|"5-SNAPSHOT"
argument_list|,
literal|"7"
argument_list|)
argument_list|,
name|storage
operator|.
name|listProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache"
argument_list|,
literal|"apache"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1.2.1"
argument_list|,
literal|"1.2.2"
argument_list|)
argument_list|,
name|storage
operator|.
name|listProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.archiva"
argument_list|,
literal|"archiva"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1.2.1"
argument_list|)
argument_list|,
name|storage
operator|.
name|listProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-base"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1.2.1"
argument_list|)
argument_list|,
name|storage
operator|.
name|listProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-common"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1.2.1"
argument_list|)
argument_list|,
name|storage
operator|.
name|listProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-modules"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"3"
argument_list|)
argument_list|,
name|storage
operator|.
name|listProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-parent"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|storage
operator|.
name|listProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.maven.shared"
argument_list|,
literal|"maven-downloader"
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetArtifacts
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|artifacts
init|=
operator|new
name|ArrayList
argument_list|<
name|ArtifactMetadata
argument_list|>
argument_list|(
name|storage
operator|.
name|readArtifactsMetadata
argument_list|(
operator|new
name|ReadMetadataRequest
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.codehaus.plexus"
argument_list|,
literal|"plexus-spring"
argument_list|,
literal|"1.2"
argument_list|,
name|ALL
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|artifacts
argument_list|,
operator|new
name|Comparator
argument_list|<
name|ArtifactMetadata
argument_list|>
argument_list|()
block|{
specifier|public
name|int
name|compare
parameter_list|(
name|ArtifactMetadata
name|o1
parameter_list|,
name|ArtifactMetadata
name|o2
parameter_list|)
block|{
return|return
name|o1
operator|.
name|getId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|o2
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertArtifact
argument_list|(
name|artifacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"plexus-spring-1.2-sources.jar"
argument_list|,
literal|0
argument_list|,
name|EMPTY_SHA1
argument_list|,
name|EMPTY_MD5
argument_list|)
expr_stmt|;
name|assertArtifact
argument_list|(
name|artifacts
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"plexus-spring-1.2.jar"
argument_list|,
literal|0
argument_list|,
name|EMPTY_SHA1
argument_list|,
name|EMPTY_MD5
argument_list|)
expr_stmt|;
name|assertArtifact
argument_list|(
name|artifacts
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"plexus-spring-1.2.pom"
argument_list|,
literal|7407
argument_list|,
literal|"96b14cf880e384b2d15e8193c57b65c5420ca4c5"
argument_list|,
literal|"f83aa25f016212a551a4b2249985effc"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetArtifactsFiltered
parameter_list|()
throws|throws
name|Exception
block|{
name|ExcludesFilter
argument_list|<
name|String
argument_list|>
name|filter
init|=
operator|new
name|ExcludesFilter
argument_list|<
name|String
argument_list|>
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"plexus-spring-1.2.pom"
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|artifacts
init|=
operator|new
name|ArrayList
argument_list|<
name|ArtifactMetadata
argument_list|>
argument_list|(
name|storage
operator|.
name|readArtifactsMetadata
argument_list|(
operator|new
name|ReadMetadataRequest
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.codehaus.plexus"
argument_list|,
literal|"plexus-spring"
argument_list|,
literal|"1.2"
argument_list|,
name|filter
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|artifacts
argument_list|,
operator|new
name|Comparator
argument_list|<
name|ArtifactMetadata
argument_list|>
argument_list|()
block|{
specifier|public
name|int
name|compare
parameter_list|(
name|ArtifactMetadata
name|o1
parameter_list|,
name|ArtifactMetadata
name|o2
parameter_list|)
block|{
return|return
name|o1
operator|.
name|getId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|o2
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertArtifact
argument_list|(
name|artifacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"plexus-spring-1.2-sources.jar"
argument_list|,
literal|0
argument_list|,
name|EMPTY_SHA1
argument_list|,
name|EMPTY_MD5
argument_list|)
expr_stmt|;
name|assertArtifact
argument_list|(
name|artifacts
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"plexus-spring-1.2.jar"
argument_list|,
literal|0
argument_list|,
name|EMPTY_SHA1
argument_list|,
name|EMPTY_MD5
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetArtifactsTimestampedSnapshots
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|artifacts
init|=
operator|new
name|ArrayList
argument_list|<
name|ArtifactMetadata
argument_list|>
argument_list|(
name|storage
operator|.
name|readArtifactsMetadata
argument_list|(
operator|new
name|ReadMetadataRequest
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"missing-metadata"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|,
name|ALL
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ArtifactMetadata
name|artifact
init|=
name|artifacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"missing-metadata-1.0-20091101.112233-1.pom"
argument_list|,
name|artifact
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"com.example.test"
argument_list|,
name|artifact
operator|.
name|getNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"missing-metadata"
argument_list|,
name|artifact
operator|.
name|getProject
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.0-20091101.112233-1"
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|artifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertArtifact
parameter_list|(
name|ArtifactMetadata
name|artifact
parameter_list|,
name|String
name|id
parameter_list|,
name|int
name|size
parameter_list|,
name|String
name|sha1
parameter_list|,
name|String
name|md5
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|id
argument_list|,
name|artifact
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|md5
argument_list|,
name|artifact
operator|.
name|getMd5
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|sha1
argument_list|,
name|artifact
operator|.
name|getSha1
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|size
argument_list|,
name|artifact
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.codehaus.plexus"
argument_list|,
name|artifact
operator|.
name|getNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"plexus-spring"
argument_list|,
name|artifact
operator|.
name|getProject
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.2"
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|artifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertMailingList
parameter_list|(
name|MailingList
name|mailingList
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|archive
parameter_list|,
name|String
name|post
parameter_list|,
name|String
name|subscribe
parameter_list|,
name|String
name|unsubscribe
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|otherArchives
parameter_list|,
name|boolean
name|allowPost
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|archive
argument_list|,
name|mailingList
operator|.
name|getMainArchiveUrl
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|allowPost
condition|)
block|{
name|assertEquals
argument_list|(
name|post
argument_list|,
name|mailingList
operator|.
name|getPostAddress
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertNull
argument_list|(
name|mailingList
operator|.
name|getPostAddress
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|subscribe
argument_list|,
name|mailingList
operator|.
name|getSubscribeAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|unsubscribe
argument_list|,
name|mailingList
operator|.
name|getUnsubscribeAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|name
argument_list|,
name|mailingList
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|otherArchives
argument_list|,
name|mailingList
operator|.
name|getOtherArchives
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertMailingList
parameter_list|(
name|String
name|prefix
parameter_list|,
name|MailingList
name|mailingList
parameter_list|,
name|String
name|name
parameter_list|,
name|boolean
name|allowPost
parameter_list|,
name|String
name|nabbleUrl
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|otherArchives
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|otherArchives
operator|.
name|add
argument_list|(
literal|"http://www.mail-archive.com/"
operator|+
name|prefix
operator|+
literal|"@archiva.apache.org"
argument_list|)
expr_stmt|;
if|if
condition|(
name|nabbleUrl
operator|!=
literal|null
condition|)
block|{
name|otherArchives
operator|.
name|add
argument_list|(
name|nabbleUrl
argument_list|)
expr_stmt|;
block|}
name|otherArchives
operator|.
name|add
argument_list|(
literal|"http://markmail.org/list/org.apache.archiva."
operator|+
name|prefix
argument_list|)
expr_stmt|;
name|assertMailingList
argument_list|(
name|mailingList
argument_list|,
name|name
argument_list|,
literal|"http://mail-archives.apache.org/mod_mbox/archiva-"
operator|+
name|prefix
operator|+
literal|"/"
argument_list|,
name|prefix
operator|+
literal|"@archiva.apache.org"
argument_list|,
name|prefix
operator|+
literal|"-subscribe@archiva.apache.org"
argument_list|,
name|prefix
operator|+
literal|"-unsubscribe@archiva.apache.org"
argument_list|,
name|otherArchives
argument_list|,
name|allowPost
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkApacheLicense
parameter_list|(
name|ProjectVersionMetadata
name|metadata
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|License
argument_list|(
literal|"The Apache Software License, Version 2.0"
argument_list|,
literal|"http://www.apache.org/licenses/LICENSE-2.0.txt"
argument_list|)
argument_list|)
argument_list|,
name|metadata
operator|.
name|getLicenses
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkOrganizationApache
parameter_list|(
name|ProjectVersionMetadata
name|metadata
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"The Apache Software Foundation"
argument_list|,
name|metadata
operator|.
name|getOrganization
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://www.apache.org/"
argument_list|,
name|metadata
operator|.
name|getOrganization
argument_list|()
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|deleteTestArtifactWithParent
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|pathsToBeDeleted
parameter_list|)
throws|throws
name|IOException
block|{
for|for
control|(
name|String
name|path
range|:
name|pathsToBeDeleted
control|)
block|{
name|File
name|dir
init|=
operator|new
name|File
argument_list|(
name|FileUtil
operator|.
name|getBasedir
argument_list|()
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|dir
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|dir
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|File
name|dest
init|=
operator|new
name|File
argument_list|(
name|FileUtil
operator|.
name|getBasedir
argument_list|()
argument_list|,
literal|"target/test-repository/com/example/test/test-artifact-module-a"
argument_list|)
decl_stmt|;
name|File
name|parentPom
init|=
operator|new
name|File
argument_list|(
name|FileUtil
operator|.
name|getBasedir
argument_list|()
argument_list|,
literal|"target/test-repository/com/example/test/test-artifact-parent"
argument_list|)
decl_stmt|;
name|File
name|rootPom
init|=
operator|new
name|File
argument_list|(
name|FileUtil
operator|.
name|getBasedir
argument_list|()
argument_list|,
literal|"target/test-repository/com/example/test/test-artifact-root"
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|dest
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|parentPom
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|rootPom
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|dest
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|parentPom
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rootPom
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|File
name|copyTestArtifactWithParent
parameter_list|(
name|String
name|srcPath
parameter_list|,
name|String
name|destPath
parameter_list|)
throws|throws
name|IOException
block|{
name|File
name|src
init|=
operator|new
name|File
argument_list|(
name|FileUtil
operator|.
name|getBasedir
argument_list|()
argument_list|,
name|srcPath
argument_list|)
decl_stmt|;
name|File
name|dest
init|=
operator|new
name|File
argument_list|(
name|FileUtil
operator|.
name|getBasedir
argument_list|()
argument_list|,
name|destPath
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|copyDirectory
argument_list|(
name|src
argument_list|,
name|dest
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|dest
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|dest
return|;
block|}
block|}
end_class

end_unit

