begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|storage
operator|.
name|maven2
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ArtifactMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|Dependency
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|FacetedMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|License
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|MailingList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ProjectVersionMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|MetadataRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|MetadataResolutionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|filter
operator|.
name|ExcludesFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|storage
operator|.
name|StorageMetadataResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|reports
operator|.
name|RepositoryProblemFacet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ManagedRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|spring
operator|.
name|PlexusInSpringTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
specifier|public
class|class
name|Maven2RepositoryMetadataResolverTest
extends|extends
name|PlexusInSpringTestCase
block|{
specifier|private
name|Maven2RepositoryMetadataResolver
name|resolver
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_REPO_ID
init|=
literal|"test"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ASF_SCM_CONN_BASE
init|=
literal|"scm:svn:http://svn.apache.org/repos/asf/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ASF_SCM_DEV_CONN_BASE
init|=
literal|"scm:svn:https://svn.apache.org/repos/asf/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ASF_SCM_VIEWVC_BASE
init|=
literal|"http://svn.apache.org/viewvc/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|EMPTY_MD5
init|=
literal|"d41d8cd98f00b204e9800998ecf8427e"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|EMPTY_SHA1
init|=
literal|"da39a3ee5e6b4b0d3255bfef95601890afd80709"
decl_stmt|;
specifier|private
name|MetadataRepository
name|metadataRepository
decl_stmt|;
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|ArchivaConfiguration
name|configuration
init|=
operator|(
name|ArchivaConfiguration
operator|)
name|lookup
argument_list|(
name|ArchivaConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
name|Configuration
name|c
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|ManagedRepositoryConfiguration
name|testRepo
init|=
operator|new
name|ManagedRepositoryConfiguration
argument_list|()
decl_stmt|;
name|testRepo
operator|.
name|setId
argument_list|(
name|TEST_REPO_ID
argument_list|)
expr_stmt|;
name|testRepo
operator|.
name|setLocation
argument_list|(
name|getTestPath
argument_list|(
literal|"src/test/repositories/test"
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|addManagedRepository
argument_list|(
name|testRepo
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|save
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|resolver
operator|=
operator|(
name|Maven2RepositoryMetadataResolver
operator|)
name|lookup
argument_list|(
name|StorageMetadataResolver
operator|.
name|class
argument_list|,
literal|"maven2"
argument_list|)
expr_stmt|;
name|metadataRepository
operator|=
operator|(
name|MetadataRepository
operator|)
name|lookup
argument_list|(
name|MetadataRepository
operator|.
name|class
argument_list|)
expr_stmt|;
name|metadataRepository
operator|.
name|removeMetadataFacets
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|RepositoryProblemFacet
operator|.
name|FACET_ID
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetProjectVersionMetadata
parameter_list|()
throws|throws
name|Exception
block|{
name|ProjectVersionMetadata
name|metadata
init|=
name|resolver
operator|.
name|getProjectVersion
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-common"
argument_list|,
literal|"1.2.1"
argument_list|)
decl_stmt|;
name|MavenProjectFacet
name|facet
init|=
operator|(
name|MavenProjectFacet
operator|)
name|metadata
operator|.
name|getFacet
argument_list|(
name|MavenProjectFacet
operator|.
name|FACET_ID
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|facet
operator|.
name|getPackaging
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://archiva.apache.org/ref/1.2.1/archiva-base/archiva-common"
argument_list|,
name|metadata
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.archiva"
argument_list|,
name|facet
operator|.
name|getParent
argument_list|()
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"archiva-base"
argument_list|,
name|facet
operator|.
name|getParent
argument_list|()
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.2.1"
argument_list|,
name|facet
operator|.
name|getParent
argument_list|()
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"archiva-common"
argument_list|,
name|facet
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.archiva"
argument_list|,
name|facet
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"continuum"
argument_list|,
name|metadata
operator|.
name|getCiManagement
argument_list|()
operator|.
name|getSystem
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://vmbuild.apache.org/continuum"
argument_list|,
name|metadata
operator|.
name|getCiManagement
argument_list|()
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|metadata
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
comment|// TODO: this would be better
comment|//        assertEquals(
comment|//            "Archiva is an application for managing one or more remote repositories, including administration, artifact handling, browsing and searching.",
comment|//            metadata.getDescription() );
name|assertEquals
argument_list|(
literal|"1.2.1"
argument_list|,
name|metadata
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jira"
argument_list|,
name|metadata
operator|.
name|getIssueManagement
argument_list|()
operator|.
name|getSystem
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://jira.codehaus.org/browse/MRM"
argument_list|,
name|metadata
operator|.
name|getIssueManagement
argument_list|()
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
name|checkApacheLicense
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Archiva Base :: Common"
argument_list|,
name|metadata
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|path
init|=
literal|"archiva/tags/archiva-1.2.1/archiva-modules/archiva-base/archiva-common"
decl_stmt|;
name|assertEquals
argument_list|(
name|ASF_SCM_CONN_BASE
operator|+
name|path
argument_list|,
name|metadata
operator|.
name|getScm
argument_list|()
operator|.
name|getConnection
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ASF_SCM_DEV_CONN_BASE
operator|+
name|path
argument_list|,
name|metadata
operator|.
name|getScm
argument_list|()
operator|.
name|getDeveloperConnection
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ASF_SCM_VIEWVC_BASE
operator|+
name|path
argument_list|,
name|metadata
operator|.
name|getScm
argument_list|()
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
name|checkOrganizationApache
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|metadata
operator|.
name|getMailingLists
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertMailingList
argument_list|(
literal|"users"
argument_list|,
name|metadata
operator|.
name|getMailingLists
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"Archiva User List"
argument_list|,
literal|true
argument_list|,
literal|"http://www.nabble.com/archiva-users-f16426.html"
argument_list|)
expr_stmt|;
name|assertMailingList
argument_list|(
literal|"dev"
argument_list|,
name|metadata
operator|.
name|getMailingLists
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"Archiva Developer List"
argument_list|,
literal|true
argument_list|,
literal|"http://www.nabble.com/archiva-dev-f16427.html"
argument_list|)
expr_stmt|;
name|assertMailingList
argument_list|(
literal|"commits"
argument_list|,
name|metadata
operator|.
name|getMailingLists
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"Archiva Commits List"
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertMailingList
argument_list|(
literal|"issues"
argument_list|,
name|metadata
operator|.
name|getMailingLists
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|"Archiva Issues List"
argument_list|,
literal|false
argument_list|,
literal|"http://www.nabble.com/Archiva---Issues-f29617.html"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Dependency
argument_list|>
name|dependencies
init|=
name|metadata
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|dependencies
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"commons-lang"
argument_list|,
literal|"commons-lang"
argument_list|,
literal|"2.2"
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"commons-io"
argument_list|,
literal|"commons-io"
argument_list|,
literal|"1.4"
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"org.slf4j"
argument_list|,
literal|"slf4j-api"
argument_list|,
literal|"1.5.0"
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|"org.codehaus.plexus"
argument_list|,
literal|"plexus-component-api"
argument_list|,
literal|"1.0-alpha-22"
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|"org.codehaus.plexus"
argument_list|,
literal|"plexus-spring"
argument_list|,
literal|"1.2"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|"xalan"
argument_list|,
literal|"xalan"
argument_list|,
literal|"2.7.0"
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|6
argument_list|)
argument_list|,
literal|"dom4j"
argument_list|,
literal|"dom4j"
argument_list|,
literal|"1.6.1"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|7
argument_list|)
argument_list|,
literal|"junit"
argument_list|,
literal|"junit"
argument_list|,
literal|"3.8.1"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|8
argument_list|)
argument_list|,
literal|"easymock"
argument_list|,
literal|"easymock"
argument_list|,
literal|"1.2_Java1.3"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|assertDependency
argument_list|(
name|dependencies
operator|.
name|get
argument_list|(
literal|9
argument_list|)
argument_list|,
literal|"easymock"
argument_list|,
literal|"easymockclassextension"
argument_list|,
literal|"1.2"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
block|}
comment|// TODO: test snapshot, rest of artifacts
specifier|public
name|void
name|testGetArtifactMetadata
parameter_list|()
throws|throws
name|Exception
block|{
name|Collection
argument_list|<
name|ArtifactMetadata
argument_list|>
name|springArtifacts
init|=
name|resolver
operator|.
name|getArtifacts
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.codehaus.plexus"
argument_list|,
literal|"plexus-spring"
argument_list|,
literal|"1.2"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|artifacts
init|=
operator|new
name|ArrayList
argument_list|<
name|ArtifactMetadata
argument_list|>
argument_list|(
name|springArtifacts
argument_list|)
decl_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|artifacts
argument_list|,
operator|new
name|Comparator
argument_list|<
name|ArtifactMetadata
argument_list|>
argument_list|()
block|{
specifier|public
name|int
name|compare
parameter_list|(
name|ArtifactMetadata
name|o1
parameter_list|,
name|ArtifactMetadata
name|o2
parameter_list|)
block|{
return|return
name|o1
operator|.
name|getId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|o2
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ArtifactMetadata
name|artifactMetadata
init|=
name|artifacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"plexus-spring-1.2-sources.jar"
argument_list|,
name|artifactMetadata
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|MavenArtifactFacet
name|facet
init|=
operator|(
name|MavenArtifactFacet
operator|)
name|artifactMetadata
operator|.
name|getFacet
argument_list|(
name|MavenArtifactFacet
operator|.
name|FACET_ID
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|facet
operator|.
name|getBuildNumber
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|facet
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sources"
argument_list|,
name|facet
operator|.
name|getClassifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// TODO
comment|//        assertEquals( "java-source", facet.getType() );
name|artifactMetadata
operator|=
name|artifacts
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"plexus-spring-1.2.jar"
argument_list|,
name|artifactMetadata
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|facet
operator|=
operator|(
name|MavenArtifactFacet
operator|)
name|artifactMetadata
operator|.
name|getFacet
argument_list|(
name|MavenArtifactFacet
operator|.
name|FACET_ID
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|facet
operator|.
name|getBuildNumber
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|facet
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|facet
operator|.
name|getClassifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// TODO
comment|//        assertEquals( "jar", facet.getType() );
name|artifactMetadata
operator|=
name|artifacts
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"plexus-spring-1.2.pom"
argument_list|,
name|artifactMetadata
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|facet
operator|=
operator|(
name|MavenArtifactFacet
operator|)
name|artifactMetadata
operator|.
name|getFacet
argument_list|(
name|MavenArtifactFacet
operator|.
name|FACET_ID
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|facet
operator|.
name|getBuildNumber
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|facet
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|facet
operator|.
name|getClassifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// TODO
comment|//        assertEquals( "pom", facet.getType() );
block|}
specifier|private
name|void
name|assertDependency
parameter_list|(
name|Dependency
name|dependency
parameter_list|,
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|)
block|{
name|assertDependency
argument_list|(
name|dependency
argument_list|,
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
literal|"compile"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertDependency
parameter_list|(
name|Dependency
name|dependency
parameter_list|,
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|String
name|scope
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|artifactId
argument_list|,
name|dependency
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|dependency
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|version
argument_list|,
name|dependency
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|groupId
argument_list|,
name|dependency
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|scope
argument_list|,
name|dependency
operator|.
name|getScope
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|dependency
operator|.
name|getClassifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|dependency
operator|.
name|getSystemPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetProjectVersionMetadataForTimestampedSnapshot
parameter_list|()
throws|throws
name|Exception
block|{
name|ProjectVersionMetadata
name|metadata
init|=
name|resolver
operator|.
name|getProjectVersion
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache"
argument_list|,
literal|"apache"
argument_list|,
literal|"5-SNAPSHOT"
argument_list|)
decl_stmt|;
name|MavenProjectFacet
name|facet
init|=
operator|(
name|MavenProjectFacet
operator|)
name|metadata
operator|.
name|getFacet
argument_list|(
name|MavenProjectFacet
operator|.
name|FACET_ID
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"pom"
argument_list|,
name|facet
operator|.
name|getPackaging
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://www.apache.org/"
argument_list|,
name|metadata
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|facet
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache"
argument_list|,
name|facet
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"apache"
argument_list|,
name|facet
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|metadata
operator|.
name|getCiManagement
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|metadata
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
comment|// TODO: this would be better
comment|//        assertEquals(
comment|//            "The Apache Software Foundation provides support for the Apache community of open-source software projects. " +
comment|//                "The Apache projects are characterized by a collaborative, consensus based development process, an open " +
comment|//                "and pragmatic software license, and a desire to create high quality software that leads the way in its " +
comment|//                "field. We consider ourselves not simply a group of projects sharing a server, but rather a community of " +
comment|//                "developers and users.", metadata.getDescription() );
name|assertEquals
argument_list|(
literal|"5-SNAPSHOT"
argument_list|,
name|metadata
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|metadata
operator|.
name|getIssueManagement
argument_list|()
argument_list|)
expr_stmt|;
name|checkApacheLicense
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The Apache Software Foundation"
argument_list|,
name|metadata
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|path
init|=
literal|"maven/pom/trunk/asf"
decl_stmt|;
name|assertEquals
argument_list|(
name|ASF_SCM_CONN_BASE
operator|+
name|path
argument_list|,
name|metadata
operator|.
name|getScm
argument_list|()
operator|.
name|getConnection
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ASF_SCM_DEV_CONN_BASE
operator|+
name|path
argument_list|,
name|metadata
operator|.
name|getScm
argument_list|()
operator|.
name|getDeveloperConnection
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ASF_SCM_VIEWVC_BASE
operator|+
name|path
argument_list|,
name|metadata
operator|.
name|getScm
argument_list|()
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
name|checkOrganizationApache
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|metadata
operator|.
name|getMailingLists
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertMailingList
argument_list|(
name|metadata
operator|.
name|getMailingLists
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"Apache Announce List"
argument_list|,
literal|"http://mail-archives.apache.org/mod_mbox/www-announce/"
argument_list|,
literal|"announce@apache.org"
argument_list|,
literal|"announce-subscribe@apache.org"
argument_list|,
literal|"announce-unsubscribe@apache.org"
argument_list|,
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|Dependency
operator|>
name|emptyList
argument_list|()
argument_list|,
name|metadata
operator|.
name|getDependencies
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetProjectVersionMetadataForTimestampedSnapshotMissingMetadata
parameter_list|()
throws|throws
name|Exception
block|{
name|FacetedMetadata
name|metadata
init|=
name|resolver
operator|.
name|getProjectVersion
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"missing-metadata"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetProjectVersionMetadataForTimestampedSnapshotMalformedMetadata
parameter_list|()
throws|throws
name|Exception
block|{
name|FacetedMetadata
name|metadata
init|=
name|resolver
operator|.
name|getProjectVersion
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"malformed-metadata"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetProjectVersionMetadataForTimestampedSnapshotIncompleteMetadata
parameter_list|()
throws|throws
name|Exception
block|{
name|FacetedMetadata
name|metadata
init|=
name|resolver
operator|.
name|getProjectVersion
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"incomplete-metadata"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetProjectVersionMetadataForInvalidPom
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|RepositoryProblemFacet
operator|.
name|FACET_ID
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|resolver
operator|.
name|getProjectVersion
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"invalid-pom"
argument_list|,
literal|"1.0"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have received an exception due to invalid POM"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetadataResolutionException
name|e
parameter_list|)
block|{
name|assertFalse
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|RepositoryProblemFacet
operator|.
name|FACET_ID
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|RepositoryProblemFacet
name|facet
init|=
operator|(
name|RepositoryProblemFacet
operator|)
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|RepositoryProblemFacet
operator|.
name|FACET_ID
argument_list|,
literal|"com.example.test/invalid-pom/1.0"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"invalid-pom"
argument_list|,
name|facet
operator|.
name|getProblem
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testGetProjectVersionMetadataForMislocatedPom
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|RepositoryProblemFacet
operator|.
name|FACET_ID
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|resolver
operator|.
name|getProjectVersion
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"mislocated-pom"
argument_list|,
literal|"1.0"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have received an exception due to mislocated POM"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetadataResolutionException
name|e
parameter_list|)
block|{
name|assertFalse
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|RepositoryProblemFacet
operator|.
name|FACET_ID
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|RepositoryProblemFacet
name|facet
init|=
operator|(
name|RepositoryProblemFacet
operator|)
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|RepositoryProblemFacet
operator|.
name|FACET_ID
argument_list|,
literal|"com.example.test/mislocated-pom/1.0"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"mislocated-pom"
argument_list|,
name|facet
operator|.
name|getProblem
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testGetProjectVersionMetadataForMissingPom
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|RepositoryProblemFacet
operator|.
name|FACET_ID
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|FacetedMetadata
name|metadata
init|=
name|resolver
operator|.
name|getProjectVersion
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"missing-pom"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|metadataRepository
operator|.
name|getMetadataFacets
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|RepositoryProblemFacet
operator|.
name|FACET_ID
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|RepositoryProblemFacet
name|facet
init|=
operator|(
name|RepositoryProblemFacet
operator|)
name|metadataRepository
operator|.
name|getMetadataFacet
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|RepositoryProblemFacet
operator|.
name|FACET_ID
argument_list|,
literal|"com.example.test/missing-pom/1.0"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"missing-pom"
argument_list|,
name|facet
operator|.
name|getProblem
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetRootNamespaces
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"com"
argument_list|,
literal|"org"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getRootNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetNamespaces
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"example"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"test"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|resolver
operator|.
name|getNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"apache"
argument_list|,
literal|"codehaus"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"archiva"
argument_list|,
literal|"maven"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|resolver
operator|.
name|getNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.archiva"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"plugins"
argument_list|,
literal|"shared"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.maven"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|resolver
operator|.
name|getNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.maven.plugins"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|resolver
operator|.
name|getNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.maven.shared"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"plexus"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.codehaus"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|resolver
operator|.
name|getNamespaces
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.codehaus.plexus"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetProjects
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|resolver
operator|.
name|getProjects
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|resolver
operator|.
name|getProjects
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"incomplete-metadata"
argument_list|,
literal|"invalid-pom"
argument_list|,
literal|"malformed-metadata"
argument_list|,
literal|"mislocated-pom"
argument_list|,
literal|"missing-metadata"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getProjects
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|resolver
operator|.
name|getProjects
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"apache"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getProjects
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"archiva"
argument_list|,
literal|"archiva-base"
argument_list|,
literal|"archiva-common"
argument_list|,
literal|"archiva-modules"
argument_list|,
literal|"archiva-parent"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getProjects
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.archiva"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|resolver
operator|.
name|getProjects
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.maven"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|resolver
operator|.
name|getProjects
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.maven.plugins"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"maven-downloader"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getProjects
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.maven.shared"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetProjectVersions
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1.0-SNAPSHOT"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"incomplete-metadata"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1.0-SNAPSHOT"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"malformed-metadata"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1.0-SNAPSHOT"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"missing-metadata"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1.0"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"invalid-pom"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"4"
argument_list|,
literal|"5-SNAPSHOT"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache"
argument_list|,
literal|"apache"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1.2.1"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.archiva"
argument_list|,
literal|"archiva"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1.2.1"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-base"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1.2.1"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-common"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1.2.1"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-modules"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"3"
argument_list|)
argument_list|,
name|resolver
operator|.
name|getProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-parent"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|resolver
operator|.
name|getProjectVersions
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.maven.shared"
argument_list|,
literal|"maven-downloader"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetArtifacts
parameter_list|()
block|{
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|artifacts
init|=
operator|new
name|ArrayList
argument_list|<
name|ArtifactMetadata
argument_list|>
argument_list|(
name|resolver
operator|.
name|getArtifacts
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.codehaus.plexus"
argument_list|,
literal|"plexus-spring"
argument_list|,
literal|"1.2"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|artifacts
argument_list|,
operator|new
name|Comparator
argument_list|<
name|ArtifactMetadata
argument_list|>
argument_list|()
block|{
specifier|public
name|int
name|compare
parameter_list|(
name|ArtifactMetadata
name|o1
parameter_list|,
name|ArtifactMetadata
name|o2
parameter_list|)
block|{
return|return
name|o1
operator|.
name|getId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|o2
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertArtifact
argument_list|(
name|artifacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"plexus-spring-1.2-sources.jar"
argument_list|,
literal|0
argument_list|,
name|EMPTY_SHA1
argument_list|,
name|EMPTY_MD5
argument_list|)
expr_stmt|;
name|assertArtifact
argument_list|(
name|artifacts
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"plexus-spring-1.2.jar"
argument_list|,
literal|0
argument_list|,
name|EMPTY_SHA1
argument_list|,
name|EMPTY_MD5
argument_list|)
expr_stmt|;
name|assertArtifact
argument_list|(
name|artifacts
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"plexus-spring-1.2.pom"
argument_list|,
literal|7407
argument_list|,
literal|"96b14cf880e384b2d15e8193c57b65c5420ca4c5"
argument_list|,
literal|"f83aa25f016212a551a4b2249985effc"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetArtifactsFiltered
parameter_list|()
block|{
name|ExcludesFilter
argument_list|<
name|String
argument_list|>
name|filter
init|=
operator|new
name|ExcludesFilter
argument_list|<
name|String
argument_list|>
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"plexus-spring-1.2.pom"
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|artifacts
init|=
operator|new
name|ArrayList
argument_list|<
name|ArtifactMetadata
argument_list|>
argument_list|(
name|resolver
operator|.
name|getArtifacts
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.codehaus.plexus"
argument_list|,
literal|"plexus-spring"
argument_list|,
literal|"1.2"
argument_list|,
name|filter
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|artifacts
argument_list|,
operator|new
name|Comparator
argument_list|<
name|ArtifactMetadata
argument_list|>
argument_list|()
block|{
specifier|public
name|int
name|compare
parameter_list|(
name|ArtifactMetadata
name|o1
parameter_list|,
name|ArtifactMetadata
name|o2
parameter_list|)
block|{
return|return
name|o1
operator|.
name|getId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|o2
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertArtifact
argument_list|(
name|artifacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"plexus-spring-1.2-sources.jar"
argument_list|,
literal|0
argument_list|,
name|EMPTY_SHA1
argument_list|,
name|EMPTY_MD5
argument_list|)
expr_stmt|;
name|assertArtifact
argument_list|(
name|artifacts
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"plexus-spring-1.2.jar"
argument_list|,
literal|0
argument_list|,
name|EMPTY_SHA1
argument_list|,
name|EMPTY_MD5
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetArtifactsTimestampedSnapshots
parameter_list|()
block|{
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|artifacts
init|=
operator|new
name|ArrayList
argument_list|<
name|ArtifactMetadata
argument_list|>
argument_list|(
name|resolver
operator|.
name|getArtifacts
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"com.example.test"
argument_list|,
literal|"missing-metadata"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ArtifactMetadata
name|artifact
init|=
name|artifacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"missing-metadata-1.0-20091101.112233-1.pom"
argument_list|,
name|artifact
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"com.example.test"
argument_list|,
name|artifact
operator|.
name|getNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"missing-metadata"
argument_list|,
name|artifact
operator|.
name|getProject
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.0-20091101.112233-1"
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|artifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertArtifact
parameter_list|(
name|ArtifactMetadata
name|artifact
parameter_list|,
name|String
name|id
parameter_list|,
name|int
name|size
parameter_list|,
name|String
name|sha1
parameter_list|,
name|String
name|md5
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|id
argument_list|,
name|artifact
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|md5
argument_list|,
name|artifact
operator|.
name|getMd5
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|sha1
argument_list|,
name|artifact
operator|.
name|getSha1
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|size
argument_list|,
name|artifact
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.codehaus.plexus"
argument_list|,
name|artifact
operator|.
name|getNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"plexus-spring"
argument_list|,
name|artifact
operator|.
name|getProject
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.2"
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|artifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertMailingList
parameter_list|(
name|MailingList
name|mailingList
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|archive
parameter_list|,
name|String
name|post
parameter_list|,
name|String
name|subscribe
parameter_list|,
name|String
name|unsubscribe
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|otherArchives
parameter_list|,
name|boolean
name|allowPost
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|archive
argument_list|,
name|mailingList
operator|.
name|getMainArchiveUrl
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|allowPost
condition|)
block|{
name|assertEquals
argument_list|(
name|post
argument_list|,
name|mailingList
operator|.
name|getPostAddress
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertNull
argument_list|(
name|mailingList
operator|.
name|getPostAddress
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|subscribe
argument_list|,
name|mailingList
operator|.
name|getSubscribeAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|unsubscribe
argument_list|,
name|mailingList
operator|.
name|getUnsubscribeAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|name
argument_list|,
name|mailingList
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|otherArchives
argument_list|,
name|mailingList
operator|.
name|getOtherArchives
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertMailingList
parameter_list|(
name|String
name|prefix
parameter_list|,
name|MailingList
name|mailingList
parameter_list|,
name|String
name|name
parameter_list|,
name|boolean
name|allowPost
parameter_list|,
name|String
name|nabbleUrl
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|otherArchives
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|otherArchives
operator|.
name|add
argument_list|(
literal|"http://www.mail-archive.com/"
operator|+
name|prefix
operator|+
literal|"@archiva.apache.org"
argument_list|)
expr_stmt|;
if|if
condition|(
name|nabbleUrl
operator|!=
literal|null
condition|)
block|{
name|otherArchives
operator|.
name|add
argument_list|(
name|nabbleUrl
argument_list|)
expr_stmt|;
block|}
name|otherArchives
operator|.
name|add
argument_list|(
literal|"http://markmail.org/list/org.apache.archiva."
operator|+
name|prefix
argument_list|)
expr_stmt|;
name|assertMailingList
argument_list|(
name|mailingList
argument_list|,
name|name
argument_list|,
literal|"http://mail-archives.apache.org/mod_mbox/archiva-"
operator|+
name|prefix
operator|+
literal|"/"
argument_list|,
name|prefix
operator|+
literal|"@archiva.apache.org"
argument_list|,
name|prefix
operator|+
literal|"-subscribe@archiva.apache.org"
argument_list|,
name|prefix
operator|+
literal|"-unsubscribe@archiva.apache.org"
argument_list|,
name|otherArchives
argument_list|,
name|allowPost
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkApacheLicense
parameter_list|(
name|ProjectVersionMetadata
name|metadata
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|License
argument_list|(
literal|"The Apache Software License, Version 2.0"
argument_list|,
literal|"http://www.apache.org/licenses/LICENSE-2.0.txt"
argument_list|)
argument_list|)
argument_list|,
name|metadata
operator|.
name|getLicenses
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkOrganizationApache
parameter_list|(
name|ProjectVersionMetadata
name|metadata
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"The Apache Software Foundation"
argument_list|,
name|metadata
operator|.
name|getOrganization
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://www.apache.org/"
argument_list|,
name|metadata
operator|.
name|getOrganization
argument_list|()
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

