begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|storage
operator|.
name|maven2
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ProjectVersionMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|MetadataResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ManagedRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|spring
operator|.
name|PlexusInSpringTestCase
import|;
end_import

begin_class
specifier|public
class|class
name|Maven2RepositoryMetadataResolverTest
extends|extends
name|PlexusInSpringTestCase
block|{
specifier|private
name|Maven2RepositoryMetadataResolver
name|resolver
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_REPO_ID
init|=
literal|"test"
decl_stmt|;
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|ArchivaConfiguration
name|configuration
init|=
operator|(
name|ArchivaConfiguration
operator|)
name|lookup
argument_list|(
name|ArchivaConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
name|Configuration
name|c
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|ManagedRepositoryConfiguration
name|testRepo
init|=
operator|new
name|ManagedRepositoryConfiguration
argument_list|()
decl_stmt|;
name|testRepo
operator|.
name|setId
argument_list|(
name|TEST_REPO_ID
argument_list|)
expr_stmt|;
name|testRepo
operator|.
name|setLocation
argument_list|(
name|getTestPath
argument_list|(
literal|"src/test/repositories/test"
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|addManagedRepository
argument_list|(
name|testRepo
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|save
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|resolver
operator|=
operator|(
name|Maven2RepositoryMetadataResolver
operator|)
name|lookup
argument_list|(
name|MetadataResolver
operator|.
name|class
argument_list|,
literal|"maven2"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetProjectVersionMetadata
parameter_list|()
block|{
name|ProjectVersionMetadata
name|metadata
init|=
name|resolver
operator|.
name|getProjectVersion
argument_list|(
name|TEST_REPO_ID
argument_list|,
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-common"
argument_list|,
literal|"1.2.1"
argument_list|)
decl_stmt|;
name|MavenProjectFacet
name|facet
init|=
operator|(
name|MavenProjectFacet
operator|)
name|metadata
operator|.
name|getFacet
argument_list|(
name|MavenProjectFacet
operator|.
name|FACET_ID
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|facet
operator|.
name|getPackaging
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://archiva.apache.org/ref/1.2.1/archiva-base/archiva-common"
argument_list|,
name|metadata
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
comment|// TODO: more testing
block|}
comment|//    public void testGetProjectVersionMetadataForTimestampedSnapshot()
comment|//    {
comment|//        ProjectVersionMetadata metadata =
comment|//            resolver.getProjectVersion( TEST_REPO_ID, "org.apache", "apache", "5-SNAPSHOT" );
comment|//        MavenProjectFacet facet = (MavenProjectFacet) metadata.getFacet( MavenProjectFacet.FACET_ID );
comment|//        assertEquals( "jar", facet.getPackaging() );
comment|//        assertEquals( "http://www.apache.org/", metadata.getUrl() );
comment|//        // TODO: more testing
comment|//    }
block|}
end_class

end_unit

