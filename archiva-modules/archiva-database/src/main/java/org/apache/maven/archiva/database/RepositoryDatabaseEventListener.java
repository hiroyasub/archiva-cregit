begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaArtifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ManagedRepositoryContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|events
operator|.
name|RepositoryListener
import|;
end_import

begin_comment
comment|/**  * Process repository management events and respond appropriately.  *   * @plexus.component role="org.apache.maven.archiva.repository.events.RepositoryListener" role-hint="database"  */
end_comment

begin_class
specifier|public
class|class
name|RepositoryDatabaseEventListener
implements|implements
name|RepositoryListener
block|{
comment|/**      * @plexus.requirement role-hint="jdo"      */
specifier|private
name|ArtifactDAO
name|artifactDAO
decl_stmt|;
specifier|public
name|void
name|deleteArtifact
parameter_list|(
name|ManagedRepositoryContent
name|repository
parameter_list|,
name|ArchivaArtifact
name|artifact
parameter_list|)
block|{
try|try
block|{
name|ArchivaArtifact
name|queriedArtifact
init|=
name|artifactDAO
operator|.
name|getArtifact
argument_list|(
name|artifact
operator|.
name|getGroupId
argument_list|()
argument_list|,
name|artifact
operator|.
name|getArtifactId
argument_list|()
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|,
name|artifact
operator|.
name|getClassifier
argument_list|()
argument_list|,
name|artifact
operator|.
name|getType
argument_list|()
argument_list|,
name|repository
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|artifactDAO
operator|.
name|deleteArtifact
argument_list|(
name|queriedArtifact
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ArchivaDatabaseException
name|e
parameter_list|)
block|{
comment|// ignored
block|}
block|}
block|}
end_class

end_unit

