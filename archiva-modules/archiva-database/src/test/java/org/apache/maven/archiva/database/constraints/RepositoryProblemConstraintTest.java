begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|constraints
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|AbstractArchivaDatabaseTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ArchivaDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|Constraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|RepositoryProblemDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|RepositoryProblem
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * RepositoryProblemConstraintTest  */
end_comment

begin_class
specifier|public
class|class
name|RepositoryProblemConstraintTest
extends|extends
name|AbstractArchivaDatabaseTestCase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|GROUP_ID_1
init|=
literal|"org.apache.maven.archiva.test.1"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|GROUP_ID_2
init|=
literal|"org.apache.maven.archiva.test.2"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|GROUP_ID_3
init|=
literal|"org.apache.maven.archiva.test.3"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|GROUP_ID_4
init|=
literal|"org.apache.maven.archiva.test.4"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|GROUP_ID_PARTIAL
init|=
literal|"org.apache.maven.archiva"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|REPO_ID_1
init|=
literal|"test-repo-1"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|REPO_ID_2
init|=
literal|"test-repo-2"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|REPO_ID_3
init|=
literal|"test-repo-3"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|REPO_ID_4
init|=
literal|"test-repo-4"
decl_stmt|;
specifier|private
name|RepositoryProblemDAO
name|repoProblemDao
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|ArchivaDAO
name|dao
init|=
operator|(
name|ArchivaDAO
operator|)
name|lookup
argument_list|(
name|ArchivaDAO
operator|.
name|ROLE
argument_list|,
literal|"jdo"
argument_list|)
decl_stmt|;
name|repoProblemDao
operator|=
name|dao
operator|.
name|getRepositoryProblemDAO
argument_list|()
expr_stmt|;
block|}
specifier|public
name|RepositoryProblem
name|createRepoProblem
parameter_list|(
name|String
name|groupId
parameter_list|,
name|String
name|repoId
parameter_list|)
block|{
name|RepositoryProblem
name|repoProblem
init|=
operator|new
name|RepositoryProblem
argument_list|()
decl_stmt|;
name|repoProblem
operator|.
name|setGroupId
argument_list|(
name|groupId
argument_list|)
expr_stmt|;
name|repoProblem
operator|.
name|setArtifactId
argument_list|(
literal|"artifactId"
argument_list|)
expr_stmt|;
name|repoProblem
operator|.
name|setMessage
argument_list|(
literal|"message"
argument_list|)
expr_stmt|;
name|repoProblem
operator|.
name|setOrigin
argument_list|(
literal|"origin"
argument_list|)
expr_stmt|;
name|repoProblem
operator|.
name|setPath
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|repoProblem
operator|.
name|setRepositoryId
argument_list|(
name|repoId
argument_list|)
expr_stmt|;
name|repoProblem
operator|.
name|setType
argument_list|(
literal|"type"
argument_list|)
expr_stmt|;
name|repoProblem
operator|.
name|setVersion
argument_list|(
literal|"version"
argument_list|)
expr_stmt|;
return|return
name|repoProblem
return|;
block|}
specifier|public
name|void
name|testGroupIdConstraint
parameter_list|()
throws|throws
name|Exception
block|{
name|repoProblemDao
operator|.
name|saveRepositoryProblem
argument_list|(
name|createRepoProblem
argument_list|(
name|GROUP_ID_1
argument_list|,
name|REPO_ID_1
argument_list|)
argument_list|)
expr_stmt|;
name|repoProblemDao
operator|.
name|saveRepositoryProblem
argument_list|(
name|createRepoProblem
argument_list|(
name|GROUP_ID_2
argument_list|,
name|REPO_ID_1
argument_list|)
argument_list|)
expr_stmt|;
name|repoProblemDao
operator|.
name|saveRepositoryProblem
argument_list|(
name|createRepoProblem
argument_list|(
name|GROUP_ID_2
argument_list|,
name|REPO_ID_1
argument_list|)
argument_list|)
expr_stmt|;
name|repoProblemDao
operator|.
name|saveRepositoryProblem
argument_list|(
name|createRepoProblem
argument_list|(
name|GROUP_ID_3
argument_list|,
name|REPO_ID_1
argument_list|)
argument_list|)
expr_stmt|;
name|repoProblemDao
operator|.
name|saveRepositoryProblem
argument_list|(
name|createRepoProblem
argument_list|(
name|GROUP_ID_3
argument_list|,
name|REPO_ID_1
argument_list|)
argument_list|)
expr_stmt|;
name|repoProblemDao
operator|.
name|saveRepositoryProblem
argument_list|(
name|createRepoProblem
argument_list|(
name|GROUP_ID_3
argument_list|,
name|REPO_ID_1
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|1
argument_list|,
operator|new
name|RepositoryProblemConstraint
argument_list|(
name|GROUP_ID_1
argument_list|,
name|REPO_ID_1
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|2
argument_list|,
operator|new
name|RepositoryProblemConstraint
argument_list|(
name|GROUP_ID_2
argument_list|,
name|REPO_ID_1
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|3
argument_list|,
operator|new
name|RepositoryProblemConstraint
argument_list|(
name|GROUP_ID_3
argument_list|,
name|REPO_ID_1
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|0
argument_list|,
operator|new
name|RepositoryProblemConstraint
argument_list|(
name|GROUP_ID_4
argument_list|,
name|REPO_ID_1
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|6
argument_list|,
operator|new
name|RepositoryProblemConstraint
argument_list|(
name|GROUP_ID_PARTIAL
argument_list|,
name|REPO_ID_1
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testRepoIdConstraint
parameter_list|()
throws|throws
name|Exception
block|{
name|repoProblemDao
operator|.
name|saveRepositoryProblem
argument_list|(
name|createRepoProblem
argument_list|(
name|GROUP_ID_1
argument_list|,
name|REPO_ID_1
argument_list|)
argument_list|)
expr_stmt|;
name|repoProblemDao
operator|.
name|saveRepositoryProblem
argument_list|(
name|createRepoProblem
argument_list|(
name|GROUP_ID_1
argument_list|,
name|REPO_ID_2
argument_list|)
argument_list|)
expr_stmt|;
name|repoProblemDao
operator|.
name|saveRepositoryProblem
argument_list|(
name|createRepoProblem
argument_list|(
name|GROUP_ID_1
argument_list|,
name|REPO_ID_2
argument_list|)
argument_list|)
expr_stmt|;
name|repoProblemDao
operator|.
name|saveRepositoryProblem
argument_list|(
name|createRepoProblem
argument_list|(
name|GROUP_ID_1
argument_list|,
name|REPO_ID_3
argument_list|)
argument_list|)
expr_stmt|;
name|repoProblemDao
operator|.
name|saveRepositoryProblem
argument_list|(
name|createRepoProblem
argument_list|(
name|GROUP_ID_1
argument_list|,
name|REPO_ID_3
argument_list|)
argument_list|)
expr_stmt|;
name|repoProblemDao
operator|.
name|saveRepositoryProblem
argument_list|(
name|createRepoProblem
argument_list|(
name|GROUP_ID_1
argument_list|,
name|REPO_ID_3
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|1
argument_list|,
operator|new
name|RepositoryProblemConstraint
argument_list|(
name|GROUP_ID_1
argument_list|,
name|REPO_ID_1
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|2
argument_list|,
operator|new
name|RepositoryProblemConstraint
argument_list|(
name|GROUP_ID_1
argument_list|,
name|REPO_ID_2
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|3
argument_list|,
operator|new
name|RepositoryProblemConstraint
argument_list|(
name|GROUP_ID_1
argument_list|,
name|REPO_ID_3
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|0
argument_list|,
operator|new
name|RepositoryProblemConstraint
argument_list|(
name|GROUP_ID_1
argument_list|,
name|REPO_ID_4
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|1
argument_list|,
operator|new
name|RepositoryProblemConstraint
argument_list|(
name|GROUP_ID_PARTIAL
argument_list|,
name|REPO_ID_1
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|2
argument_list|,
operator|new
name|RepositoryProblemConstraint
argument_list|(
name|GROUP_ID_PARTIAL
argument_list|,
name|REPO_ID_2
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|3
argument_list|,
operator|new
name|RepositoryProblemConstraint
argument_list|(
name|GROUP_ID_PARTIAL
argument_list|,
name|REPO_ID_3
argument_list|)
argument_list|)
expr_stmt|;
name|assertConstraint
argument_list|(
literal|0
argument_list|,
operator|new
name|RepositoryProblemConstraint
argument_list|(
name|GROUP_ID_PARTIAL
argument_list|,
name|REPO_ID_4
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertConstraint
parameter_list|(
name|int
name|expectedHits
parameter_list|,
name|Constraint
name|constraint
parameter_list|)
throws|throws
name|Exception
block|{
name|List
name|results
init|=
name|repoProblemDao
operator|.
name|queryRepositoryProblems
argument_list|(
name|constraint
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Repository Problems: Not Null"
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Repository Problems: Results.size"
argument_list|,
name|expectedHits
argument_list|,
name|results
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

