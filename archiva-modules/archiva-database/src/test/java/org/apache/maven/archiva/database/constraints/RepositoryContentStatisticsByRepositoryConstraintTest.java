begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|constraints
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|AbstractArchivaDatabaseTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|Constraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|RepositoryContentStatistics
import|;
end_import

begin_comment
comment|/**  * RepositoryContentStatisticsByRepositoryConstraintTest  *   * @version  */
end_comment

begin_class
specifier|public
class|class
name|RepositoryContentStatisticsByRepositoryConstraintTest
extends|extends
name|AbstractArchivaDatabaseTestCase
block|{
specifier|private
name|RepositoryContentStatistics
name|createStats
parameter_list|(
name|String
name|repoId
parameter_list|,
name|String
name|timestamp
parameter_list|,
name|long
name|duration
parameter_list|,
name|long
name|totalfiles
parameter_list|,
name|long
name|newfiles
parameter_list|)
throws|throws
name|Exception
block|{
name|RepositoryContentStatistics
name|stats
init|=
operator|new
name|RepositoryContentStatistics
argument_list|()
decl_stmt|;
name|stats
operator|.
name|setRepositoryId
argument_list|(
name|repoId
argument_list|)
expr_stmt|;
name|stats
operator|.
name|setDuration
argument_list|(
name|duration
argument_list|)
expr_stmt|;
name|stats
operator|.
name|setNewFileCount
argument_list|(
name|newfiles
argument_list|)
expr_stmt|;
name|stats
operator|.
name|setTotalFileCount
argument_list|(
name|totalfiles
argument_list|)
expr_stmt|;
name|stats
operator|.
name|setWhenGathered
argument_list|(
name|toDate
argument_list|(
name|timestamp
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|stats
return|;
block|}
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|dao
operator|.
name|getRepositoryContentStatisticsDAO
argument_list|()
operator|.
name|saveRepositoryContentStatistics
argument_list|(
name|createStats
argument_list|(
literal|"internal"
argument_list|,
literal|"2007/10/21 8:00:00"
argument_list|,
literal|20000
argument_list|,
literal|12000
argument_list|,
literal|400
argument_list|)
argument_list|)
expr_stmt|;
name|dao
operator|.
name|getRepositoryContentStatisticsDAO
argument_list|()
operator|.
name|saveRepositoryContentStatistics
argument_list|(
name|createStats
argument_list|(
literal|"internal"
argument_list|,
literal|"2007/10/20 8:00:00"
argument_list|,
literal|20000
argument_list|,
literal|11800
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|dao
operator|.
name|getRepositoryContentStatisticsDAO
argument_list|()
operator|.
name|saveRepositoryContentStatistics
argument_list|(
name|createStats
argument_list|(
literal|"internal"
argument_list|,
literal|"2007/10/19 8:00:00"
argument_list|,
literal|20000
argument_list|,
literal|11800
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|dao
operator|.
name|getRepositoryContentStatisticsDAO
argument_list|()
operator|.
name|saveRepositoryContentStatistics
argument_list|(
name|createStats
argument_list|(
literal|"internal"
argument_list|,
literal|"2007/10/18 8:00:00"
argument_list|,
literal|20000
argument_list|,
literal|11700
argument_list|,
literal|320
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testStats
parameter_list|()
throws|throws
name|Exception
block|{
name|Constraint
name|constraint
init|=
operator|new
name|RepositoryContentStatisticsByRepositoryConstraint
argument_list|(
literal|"internal"
argument_list|)
decl_stmt|;
name|List
name|results
init|=
name|dao
operator|.
name|getRepositoryContentStatisticsDAO
argument_list|()
operator|.
name|queryRepositoryContentStatistics
argument_list|(
name|constraint
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Stats: results (not null)"
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Stats: results.size"
argument_list|,
literal|4
argument_list|,
name|results
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"internal"
argument_list|,
operator|(
operator|(
name|RepositoryContentStatistics
operator|)
name|results
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"internal"
argument_list|,
operator|(
operator|(
name|RepositoryContentStatistics
operator|)
name|results
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"internal"
argument_list|,
operator|(
operator|(
name|RepositoryContentStatistics
operator|)
name|results
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|)
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"internal"
argument_list|,
operator|(
operator|(
name|RepositoryContentStatistics
operator|)
name|results
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|)
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testStatsWithDateRange
parameter_list|()
throws|throws
name|Exception
block|{
name|Constraint
name|constraint
init|=
operator|new
name|RepositoryContentStatisticsByRepositoryConstraint
argument_list|(
literal|"internal"
argument_list|,
name|toDate
argument_list|(
literal|"2007/10/18 8:00:00"
argument_list|)
argument_list|,
name|toDate
argument_list|(
literal|"2007/10/20 8:00:00"
argument_list|)
argument_list|)
decl_stmt|;
name|List
name|results
init|=
name|dao
operator|.
name|getRepositoryContentStatisticsDAO
argument_list|()
operator|.
name|queryRepositoryContentStatistics
argument_list|(
name|constraint
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Stats: results (not null)"
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Stats: results.size"
argument_list|,
literal|3
argument_list|,
name|results
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"internal"
argument_list|,
operator|(
operator|(
name|RepositoryContentStatistics
operator|)
name|results
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|toDate
argument_list|(
literal|"2007/10/20 8:00:00"
argument_list|)
argument_list|,
operator|(
operator|(
name|RepositoryContentStatistics
operator|)
name|results
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getWhenGathered
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"internal"
argument_list|,
operator|(
operator|(
name|RepositoryContentStatistics
operator|)
name|results
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|toDate
argument_list|(
literal|"2007/10/19 8:00:00"
argument_list|)
argument_list|,
operator|(
operator|(
name|RepositoryContentStatistics
operator|)
name|results
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getWhenGathered
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"internal"
argument_list|,
operator|(
operator|(
name|RepositoryContentStatistics
operator|)
name|results
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|)
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|toDate
argument_list|(
literal|"2007/10/18 8:00:00"
argument_list|)
argument_list|,
operator|(
operator|(
name|RepositoryContentStatistics
operator|)
name|results
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|)
operator|.
name|getWhenGathered
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

