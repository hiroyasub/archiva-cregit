begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|scanner
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|filelock
operator|.
name|DefaultFileLockManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|filelock
operator|.
name|FileLockManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|consumers
operator|.
name|InvalidRepositoryContentConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|consumers
operator|.
name|KnownRepositoryContentConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|base
operator|.
name|managed
operator|.
name|BasicManagedRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|base
operator|.
name|remote
operator|.
name|BasicRemoteRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|EditableManagedRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|EditableRemoteRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ManagedRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|storage
operator|.
name|fs
operator|.
name|FilesystemStorage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|scanner
operator|.
name|mock
operator|.
name|ManagedRepositoryContentMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|test
operator|.
name|utils
operator|.
name|ArchivaSpringJUnit4ClassRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|attribute
operator|.
name|FileTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TimeZone
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_comment
comment|/**  * RepositoryScannerTest  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|ArchivaSpringJUnit4ClassRunner
operator|.
name|class
argument_list|)
annotation|@
name|ContextConfiguration
argument_list|(
name|locations
operator|=
block|{
literal|"classpath*:/META-INF/spring-context.xml"
block|}
argument_list|)
specifier|public
class|class
name|RepositoryScannerTest
extends|extends
name|TestCase
block|{
annotation|@
name|Inject
name|ApplicationContext
name|applicationContext
decl_stmt|;
name|Path
name|repoBaseDir
decl_stmt|;
specifier|private
name|Path
name|getRepoBaseDir
parameter_list|()
block|{
if|if
condition|(
name|repoBaseDir
operator|==
literal|null
condition|)
block|{
try|try
block|{
name|repoBaseDir
operator|=
name|Paths
operator|.
name|get
argument_list|(
name|Thread
operator|.
name|currentThread
argument_list|( )
operator|.
name|getContextClassLoader
argument_list|( )
operator|.
name|getResource
argument_list|(
literal|"repositories"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Could not retrieve repository base directory"
argument_list|)
throw|;
block|}
block|}
return|return
name|repoBaseDir
return|;
block|}
specifier|protected
name|EditableManagedRepository
name|createRepository
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|,
name|Path
name|location
parameter_list|)
throws|throws
name|IOException
block|{
name|FileLockManager
name|lockManager
init|=
operator|new
name|DefaultFileLockManager
argument_list|()
decl_stmt|;
name|FilesystemStorage
name|storage
init|=
operator|new
name|FilesystemStorage
argument_list|(
name|location
operator|.
name|toAbsolutePath
argument_list|()
argument_list|,
name|lockManager
argument_list|)
decl_stmt|;
name|BasicManagedRepository
name|repo
init|=
operator|new
name|BasicManagedRepository
argument_list|(
name|id
argument_list|,
name|name
argument_list|,
name|storage
argument_list|)
decl_stmt|;
name|repo
operator|.
name|setLocation
argument_list|(
name|location
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toUri
argument_list|()
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setContent
argument_list|(
operator|new
name|ManagedRepositoryContentMock
argument_list|(
name|repo
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|repo
return|;
block|}
specifier|protected
name|EditableRemoteRepository
name|createRemoteRepository
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
name|BasicRemoteRepository
name|repo
init|=
name|BasicRemoteRepository
operator|.
name|newFilesystemInstance
argument_list|(
name|id
argument_list|,
name|name
argument_list|,
name|Paths
operator|.
name|get
argument_list|(
literal|"remotes"
argument_list|)
argument_list|)
decl_stmt|;
name|repo
operator|.
name|setLocation
argument_list|(
operator|new
name|URI
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|repo
return|;
block|}
specifier|private
specifier|static
specifier|final
name|String
index|[]
name|ARTIFACT_PATTERNS
init|=
operator|new
name|String
index|[]
block|{
literal|"**/*.jar"
block|,
literal|"**/*.pom"
block|,
literal|"**/*.rar"
block|,
literal|"**/*.zip"
block|,
literal|"**/*.war"
block|,
literal|"**/*.tar.gz"
block|}
decl_stmt|;
specifier|private
name|ManagedRepository
name|createDefaultRepository
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
name|Path
name|repoDir
init|=
name|getRepoBaseDir
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"default-repository"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Default Test Repository should exist."
argument_list|,
name|Files
operator|.
name|exists
argument_list|(
name|repoDir
argument_list|)
operator|&&
name|Files
operator|.
name|isDirectory
argument_list|(
name|repoDir
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|createRepository
argument_list|(
literal|"testDefaultRepo"
argument_list|,
literal|"Test Default Repository"
argument_list|,
name|repoDir
argument_list|)
return|;
block|}
specifier|private
name|ManagedRepository
name|createSimpleRepository
parameter_list|()
throws|throws
name|IOException
throws|,
name|ParseException
block|{
name|Path
name|srcDir
init|=
name|getRepoBaseDir
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"simple-repository"
argument_list|)
decl_stmt|;
name|Path
name|repoDir
init|=
name|Paths
operator|.
name|get
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"basedir"
argument_list|)
argument_list|,
literal|"target/test-repos/simple-repository"
argument_list|)
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|repoDir
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|copyDirectory
argument_list|(
name|srcDir
operator|.
name|toFile
argument_list|()
argument_list|,
name|repoDir
operator|.
name|toFile
argument_list|()
argument_list|)
expr_stmt|;
name|Path
name|repoFile
init|=
name|repoDir
operator|.
name|resolve
argument_list|(
literal|"groupId/snapshot-artifact/1.0-alpha-1-SNAPSHOT/snapshot-artifact-1.0-alpha-1-20050611.202024-1.pom"
argument_list|)
decl_stmt|;
name|Files
operator|.
name|setLastModifiedTime
argument_list|(
name|repoFile
argument_list|,
name|FileTime
operator|.
name|fromMillis
argument_list|(
name|getTimestampAsMillis
argument_list|(
literal|"20050611.202024"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Simple Test Repository should exist."
argument_list|,
name|Files
operator|.
name|exists
argument_list|(
name|repoDir
argument_list|)
operator|&&
name|Files
operator|.
name|isDirectory
argument_list|(
name|repoDir
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|createRepository
argument_list|(
literal|"testSimpleRepo"
argument_list|,
literal|"Test Simple Repository"
argument_list|,
name|repoDir
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|long
name|getTimestampAsMillis
parameter_list|(
name|String
name|timestamp
parameter_list|)
throws|throws
name|ParseException
block|{
name|SimpleDateFormat
name|fmt
init|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"yyyyMMdd.HHmmss"
argument_list|,
name|Locale
operator|.
name|US
argument_list|)
decl_stmt|;
name|fmt
operator|.
name|setTimeZone
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|fmt
operator|.
name|parse
argument_list|(
name|timestamp
argument_list|)
operator|.
name|getTime
argument_list|()
return|;
block|}
specifier|private
name|ManagedRepository
name|createLegacyRepository
parameter_list|()
throws|throws
name|IOException
block|{
name|Path
name|repoDir
init|=
name|getRepoBaseDir
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"legacy-repository"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Legacy Test Repository should exist."
argument_list|,
name|Files
operator|.
name|exists
argument_list|(
name|repoDir
argument_list|)
operator|&&
name|Files
operator|.
name|isDirectory
argument_list|(
name|repoDir
argument_list|)
argument_list|)
expr_stmt|;
name|EditableManagedRepository
name|repo
init|=
name|createRepository
argument_list|(
literal|"testLegacyRepo"
argument_list|,
literal|"Test Legacy Repository"
argument_list|,
name|repoDir
argument_list|)
decl_stmt|;
name|repo
operator|.
name|setLayout
argument_list|(
literal|"legacy"
argument_list|)
expr_stmt|;
return|return
name|repo
return|;
block|}
specifier|private
name|void
name|assertMinimumHits
parameter_list|(
name|String
name|msg
parameter_list|,
name|int
name|minimumHitCount
parameter_list|,
name|long
name|actualCount
parameter_list|)
block|{
if|if
condition|(
name|actualCount
operator|<
name|minimumHitCount
condition|)
block|{
name|fail
argument_list|(
literal|"Minimum hit count on "
operator|+
name|msg
operator|+
literal|" not satisfied.  Expected more than<"
operator|+
name|minimumHitCount
operator|+
literal|">, but actually got<"
operator|+
name|actualCount
operator|+
literal|">."
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|RepositoryScanner
name|lookupRepositoryScanner
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|applicationContext
operator|.
name|getBean
argument_list|(
name|RepositoryScanner
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|getIgnoreList
parameter_list|()
block|{
name|List
argument_list|<
name|String
argument_list|>
name|ignores
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|ignores
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|RepositoryScanner
operator|.
name|IGNORABLE_CONTENT
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|ignores
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTimestampRepositoryScanner
parameter_list|()
throws|throws
name|Exception
block|{
name|ManagedRepository
name|repository
init|=
name|createSimpleRepository
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|KnownRepositoryContentConsumer
argument_list|>
name|knownConsumers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|KnownScanConsumer
name|consumer
init|=
operator|new
name|KnownScanConsumer
argument_list|()
decl_stmt|;
name|consumer
operator|.
name|setIncludes
argument_list|(
name|ARTIFACT_PATTERNS
argument_list|)
expr_stmt|;
name|knownConsumers
operator|.
name|add
argument_list|(
name|consumer
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|InvalidRepositoryContentConsumer
argument_list|>
name|invalidConsumers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|InvalidScanConsumer
name|badconsumer
init|=
operator|new
name|InvalidScanConsumer
argument_list|()
decl_stmt|;
name|invalidConsumers
operator|.
name|add
argument_list|(
name|badconsumer
argument_list|)
expr_stmt|;
name|RepositoryScanner
name|scanner
init|=
name|lookupRepositoryScanner
argument_list|()
decl_stmt|;
name|RepositoryScanStatistics
name|stats
init|=
name|scanner
operator|.
name|scan
argument_list|(
name|repository
argument_list|,
name|knownConsumers
argument_list|,
name|invalidConsumers
argument_list|,
name|getIgnoreList
argument_list|()
argument_list|,
name|getTimestampAsMillis
argument_list|(
literal|"20061101.000000"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Stats should not be null."
argument_list|,
name|stats
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Stats.totalFileCount"
argument_list|,
literal|4
argument_list|,
name|stats
operator|.
name|getTotalFileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Stats.newFileCount"
argument_list|,
literal|3
argument_list|,
name|stats
operator|.
name|getNewFileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Processed Count"
argument_list|,
literal|2
argument_list|,
name|consumer
operator|.
name|getProcessCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Processed Count (of invalid items)"
argument_list|,
literal|1
argument_list|,
name|badconsumer
operator|.
name|getProcessCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTimestampRepositoryScannerFreshScan
parameter_list|()
throws|throws
name|Exception
block|{
name|ManagedRepository
name|repository
init|=
name|createSimpleRepository
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|KnownRepositoryContentConsumer
argument_list|>
name|knownConsumers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|KnownScanConsumer
name|consumer
init|=
operator|new
name|KnownScanConsumer
argument_list|()
decl_stmt|;
name|consumer
operator|.
name|setIncludes
argument_list|(
name|ARTIFACT_PATTERNS
argument_list|)
expr_stmt|;
name|knownConsumers
operator|.
name|add
argument_list|(
name|consumer
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|InvalidRepositoryContentConsumer
argument_list|>
name|invalidConsumers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|InvalidScanConsumer
name|badconsumer
init|=
operator|new
name|InvalidScanConsumer
argument_list|()
decl_stmt|;
name|invalidConsumers
operator|.
name|add
argument_list|(
name|badconsumer
argument_list|)
expr_stmt|;
name|RepositoryScanner
name|scanner
init|=
name|lookupRepositoryScanner
argument_list|()
decl_stmt|;
name|RepositoryScanStatistics
name|stats
init|=
name|scanner
operator|.
name|scan
argument_list|(
name|repository
argument_list|,
name|knownConsumers
argument_list|,
name|invalidConsumers
argument_list|,
name|getIgnoreList
argument_list|()
argument_list|,
name|RepositoryScanner
operator|.
name|FRESH_SCAN
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Stats should not be null."
argument_list|,
name|stats
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Stats.totalFileCount"
argument_list|,
literal|4
argument_list|,
name|stats
operator|.
name|getTotalFileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Stats.newFileCount"
argument_list|,
literal|4
argument_list|,
name|stats
operator|.
name|getNewFileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Processed Count"
argument_list|,
literal|3
argument_list|,
name|consumer
operator|.
name|getProcessCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Processed Count (of invalid items)"
argument_list|,
literal|1
argument_list|,
name|badconsumer
operator|.
name|getProcessCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTimestampRepositoryScannerProcessUnmodified
parameter_list|()
throws|throws
name|Exception
block|{
name|ManagedRepository
name|repository
init|=
name|createSimpleRepository
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|KnownRepositoryContentConsumer
argument_list|>
name|knownConsumers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|KnownScanConsumer
name|consumer
init|=
operator|new
name|KnownScanConsumer
argument_list|()
decl_stmt|;
name|consumer
operator|.
name|setProcessUnmodified
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|consumer
operator|.
name|setIncludes
argument_list|(
name|ARTIFACT_PATTERNS
argument_list|)
expr_stmt|;
name|knownConsumers
operator|.
name|add
argument_list|(
name|consumer
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|InvalidRepositoryContentConsumer
argument_list|>
name|invalidConsumers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|InvalidScanConsumer
name|badconsumer
init|=
operator|new
name|InvalidScanConsumer
argument_list|()
decl_stmt|;
name|invalidConsumers
operator|.
name|add
argument_list|(
name|badconsumer
argument_list|)
expr_stmt|;
name|RepositoryScanner
name|scanner
init|=
name|lookupRepositoryScanner
argument_list|()
decl_stmt|;
name|RepositoryScanStatistics
name|stats
init|=
name|scanner
operator|.
name|scan
argument_list|(
name|repository
argument_list|,
name|knownConsumers
argument_list|,
name|invalidConsumers
argument_list|,
name|getIgnoreList
argument_list|()
argument_list|,
name|getTimestampAsMillis
argument_list|(
literal|"20061101.000000"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Stats should not be null."
argument_list|,
name|stats
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Stats.totalFileCount"
argument_list|,
literal|4
argument_list|,
name|stats
operator|.
name|getTotalFileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Stats.newFileCount"
argument_list|,
literal|3
argument_list|,
name|stats
operator|.
name|getNewFileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Processed Count"
argument_list|,
literal|3
argument_list|,
name|consumer
operator|.
name|getProcessCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Processed Count (of invalid items)"
argument_list|,
literal|1
argument_list|,
name|badconsumer
operator|.
name|getProcessCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDefaultRepositoryScanner
parameter_list|()
throws|throws
name|Exception
block|{
name|ManagedRepository
name|repository
init|=
name|createDefaultRepository
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|KnownRepositoryContentConsumer
argument_list|>
name|knownConsumers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|KnownScanConsumer
name|consumer
init|=
operator|new
name|KnownScanConsumer
argument_list|()
decl_stmt|;
name|consumer
operator|.
name|setIncludes
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"**/*.jar"
block|,
literal|"**/*.war"
block|,
literal|"**/*.pom"
block|,
literal|"**/maven-metadata.xml"
block|,
literal|"**/*-site.xml"
block|,
literal|"**/*.zip"
block|,
literal|"**/*.tar.gz"
block|,
literal|"**/*.sha1"
block|,
literal|"**/*.md5"
block|}
argument_list|)
expr_stmt|;
name|knownConsumers
operator|.
name|add
argument_list|(
name|consumer
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|InvalidRepositoryContentConsumer
argument_list|>
name|invalidConsumers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|InvalidScanConsumer
name|badconsumer
init|=
operator|new
name|InvalidScanConsumer
argument_list|()
decl_stmt|;
name|invalidConsumers
operator|.
name|add
argument_list|(
name|badconsumer
argument_list|)
expr_stmt|;
name|RepositoryScanner
name|scanner
init|=
name|lookupRepositoryScanner
argument_list|()
decl_stmt|;
name|RepositoryScanStatistics
name|stats
init|=
name|scanner
operator|.
name|scan
argument_list|(
name|repository
argument_list|,
name|knownConsumers
argument_list|,
name|invalidConsumers
argument_list|,
name|getIgnoreList
argument_list|()
argument_list|,
name|RepositoryScanner
operator|.
name|FRESH_SCAN
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Stats should not be null."
argument_list|,
name|stats
argument_list|)
expr_stmt|;
name|assertMinimumHits
argument_list|(
literal|"Stats.totalFileCount"
argument_list|,
literal|17
argument_list|,
name|stats
operator|.
name|getTotalFileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertMinimumHits
argument_list|(
literal|"Processed Count"
argument_list|,
literal|17
argument_list|,
name|consumer
operator|.
name|getProcessCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Processed Count (of invalid items):"
operator|+
name|badconsumer
operator|.
name|getPaths
argument_list|()
argument_list|,
literal|6
argument_list|,
name|badconsumer
operator|.
name|getProcessCount
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|paths
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|badconsumer
operator|.
name|getPaths
argument_list|()
argument_list|)
decl_stmt|;
name|paths
operator|.
name|sort
argument_list|(
name|Comparator
operator|.
name|naturalOrder
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expected
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"CVS/Root"
argument_list|,
literal|"invalid/invalid/1/invalid-1"
argument_list|,
literal|"javax/sql/jdbc/2.0/maven-metadata-repository.xml"
argument_list|,
literal|"javax/sql/jdbc/maven-metadata-repository.xml"
argument_list|,
literal|"javax/sql/maven-metadata-repository.xml"
argument_list|,
literal|"org/apache/maven/maven-parent/4/maven-parent-4-site_en.xml"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|paths
argument_list|,
name|is
argument_list|(
name|expected
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDefaultRepositoryArtifactScanner
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|actualArtifactPaths
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"invalid/invalid/1.0-20050611.123456-1/invalid-1.0-20050611.123456-1.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"invalid/invalid/1.0-SNAPSHOT/invalid-1.0.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"invalid/invalid/1.0/invalid-1.0b.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"invalid/invalid/1.0/invalid-2.0.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"invalid/invalid-1.0.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/test/1.0-SNAPSHOT/wrong-artifactId-1.0-20050611.112233-1.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/test/1.0-SNAPSHOT/test-1.0-20050611.112233-1-javadoc.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/test/1.0-SNAPSHOT/test-1.0-20050611.112233-1.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/A/1.0/A-1.0.war"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/A/1.0/A-1.0.pom"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/B/2.0/B-2.0.pom"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/B/1.0/B-1.0.pom"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/some-ejb/1.0/some-ejb-1.0-client.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/C/1.0/C-1.0.war"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/C/1.0/C-1.0.pom"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/update/test-not-updated/1.0/test-not-updated-1.0.pom"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/update/test-not-updated/1.0/test-not-updated-1.0.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/update/test-updated/1.0/test-updated-1.0.pom"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/update/test-updated/1.0/test-updated-1.0.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/discovery/1.0/discovery-1.0.pom"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/testing/1.0/testing-1.0-test-sources.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/testing/1.0/testing-1.0.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/testing/1.0/testing-1.0-sources.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/testing/1.0/testing-1.0.zip"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/testing/1.0/testing-1.0.tar.gz"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/samplejar/2.0/samplejar-2.0.pom"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/samplejar/2.0/samplejar-2.0.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.pom"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org/apache/testgroup/discovery/1.0/discovery-1.0.pom"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"javax/sql/jdbc/2.0/jdbc-2.0.jar"
argument_list|)
expr_stmt|;
name|ManagedRepository
name|repository
init|=
name|createDefaultRepository
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|KnownRepositoryContentConsumer
argument_list|>
name|knownConsumers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|KnownScanConsumer
name|consumer
init|=
operator|new
name|KnownScanConsumer
argument_list|()
decl_stmt|;
name|consumer
operator|.
name|setIncludes
argument_list|(
name|ARTIFACT_PATTERNS
argument_list|)
expr_stmt|;
name|knownConsumers
operator|.
name|add
argument_list|(
name|consumer
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|InvalidRepositoryContentConsumer
argument_list|>
name|invalidConsumers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|InvalidScanConsumer
name|badconsumer
init|=
operator|new
name|InvalidScanConsumer
argument_list|()
decl_stmt|;
name|invalidConsumers
operator|.
name|add
argument_list|(
name|badconsumer
argument_list|)
expr_stmt|;
name|RepositoryScanner
name|scanner
init|=
name|lookupRepositoryScanner
argument_list|()
decl_stmt|;
name|RepositoryScanStatistics
name|stats
init|=
name|scanner
operator|.
name|scan
argument_list|(
name|repository
argument_list|,
name|knownConsumers
argument_list|,
name|invalidConsumers
argument_list|,
name|getIgnoreList
argument_list|()
argument_list|,
name|RepositoryScanner
operator|.
name|FRESH_SCAN
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Stats should not be null."
argument_list|,
name|stats
argument_list|)
expr_stmt|;
name|assertMinimumHits
argument_list|(
literal|"Stats.totalFileCount"
argument_list|,
name|actualArtifactPaths
operator|.
name|size
argument_list|()
argument_list|,
name|stats
operator|.
name|getTotalFileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertMinimumHits
argument_list|(
literal|"Processed Count"
argument_list|,
name|actualArtifactPaths
operator|.
name|size
argument_list|()
argument_list|,
name|consumer
operator|.
name|getProcessCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDefaultRepositoryMetadataScanner
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|actualMetadataPaths
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|actualMetadataPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/some-ejb/1.0/maven-metadata.xml"
argument_list|)
expr_stmt|;
name|actualMetadataPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/update/test-not-updated/maven-metadata.xml"
argument_list|)
expr_stmt|;
name|actualMetadataPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/update/test-updated/maven-metadata.xml"
argument_list|)
expr_stmt|;
name|actualMetadataPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/maven-metadata.xml"
argument_list|)
expr_stmt|;
name|actualMetadataPaths
operator|.
name|add
argument_list|(
literal|"org/apache/testgroup/discovery/1.0/maven-metadata.xml"
argument_list|)
expr_stmt|;
name|actualMetadataPaths
operator|.
name|add
argument_list|(
literal|"org/apache/testgroup/discovery/maven-metadata.xml"
argument_list|)
expr_stmt|;
name|actualMetadataPaths
operator|.
name|add
argument_list|(
literal|"javax/sql/jdbc/2.0/maven-metadata-repository.xml"
argument_list|)
expr_stmt|;
name|actualMetadataPaths
operator|.
name|add
argument_list|(
literal|"javax/sql/jdbc/maven-metadata-repository.xml"
argument_list|)
expr_stmt|;
name|actualMetadataPaths
operator|.
name|add
argument_list|(
literal|"javax/sql/maven-metadata-repository.xml"
argument_list|)
expr_stmt|;
name|actualMetadataPaths
operator|.
name|add
argument_list|(
literal|"javax/maven-metadata.xml"
argument_list|)
expr_stmt|;
name|ManagedRepository
name|repository
init|=
name|createDefaultRepository
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|KnownRepositoryContentConsumer
argument_list|>
name|knownConsumers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|KnownScanConsumer
name|knownConsumer
init|=
operator|new
name|KnownScanConsumer
argument_list|()
decl_stmt|;
name|knownConsumer
operator|.
name|setIncludes
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"**/maven-metadata*.xml"
block|}
argument_list|)
expr_stmt|;
name|knownConsumers
operator|.
name|add
argument_list|(
name|knownConsumer
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|InvalidRepositoryContentConsumer
argument_list|>
name|invalidConsumers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|InvalidScanConsumer
name|badconsumer
init|=
operator|new
name|InvalidScanConsumer
argument_list|()
decl_stmt|;
name|invalidConsumers
operator|.
name|add
argument_list|(
name|badconsumer
argument_list|)
expr_stmt|;
name|RepositoryScanner
name|scanner
init|=
name|lookupRepositoryScanner
argument_list|()
decl_stmt|;
name|RepositoryScanStatistics
name|stats
init|=
name|scanner
operator|.
name|scan
argument_list|(
name|repository
argument_list|,
name|knownConsumers
argument_list|,
name|invalidConsumers
argument_list|,
name|getIgnoreList
argument_list|()
argument_list|,
name|RepositoryScanner
operator|.
name|FRESH_SCAN
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Stats should not be null."
argument_list|,
name|stats
argument_list|)
expr_stmt|;
name|assertMinimumHits
argument_list|(
literal|"Stats.totalFileCount"
argument_list|,
name|actualMetadataPaths
operator|.
name|size
argument_list|()
argument_list|,
name|stats
operator|.
name|getTotalFileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertMinimumHits
argument_list|(
literal|"Processed Count"
argument_list|,
name|actualMetadataPaths
operator|.
name|size
argument_list|()
argument_list|,
name|knownConsumer
operator|.
name|getProcessCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDefaultRepositoryProjectScanner
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|actualProjectPaths
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|actualProjectPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/A/1.0/A-1.0.pom"
argument_list|)
expr_stmt|;
name|actualProjectPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/B/2.0/B-2.0.pom"
argument_list|)
expr_stmt|;
name|actualProjectPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/B/1.0/B-1.0.pom"
argument_list|)
expr_stmt|;
name|actualProjectPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/C/1.0/C-1.0.pom"
argument_list|)
expr_stmt|;
name|actualProjectPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/update/test-not-updated/1.0/test-not-updated-1.0.pom"
argument_list|)
expr_stmt|;
name|actualProjectPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/update/test-updated/1.0/test-updated-1.0.pom"
argument_list|)
expr_stmt|;
name|actualProjectPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/discovery/1.0/discovery-1.0.pom"
argument_list|)
expr_stmt|;
name|actualProjectPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/samplejar/2.0/samplejar-2.0.pom"
argument_list|)
expr_stmt|;
name|actualProjectPaths
operator|.
name|add
argument_list|(
literal|"org/apache/maven/samplejar/1.0/samplejar-1.0.pom"
argument_list|)
expr_stmt|;
name|actualProjectPaths
operator|.
name|add
argument_list|(
literal|"org/apache/testgroup/discovery/1.0/discovery-1.0.pom"
argument_list|)
expr_stmt|;
name|ManagedRepository
name|repository
init|=
name|createDefaultRepository
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|KnownRepositoryContentConsumer
argument_list|>
name|knownConsumers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|KnownScanConsumer
name|consumer
init|=
operator|new
name|KnownScanConsumer
argument_list|()
decl_stmt|;
name|consumer
operator|.
name|setIncludes
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"**/*.pom"
block|}
argument_list|)
expr_stmt|;
name|knownConsumers
operator|.
name|add
argument_list|(
name|consumer
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|InvalidRepositoryContentConsumer
argument_list|>
name|invalidConsumers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|InvalidScanConsumer
name|badconsumer
init|=
operator|new
name|InvalidScanConsumer
argument_list|()
decl_stmt|;
name|invalidConsumers
operator|.
name|add
argument_list|(
name|badconsumer
argument_list|)
expr_stmt|;
name|RepositoryScanner
name|scanner
init|=
name|lookupRepositoryScanner
argument_list|()
decl_stmt|;
name|RepositoryScanStatistics
name|stats
init|=
name|scanner
operator|.
name|scan
argument_list|(
name|repository
argument_list|,
name|knownConsumers
argument_list|,
name|invalidConsumers
argument_list|,
name|getIgnoreList
argument_list|()
argument_list|,
name|RepositoryScanner
operator|.
name|FRESH_SCAN
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Stats should not be null."
argument_list|,
name|stats
argument_list|)
expr_stmt|;
name|assertMinimumHits
argument_list|(
literal|"Stats.totalFileCount"
argument_list|,
name|actualProjectPaths
operator|.
name|size
argument_list|()
argument_list|,
name|stats
operator|.
name|getTotalFileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertMinimumHits
argument_list|(
literal|"Processed Count"
argument_list|,
name|actualProjectPaths
operator|.
name|size
argument_list|()
argument_list|,
name|consumer
operator|.
name|getProcessCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLegacyRepositoryArtifactScanner
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|actualArtifactPaths
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"invalid/jars/1.0/invalid-1.0.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"invalid/jars/invalid-1.0.rar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"invalid/jars/invalid.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"invalid/invalid-1.0.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"javax.sql/jars/jdbc-2.0.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org.apache.maven/jars/some-ejb-1.0-client.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org.apache.maven/jars/testing-1.0.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org.apache.maven/jars/testing-1.0-sources.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org.apache.maven/jars/testing-UNKNOWN.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org.apache.maven/jars/testing-1.0.zip"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org.apache.maven/jars/testing-1.0-20050611.112233-1.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org.apache.maven/jars/testing-1.0.tar.gz"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org.apache.maven.update/jars/test-not-updated-1.0.jar"
argument_list|)
expr_stmt|;
name|actualArtifactPaths
operator|.
name|add
argument_list|(
literal|"org.apache.maven.update/jars/test-updated-1.0.jar"
argument_list|)
expr_stmt|;
name|ManagedRepository
name|repository
init|=
name|createLegacyRepository
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|KnownRepositoryContentConsumer
argument_list|>
name|knownConsumers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|KnownScanConsumer
name|consumer
init|=
operator|new
name|KnownScanConsumer
argument_list|()
decl_stmt|;
name|consumer
operator|.
name|setIncludes
argument_list|(
name|ARTIFACT_PATTERNS
argument_list|)
expr_stmt|;
name|knownConsumers
operator|.
name|add
argument_list|(
name|consumer
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|InvalidRepositoryContentConsumer
argument_list|>
name|invalidConsumers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|InvalidScanConsumer
name|badconsumer
init|=
operator|new
name|InvalidScanConsumer
argument_list|()
decl_stmt|;
name|invalidConsumers
operator|.
name|add
argument_list|(
name|badconsumer
argument_list|)
expr_stmt|;
name|RepositoryScanner
name|scanner
init|=
name|lookupRepositoryScanner
argument_list|()
decl_stmt|;
name|RepositoryScanStatistics
name|stats
init|=
name|scanner
operator|.
name|scan
argument_list|(
name|repository
argument_list|,
name|knownConsumers
argument_list|,
name|invalidConsumers
argument_list|,
name|getIgnoreList
argument_list|()
argument_list|,
name|RepositoryScanner
operator|.
name|FRESH_SCAN
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Stats should not be null."
argument_list|,
name|stats
argument_list|)
expr_stmt|;
name|assertMinimumHits
argument_list|(
literal|"Stats.totalFileCount"
argument_list|,
name|actualArtifactPaths
operator|.
name|size
argument_list|()
argument_list|,
name|stats
operator|.
name|getTotalFileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertMinimumHits
argument_list|(
literal|"Processed Count"
argument_list|,
name|actualArtifactPaths
operator|.
name|size
argument_list|()
argument_list|,
name|consumer
operator|.
name|getProcessCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

