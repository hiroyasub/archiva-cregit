begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|io
operator|.
name|registry
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|components
operator|.
name|registry
operator|.
name|Registry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|// Util imports
end_comment

begin_comment
comment|// Model class imports
end_comment

begin_comment
comment|/**  * Generate Redback Registry input mechanism for model 'Configuration'.  */
end_comment

begin_class
specifier|public
class|class
name|ConfigurationRegistryReader
block|{
specifier|public
name|Configuration
name|read
parameter_list|(
name|Registry
name|registry
parameter_list|)
block|{
return|return
name|readConfiguration
argument_list|(
literal|""
argument_list|,
name|registry
argument_list|)
return|;
block|}
specifier|private
name|Configuration
name|readConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|Configuration
name|value
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
comment|//String version = registry.getString( prefix + "version", value.getVersion() );
name|List
argument_list|<
name|String
argument_list|>
name|versionList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"version"
argument_list|)
decl_stmt|;
name|String
name|version
init|=
name|value
operator|.
name|getVersion
argument_list|()
decl_stmt|;
if|if
condition|(
name|versionList
operator|!=
literal|null
operator|&&
operator|!
name|versionList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|versionList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|versionList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|version
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setVersion
argument_list|(
name|version
argument_list|)
expr_stmt|;
comment|//String metadataStore = registry.getString( prefix + "metadataStore", value.getMetadataStore() );
name|List
argument_list|<
name|String
argument_list|>
name|metadataStoreList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"metadataStore"
argument_list|)
decl_stmt|;
name|String
name|metadataStore
init|=
name|value
operator|.
name|getMetadataStore
argument_list|()
decl_stmt|;
if|if
condition|(
name|metadataStoreList
operator|!=
literal|null
operator|&&
operator|!
name|metadataStoreList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|metadataStoreList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|metadataStoreList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|metadataStore
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setMetadataStore
argument_list|(
name|metadataStore
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|repositoryGroups
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<RepositoryGroupConfiguration>*/
argument_list|()
decl_stmt|;
name|List
name|repositoryGroupsSubsets
init|=
name|registry
operator|.
name|getSubsetList
argument_list|(
name|prefix
operator|+
literal|"repositoryGroups.repositoryGroup"
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|repositoryGroupsSubsets
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|RepositoryGroupConfiguration
name|v
init|=
name|readRepositoryGroupConfiguration
argument_list|(
literal|""
argument_list|,
operator|(
name|Registry
operator|)
name|i
operator|.
name|next
argument_list|()
argument_list|)
decl_stmt|;
name|repositoryGroups
operator|.
name|add
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
name|value
operator|.
name|setRepositoryGroups
argument_list|(
name|repositoryGroups
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|managedRepositories
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<ManagedRepositoryConfiguration>*/
argument_list|()
decl_stmt|;
name|List
name|managedRepositoriesSubsets
init|=
name|registry
operator|.
name|getSubsetList
argument_list|(
name|prefix
operator|+
literal|"managedRepositories.managedRepository"
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|managedRepositoriesSubsets
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|ManagedRepositoryConfiguration
name|v
init|=
name|readManagedRepositoryConfiguration
argument_list|(
literal|""
argument_list|,
operator|(
name|Registry
operator|)
name|i
operator|.
name|next
argument_list|()
argument_list|)
decl_stmt|;
name|managedRepositories
operator|.
name|add
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
name|value
operator|.
name|setManagedRepositories
argument_list|(
name|managedRepositories
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|remoteRepositories
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<RemoteRepositoryConfiguration>*/
argument_list|()
decl_stmt|;
name|List
name|remoteRepositoriesSubsets
init|=
name|registry
operator|.
name|getSubsetList
argument_list|(
name|prefix
operator|+
literal|"remoteRepositories.remoteRepository"
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|remoteRepositoriesSubsets
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|RemoteRepositoryConfiguration
name|v
init|=
name|readRemoteRepositoryConfiguration
argument_list|(
literal|""
argument_list|,
operator|(
name|Registry
operator|)
name|i
operator|.
name|next
argument_list|()
argument_list|)
decl_stmt|;
name|remoteRepositories
operator|.
name|add
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
name|value
operator|.
name|setRemoteRepositories
argument_list|(
name|remoteRepositories
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|proxyConnectors
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<ProxyConnectorConfiguration>*/
argument_list|()
decl_stmt|;
name|List
name|proxyConnectorsSubsets
init|=
name|registry
operator|.
name|getSubsetList
argument_list|(
name|prefix
operator|+
literal|"proxyConnectors.proxyConnector"
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|proxyConnectorsSubsets
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|ProxyConnectorConfiguration
name|v
init|=
name|readProxyConnectorConfiguration
argument_list|(
literal|""
argument_list|,
operator|(
name|Registry
operator|)
name|i
operator|.
name|next
argument_list|()
argument_list|)
decl_stmt|;
name|proxyConnectors
operator|.
name|add
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
name|value
operator|.
name|setProxyConnectors
argument_list|(
name|proxyConnectors
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|networkProxies
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<NetworkProxyConfiguration>*/
argument_list|()
decl_stmt|;
name|List
name|networkProxiesSubsets
init|=
name|registry
operator|.
name|getSubsetList
argument_list|(
name|prefix
operator|+
literal|"networkProxies.networkProxy"
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|networkProxiesSubsets
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|NetworkProxyConfiguration
name|v
init|=
name|readNetworkProxyConfiguration
argument_list|(
literal|""
argument_list|,
operator|(
name|Registry
operator|)
name|i
operator|.
name|next
argument_list|()
argument_list|)
decl_stmt|;
name|networkProxies
operator|.
name|add
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
name|value
operator|.
name|setNetworkProxies
argument_list|(
name|networkProxies
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|legacyArtifactPaths
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<LegacyArtifactPath>*/
argument_list|()
decl_stmt|;
name|List
name|legacyArtifactPathsSubsets
init|=
name|registry
operator|.
name|getSubsetList
argument_list|(
name|prefix
operator|+
literal|"legacyArtifactPaths.legacyArtifactPath"
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|legacyArtifactPathsSubsets
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|LegacyArtifactPath
name|v
init|=
name|readLegacyArtifactPath
argument_list|(
literal|""
argument_list|,
operator|(
name|Registry
operator|)
name|i
operator|.
name|next
argument_list|()
argument_list|)
decl_stmt|;
name|legacyArtifactPaths
operator|.
name|add
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
name|value
operator|.
name|setLegacyArtifactPaths
argument_list|(
name|legacyArtifactPaths
argument_list|)
expr_stmt|;
name|RepositoryScanningConfiguration
name|repositoryScanning
init|=
name|readRepositoryScanningConfiguration
argument_list|(
name|prefix
operator|+
literal|"repositoryScanning."
argument_list|,
name|registry
argument_list|)
decl_stmt|;
name|value
operator|.
name|setRepositoryScanning
argument_list|(
name|repositoryScanning
argument_list|)
expr_stmt|;
name|WebappConfiguration
name|webapp
init|=
name|readWebappConfiguration
argument_list|(
name|prefix
operator|+
literal|"webapp."
argument_list|,
name|registry
argument_list|)
decl_stmt|;
name|value
operator|.
name|setWebapp
argument_list|(
name|webapp
argument_list|)
expr_stmt|;
name|OrganisationInformation
name|organisationInfo
init|=
name|readOrganisationInformation
argument_list|(
name|prefix
operator|+
literal|"organisationInfo."
argument_list|,
name|registry
argument_list|)
decl_stmt|;
name|value
operator|.
name|setOrganisationInfo
argument_list|(
name|organisationInfo
argument_list|)
expr_stmt|;
name|NetworkConfiguration
name|networkConfiguration
init|=
name|readNetworkConfiguration
argument_list|(
name|prefix
operator|+
literal|"networkConfiguration."
argument_list|,
name|registry
argument_list|)
decl_stmt|;
name|value
operator|.
name|setNetworkConfiguration
argument_list|(
name|networkConfiguration
argument_list|)
expr_stmt|;
name|RedbackRuntimeConfiguration
name|redbackRuntimeConfiguration
init|=
name|readRedbackRuntimeConfiguration
argument_list|(
name|prefix
operator|+
literal|"redbackRuntimeConfiguration."
argument_list|,
name|registry
argument_list|)
decl_stmt|;
name|value
operator|.
name|setRedbackRuntimeConfiguration
argument_list|(
name|redbackRuntimeConfiguration
argument_list|)
expr_stmt|;
name|ArchivaRuntimeConfiguration
name|archivaRuntimeConfiguration
init|=
name|readArchivaRuntimeConfiguration
argument_list|(
name|prefix
operator|+
literal|"archivaRuntimeConfiguration."
argument_list|,
name|registry
argument_list|)
decl_stmt|;
name|value
operator|.
name|setArchivaRuntimeConfiguration
argument_list|(
name|archivaRuntimeConfiguration
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|proxyConnectorRuleConfigurations
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<ProxyConnectorRuleConfiguration>*/
argument_list|()
decl_stmt|;
name|List
name|proxyConnectorRuleConfigurationsSubsets
init|=
name|registry
operator|.
name|getSubsetList
argument_list|(
name|prefix
operator|+
literal|"proxyConnectorRuleConfigurations.proxyConnectorRuleConfiguration"
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|proxyConnectorRuleConfigurationsSubsets
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|ProxyConnectorRuleConfiguration
name|v
init|=
name|readProxyConnectorRuleConfiguration
argument_list|(
literal|""
argument_list|,
operator|(
name|Registry
operator|)
name|i
operator|.
name|next
argument_list|()
argument_list|)
decl_stmt|;
name|proxyConnectorRuleConfigurations
operator|.
name|add
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
name|value
operator|.
name|setProxyConnectorRuleConfigurations
argument_list|(
name|proxyConnectorRuleConfigurations
argument_list|)
expr_stmt|;
name|ArchivaDefaultConfiguration
name|archivaDefaultConfiguration
init|=
name|readArchivaDefaultConfiguration
argument_list|(
name|prefix
operator|+
literal|"archivaDefaultConfiguration."
argument_list|,
name|registry
argument_list|)
decl_stmt|;
name|value
operator|.
name|setArchivaDefaultConfiguration
argument_list|(
name|archivaDefaultConfiguration
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|AbstractRepositoryConfiguration
name|readAbstractRepositoryConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|AbstractRepositoryConfiguration
name|value
init|=
operator|new
name|AbstractRepositoryConfiguration
argument_list|()
decl_stmt|;
comment|//String id = registry.getString( prefix + "id", value.getId() );
name|List
argument_list|<
name|String
argument_list|>
name|idList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"id"
argument_list|)
decl_stmt|;
name|String
name|id
init|=
name|value
operator|.
name|getId
argument_list|()
decl_stmt|;
if|if
condition|(
name|idList
operator|!=
literal|null
operator|&&
operator|!
name|idList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|idList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|idList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|id
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
comment|//String type = registry.getString( prefix + "type", value.getType() );
name|List
argument_list|<
name|String
argument_list|>
name|typeList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"type"
argument_list|)
decl_stmt|;
name|String
name|type
init|=
name|value
operator|.
name|getType
argument_list|()
decl_stmt|;
if|if
condition|(
name|typeList
operator|!=
literal|null
operator|&&
operator|!
name|typeList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|typeList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|typeList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|type
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
comment|//String name = registry.getString( prefix + "name", value.getName() );
name|List
argument_list|<
name|String
argument_list|>
name|nameList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"name"
argument_list|)
decl_stmt|;
name|String
name|name
init|=
name|value
operator|.
name|getName
argument_list|()
decl_stmt|;
if|if
condition|(
name|nameList
operator|!=
literal|null
operator|&&
operator|!
name|nameList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|nameList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|nameList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|name
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
comment|//String layout = registry.getString( prefix + "layout", value.getLayout() );
name|List
argument_list|<
name|String
argument_list|>
name|layoutList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"layout"
argument_list|)
decl_stmt|;
name|String
name|layout
init|=
name|value
operator|.
name|getLayout
argument_list|()
decl_stmt|;
if|if
condition|(
name|layoutList
operator|!=
literal|null
operator|&&
operator|!
name|layoutList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|layoutList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|layoutList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|layout
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
comment|//String indexDir = registry.getString( prefix + "indexDir", value.getIndexDir() );
name|List
argument_list|<
name|String
argument_list|>
name|indexDirList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"indexDir"
argument_list|)
decl_stmt|;
name|String
name|indexDir
init|=
name|value
operator|.
name|getIndexDir
argument_list|()
decl_stmt|;
if|if
condition|(
name|indexDirList
operator|!=
literal|null
operator|&&
operator|!
name|indexDirList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|indexDirList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|indexDirList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|indexDir
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setIndexDir
argument_list|(
name|indexDir
argument_list|)
expr_stmt|;
comment|//String packedIndexDir = registry.getString( prefix + "packedIndexDir", value.getPackedIndexDir() );
name|List
argument_list|<
name|String
argument_list|>
name|packedIndexDirList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"packedIndexDir"
argument_list|)
decl_stmt|;
name|String
name|packedIndexDir
init|=
name|value
operator|.
name|getPackedIndexDir
argument_list|()
decl_stmt|;
if|if
condition|(
name|packedIndexDirList
operator|!=
literal|null
operator|&&
operator|!
name|packedIndexDirList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|packedIndexDirList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|packedIndexDirList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|packedIndexDir
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setPackedIndexDir
argument_list|(
name|packedIndexDir
argument_list|)
expr_stmt|;
comment|//String description = registry.getString( prefix + "description", value.getDescription() );
name|List
argument_list|<
name|String
argument_list|>
name|descriptionList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"description"
argument_list|)
decl_stmt|;
name|String
name|description
init|=
name|value
operator|.
name|getDescription
argument_list|()
decl_stmt|;
if|if
condition|(
name|descriptionList
operator|!=
literal|null
operator|&&
operator|!
name|descriptionList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|descriptionList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|descriptionList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|description
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setDescription
argument_list|(
name|description
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|RemoteRepositoryConfiguration
name|readRemoteRepositoryConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|RemoteRepositoryConfiguration
name|value
init|=
operator|new
name|RemoteRepositoryConfiguration
argument_list|()
decl_stmt|;
comment|//String url = registry.getString( prefix + "url", value.getUrl() );
name|List
argument_list|<
name|String
argument_list|>
name|urlList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"url"
argument_list|)
decl_stmt|;
name|String
name|url
init|=
name|value
operator|.
name|getUrl
argument_list|()
decl_stmt|;
if|if
condition|(
name|urlList
operator|!=
literal|null
operator|&&
operator|!
name|urlList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|urlList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|urlList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|url
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setUrl
argument_list|(
name|url
argument_list|)
expr_stmt|;
comment|//String username = registry.getString( prefix + "username", value.getUsername() );
name|List
argument_list|<
name|String
argument_list|>
name|usernameList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"username"
argument_list|)
decl_stmt|;
name|String
name|username
init|=
name|value
operator|.
name|getUsername
argument_list|()
decl_stmt|;
if|if
condition|(
name|usernameList
operator|!=
literal|null
operator|&&
operator|!
name|usernameList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|usernameList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|usernameList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|username
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setUsername
argument_list|(
name|username
argument_list|)
expr_stmt|;
comment|//String password = registry.getString( prefix + "password", value.getPassword() );
name|List
argument_list|<
name|String
argument_list|>
name|passwordList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"password"
argument_list|)
decl_stmt|;
name|String
name|password
init|=
name|value
operator|.
name|getPassword
argument_list|()
decl_stmt|;
if|if
condition|(
name|passwordList
operator|!=
literal|null
operator|&&
operator|!
name|passwordList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|passwordList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|passwordList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|password
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setPassword
argument_list|(
name|password
argument_list|)
expr_stmt|;
name|int
name|timeout
init|=
name|registry
operator|.
name|getInt
argument_list|(
name|prefix
operator|+
literal|"timeout"
argument_list|,
name|value
operator|.
name|getTimeout
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setTimeout
argument_list|(
name|timeout
argument_list|)
expr_stmt|;
comment|//String refreshCronExpression = registry.getString( prefix + "refreshCronExpression", value.getRefreshCronExpression() );
name|List
argument_list|<
name|String
argument_list|>
name|refreshCronExpressionList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"refreshCronExpression"
argument_list|)
decl_stmt|;
name|String
name|refreshCronExpression
init|=
name|value
operator|.
name|getRefreshCronExpression
argument_list|()
decl_stmt|;
if|if
condition|(
name|refreshCronExpressionList
operator|!=
literal|null
operator|&&
operator|!
name|refreshCronExpressionList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|refreshCronExpressionList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|refreshCronExpressionList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|refreshCronExpression
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setRefreshCronExpression
argument_list|(
name|refreshCronExpression
argument_list|)
expr_stmt|;
name|boolean
name|downloadRemoteIndex
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"downloadRemoteIndex"
argument_list|,
name|value
operator|.
name|isDownloadRemoteIndex
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setDownloadRemoteIndex
argument_list|(
name|downloadRemoteIndex
argument_list|)
expr_stmt|;
comment|//String remoteIndexUrl = registry.getString( prefix + "remoteIndexUrl", value.getRemoteIndexUrl() );
name|List
argument_list|<
name|String
argument_list|>
name|remoteIndexUrlList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"remoteIndexUrl"
argument_list|)
decl_stmt|;
name|String
name|remoteIndexUrl
init|=
name|value
operator|.
name|getRemoteIndexUrl
argument_list|()
decl_stmt|;
if|if
condition|(
name|remoteIndexUrlList
operator|!=
literal|null
operator|&&
operator|!
name|remoteIndexUrlList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|remoteIndexUrlList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|remoteIndexUrlList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|remoteIndexUrl
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setRemoteIndexUrl
argument_list|(
name|remoteIndexUrl
argument_list|)
expr_stmt|;
comment|//String remoteDownloadNetworkProxyId = registry.getString( prefix + "remoteDownloadNetworkProxyId", value.getRemoteDownloadNetworkProxyId() );
name|List
argument_list|<
name|String
argument_list|>
name|remoteDownloadNetworkProxyIdList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"remoteDownloadNetworkProxyId"
argument_list|)
decl_stmt|;
name|String
name|remoteDownloadNetworkProxyId
init|=
name|value
operator|.
name|getRemoteDownloadNetworkProxyId
argument_list|()
decl_stmt|;
if|if
condition|(
name|remoteDownloadNetworkProxyIdList
operator|!=
literal|null
operator|&&
operator|!
name|remoteDownloadNetworkProxyIdList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|remoteDownloadNetworkProxyIdList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|remoteDownloadNetworkProxyIdList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|remoteDownloadNetworkProxyId
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setRemoteDownloadNetworkProxyId
argument_list|(
name|remoteDownloadNetworkProxyId
argument_list|)
expr_stmt|;
name|int
name|remoteDownloadTimeout
init|=
name|registry
operator|.
name|getInt
argument_list|(
name|prefix
operator|+
literal|"remoteDownloadTimeout"
argument_list|,
name|value
operator|.
name|getRemoteDownloadTimeout
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setRemoteDownloadTimeout
argument_list|(
name|remoteDownloadTimeout
argument_list|)
expr_stmt|;
name|boolean
name|downloadRemoteIndexOnStartup
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"downloadRemoteIndexOnStartup"
argument_list|,
name|value
operator|.
name|isDownloadRemoteIndexOnStartup
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setDownloadRemoteIndexOnStartup
argument_list|(
name|downloadRemoteIndexOnStartup
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|Map
name|extraParameters
init|=
name|registry
operator|.
name|getProperties
argument_list|(
name|prefix
operator|+
literal|"extraParameters"
argument_list|)
decl_stmt|;
name|value
operator|.
name|setExtraParameters
argument_list|(
name|extraParameters
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|Map
name|extraHeaders
init|=
name|registry
operator|.
name|getProperties
argument_list|(
name|prefix
operator|+
literal|"extraHeaders"
argument_list|)
decl_stmt|;
name|value
operator|.
name|setExtraHeaders
argument_list|(
name|extraHeaders
argument_list|)
expr_stmt|;
comment|//String checkPath = registry.getString( prefix + "checkPath", value.getCheckPath() );
name|List
argument_list|<
name|String
argument_list|>
name|checkPathList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"checkPath"
argument_list|)
decl_stmt|;
name|String
name|checkPath
init|=
name|value
operator|.
name|getCheckPath
argument_list|()
decl_stmt|;
if|if
condition|(
name|checkPathList
operator|!=
literal|null
operator|&&
operator|!
name|checkPathList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|checkPathList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|checkPathList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|checkPath
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setCheckPath
argument_list|(
name|checkPath
argument_list|)
expr_stmt|;
comment|//String id = registry.getString( prefix + "id", value.getId() );
name|List
argument_list|<
name|String
argument_list|>
name|idList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"id"
argument_list|)
decl_stmt|;
name|String
name|id
init|=
name|value
operator|.
name|getId
argument_list|()
decl_stmt|;
if|if
condition|(
name|idList
operator|!=
literal|null
operator|&&
operator|!
name|idList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|idList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|idList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|id
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
comment|//String type = registry.getString( prefix + "type", value.getType() );
name|List
argument_list|<
name|String
argument_list|>
name|typeList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"type"
argument_list|)
decl_stmt|;
name|String
name|type
init|=
name|value
operator|.
name|getType
argument_list|()
decl_stmt|;
if|if
condition|(
name|typeList
operator|!=
literal|null
operator|&&
operator|!
name|typeList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|typeList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|typeList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|type
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
comment|//String name = registry.getString( prefix + "name", value.getName() );
name|List
argument_list|<
name|String
argument_list|>
name|nameList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"name"
argument_list|)
decl_stmt|;
name|String
name|name
init|=
name|value
operator|.
name|getName
argument_list|()
decl_stmt|;
if|if
condition|(
name|nameList
operator|!=
literal|null
operator|&&
operator|!
name|nameList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|nameList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|nameList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|name
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
comment|//String layout = registry.getString( prefix + "layout", value.getLayout() );
name|List
argument_list|<
name|String
argument_list|>
name|layoutList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"layout"
argument_list|)
decl_stmt|;
name|String
name|layout
init|=
name|value
operator|.
name|getLayout
argument_list|()
decl_stmt|;
if|if
condition|(
name|layoutList
operator|!=
literal|null
operator|&&
operator|!
name|layoutList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|layoutList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|layoutList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|layout
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
comment|//String indexDir = registry.getString( prefix + "indexDir", value.getIndexDir() );
name|List
argument_list|<
name|String
argument_list|>
name|indexDirList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"indexDir"
argument_list|)
decl_stmt|;
name|String
name|indexDir
init|=
name|value
operator|.
name|getIndexDir
argument_list|()
decl_stmt|;
if|if
condition|(
name|indexDirList
operator|!=
literal|null
operator|&&
operator|!
name|indexDirList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|indexDirList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|indexDirList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|indexDir
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setIndexDir
argument_list|(
name|indexDir
argument_list|)
expr_stmt|;
comment|//String packedIndexDir = registry.getString( prefix + "packedIndexDir", value.getPackedIndexDir() );
name|List
argument_list|<
name|String
argument_list|>
name|packedIndexDirList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"packedIndexDir"
argument_list|)
decl_stmt|;
name|String
name|packedIndexDir
init|=
name|value
operator|.
name|getPackedIndexDir
argument_list|()
decl_stmt|;
if|if
condition|(
name|packedIndexDirList
operator|!=
literal|null
operator|&&
operator|!
name|packedIndexDirList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|packedIndexDirList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|packedIndexDirList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|packedIndexDir
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setPackedIndexDir
argument_list|(
name|packedIndexDir
argument_list|)
expr_stmt|;
comment|//String description = registry.getString( prefix + "description", value.getDescription() );
name|List
argument_list|<
name|String
argument_list|>
name|descriptionList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"description"
argument_list|)
decl_stmt|;
name|String
name|description
init|=
name|value
operator|.
name|getDescription
argument_list|()
decl_stmt|;
if|if
condition|(
name|descriptionList
operator|!=
literal|null
operator|&&
operator|!
name|descriptionList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|descriptionList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|descriptionList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|description
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setDescription
argument_list|(
name|description
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|ManagedRepositoryConfiguration
name|readManagedRepositoryConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|ManagedRepositoryConfiguration
name|value
init|=
operator|new
name|ManagedRepositoryConfiguration
argument_list|()
decl_stmt|;
comment|//String location = registry.getString( prefix + "location", value.getLocation() );
name|List
argument_list|<
name|String
argument_list|>
name|locationList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"location"
argument_list|)
decl_stmt|;
name|String
name|location
init|=
name|value
operator|.
name|getLocation
argument_list|()
decl_stmt|;
if|if
condition|(
name|locationList
operator|!=
literal|null
operator|&&
operator|!
name|locationList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|locationList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|locationList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|location
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setLocation
argument_list|(
name|location
argument_list|)
expr_stmt|;
name|boolean
name|releases
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"releases"
argument_list|,
name|value
operator|.
name|isReleases
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setReleases
argument_list|(
name|releases
argument_list|)
expr_stmt|;
name|boolean
name|blockRedeployments
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"blockRedeployments"
argument_list|,
name|value
operator|.
name|isBlockRedeployments
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setBlockRedeployments
argument_list|(
name|blockRedeployments
argument_list|)
expr_stmt|;
name|boolean
name|snapshots
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"snapshots"
argument_list|,
name|value
operator|.
name|isSnapshots
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setSnapshots
argument_list|(
name|snapshots
argument_list|)
expr_stmt|;
name|boolean
name|scanned
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"scanned"
argument_list|,
name|value
operator|.
name|isScanned
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setScanned
argument_list|(
name|scanned
argument_list|)
expr_stmt|;
comment|//String refreshCronExpression = registry.getString( prefix + "refreshCronExpression", value.getRefreshCronExpression() );
name|List
argument_list|<
name|String
argument_list|>
name|refreshCronExpressionList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"refreshCronExpression"
argument_list|)
decl_stmt|;
name|String
name|refreshCronExpression
init|=
name|value
operator|.
name|getRefreshCronExpression
argument_list|()
decl_stmt|;
if|if
condition|(
name|refreshCronExpressionList
operator|!=
literal|null
operator|&&
operator|!
name|refreshCronExpressionList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|refreshCronExpressionList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|refreshCronExpressionList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|refreshCronExpression
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setRefreshCronExpression
argument_list|(
name|refreshCronExpression
argument_list|)
expr_stmt|;
name|int
name|retentionCount
init|=
name|registry
operator|.
name|getInt
argument_list|(
name|prefix
operator|+
literal|"retentionCount"
argument_list|,
name|value
operator|.
name|getRetentionCount
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setRetentionCount
argument_list|(
name|retentionCount
argument_list|)
expr_stmt|;
name|int
name|retentionPeriod
init|=
name|registry
operator|.
name|getInt
argument_list|(
name|prefix
operator|+
literal|"retentionPeriod"
argument_list|,
name|value
operator|.
name|getRetentionPeriod
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setRetentionPeriod
argument_list|(
name|retentionPeriod
argument_list|)
expr_stmt|;
name|boolean
name|deleteReleasedSnapshots
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"deleteReleasedSnapshots"
argument_list|,
name|value
operator|.
name|isDeleteReleasedSnapshots
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setDeleteReleasedSnapshots
argument_list|(
name|deleteReleasedSnapshots
argument_list|)
expr_stmt|;
name|boolean
name|skipPackedIndexCreation
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"skipPackedIndexCreation"
argument_list|,
name|value
operator|.
name|isSkipPackedIndexCreation
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setSkipPackedIndexCreation
argument_list|(
name|skipPackedIndexCreation
argument_list|)
expr_stmt|;
name|boolean
name|stageRepoNeeded
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"stageRepoNeeded"
argument_list|,
name|value
operator|.
name|isStageRepoNeeded
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setStageRepoNeeded
argument_list|(
name|stageRepoNeeded
argument_list|)
expr_stmt|;
comment|//String id = registry.getString( prefix + "id", value.getId() );
name|List
argument_list|<
name|String
argument_list|>
name|idList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"id"
argument_list|)
decl_stmt|;
name|String
name|id
init|=
name|value
operator|.
name|getId
argument_list|()
decl_stmt|;
if|if
condition|(
name|idList
operator|!=
literal|null
operator|&&
operator|!
name|idList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|idList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|idList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|id
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
comment|//String type = registry.getString( prefix + "type", value.getType() );
name|List
argument_list|<
name|String
argument_list|>
name|typeList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"type"
argument_list|)
decl_stmt|;
name|String
name|type
init|=
name|value
operator|.
name|getType
argument_list|()
decl_stmt|;
if|if
condition|(
name|typeList
operator|!=
literal|null
operator|&&
operator|!
name|typeList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|typeList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|typeList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|type
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
comment|//String name = registry.getString( prefix + "name", value.getName() );
name|List
argument_list|<
name|String
argument_list|>
name|nameList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"name"
argument_list|)
decl_stmt|;
name|String
name|name
init|=
name|value
operator|.
name|getName
argument_list|()
decl_stmt|;
if|if
condition|(
name|nameList
operator|!=
literal|null
operator|&&
operator|!
name|nameList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|nameList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|nameList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|name
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
comment|//String layout = registry.getString( prefix + "layout", value.getLayout() );
name|List
argument_list|<
name|String
argument_list|>
name|layoutList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"layout"
argument_list|)
decl_stmt|;
name|String
name|layout
init|=
name|value
operator|.
name|getLayout
argument_list|()
decl_stmt|;
if|if
condition|(
name|layoutList
operator|!=
literal|null
operator|&&
operator|!
name|layoutList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|layoutList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|layoutList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|layout
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
comment|//String indexDir = registry.getString( prefix + "indexDir", value.getIndexDir() );
name|List
argument_list|<
name|String
argument_list|>
name|indexDirList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"indexDir"
argument_list|)
decl_stmt|;
name|String
name|indexDir
init|=
name|value
operator|.
name|getIndexDir
argument_list|()
decl_stmt|;
if|if
condition|(
name|indexDirList
operator|!=
literal|null
operator|&&
operator|!
name|indexDirList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|indexDirList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|indexDirList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|indexDir
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setIndexDir
argument_list|(
name|indexDir
argument_list|)
expr_stmt|;
comment|//String packedIndexDir = registry.getString( prefix + "packedIndexDir", value.getPackedIndexDir() );
name|List
argument_list|<
name|String
argument_list|>
name|packedIndexDirList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"packedIndexDir"
argument_list|)
decl_stmt|;
name|String
name|packedIndexDir
init|=
name|value
operator|.
name|getPackedIndexDir
argument_list|()
decl_stmt|;
if|if
condition|(
name|packedIndexDirList
operator|!=
literal|null
operator|&&
operator|!
name|packedIndexDirList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|packedIndexDirList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|packedIndexDirList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|packedIndexDir
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setPackedIndexDir
argument_list|(
name|packedIndexDir
argument_list|)
expr_stmt|;
comment|//String description = registry.getString( prefix + "description", value.getDescription() );
name|List
argument_list|<
name|String
argument_list|>
name|descriptionList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"description"
argument_list|)
decl_stmt|;
name|String
name|description
init|=
name|value
operator|.
name|getDescription
argument_list|()
decl_stmt|;
if|if
condition|(
name|descriptionList
operator|!=
literal|null
operator|&&
operator|!
name|descriptionList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|descriptionList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|descriptionList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|description
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setDescription
argument_list|(
name|description
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|LegacyArtifactPath
name|readLegacyArtifactPath
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|LegacyArtifactPath
name|value
init|=
operator|new
name|LegacyArtifactPath
argument_list|()
decl_stmt|;
comment|//String path = registry.getString( prefix + "path", value.getPath() );
name|List
argument_list|<
name|String
argument_list|>
name|pathList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"path"
argument_list|)
decl_stmt|;
name|String
name|path
init|=
name|value
operator|.
name|getPath
argument_list|()
decl_stmt|;
if|if
condition|(
name|pathList
operator|!=
literal|null
operator|&&
operator|!
name|pathList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|pathList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|pathList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|path
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
comment|//String artifact = registry.getString( prefix + "artifact", value.getArtifact() );
name|List
argument_list|<
name|String
argument_list|>
name|artifactList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"artifact"
argument_list|)
decl_stmt|;
name|String
name|artifact
init|=
name|value
operator|.
name|getArtifact
argument_list|()
decl_stmt|;
if|if
condition|(
name|artifactList
operator|!=
literal|null
operator|&&
operator|!
name|artifactList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|artifactList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|artifactList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|artifact
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|RepositoryGroupConfiguration
name|readRepositoryGroupConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|RepositoryGroupConfiguration
name|value
init|=
operator|new
name|RepositoryGroupConfiguration
argument_list|()
decl_stmt|;
comment|//String id = registry.getString( prefix + "id", value.getId() );
name|List
argument_list|<
name|String
argument_list|>
name|idList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"id"
argument_list|)
decl_stmt|;
name|String
name|id
init|=
name|value
operator|.
name|getId
argument_list|()
decl_stmt|;
if|if
condition|(
name|idList
operator|!=
literal|null
operator|&&
operator|!
name|idList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|idList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|idList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|id
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|value
operator|.
name|setName
argument_list|(
name|registry
operator|.
name|getString
argument_list|(
name|prefix
operator|+
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|.
name|setType
argument_list|(
name|registry
operator|.
name|getString
argument_list|(
name|prefix
operator|+
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
comment|//String mergedIndexPath = registry.getString( prefix + "mergedIndexPath", value.getMergedIndexPath() );
name|List
argument_list|<
name|String
argument_list|>
name|mergedIndexPathList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"mergedIndexPath"
argument_list|)
decl_stmt|;
name|String
name|mergedIndexPath
init|=
name|value
operator|.
name|getMergedIndexPath
argument_list|()
decl_stmt|;
if|if
condition|(
name|mergedIndexPathList
operator|!=
literal|null
operator|&&
operator|!
name|mergedIndexPathList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|mergedIndexPathList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|mergedIndexPathList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|mergedIndexPath
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setMergedIndexPath
argument_list|(
name|mergedIndexPath
argument_list|)
expr_stmt|;
name|int
name|mergedIndexTtl
init|=
name|registry
operator|.
name|getInt
argument_list|(
name|prefix
operator|+
literal|"mergedIndexTtl"
argument_list|,
name|value
operator|.
name|getMergedIndexTtl
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setMergedIndexTtl
argument_list|(
name|mergedIndexTtl
argument_list|)
expr_stmt|;
comment|//String cronExpression = registry.getString( prefix + "cronExpression", value.getCronExpression() );
name|List
argument_list|<
name|String
argument_list|>
name|cronExpressionList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"cronExpression"
argument_list|)
decl_stmt|;
name|String
name|cronExpression
init|=
name|value
operator|.
name|getCronExpression
argument_list|()
decl_stmt|;
if|if
condition|(
name|cronExpressionList
operator|!=
literal|null
operator|&&
operator|!
name|cronExpressionList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|cronExpressionList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|cronExpressionList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|cronExpression
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setCronExpression
argument_list|(
name|cronExpression
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|repositories
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<String>*/
argument_list|()
decl_stmt|;
name|repositories
operator|.
name|addAll
argument_list|(
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"repositories.repository"
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|.
name|setRepositories
argument_list|(
name|repositories
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|RepositoryCheckPath
name|readRepositoryCheckPath
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|RepositoryCheckPath
name|value
init|=
operator|new
name|RepositoryCheckPath
argument_list|()
decl_stmt|;
comment|//String url = registry.getString( prefix + "url", value.getUrl() );
name|List
argument_list|<
name|String
argument_list|>
name|urlList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"url"
argument_list|)
decl_stmt|;
name|String
name|url
init|=
name|value
operator|.
name|getUrl
argument_list|()
decl_stmt|;
if|if
condition|(
name|urlList
operator|!=
literal|null
operator|&&
operator|!
name|urlList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|urlList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|urlList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|url
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setUrl
argument_list|(
name|url
argument_list|)
expr_stmt|;
comment|//String path = registry.getString( prefix + "path", value.getPath() );
name|List
argument_list|<
name|String
argument_list|>
name|pathList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"path"
argument_list|)
decl_stmt|;
name|String
name|path
init|=
name|value
operator|.
name|getPath
argument_list|()
decl_stmt|;
if|if
condition|(
name|pathList
operator|!=
literal|null
operator|&&
operator|!
name|pathList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|pathList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|pathList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|path
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|AbstractRepositoryConnectorConfiguration
name|readAbstractRepositoryConnectorConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|AbstractRepositoryConnectorConfiguration
name|value
init|=
operator|new
name|AbstractRepositoryConnectorConfiguration
argument_list|()
decl_stmt|;
comment|//String sourceRepoId = registry.getString( prefix + "sourceRepoId", value.getSourceRepoId() );
name|List
argument_list|<
name|String
argument_list|>
name|sourceRepoIdList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"sourceRepoId"
argument_list|)
decl_stmt|;
name|String
name|sourceRepoId
init|=
name|value
operator|.
name|getSourceRepoId
argument_list|()
decl_stmt|;
if|if
condition|(
name|sourceRepoIdList
operator|!=
literal|null
operator|&&
operator|!
name|sourceRepoIdList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|sourceRepoIdList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|sourceRepoIdList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|sourceRepoId
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setSourceRepoId
argument_list|(
name|sourceRepoId
argument_list|)
expr_stmt|;
comment|//String targetRepoId = registry.getString( prefix + "targetRepoId", value.getTargetRepoId() );
name|List
argument_list|<
name|String
argument_list|>
name|targetRepoIdList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"targetRepoId"
argument_list|)
decl_stmt|;
name|String
name|targetRepoId
init|=
name|value
operator|.
name|getTargetRepoId
argument_list|()
decl_stmt|;
if|if
condition|(
name|targetRepoIdList
operator|!=
literal|null
operator|&&
operator|!
name|targetRepoIdList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|targetRepoIdList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|targetRepoIdList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|targetRepoId
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setTargetRepoId
argument_list|(
name|targetRepoId
argument_list|)
expr_stmt|;
comment|//String proxyId = registry.getString( prefix + "proxyId", value.getProxyId() );
name|List
argument_list|<
name|String
argument_list|>
name|proxyIdList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"proxyId"
argument_list|)
decl_stmt|;
name|String
name|proxyId
init|=
name|value
operator|.
name|getProxyId
argument_list|()
decl_stmt|;
if|if
condition|(
name|proxyIdList
operator|!=
literal|null
operator|&&
operator|!
name|proxyIdList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|proxyIdList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|proxyIdList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|proxyId
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setProxyId
argument_list|(
name|proxyId
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|blackListPatterns
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<String>*/
argument_list|()
decl_stmt|;
name|blackListPatterns
operator|.
name|addAll
argument_list|(
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"blackListPatterns.blackListPattern"
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|.
name|setBlackListPatterns
argument_list|(
name|blackListPatterns
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|whiteListPatterns
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<String>*/
argument_list|()
decl_stmt|;
name|whiteListPatterns
operator|.
name|addAll
argument_list|(
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"whiteListPatterns.whiteListPattern"
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|.
name|setWhiteListPatterns
argument_list|(
name|whiteListPatterns
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|Map
name|policies
init|=
name|registry
operator|.
name|getProperties
argument_list|(
name|prefix
operator|+
literal|"policies"
argument_list|)
decl_stmt|;
name|value
operator|.
name|setPolicies
argument_list|(
name|policies
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|Map
name|properties
init|=
name|registry
operator|.
name|getProperties
argument_list|(
name|prefix
operator|+
literal|"properties"
argument_list|)
decl_stmt|;
name|value
operator|.
name|setProperties
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|boolean
name|disabled
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"disabled"
argument_list|,
name|value
operator|.
name|isDisabled
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setDisabled
argument_list|(
name|disabled
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|ProxyConnectorRuleConfiguration
name|readProxyConnectorRuleConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|ProxyConnectorRuleConfiguration
name|value
init|=
operator|new
name|ProxyConnectorRuleConfiguration
argument_list|()
decl_stmt|;
comment|//String ruleType = registry.getString( prefix + "ruleType", value.getRuleType() );
name|List
argument_list|<
name|String
argument_list|>
name|ruleTypeList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"ruleType"
argument_list|)
decl_stmt|;
name|String
name|ruleType
init|=
name|value
operator|.
name|getRuleType
argument_list|()
decl_stmt|;
if|if
condition|(
name|ruleTypeList
operator|!=
literal|null
operator|&&
operator|!
name|ruleTypeList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|ruleTypeList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|ruleTypeList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|ruleType
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setRuleType
argument_list|(
name|ruleType
argument_list|)
expr_stmt|;
comment|//String pattern = registry.getString( prefix + "pattern", value.getPattern() );
name|List
argument_list|<
name|String
argument_list|>
name|patternList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"pattern"
argument_list|)
decl_stmt|;
name|String
name|pattern
init|=
name|value
operator|.
name|getPattern
argument_list|()
decl_stmt|;
if|if
condition|(
name|patternList
operator|!=
literal|null
operator|&&
operator|!
name|patternList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|patternList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|patternList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|pattern
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setPattern
argument_list|(
name|pattern
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|proxyConnectors
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<ProxyConnectorConfiguration>*/
argument_list|()
decl_stmt|;
name|List
name|proxyConnectorsSubsets
init|=
name|registry
operator|.
name|getSubsetList
argument_list|(
name|prefix
operator|+
literal|"proxyConnectors.proxyConnector"
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|proxyConnectorsSubsets
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|ProxyConnectorConfiguration
name|v
init|=
name|readProxyConnectorConfiguration
argument_list|(
literal|""
argument_list|,
operator|(
name|Registry
operator|)
name|i
operator|.
name|next
argument_list|()
argument_list|)
decl_stmt|;
name|proxyConnectors
operator|.
name|add
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
name|value
operator|.
name|setProxyConnectors
argument_list|(
name|proxyConnectors
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|ProxyConnectorConfiguration
name|readProxyConnectorConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|ProxyConnectorConfiguration
name|value
init|=
operator|new
name|ProxyConnectorConfiguration
argument_list|()
decl_stmt|;
name|int
name|order
init|=
name|registry
operator|.
name|getInt
argument_list|(
name|prefix
operator|+
literal|"order"
argument_list|,
name|value
operator|.
name|getOrder
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setOrder
argument_list|(
name|order
argument_list|)
expr_stmt|;
comment|//String sourceRepoId = registry.getString( prefix + "sourceRepoId", value.getSourceRepoId() );
name|List
argument_list|<
name|String
argument_list|>
name|sourceRepoIdList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"sourceRepoId"
argument_list|)
decl_stmt|;
name|String
name|sourceRepoId
init|=
name|value
operator|.
name|getSourceRepoId
argument_list|()
decl_stmt|;
if|if
condition|(
name|sourceRepoIdList
operator|!=
literal|null
operator|&&
operator|!
name|sourceRepoIdList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|sourceRepoIdList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|sourceRepoIdList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|sourceRepoId
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setSourceRepoId
argument_list|(
name|sourceRepoId
argument_list|)
expr_stmt|;
comment|//String targetRepoId = registry.getString( prefix + "targetRepoId", value.getTargetRepoId() );
name|List
argument_list|<
name|String
argument_list|>
name|targetRepoIdList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"targetRepoId"
argument_list|)
decl_stmt|;
name|String
name|targetRepoId
init|=
name|value
operator|.
name|getTargetRepoId
argument_list|()
decl_stmt|;
if|if
condition|(
name|targetRepoIdList
operator|!=
literal|null
operator|&&
operator|!
name|targetRepoIdList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|targetRepoIdList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|targetRepoIdList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|targetRepoId
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setTargetRepoId
argument_list|(
name|targetRepoId
argument_list|)
expr_stmt|;
comment|//String proxyId = registry.getString( prefix + "proxyId", value.getProxyId() );
name|List
argument_list|<
name|String
argument_list|>
name|proxyIdList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"proxyId"
argument_list|)
decl_stmt|;
name|String
name|proxyId
init|=
name|value
operator|.
name|getProxyId
argument_list|()
decl_stmt|;
if|if
condition|(
name|proxyIdList
operator|!=
literal|null
operator|&&
operator|!
name|proxyIdList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|proxyIdList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|proxyIdList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|proxyId
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setProxyId
argument_list|(
name|proxyId
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|blackListPatterns
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<String>*/
argument_list|()
decl_stmt|;
name|blackListPatterns
operator|.
name|addAll
argument_list|(
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"blackListPatterns.blackListPattern"
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|.
name|setBlackListPatterns
argument_list|(
name|blackListPatterns
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|whiteListPatterns
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<String>*/
argument_list|()
decl_stmt|;
name|whiteListPatterns
operator|.
name|addAll
argument_list|(
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"whiteListPatterns.whiteListPattern"
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|.
name|setWhiteListPatterns
argument_list|(
name|whiteListPatterns
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|Map
name|policies
init|=
name|registry
operator|.
name|getProperties
argument_list|(
name|prefix
operator|+
literal|"policies"
argument_list|)
decl_stmt|;
name|value
operator|.
name|setPolicies
argument_list|(
name|policies
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|Map
name|properties
init|=
name|registry
operator|.
name|getProperties
argument_list|(
name|prefix
operator|+
literal|"properties"
argument_list|)
decl_stmt|;
name|value
operator|.
name|setProperties
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|boolean
name|disabled
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"disabled"
argument_list|,
name|value
operator|.
name|isDisabled
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setDisabled
argument_list|(
name|disabled
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|SyncConnectorConfiguration
name|readSyncConnectorConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|SyncConnectorConfiguration
name|value
init|=
operator|new
name|SyncConnectorConfiguration
argument_list|()
decl_stmt|;
comment|//String cronExpression = registry.getString( prefix + "cronExpression", value.getCronExpression() );
name|List
argument_list|<
name|String
argument_list|>
name|cronExpressionList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"cronExpression"
argument_list|)
decl_stmt|;
name|String
name|cronExpression
init|=
name|value
operator|.
name|getCronExpression
argument_list|()
decl_stmt|;
if|if
condition|(
name|cronExpressionList
operator|!=
literal|null
operator|&&
operator|!
name|cronExpressionList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|cronExpressionList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|cronExpressionList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|cronExpression
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setCronExpression
argument_list|(
name|cronExpression
argument_list|)
expr_stmt|;
comment|//String method = registry.getString( prefix + "method", value.getMethod() );
name|List
argument_list|<
name|String
argument_list|>
name|methodList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"method"
argument_list|)
decl_stmt|;
name|String
name|method
init|=
name|value
operator|.
name|getMethod
argument_list|()
decl_stmt|;
if|if
condition|(
name|methodList
operator|!=
literal|null
operator|&&
operator|!
name|methodList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|methodList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|methodList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|method
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setMethod
argument_list|(
name|method
argument_list|)
expr_stmt|;
comment|//String sourceRepoId = registry.getString( prefix + "sourceRepoId", value.getSourceRepoId() );
name|List
argument_list|<
name|String
argument_list|>
name|sourceRepoIdList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"sourceRepoId"
argument_list|)
decl_stmt|;
name|String
name|sourceRepoId
init|=
name|value
operator|.
name|getSourceRepoId
argument_list|()
decl_stmt|;
if|if
condition|(
name|sourceRepoIdList
operator|!=
literal|null
operator|&&
operator|!
name|sourceRepoIdList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|sourceRepoIdList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|sourceRepoIdList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|sourceRepoId
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setSourceRepoId
argument_list|(
name|sourceRepoId
argument_list|)
expr_stmt|;
comment|//String targetRepoId = registry.getString( prefix + "targetRepoId", value.getTargetRepoId() );
name|List
argument_list|<
name|String
argument_list|>
name|targetRepoIdList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"targetRepoId"
argument_list|)
decl_stmt|;
name|String
name|targetRepoId
init|=
name|value
operator|.
name|getTargetRepoId
argument_list|()
decl_stmt|;
if|if
condition|(
name|targetRepoIdList
operator|!=
literal|null
operator|&&
operator|!
name|targetRepoIdList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|targetRepoIdList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|targetRepoIdList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|targetRepoId
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setTargetRepoId
argument_list|(
name|targetRepoId
argument_list|)
expr_stmt|;
comment|//String proxyId = registry.getString( prefix + "proxyId", value.getProxyId() );
name|List
argument_list|<
name|String
argument_list|>
name|proxyIdList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"proxyId"
argument_list|)
decl_stmt|;
name|String
name|proxyId
init|=
name|value
operator|.
name|getProxyId
argument_list|()
decl_stmt|;
if|if
condition|(
name|proxyIdList
operator|!=
literal|null
operator|&&
operator|!
name|proxyIdList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|proxyIdList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|proxyIdList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|proxyId
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setProxyId
argument_list|(
name|proxyId
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|blackListPatterns
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<String>*/
argument_list|()
decl_stmt|;
name|blackListPatterns
operator|.
name|addAll
argument_list|(
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"blackListPatterns.blackListPattern"
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|.
name|setBlackListPatterns
argument_list|(
name|blackListPatterns
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|whiteListPatterns
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<String>*/
argument_list|()
decl_stmt|;
name|whiteListPatterns
operator|.
name|addAll
argument_list|(
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"whiteListPatterns.whiteListPattern"
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|.
name|setWhiteListPatterns
argument_list|(
name|whiteListPatterns
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|Map
name|policies
init|=
name|registry
operator|.
name|getProperties
argument_list|(
name|prefix
operator|+
literal|"policies"
argument_list|)
decl_stmt|;
name|value
operator|.
name|setPolicies
argument_list|(
name|policies
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|Map
name|properties
init|=
name|registry
operator|.
name|getProperties
argument_list|(
name|prefix
operator|+
literal|"properties"
argument_list|)
decl_stmt|;
name|value
operator|.
name|setProperties
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|boolean
name|disabled
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"disabled"
argument_list|,
name|value
operator|.
name|isDisabled
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setDisabled
argument_list|(
name|disabled
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|NetworkProxyConfiguration
name|readNetworkProxyConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|NetworkProxyConfiguration
name|value
init|=
operator|new
name|NetworkProxyConfiguration
argument_list|()
decl_stmt|;
comment|//String id = registry.getString( prefix + "id", value.getId() );
name|List
argument_list|<
name|String
argument_list|>
name|idList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"id"
argument_list|)
decl_stmt|;
name|String
name|id
init|=
name|value
operator|.
name|getId
argument_list|()
decl_stmt|;
if|if
condition|(
name|idList
operator|!=
literal|null
operator|&&
operator|!
name|idList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|idList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|idList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|id
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
comment|//String protocol = registry.getString( prefix + "protocol", value.getProtocol() );
name|List
argument_list|<
name|String
argument_list|>
name|protocolList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"protocol"
argument_list|)
decl_stmt|;
name|String
name|protocol
init|=
name|value
operator|.
name|getProtocol
argument_list|()
decl_stmt|;
if|if
condition|(
name|protocolList
operator|!=
literal|null
operator|&&
operator|!
name|protocolList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|protocolList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|protocolList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|protocol
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setProtocol
argument_list|(
name|protocol
argument_list|)
expr_stmt|;
comment|//String host = registry.getString( prefix + "host", value.getHost() );
name|List
argument_list|<
name|String
argument_list|>
name|hostList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"host"
argument_list|)
decl_stmt|;
name|String
name|host
init|=
name|value
operator|.
name|getHost
argument_list|()
decl_stmt|;
if|if
condition|(
name|hostList
operator|!=
literal|null
operator|&&
operator|!
name|hostList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|hostList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|hostList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|host
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setHost
argument_list|(
name|host
argument_list|)
expr_stmt|;
name|int
name|port
init|=
name|registry
operator|.
name|getInt
argument_list|(
name|prefix
operator|+
literal|"port"
argument_list|,
name|value
operator|.
name|getPort
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setPort
argument_list|(
name|port
argument_list|)
expr_stmt|;
comment|//String username = registry.getString( prefix + "username", value.getUsername() );
name|List
argument_list|<
name|String
argument_list|>
name|usernameList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"username"
argument_list|)
decl_stmt|;
name|String
name|username
init|=
name|value
operator|.
name|getUsername
argument_list|()
decl_stmt|;
if|if
condition|(
name|usernameList
operator|!=
literal|null
operator|&&
operator|!
name|usernameList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|usernameList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|usernameList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|username
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setUsername
argument_list|(
name|username
argument_list|)
expr_stmt|;
comment|//String password = registry.getString( prefix + "password", value.getPassword() );
name|List
argument_list|<
name|String
argument_list|>
name|passwordList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"password"
argument_list|)
decl_stmt|;
name|String
name|password
init|=
name|value
operator|.
name|getPassword
argument_list|()
decl_stmt|;
if|if
condition|(
name|passwordList
operator|!=
literal|null
operator|&&
operator|!
name|passwordList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|passwordList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|passwordList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|password
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setPassword
argument_list|(
name|password
argument_list|)
expr_stmt|;
name|boolean
name|useNtlm
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"useNtlm"
argument_list|,
name|value
operator|.
name|isUseNtlm
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setUseNtlm
argument_list|(
name|useNtlm
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|RepositoryScanningConfiguration
name|readRepositoryScanningConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|RepositoryScanningConfiguration
name|value
init|=
operator|new
name|RepositoryScanningConfiguration
argument_list|()
decl_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|fileTypes
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<FileType>*/
argument_list|()
decl_stmt|;
name|List
name|fileTypesSubsets
init|=
name|registry
operator|.
name|getSubsetList
argument_list|(
name|prefix
operator|+
literal|"fileTypes.fileType"
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|fileTypesSubsets
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|FileType
name|v
init|=
name|readFileType
argument_list|(
literal|""
argument_list|,
operator|(
name|Registry
operator|)
name|i
operator|.
name|next
argument_list|()
argument_list|)
decl_stmt|;
name|fileTypes
operator|.
name|add
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
name|value
operator|.
name|setFileTypes
argument_list|(
name|fileTypes
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|knownContentConsumers
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<String>*/
argument_list|()
decl_stmt|;
name|knownContentConsumers
operator|.
name|addAll
argument_list|(
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"knownContentConsumers.knownContentConsumer"
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|.
name|setKnownContentConsumers
argument_list|(
name|knownContentConsumers
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|invalidContentConsumers
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<String>*/
argument_list|()
decl_stmt|;
name|invalidContentConsumers
operator|.
name|addAll
argument_list|(
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"invalidContentConsumers.invalidContentConsumer"
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|.
name|setInvalidContentConsumers
argument_list|(
name|invalidContentConsumers
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|FileType
name|readFileType
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|FileType
name|value
init|=
operator|new
name|FileType
argument_list|()
decl_stmt|;
comment|//String id = registry.getString( prefix + "id", value.getId() );
name|List
argument_list|<
name|String
argument_list|>
name|idList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"id"
argument_list|)
decl_stmt|;
name|String
name|id
init|=
name|value
operator|.
name|getId
argument_list|()
decl_stmt|;
if|if
condition|(
name|idList
operator|!=
literal|null
operator|&&
operator|!
name|idList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|idList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|idList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|id
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|patterns
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<String>*/
argument_list|()
decl_stmt|;
name|patterns
operator|.
name|addAll
argument_list|(
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"patterns.pattern"
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|.
name|setPatterns
argument_list|(
name|patterns
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|OrganisationInformation
name|readOrganisationInformation
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|OrganisationInformation
name|value
init|=
operator|new
name|OrganisationInformation
argument_list|()
decl_stmt|;
comment|//String name = registry.getString( prefix + "name", value.getName() );
name|List
argument_list|<
name|String
argument_list|>
name|nameList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"name"
argument_list|)
decl_stmt|;
name|String
name|name
init|=
name|value
operator|.
name|getName
argument_list|()
decl_stmt|;
if|if
condition|(
name|nameList
operator|!=
literal|null
operator|&&
operator|!
name|nameList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|nameList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|nameList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|name
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
comment|//String url = registry.getString( prefix + "url", value.getUrl() );
name|List
argument_list|<
name|String
argument_list|>
name|urlList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"url"
argument_list|)
decl_stmt|;
name|String
name|url
init|=
name|value
operator|.
name|getUrl
argument_list|()
decl_stmt|;
if|if
condition|(
name|urlList
operator|!=
literal|null
operator|&&
operator|!
name|urlList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|urlList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|urlList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|url
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setUrl
argument_list|(
name|url
argument_list|)
expr_stmt|;
comment|//String logoLocation = registry.getString( prefix + "logoLocation", value.getLogoLocation() );
name|List
argument_list|<
name|String
argument_list|>
name|logoLocationList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"logoLocation"
argument_list|)
decl_stmt|;
name|String
name|logoLocation
init|=
name|value
operator|.
name|getLogoLocation
argument_list|()
decl_stmt|;
if|if
condition|(
name|logoLocationList
operator|!=
literal|null
operator|&&
operator|!
name|logoLocationList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|logoLocationList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|logoLocationList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|logoLocation
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setLogoLocation
argument_list|(
name|logoLocation
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|WebappConfiguration
name|readWebappConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|WebappConfiguration
name|value
init|=
operator|new
name|WebappConfiguration
argument_list|()
decl_stmt|;
name|UserInterfaceOptions
name|ui
init|=
name|readUserInterfaceOptions
argument_list|(
name|prefix
operator|+
literal|"ui."
argument_list|,
name|registry
argument_list|)
decl_stmt|;
name|value
operator|.
name|setUi
argument_list|(
name|ui
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|UserInterfaceOptions
name|readUserInterfaceOptions
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|UserInterfaceOptions
name|value
init|=
operator|new
name|UserInterfaceOptions
argument_list|()
decl_stmt|;
name|boolean
name|showFindArtifacts
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"showFindArtifacts"
argument_list|,
name|value
operator|.
name|isShowFindArtifacts
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setShowFindArtifacts
argument_list|(
name|showFindArtifacts
argument_list|)
expr_stmt|;
name|boolean
name|appletFindEnabled
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"appletFindEnabled"
argument_list|,
name|value
operator|.
name|isAppletFindEnabled
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setAppletFindEnabled
argument_list|(
name|appletFindEnabled
argument_list|)
expr_stmt|;
name|boolean
name|disableEasterEggs
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"disableEasterEggs"
argument_list|,
name|value
operator|.
name|isDisableEasterEggs
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setDisableEasterEggs
argument_list|(
name|disableEasterEggs
argument_list|)
expr_stmt|;
comment|//String applicationUrl = registry.getString( prefix + "applicationUrl", value.getApplicationUrl() );
name|List
argument_list|<
name|String
argument_list|>
name|applicationUrlList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"applicationUrl"
argument_list|)
decl_stmt|;
name|String
name|applicationUrl
init|=
name|value
operator|.
name|getApplicationUrl
argument_list|()
decl_stmt|;
if|if
condition|(
name|applicationUrlList
operator|!=
literal|null
operator|&&
operator|!
name|applicationUrlList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|applicationUrlList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|applicationUrlList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|applicationUrl
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setApplicationUrl
argument_list|(
name|applicationUrl
argument_list|)
expr_stmt|;
name|boolean
name|disableRegistration
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"disableRegistration"
argument_list|,
name|value
operator|.
name|isDisableRegistration
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setDisableRegistration
argument_list|(
name|disableRegistration
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|NetworkConfiguration
name|readNetworkConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|NetworkConfiguration
name|value
init|=
operator|new
name|NetworkConfiguration
argument_list|()
decl_stmt|;
name|int
name|maxTotal
init|=
name|registry
operator|.
name|getInt
argument_list|(
name|prefix
operator|+
literal|"maxTotal"
argument_list|,
name|value
operator|.
name|getMaxTotal
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setMaxTotal
argument_list|(
name|maxTotal
argument_list|)
expr_stmt|;
name|int
name|maxTotalPerHost
init|=
name|registry
operator|.
name|getInt
argument_list|(
name|prefix
operator|+
literal|"maxTotalPerHost"
argument_list|,
name|value
operator|.
name|getMaxTotalPerHost
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setMaxTotalPerHost
argument_list|(
name|maxTotalPerHost
argument_list|)
expr_stmt|;
name|boolean
name|usePooling
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"usePooling"
argument_list|,
name|value
operator|.
name|isUsePooling
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setUsePooling
argument_list|(
name|usePooling
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|ArchivaRuntimeConfiguration
name|readArchivaRuntimeConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|ArchivaRuntimeConfiguration
name|value
init|=
operator|new
name|ArchivaRuntimeConfiguration
argument_list|()
decl_stmt|;
name|CacheConfiguration
name|urlFailureCacheConfiguration
init|=
name|readCacheConfiguration
argument_list|(
name|prefix
operator|+
literal|"urlFailureCacheConfiguration."
argument_list|,
name|registry
argument_list|)
decl_stmt|;
name|value
operator|.
name|setUrlFailureCacheConfiguration
argument_list|(
name|urlFailureCacheConfiguration
argument_list|)
expr_stmt|;
name|FileLockConfiguration
name|fileLockConfiguration
init|=
name|readFileLockConfiguration
argument_list|(
name|prefix
operator|+
literal|"fileLockConfiguration."
argument_list|,
name|registry
argument_list|)
decl_stmt|;
name|value
operator|.
name|setFileLockConfiguration
argument_list|(
name|fileLockConfiguration
argument_list|)
expr_stmt|;
comment|//String dataDirectory = registry.getString( prefix + "dataDirectory", value.getDataDirectory() );
name|List
argument_list|<
name|String
argument_list|>
name|dataDirectoryList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"dataDirectory"
argument_list|)
decl_stmt|;
name|String
name|dataDirectory
init|=
name|value
operator|.
name|getDataDirectory
argument_list|()
decl_stmt|;
if|if
condition|(
name|dataDirectoryList
operator|!=
literal|null
operator|&&
operator|!
name|dataDirectoryList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|dataDirectoryList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|dataDirectoryList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|dataDirectory
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setDataDirectory
argument_list|(
name|dataDirectory
argument_list|)
expr_stmt|;
comment|//String repositoryBaseDirectory = registry.getString( prefix + "repositoryBaseDirectory", value.getRepositoryBaseDirectory() );
name|List
argument_list|<
name|String
argument_list|>
name|repositoryBaseDirectoryList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"repositoryBaseDirectory"
argument_list|)
decl_stmt|;
name|String
name|repositoryBaseDirectory
init|=
name|value
operator|.
name|getRepositoryBaseDirectory
argument_list|()
decl_stmt|;
if|if
condition|(
name|repositoryBaseDirectoryList
operator|!=
literal|null
operator|&&
operator|!
name|repositoryBaseDirectoryList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|repositoryBaseDirectoryList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|repositoryBaseDirectoryList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|repositoryBaseDirectory
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setRepositoryBaseDirectory
argument_list|(
name|repositoryBaseDirectory
argument_list|)
expr_stmt|;
comment|//String remoteRepositoryBaseDirectory = registry.getString( prefix + "remoteRepositoryBaseDirectory", value.getRemoteRepositoryBaseDirectory() );
name|List
argument_list|<
name|String
argument_list|>
name|remoteRepositoryBaseDirectoryList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"remoteRepositoryBaseDirectory"
argument_list|)
decl_stmt|;
name|String
name|remoteRepositoryBaseDirectory
init|=
name|value
operator|.
name|getRemoteRepositoryBaseDirectory
argument_list|()
decl_stmt|;
if|if
condition|(
name|remoteRepositoryBaseDirectoryList
operator|!=
literal|null
operator|&&
operator|!
name|remoteRepositoryBaseDirectoryList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|remoteRepositoryBaseDirectoryList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|remoteRepositoryBaseDirectoryList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|remoteRepositoryBaseDirectory
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setRemoteRepositoryBaseDirectory
argument_list|(
name|remoteRepositoryBaseDirectory
argument_list|)
expr_stmt|;
comment|//String defaultLanguage = registry.getString( prefix + "defaultLanguage", value.getDefaultLanguage() );
name|List
argument_list|<
name|String
argument_list|>
name|repositoryGroupBaseDirectoryList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"repositoryGroupBaseDirectory"
argument_list|)
decl_stmt|;
name|String
name|repositoryGroupBaseDirectory
init|=
name|value
operator|.
name|getRepositoryGroupBaseDirectory
argument_list|()
decl_stmt|;
if|if
condition|(
name|repositoryGroupBaseDirectoryList
operator|!=
literal|null
operator|&&
operator|!
name|repositoryGroupBaseDirectoryList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|repositoryGroupBaseDirectoryList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|repositoryGroupBaseDirectoryList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|repositoryGroupBaseDirectory
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setRepositoryGroupBaseDirectory
argument_list|(
name|repositoryGroupBaseDirectory
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|defaultLanguageList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"defaultLanguage"
argument_list|)
decl_stmt|;
name|String
name|defaultLanguage
init|=
name|value
operator|.
name|getDefaultLanguage
argument_list|()
decl_stmt|;
if|if
condition|(
name|defaultLanguageList
operator|!=
literal|null
operator|&&
operator|!
name|defaultLanguageList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|defaultLanguageList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|defaultLanguageList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|defaultLanguage
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setDefaultLanguage
argument_list|(
name|defaultLanguage
argument_list|)
expr_stmt|;
comment|//String languageRange = registry.getString( prefix + "languageRange", value.getLanguageRange() );
name|List
argument_list|<
name|String
argument_list|>
name|languageRangeList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"languageRange"
argument_list|)
decl_stmt|;
name|String
name|languageRange
init|=
name|value
operator|.
name|getLanguageRange
argument_list|()
decl_stmt|;
if|if
condition|(
name|languageRangeList
operator|!=
literal|null
operator|&&
operator|!
name|languageRangeList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|languageRangeList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|languageRangeList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|languageRange
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setLanguageRange
argument_list|(
name|languageRange
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|checksumTypeList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"checksumTypes.type"
argument_list|)
decl_stmt|;
name|value
operator|.
name|setChecksumTypes
argument_list|(
name|checksumTypeList
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|RedbackRuntimeConfiguration
name|readRedbackRuntimeConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|RedbackRuntimeConfiguration
name|value
init|=
operator|new
name|RedbackRuntimeConfiguration
argument_list|()
decl_stmt|;
name|boolean
name|migratedFromRedbackConfiguration
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"migratedFromRedbackConfiguration"
argument_list|,
name|value
operator|.
name|isMigratedFromRedbackConfiguration
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setMigratedFromRedbackConfiguration
argument_list|(
name|migratedFromRedbackConfiguration
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|userManagerImpls
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<String>*/
argument_list|()
decl_stmt|;
name|userManagerImpls
operator|.
name|addAll
argument_list|(
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"userManagerImpls.userManagerImpl"
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|.
name|setUserManagerImpls
argument_list|(
name|userManagerImpls
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|rbacManagerImpls
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<String>*/
argument_list|()
decl_stmt|;
name|rbacManagerImpls
operator|.
name|addAll
argument_list|(
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"rbacManagerImpls.rbacManagerImpl"
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|.
name|setRbacManagerImpls
argument_list|(
name|rbacManagerImpls
argument_list|)
expr_stmt|;
name|LdapConfiguration
name|ldapConfiguration
init|=
name|readLdapConfiguration
argument_list|(
name|prefix
operator|+
literal|"ldapConfiguration."
argument_list|,
name|registry
argument_list|)
decl_stmt|;
name|value
operator|.
name|setLdapConfiguration
argument_list|(
name|ldapConfiguration
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|ldapGroupMappings
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<LdapGroupMapping>*/
argument_list|()
decl_stmt|;
name|List
name|ldapGroupMappingsSubsets
init|=
name|registry
operator|.
name|getSubsetList
argument_list|(
name|prefix
operator|+
literal|"ldapGroupMappings.ldapGroupMapping"
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|ldapGroupMappingsSubsets
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|LdapGroupMapping
name|v
init|=
name|readLdapGroupMapping
argument_list|(
literal|""
argument_list|,
operator|(
name|Registry
operator|)
name|i
operator|.
name|next
argument_list|()
argument_list|)
decl_stmt|;
name|ldapGroupMappings
operator|.
name|add
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
name|value
operator|.
name|setLdapGroupMappings
argument_list|(
name|ldapGroupMappings
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|Map
name|configurationProperties
init|=
name|registry
operator|.
name|getProperties
argument_list|(
name|prefix
operator|+
literal|"configurationProperties"
argument_list|)
decl_stmt|;
name|value
operator|.
name|setConfigurationProperties
argument_list|(
name|configurationProperties
argument_list|)
expr_stmt|;
name|boolean
name|useUsersCache
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"useUsersCache"
argument_list|,
name|value
operator|.
name|isUseUsersCache
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setUseUsersCache
argument_list|(
name|useUsersCache
argument_list|)
expr_stmt|;
name|CacheConfiguration
name|usersCacheConfiguration
init|=
name|readCacheConfiguration
argument_list|(
name|prefix
operator|+
literal|"usersCacheConfiguration."
argument_list|,
name|registry
argument_list|)
decl_stmt|;
name|value
operator|.
name|setUsersCacheConfiguration
argument_list|(
name|usersCacheConfiguration
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|ArchivaDefaultConfiguration
name|readArchivaDefaultConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|ArchivaDefaultConfiguration
name|value
init|=
operator|new
name|ArchivaDefaultConfiguration
argument_list|()
decl_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|defaultCheckPaths
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<RepositoryCheckPath>*/
argument_list|()
decl_stmt|;
name|List
name|defaultCheckPathsSubsets
init|=
name|registry
operator|.
name|getSubsetList
argument_list|(
name|prefix
operator|+
literal|"defaultCheckPaths.defaultCheckPath"
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|defaultCheckPathsSubsets
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|RepositoryCheckPath
name|v
init|=
name|readRepositoryCheckPath
argument_list|(
literal|""
argument_list|,
operator|(
name|Registry
operator|)
name|i
operator|.
name|next
argument_list|()
argument_list|)
decl_stmt|;
name|defaultCheckPaths
operator|.
name|add
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
name|value
operator|.
name|setDefaultCheckPaths
argument_list|(
name|defaultCheckPaths
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|LdapConfiguration
name|readLdapConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|LdapConfiguration
name|value
init|=
operator|new
name|LdapConfiguration
argument_list|()
decl_stmt|;
comment|//String hostName = registry.getString( prefix + "hostName", value.getHostName() );
name|List
argument_list|<
name|String
argument_list|>
name|hostNameList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"hostName"
argument_list|)
decl_stmt|;
name|String
name|hostName
init|=
name|value
operator|.
name|getHostName
argument_list|()
decl_stmt|;
if|if
condition|(
name|hostNameList
operator|!=
literal|null
operator|&&
operator|!
name|hostNameList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|hostNameList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|hostNameList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|hostName
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setHostName
argument_list|(
name|hostName
argument_list|)
expr_stmt|;
name|int
name|port
init|=
name|registry
operator|.
name|getInt
argument_list|(
name|prefix
operator|+
literal|"port"
argument_list|,
name|value
operator|.
name|getPort
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setPort
argument_list|(
name|port
argument_list|)
expr_stmt|;
name|boolean
name|ssl
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"ssl"
argument_list|,
name|value
operator|.
name|isSsl
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setSsl
argument_list|(
name|ssl
argument_list|)
expr_stmt|;
comment|//String baseDn = registry.getString( prefix + "baseDn", value.getBaseDn() );
name|List
argument_list|<
name|String
argument_list|>
name|baseDnList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"baseDn"
argument_list|)
decl_stmt|;
name|String
name|baseDn
init|=
name|value
operator|.
name|getBaseDn
argument_list|()
decl_stmt|;
if|if
condition|(
name|baseDnList
operator|!=
literal|null
operator|&&
operator|!
name|baseDnList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|baseDnList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|baseDnList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|baseDn
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setBaseDn
argument_list|(
name|baseDn
argument_list|)
expr_stmt|;
comment|//String baseGroupsDn = registry.getString( prefix + "baseGroupsDn", value.getBaseGroupsDn() );
name|List
argument_list|<
name|String
argument_list|>
name|baseGroupsDnList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"baseGroupsDn"
argument_list|)
decl_stmt|;
name|String
name|baseGroupsDn
init|=
name|value
operator|.
name|getBaseGroupsDn
argument_list|()
decl_stmt|;
if|if
condition|(
name|baseGroupsDnList
operator|!=
literal|null
operator|&&
operator|!
name|baseGroupsDnList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|baseGroupsDnList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|baseGroupsDnList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|baseGroupsDn
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setBaseGroupsDn
argument_list|(
name|baseGroupsDn
argument_list|)
expr_stmt|;
comment|//String contextFactory = registry.getString( prefix + "contextFactory", value.getContextFactory() );
name|List
argument_list|<
name|String
argument_list|>
name|contextFactoryList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"contextFactory"
argument_list|)
decl_stmt|;
name|String
name|contextFactory
init|=
name|value
operator|.
name|getContextFactory
argument_list|()
decl_stmt|;
if|if
condition|(
name|contextFactoryList
operator|!=
literal|null
operator|&&
operator|!
name|contextFactoryList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|contextFactoryList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|contextFactoryList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|contextFactory
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setContextFactory
argument_list|(
name|contextFactory
argument_list|)
expr_stmt|;
comment|//String bindDn = registry.getString( prefix + "bindDn", value.getBindDn() );
name|List
argument_list|<
name|String
argument_list|>
name|bindDnList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"bindDn"
argument_list|)
decl_stmt|;
name|String
name|bindDn
init|=
name|value
operator|.
name|getBindDn
argument_list|()
decl_stmt|;
if|if
condition|(
name|bindDnList
operator|!=
literal|null
operator|&&
operator|!
name|bindDnList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|bindDnList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|bindDnList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|bindDn
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setBindDn
argument_list|(
name|bindDn
argument_list|)
expr_stmt|;
comment|//String password = registry.getString( prefix + "password", value.getPassword() );
name|List
argument_list|<
name|String
argument_list|>
name|passwordList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"password"
argument_list|)
decl_stmt|;
name|String
name|password
init|=
name|value
operator|.
name|getPassword
argument_list|()
decl_stmt|;
if|if
condition|(
name|passwordList
operator|!=
literal|null
operator|&&
operator|!
name|passwordList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|passwordList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|passwordList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|password
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setPassword
argument_list|(
name|password
argument_list|)
expr_stmt|;
comment|//String authenticationMethod = registry.getString( prefix + "authenticationMethod", value.getAuthenticationMethod() );
name|List
argument_list|<
name|String
argument_list|>
name|authenticationMethodList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"authenticationMethod"
argument_list|)
decl_stmt|;
name|String
name|authenticationMethod
init|=
name|value
operator|.
name|getAuthenticationMethod
argument_list|()
decl_stmt|;
if|if
condition|(
name|authenticationMethodList
operator|!=
literal|null
operator|&&
operator|!
name|authenticationMethodList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|authenticationMethodList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|authenticationMethodList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|authenticationMethod
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setAuthenticationMethod
argument_list|(
name|authenticationMethod
argument_list|)
expr_stmt|;
name|boolean
name|bindAuthenticatorEnabled
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"bindAuthenticatorEnabled"
argument_list|,
name|value
operator|.
name|isBindAuthenticatorEnabled
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setBindAuthenticatorEnabled
argument_list|(
name|bindAuthenticatorEnabled
argument_list|)
expr_stmt|;
name|boolean
name|writable
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"writable"
argument_list|,
name|value
operator|.
name|isWritable
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setWritable
argument_list|(
name|writable
argument_list|)
expr_stmt|;
name|boolean
name|useRoleNameAsGroup
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"useRoleNameAsGroup"
argument_list|,
name|value
operator|.
name|isUseRoleNameAsGroup
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setUseRoleNameAsGroup
argument_list|(
name|useRoleNameAsGroup
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|Map
name|extraProperties
init|=
name|registry
operator|.
name|getProperties
argument_list|(
name|prefix
operator|+
literal|"extraProperties"
argument_list|)
decl_stmt|;
name|value
operator|.
name|setExtraProperties
argument_list|(
name|extraProperties
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|FileLockConfiguration
name|readFileLockConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|FileLockConfiguration
name|value
init|=
operator|new
name|FileLockConfiguration
argument_list|()
decl_stmt|;
name|boolean
name|skipLocking
init|=
name|registry
operator|.
name|getBoolean
argument_list|(
name|prefix
operator|+
literal|"skipLocking"
argument_list|,
name|value
operator|.
name|isSkipLocking
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setSkipLocking
argument_list|(
name|skipLocking
argument_list|)
expr_stmt|;
name|int
name|lockingTimeout
init|=
name|registry
operator|.
name|getInt
argument_list|(
name|prefix
operator|+
literal|"lockingTimeout"
argument_list|,
name|value
operator|.
name|getLockingTimeout
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setLockingTimeout
argument_list|(
name|lockingTimeout
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|CacheConfiguration
name|readCacheConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|CacheConfiguration
name|value
init|=
operator|new
name|CacheConfiguration
argument_list|()
decl_stmt|;
name|int
name|timeToIdleSeconds
init|=
name|registry
operator|.
name|getInt
argument_list|(
name|prefix
operator|+
literal|"timeToIdleSeconds"
argument_list|,
name|value
operator|.
name|getTimeToIdleSeconds
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setTimeToIdleSeconds
argument_list|(
name|timeToIdleSeconds
argument_list|)
expr_stmt|;
name|int
name|timeToLiveSeconds
init|=
name|registry
operator|.
name|getInt
argument_list|(
name|prefix
operator|+
literal|"timeToLiveSeconds"
argument_list|,
name|value
operator|.
name|getTimeToLiveSeconds
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setTimeToLiveSeconds
argument_list|(
name|timeToLiveSeconds
argument_list|)
expr_stmt|;
name|int
name|maxElementsInMemory
init|=
name|registry
operator|.
name|getInt
argument_list|(
name|prefix
operator|+
literal|"maxElementsInMemory"
argument_list|,
name|value
operator|.
name|getMaxElementsInMemory
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setMaxElementsInMemory
argument_list|(
name|maxElementsInMemory
argument_list|)
expr_stmt|;
name|int
name|maxElementsOnDisk
init|=
name|registry
operator|.
name|getInt
argument_list|(
name|prefix
operator|+
literal|"maxElementsOnDisk"
argument_list|,
name|value
operator|.
name|getMaxElementsOnDisk
argument_list|()
argument_list|)
decl_stmt|;
name|value
operator|.
name|setMaxElementsOnDisk
argument_list|(
name|maxElementsOnDisk
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|private
name|LdapGroupMapping
name|readLdapGroupMapping
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|LdapGroupMapping
name|value
init|=
operator|new
name|LdapGroupMapping
argument_list|()
decl_stmt|;
comment|//String group = registry.getString( prefix + "group", value.getGroup() );
name|List
argument_list|<
name|String
argument_list|>
name|groupList
init|=
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"group"
argument_list|)
decl_stmt|;
name|String
name|group
init|=
name|value
operator|.
name|getGroup
argument_list|()
decl_stmt|;
if|if
condition|(
name|groupList
operator|!=
literal|null
operator|&&
operator|!
name|groupList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|size
init|=
name|groupList
operator|.
name|size
argument_list|()
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|groupList
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|size
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|','
argument_list|)
expr_stmt|;
block|}
block|}
name|group
operator|=
name|sb
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|setGroup
argument_list|(
name|group
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
name|roleNames
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
comment|/*<String>*/
argument_list|()
decl_stmt|;
name|roleNames
operator|.
name|addAll
argument_list|(
name|registry
operator|.
name|getList
argument_list|(
name|prefix
operator|+
literal|"roleNames.roleName"
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|.
name|setRoleNames
argument_list|(
name|roleNames
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
block|}
end_class

end_unit

