begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|io
operator|.
name|registry
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|components
operator|.
name|registry
operator|.
name|Registry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|// Util imports
end_comment

begin_comment
comment|// Model class imports
end_comment

begin_comment
comment|/**  * Generate Plexus Registry output mechanism for model 'Configuration'.  */
end_comment

begin_class
specifier|public
class|class
name|ConfigurationRegistryWriter
block|{
specifier|public
name|void
name|write
parameter_list|(
name|Configuration
name|model
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
name|writeConfiguration
argument_list|(
literal|""
argument_list|,
name|model
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|writeList
parameter_list|(
name|Registry
name|registry
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|subList
parameter_list|,
name|String
name|subsetPath
parameter_list|,
name|String
name|elementName
parameter_list|)
block|{
if|if
condition|(
name|subList
operator|!=
literal|null
operator|&&
name|subList
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|subsetPath
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|String
argument_list|>
name|iter
init|=
name|subList
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
name|subsetPath
operator|+
literal|"."
operator|+
name|elementName
operator|+
literal|"("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|String
name|value
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|name
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|writeConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Configuration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getVersion
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|version
init|=
literal|"version"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|version
argument_list|,
name|value
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getMetadataStore
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getMetadataStore
argument_list|()
operator|.
name|equals
argument_list|(
literal|"jcr"
argument_list|)
condition|)
block|{
name|String
name|metadataStore
init|=
literal|"metadataStore"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|metadataStore
argument_list|,
name|value
operator|.
name|getMetadataStore
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getRepositoryGroups
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getRepositoryGroups
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"repositoryGroups"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getRepositoryGroups
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"repositoryGroups.repositoryGroup("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|RepositoryGroupConfiguration
name|o
init|=
operator|(
name|RepositoryGroupConfiguration
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|writeRepositoryGroupConfiguration
argument_list|(
name|prefix
operator|+
name|name
operator|+
literal|"."
argument_list|,
name|o
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getManagedRepositories
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getManagedRepositories
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"managedRepositories"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getManagedRepositories
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"managedRepositories.managedRepository("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|ManagedRepositoryConfiguration
name|o
init|=
operator|(
name|ManagedRepositoryConfiguration
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|writeManagedRepositoryConfiguration
argument_list|(
name|prefix
operator|+
name|name
operator|+
literal|"."
argument_list|,
name|o
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getRemoteRepositories
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getRemoteRepositories
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"remoteRepositories"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getRemoteRepositories
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"remoteRepositories.remoteRepository("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|RemoteRepositoryConfiguration
name|o
init|=
operator|(
name|RemoteRepositoryConfiguration
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|writeRemoteRepositoryConfiguration
argument_list|(
name|prefix
operator|+
name|name
operator|+
literal|"."
argument_list|,
name|o
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getProxyConnectors
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getProxyConnectors
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"proxyConnectors"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getProxyConnectors
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"proxyConnectors.proxyConnector("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|ProxyConnectorConfiguration
name|o
init|=
operator|(
name|ProxyConnectorConfiguration
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|writeProxyConnectorConfiguration
argument_list|(
name|prefix
operator|+
name|name
operator|+
literal|"."
argument_list|,
name|o
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getNetworkProxies
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getNetworkProxies
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"networkProxies"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getNetworkProxies
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"networkProxies.networkProxy("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|NetworkProxyConfiguration
name|o
init|=
operator|(
name|NetworkProxyConfiguration
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|writeNetworkProxyConfiguration
argument_list|(
name|prefix
operator|+
name|name
operator|+
literal|"."
argument_list|,
name|o
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getLegacyArtifactPaths
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getLegacyArtifactPaths
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"legacyArtifactPaths"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getLegacyArtifactPaths
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"legacyArtifactPaths.legacyArtifactPath("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|LegacyArtifactPath
name|o
init|=
operator|(
name|LegacyArtifactPath
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|writeLegacyArtifactPath
argument_list|(
name|prefix
operator|+
name|name
operator|+
literal|"."
argument_list|,
name|o
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getRepositoryScanning
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|writeRepositoryScanningConfiguration
argument_list|(
name|prefix
operator|+
literal|"repositoryScanning."
argument_list|,
name|value
operator|.
name|getRepositoryScanning
argument_list|()
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getWebapp
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|writeWebappConfiguration
argument_list|(
name|prefix
operator|+
literal|"webapp."
argument_list|,
name|value
operator|.
name|getWebapp
argument_list|()
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getOrganisationInfo
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|writeOrganisationInformation
argument_list|(
name|prefix
operator|+
literal|"organisationInfo."
argument_list|,
name|value
operator|.
name|getOrganisationInfo
argument_list|()
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getNetworkConfiguration
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|writeNetworkConfiguration
argument_list|(
name|prefix
operator|+
literal|"networkConfiguration."
argument_list|,
name|value
operator|.
name|getNetworkConfiguration
argument_list|()
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getRedbackRuntimeConfiguration
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|writeRedbackRuntimeConfiguration
argument_list|(
name|prefix
operator|+
literal|"redbackRuntimeConfiguration."
argument_list|,
name|value
operator|.
name|getRedbackRuntimeConfiguration
argument_list|()
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getArchivaRuntimeConfiguration
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|writeArchivaRuntimeConfiguration
argument_list|(
name|prefix
operator|+
literal|"archivaRuntimeConfiguration."
argument_list|,
name|value
operator|.
name|getArchivaRuntimeConfiguration
argument_list|()
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getProxyConnectorRuleConfigurations
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getProxyConnectorRuleConfigurations
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"proxyConnectorRuleConfigurations"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getProxyConnectorRuleConfigurations
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"proxyConnectorRuleConfigurations.proxyConnectorRuleConfiguration("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|ProxyConnectorRuleConfiguration
name|o
init|=
operator|(
name|ProxyConnectorRuleConfiguration
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|writeProxyConnectorRuleConfiguration
argument_list|(
name|prefix
operator|+
name|name
operator|+
literal|"."
argument_list|,
name|o
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getArchivaDefaultConfiguration
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|writeArchivaDefaultConfiguration
argument_list|(
name|prefix
operator|+
literal|"archivaDefaultConfiguration."
argument_list|,
name|value
operator|.
name|getArchivaDefaultConfiguration
argument_list|()
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|writeAbstractRepositoryConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|AbstractRepositoryConfiguration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|id
init|=
literal|"id"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|id
argument_list|,
name|value
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getType
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getType
argument_list|()
operator|.
name|equals
argument_list|(
literal|"MAVEN"
argument_list|)
condition|)
block|{
name|String
name|type
init|=
literal|"type"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|type
argument_list|,
name|value
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|name
init|=
literal|"name"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|name
argument_list|,
name|value
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getLayout
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getLayout
argument_list|()
operator|.
name|equals
argument_list|(
literal|"default"
argument_list|)
condition|)
block|{
name|String
name|layout
init|=
literal|"layout"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|layout
argument_list|,
name|value
operator|.
name|getLayout
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getIndexDir
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getIndexDir
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|String
name|indexDir
init|=
literal|"indexDir"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|indexDir
argument_list|,
name|value
operator|.
name|getIndexDir
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getPackedIndexDir
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getPackedIndexDir
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|String
name|packedIndexDir
init|=
literal|"packedIndexDir"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|packedIndexDir
argument_list|,
name|value
operator|.
name|getPackedIndexDir
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getDescription
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getDescription
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|String
name|description
init|=
literal|"description"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|description
argument_list|,
name|value
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|writeRemoteRepositoryConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|RemoteRepositoryConfiguration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getUrl
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|url
init|=
literal|"url"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|url
argument_list|,
name|value
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getUsername
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|username
init|=
literal|"username"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|username
argument_list|,
name|value
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getPassword
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|password
init|=
literal|"password"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|password
argument_list|,
name|value
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getTimeout
argument_list|()
operator|!=
literal|60
condition|)
block|{
name|String
name|timeout
init|=
literal|"timeout"
decl_stmt|;
name|registry
operator|.
name|setInt
argument_list|(
name|prefix
operator|+
name|timeout
argument_list|,
name|value
operator|.
name|getTimeout
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getRefreshCronExpression
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getRefreshCronExpression
argument_list|()
operator|.
name|equals
argument_list|(
literal|"0 0 08 ? * SUN"
argument_list|)
condition|)
block|{
name|String
name|refreshCronExpression
init|=
literal|"refreshCronExpression"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|refreshCronExpression
argument_list|,
name|value
operator|.
name|getRefreshCronExpression
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|downloadRemoteIndex
init|=
literal|"downloadRemoteIndex"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|downloadRemoteIndex
argument_list|,
name|value
operator|.
name|isDownloadRemoteIndex
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|.
name|getRemoteIndexUrl
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|remoteIndexUrl
init|=
literal|"remoteIndexUrl"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|remoteIndexUrl
argument_list|,
name|value
operator|.
name|getRemoteIndexUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getRemoteDownloadNetworkProxyId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|remoteDownloadNetworkProxyId
init|=
literal|"remoteDownloadNetworkProxyId"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|remoteDownloadNetworkProxyId
argument_list|,
name|value
operator|.
name|getRemoteDownloadNetworkProxyId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getRemoteDownloadTimeout
argument_list|()
operator|!=
literal|300
condition|)
block|{
name|String
name|remoteDownloadTimeout
init|=
literal|"remoteDownloadTimeout"
decl_stmt|;
name|registry
operator|.
name|setInt
argument_list|(
name|prefix
operator|+
name|remoteDownloadTimeout
argument_list|,
name|value
operator|.
name|getRemoteDownloadTimeout
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|downloadRemoteIndexOnStartup
init|=
literal|"downloadRemoteIndexOnStartup"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|downloadRemoteIndexOnStartup
argument_list|,
name|value
operator|.
name|isDownloadRemoteIndexOnStartup
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|.
name|getExtraParameters
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getExtraParameters
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"extraParameters"
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getExtraParameters
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|key
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|v
init|=
operator|(
name|String
operator|)
name|value
operator|.
name|getExtraParameters
argument_list|()
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
literal|"extraParameters."
operator|+
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getExtraHeaders
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getExtraHeaders
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"extraHeaders"
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getExtraHeaders
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|key
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|v
init|=
operator|(
name|String
operator|)
name|value
operator|.
name|getExtraHeaders
argument_list|()
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
literal|"extraHeaders."
operator|+
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getCheckPath
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|checkPath
init|=
literal|"checkPath"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|checkPath
argument_list|,
name|value
operator|.
name|getCheckPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|id
init|=
literal|"id"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|id
argument_list|,
name|value
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getType
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getType
argument_list|()
operator|.
name|equals
argument_list|(
literal|"MAVEN"
argument_list|)
condition|)
block|{
name|String
name|type
init|=
literal|"type"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|type
argument_list|,
name|value
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|name
init|=
literal|"name"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|name
argument_list|,
name|value
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getLayout
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getLayout
argument_list|()
operator|.
name|equals
argument_list|(
literal|"default"
argument_list|)
condition|)
block|{
name|String
name|layout
init|=
literal|"layout"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|layout
argument_list|,
name|value
operator|.
name|getLayout
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getIndexDir
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getIndexDir
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|String
name|indexDir
init|=
literal|"indexDir"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|indexDir
argument_list|,
name|value
operator|.
name|getIndexDir
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getPackedIndexDir
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getPackedIndexDir
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|String
name|packedIndexDir
init|=
literal|"packedIndexDir"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|packedIndexDir
argument_list|,
name|value
operator|.
name|getPackedIndexDir
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getDescription
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getDescription
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|String
name|description
init|=
literal|"description"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|description
argument_list|,
name|value
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|writeManagedRepositoryConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|ManagedRepositoryConfiguration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getLocation
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|location
init|=
literal|"location"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|location
argument_list|,
name|value
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|releases
init|=
literal|"releases"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|releases
argument_list|,
name|value
operator|.
name|isReleases
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|blockRedeployments
init|=
literal|"blockRedeployments"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|blockRedeployments
argument_list|,
name|value
operator|.
name|isBlockRedeployments
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|snapshots
init|=
literal|"snapshots"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|snapshots
argument_list|,
name|value
operator|.
name|isSnapshots
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|scanned
init|=
literal|"scanned"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|scanned
argument_list|,
name|value
operator|.
name|isScanned
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|.
name|getRefreshCronExpression
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getRefreshCronExpression
argument_list|()
operator|.
name|equals
argument_list|(
literal|"0 0 * * * ?"
argument_list|)
condition|)
block|{
name|String
name|refreshCronExpression
init|=
literal|"refreshCronExpression"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|refreshCronExpression
argument_list|,
name|value
operator|.
name|getRefreshCronExpression
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getRetentionCount
argument_list|()
operator|!=
literal|2
condition|)
block|{
name|String
name|retentionCount
init|=
literal|"retentionCount"
decl_stmt|;
name|registry
operator|.
name|setInt
argument_list|(
name|prefix
operator|+
name|retentionCount
argument_list|,
name|value
operator|.
name|getRetentionCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getRetentionPeriod
argument_list|()
operator|!=
literal|100
condition|)
block|{
name|String
name|retentionPeriod
init|=
literal|"retentionPeriod"
decl_stmt|;
name|registry
operator|.
name|setInt
argument_list|(
name|prefix
operator|+
name|retentionPeriod
argument_list|,
name|value
operator|.
name|getRetentionPeriod
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|deleteReleasedSnapshots
init|=
literal|"deleteReleasedSnapshots"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|deleteReleasedSnapshots
argument_list|,
name|value
operator|.
name|isDeleteReleasedSnapshots
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|skipPackedIndexCreation
init|=
literal|"skipPackedIndexCreation"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|skipPackedIndexCreation
argument_list|,
name|value
operator|.
name|isSkipPackedIndexCreation
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|stageRepoNeeded
init|=
literal|"stageRepoNeeded"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|stageRepoNeeded
argument_list|,
name|value
operator|.
name|isStageRepoNeeded
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|.
name|getId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|id
init|=
literal|"id"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|id
argument_list|,
name|value
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getType
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getType
argument_list|()
operator|.
name|equals
argument_list|(
literal|"MAVEN"
argument_list|)
condition|)
block|{
name|String
name|type
init|=
literal|"type"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|type
argument_list|,
name|value
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|name
init|=
literal|"name"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|name
argument_list|,
name|value
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getLayout
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getLayout
argument_list|()
operator|.
name|equals
argument_list|(
literal|"default"
argument_list|)
condition|)
block|{
name|String
name|layout
init|=
literal|"layout"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|layout
argument_list|,
name|value
operator|.
name|getLayout
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getIndexDir
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getIndexDir
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|String
name|indexDir
init|=
literal|"indexDir"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|indexDir
argument_list|,
name|value
operator|.
name|getIndexDir
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getPackedIndexDir
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getPackedIndexDir
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|String
name|packedIndexDir
init|=
literal|"packedIndexDir"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|packedIndexDir
argument_list|,
name|value
operator|.
name|getPackedIndexDir
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getDescription
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getDescription
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|String
name|description
init|=
literal|"description"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|description
argument_list|,
name|value
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|writeLegacyArtifactPath
parameter_list|(
name|String
name|prefix
parameter_list|,
name|LegacyArtifactPath
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getPath
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|path
init|=
literal|"path"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|path
argument_list|,
name|value
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getArtifact
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|artifact
init|=
literal|"artifact"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|artifact
argument_list|,
name|value
operator|.
name|getArtifact
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|writeRepositoryGroupConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|RepositoryGroupConfiguration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|id
init|=
literal|"id"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|id
argument_list|,
name|value
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
literal|"name"
argument_list|,
name|value
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getMergedIndexPath
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getMergedIndexPath
argument_list|()
operator|.
name|equals
argument_list|(
literal|".indexer"
argument_list|)
condition|)
block|{
name|String
name|mergedIndexPath
init|=
literal|"mergedIndexPath"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|mergedIndexPath
argument_list|,
name|value
operator|.
name|getMergedIndexPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getMergedIndexTtl
argument_list|()
operator|!=
literal|30
condition|)
block|{
name|String
name|mergedIndexTtl
init|=
literal|"mergedIndexTtl"
decl_stmt|;
name|registry
operator|.
name|setInt
argument_list|(
name|prefix
operator|+
name|mergedIndexTtl
argument_list|,
name|value
operator|.
name|getMergedIndexTtl
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getCronExpression
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getCronExpression
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|String
name|cronExpression
init|=
literal|"cronExpression"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|cronExpression
argument_list|,
name|value
operator|.
name|getCronExpression
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getRepositories
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getRepositories
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"repositories"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getRepositories
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"repositories.repository("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|String
name|repository
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|name
argument_list|,
name|repository
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|private
name|void
name|writeRepositoryCheckPath
parameter_list|(
name|String
name|prefix
parameter_list|,
name|RepositoryCheckPath
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getUrl
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|url
init|=
literal|"url"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|url
argument_list|,
name|value
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getPath
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|path
init|=
literal|"path"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|path
argument_list|,
name|value
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|writeAbstractRepositoryConnectorConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|AbstractRepositoryConnectorConfiguration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getSourceRepoId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|sourceRepoId
init|=
literal|"sourceRepoId"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|sourceRepoId
argument_list|,
name|value
operator|.
name|getSourceRepoId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getTargetRepoId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|targetRepoId
init|=
literal|"targetRepoId"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|targetRepoId
argument_list|,
name|value
operator|.
name|getTargetRepoId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getProxyId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|proxyId
init|=
literal|"proxyId"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|proxyId
argument_list|,
name|value
operator|.
name|getProxyId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getBlackListPatterns
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getBlackListPatterns
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"blackListPatterns"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getBlackListPatterns
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"blackListPatterns.blackListPattern("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|String
name|blackListPattern
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|name
argument_list|,
name|blackListPattern
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getWhiteListPatterns
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getWhiteListPatterns
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"whiteListPatterns"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getWhiteListPatterns
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"whiteListPatterns.whiteListPattern("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|String
name|whiteListPattern
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|name
argument_list|,
name|whiteListPattern
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getPolicies
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getPolicies
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"policies"
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getPolicies
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|key
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|v
init|=
operator|(
name|String
operator|)
name|value
operator|.
name|getPolicies
argument_list|()
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
literal|"policies."
operator|+
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getProperties
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getProperties
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"properties"
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getProperties
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|key
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|v
init|=
operator|(
name|String
operator|)
name|value
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
literal|"properties."
operator|+
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
block|}
name|String
name|disabled
init|=
literal|"disabled"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|disabled
argument_list|,
name|value
operator|.
name|isDisabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|writeProxyConnectorRuleConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|ProxyConnectorRuleConfiguration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getRuleType
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|ruleType
init|=
literal|"ruleType"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|ruleType
argument_list|,
name|value
operator|.
name|getRuleType
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getPattern
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|pattern
init|=
literal|"pattern"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|pattern
argument_list|,
name|value
operator|.
name|getPattern
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getProxyConnectors
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getProxyConnectors
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"proxyConnectors"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getProxyConnectors
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"proxyConnectors.proxyConnector("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|ProxyConnectorConfiguration
name|o
init|=
operator|(
name|ProxyConnectorConfiguration
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|writeProxyConnectorConfiguration
argument_list|(
name|prefix
operator|+
name|name
operator|+
literal|"."
argument_list|,
name|o
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|private
name|void
name|writeProxyConnectorConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|ProxyConnectorConfiguration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getOrder
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|String
name|order
init|=
literal|"order"
decl_stmt|;
name|registry
operator|.
name|setInt
argument_list|(
name|prefix
operator|+
name|order
argument_list|,
name|value
operator|.
name|getOrder
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getSourceRepoId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|sourceRepoId
init|=
literal|"sourceRepoId"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|sourceRepoId
argument_list|,
name|value
operator|.
name|getSourceRepoId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getTargetRepoId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|targetRepoId
init|=
literal|"targetRepoId"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|targetRepoId
argument_list|,
name|value
operator|.
name|getTargetRepoId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getProxyId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|proxyId
init|=
literal|"proxyId"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|proxyId
argument_list|,
name|value
operator|.
name|getProxyId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getBlackListPatterns
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getBlackListPatterns
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"blackListPatterns"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getBlackListPatterns
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"blackListPatterns.blackListPattern("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|String
name|blackListPattern
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|name
argument_list|,
name|blackListPattern
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getWhiteListPatterns
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getWhiteListPatterns
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"whiteListPatterns"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getWhiteListPatterns
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"whiteListPatterns.whiteListPattern("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|String
name|whiteListPattern
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|name
argument_list|,
name|whiteListPattern
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getPolicies
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getPolicies
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"policies"
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getPolicies
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|key
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|v
init|=
operator|(
name|String
operator|)
name|value
operator|.
name|getPolicies
argument_list|()
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
literal|"policies."
operator|+
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getProperties
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getProperties
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"properties"
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getProperties
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|key
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|v
init|=
operator|(
name|String
operator|)
name|value
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
literal|"properties."
operator|+
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
block|}
name|String
name|disabled
init|=
literal|"disabled"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|disabled
argument_list|,
name|value
operator|.
name|isDisabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|writeSyncConnectorConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|SyncConnectorConfiguration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getCronExpression
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getCronExpression
argument_list|()
operator|.
name|equals
argument_list|(
literal|"0 0 * * * ?"
argument_list|)
condition|)
block|{
name|String
name|cronExpression
init|=
literal|"cronExpression"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|cronExpression
argument_list|,
name|value
operator|.
name|getCronExpression
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getMethod
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getMethod
argument_list|()
operator|.
name|equals
argument_list|(
literal|"rsync"
argument_list|)
condition|)
block|{
name|String
name|method
init|=
literal|"method"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|method
argument_list|,
name|value
operator|.
name|getMethod
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getSourceRepoId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|sourceRepoId
init|=
literal|"sourceRepoId"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|sourceRepoId
argument_list|,
name|value
operator|.
name|getSourceRepoId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getTargetRepoId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|targetRepoId
init|=
literal|"targetRepoId"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|targetRepoId
argument_list|,
name|value
operator|.
name|getTargetRepoId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getProxyId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|proxyId
init|=
literal|"proxyId"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|proxyId
argument_list|,
name|value
operator|.
name|getProxyId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getBlackListPatterns
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getBlackListPatterns
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"blackListPatterns"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getBlackListPatterns
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"blackListPatterns.blackListPattern("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|String
name|blackListPattern
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|name
argument_list|,
name|blackListPattern
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getWhiteListPatterns
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getWhiteListPatterns
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"whiteListPatterns"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getWhiteListPatterns
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"whiteListPatterns.whiteListPattern("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|String
name|whiteListPattern
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|name
argument_list|,
name|whiteListPattern
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getPolicies
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getPolicies
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"policies"
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getPolicies
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|key
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|v
init|=
operator|(
name|String
operator|)
name|value
operator|.
name|getPolicies
argument_list|()
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
literal|"policies."
operator|+
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getProperties
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getProperties
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"properties"
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getProperties
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|key
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|v
init|=
operator|(
name|String
operator|)
name|value
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
literal|"properties."
operator|+
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
block|}
name|String
name|disabled
init|=
literal|"disabled"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|disabled
argument_list|,
name|value
operator|.
name|isDisabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|writeNetworkProxyConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|NetworkProxyConfiguration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|id
init|=
literal|"id"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|id
argument_list|,
name|value
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getProtocol
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getProtocol
argument_list|()
operator|.
name|equals
argument_list|(
literal|"http"
argument_list|)
condition|)
block|{
name|String
name|protocol
init|=
literal|"protocol"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|protocol
argument_list|,
name|value
operator|.
name|getProtocol
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getHost
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|host
init|=
literal|"host"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|host
argument_list|,
name|value
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getPort
argument_list|()
operator|!=
literal|8080
condition|)
block|{
name|String
name|port
init|=
literal|"port"
decl_stmt|;
name|registry
operator|.
name|setInt
argument_list|(
name|prefix
operator|+
name|port
argument_list|,
name|value
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getUsername
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|username
init|=
literal|"username"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|username
argument_list|,
name|value
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getPassword
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|password
init|=
literal|"password"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|password
argument_list|,
name|value
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|useNtlm
init|=
literal|"useNtlm"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|useNtlm
argument_list|,
name|value
operator|.
name|isUseNtlm
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|writeRepositoryScanningConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|RepositoryScanningConfiguration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getFileTypes
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getFileTypes
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"fileTypes"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getFileTypes
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"fileTypes.fileType("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|FileType
name|o
init|=
operator|(
name|FileType
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|writeFileType
argument_list|(
name|prefix
operator|+
name|name
operator|+
literal|"."
argument_list|,
name|o
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getKnownContentConsumers
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getKnownContentConsumers
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"knownContentConsumers"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getKnownContentConsumers
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"knownContentConsumers.knownContentConsumer("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|String
name|knownContentConsumer
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|name
argument_list|,
name|knownContentConsumer
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getInvalidContentConsumers
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getInvalidContentConsumers
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"invalidContentConsumers"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getInvalidContentConsumers
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"invalidContentConsumers.invalidContentConsumer("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|String
name|invalidContentConsumer
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|name
argument_list|,
name|invalidContentConsumer
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|private
name|void
name|writeFileType
parameter_list|(
name|String
name|prefix
parameter_list|,
name|FileType
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|id
init|=
literal|"id"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|id
argument_list|,
name|value
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getPatterns
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getPatterns
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"patterns"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getPatterns
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"patterns.pattern("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|String
name|pattern
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|name
argument_list|,
name|pattern
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|private
name|void
name|writeOrganisationInformation
parameter_list|(
name|String
name|prefix
parameter_list|,
name|OrganisationInformation
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|name
init|=
literal|"name"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|name
argument_list|,
name|value
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getUrl
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|url
init|=
literal|"url"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|url
argument_list|,
name|value
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getLogoLocation
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|logoLocation
init|=
literal|"logoLocation"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|logoLocation
argument_list|,
name|value
operator|.
name|getLogoLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|writeWebappConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|WebappConfiguration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getUi
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|writeUserInterfaceOptions
argument_list|(
name|prefix
operator|+
literal|"ui."
argument_list|,
name|value
operator|.
name|getUi
argument_list|()
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|writeUserInterfaceOptions
parameter_list|(
name|String
name|prefix
parameter_list|,
name|UserInterfaceOptions
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
name|String
name|showFindArtifacts
init|=
literal|"showFindArtifacts"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|showFindArtifacts
argument_list|,
name|value
operator|.
name|isShowFindArtifacts
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|appletFindEnabled
init|=
literal|"appletFindEnabled"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|appletFindEnabled
argument_list|,
name|value
operator|.
name|isAppletFindEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|disableEasterEggs
init|=
literal|"disableEasterEggs"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|disableEasterEggs
argument_list|,
name|value
operator|.
name|isDisableEasterEggs
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|.
name|getApplicationUrl
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|applicationUrl
init|=
literal|"applicationUrl"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|applicationUrl
argument_list|,
name|value
operator|.
name|getApplicationUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|disableRegistration
init|=
literal|"disableRegistration"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|disableRegistration
argument_list|,
name|value
operator|.
name|isDisableRegistration
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|writeNetworkConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|NetworkConfiguration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getMaxTotal
argument_list|()
operator|!=
literal|30
condition|)
block|{
name|String
name|maxTotal
init|=
literal|"maxTotal"
decl_stmt|;
name|registry
operator|.
name|setInt
argument_list|(
name|prefix
operator|+
name|maxTotal
argument_list|,
name|value
operator|.
name|getMaxTotal
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getMaxTotalPerHost
argument_list|()
operator|!=
literal|30
condition|)
block|{
name|String
name|maxTotalPerHost
init|=
literal|"maxTotalPerHost"
decl_stmt|;
name|registry
operator|.
name|setInt
argument_list|(
name|prefix
operator|+
name|maxTotalPerHost
argument_list|,
name|value
operator|.
name|getMaxTotalPerHost
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|usePooling
init|=
literal|"usePooling"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|usePooling
argument_list|,
name|value
operator|.
name|isUsePooling
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|writeArchivaRuntimeConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|ArchivaRuntimeConfiguration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getUrlFailureCacheConfiguration
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|writeCacheConfiguration
argument_list|(
name|prefix
operator|+
literal|"urlFailureCacheConfiguration."
argument_list|,
name|value
operator|.
name|getUrlFailureCacheConfiguration
argument_list|()
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getFileLockConfiguration
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|writeFileLockConfiguration
argument_list|(
name|prefix
operator|+
literal|"fileLockConfiguration."
argument_list|,
name|value
operator|.
name|getFileLockConfiguration
argument_list|()
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getDataDirectory
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|dataDirectory
init|=
literal|"dataDirectory"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|dataDirectory
argument_list|,
name|value
operator|.
name|getDataDirectory
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getRepositoryBaseDirectory
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|repositoryBaseDirectory
init|=
literal|"repositoryBaseDirectory"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|repositoryBaseDirectory
argument_list|,
name|value
operator|.
name|getRepositoryBaseDirectory
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getRemoteRepositoryBaseDirectory
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|remoteRepositoryBaseDirectory
init|=
literal|"remoteRepositoryBaseDirectory"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|remoteRepositoryBaseDirectory
argument_list|,
name|value
operator|.
name|getRemoteRepositoryBaseDirectory
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getRepositoryGroupBaseDirectory
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|repositoryGroupBaseDirectory
init|=
literal|"repositoryGroupBaseDirectory"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|repositoryGroupBaseDirectory
argument_list|,
name|value
operator|.
name|getRepositoryGroupBaseDirectory
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getDefaultLanguage
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getDefaultLanguage
argument_list|()
operator|.
name|equals
argument_list|(
literal|"en-US"
argument_list|)
condition|)
block|{
name|String
name|defaultLanguage
init|=
literal|"defaultLanguage"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|defaultLanguage
argument_list|,
name|value
operator|.
name|getDefaultLanguage
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getLanguageRange
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|getLanguageRange
argument_list|()
operator|.
name|equals
argument_list|(
literal|"en,fr,de"
argument_list|)
condition|)
block|{
name|String
name|languageRange
init|=
literal|"languageRange"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|languageRange
argument_list|,
name|value
operator|.
name|getLanguageRange
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|writeList
argument_list|(
name|registry
argument_list|,
name|value
operator|.
name|getChecksumTypes
argument_list|()
argument_list|,
name|prefix
operator|+
literal|"checksumTypes"
argument_list|,
literal|"type"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|writeRedbackRuntimeConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|RedbackRuntimeConfiguration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
name|String
name|migratedFromRedbackConfiguration
init|=
literal|"migratedFromRedbackConfiguration"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|migratedFromRedbackConfiguration
argument_list|,
name|value
operator|.
name|isMigratedFromRedbackConfiguration
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|.
name|getUserManagerImpls
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getUserManagerImpls
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"userManagerImpls"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getUserManagerImpls
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"userManagerImpls.userManagerImpl("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|String
name|userManagerImpl
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|name
argument_list|,
name|userManagerImpl
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getRbacManagerImpls
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getRbacManagerImpls
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"rbacManagerImpls"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getRbacManagerImpls
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"rbacManagerImpls.rbacManagerImpl("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|String
name|rbacManagerImpl
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|name
argument_list|,
name|rbacManagerImpl
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getLdapConfiguration
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|writeLdapConfiguration
argument_list|(
name|prefix
operator|+
literal|"ldapConfiguration."
argument_list|,
name|value
operator|.
name|getLdapConfiguration
argument_list|()
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getLdapGroupMappings
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getLdapGroupMappings
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"ldapGroupMappings"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getLdapGroupMappings
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"ldapGroupMappings.ldapGroupMapping("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|LdapGroupMapping
name|o
init|=
operator|(
name|LdapGroupMapping
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|writeLdapGroupMapping
argument_list|(
name|prefix
operator|+
name|name
operator|+
literal|"."
argument_list|,
name|o
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|value
operator|.
name|getConfigurationProperties
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getConfigurationProperties
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"configurationProperties"
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getConfigurationProperties
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|key
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|v
init|=
operator|(
name|String
operator|)
name|value
operator|.
name|getConfigurationProperties
argument_list|()
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
literal|"configurationProperties."
operator|+
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
block|}
name|String
name|useUsersCache
init|=
literal|"useUsersCache"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|useUsersCache
argument_list|,
name|value
operator|.
name|isUseUsersCache
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|.
name|getUsersCacheConfiguration
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|writeCacheConfiguration
argument_list|(
name|prefix
operator|+
literal|"usersCacheConfiguration."
argument_list|,
name|value
operator|.
name|getUsersCacheConfiguration
argument_list|()
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|writeArchivaDefaultConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|ArchivaDefaultConfiguration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getDefaultCheckPaths
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getDefaultCheckPaths
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"defaultCheckPaths"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getDefaultCheckPaths
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"defaultCheckPaths.defaultCheckPath("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|RepositoryCheckPath
name|o
init|=
operator|(
name|RepositoryCheckPath
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|writeRepositoryCheckPath
argument_list|(
name|prefix
operator|+
name|name
operator|+
literal|"."
argument_list|,
name|o
argument_list|,
name|registry
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|private
name|void
name|writeLdapConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|LdapConfiguration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getHostName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|hostName
init|=
literal|"hostName"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|hostName
argument_list|,
name|value
operator|.
name|getHostName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getPort
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|String
name|port
init|=
literal|"port"
decl_stmt|;
name|registry
operator|.
name|setInt
argument_list|(
name|prefix
operator|+
name|port
argument_list|,
name|value
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|ssl
init|=
literal|"ssl"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|ssl
argument_list|,
name|value
operator|.
name|isSsl
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|.
name|getBaseDn
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|baseDn
init|=
literal|"baseDn"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|baseDn
argument_list|,
name|value
operator|.
name|getBaseDn
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getBaseGroupsDn
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|baseGroupsDn
init|=
literal|"baseGroupsDn"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|baseGroupsDn
argument_list|,
name|value
operator|.
name|getBaseGroupsDn
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getContextFactory
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|contextFactory
init|=
literal|"contextFactory"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|contextFactory
argument_list|,
name|value
operator|.
name|getContextFactory
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getBindDn
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|bindDn
init|=
literal|"bindDn"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|bindDn
argument_list|,
name|value
operator|.
name|getBindDn
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getPassword
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|password
init|=
literal|"password"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|password
argument_list|,
name|value
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getAuthenticationMethod
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|authenticationMethod
init|=
literal|"authenticationMethod"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|authenticationMethod
argument_list|,
name|value
operator|.
name|getAuthenticationMethod
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|bindAuthenticatorEnabled
init|=
literal|"bindAuthenticatorEnabled"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|bindAuthenticatorEnabled
argument_list|,
name|value
operator|.
name|isBindAuthenticatorEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|writable
init|=
literal|"writable"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|writable
argument_list|,
name|value
operator|.
name|isWritable
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|useRoleNameAsGroup
init|=
literal|"useRoleNameAsGroup"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|useRoleNameAsGroup
argument_list|,
name|value
operator|.
name|isUseRoleNameAsGroup
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|.
name|getExtraProperties
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getExtraProperties
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"extraProperties"
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getExtraProperties
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|key
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|v
init|=
operator|(
name|String
operator|)
name|value
operator|.
name|getExtraProperties
argument_list|()
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
literal|"extraProperties."
operator|+
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|private
name|void
name|writeFileLockConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|FileLockConfiguration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
name|String
name|skipLocking
init|=
literal|"skipLocking"
decl_stmt|;
name|registry
operator|.
name|setBoolean
argument_list|(
name|prefix
operator|+
name|skipLocking
argument_list|,
name|value
operator|.
name|isSkipLocking
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|.
name|getLockingTimeout
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|String
name|lockingTimeout
init|=
literal|"lockingTimeout"
decl_stmt|;
name|registry
operator|.
name|setInt
argument_list|(
name|prefix
operator|+
name|lockingTimeout
argument_list|,
name|value
operator|.
name|getLockingTimeout
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|writeCacheConfiguration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|CacheConfiguration
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getTimeToIdleSeconds
argument_list|()
operator|!=
operator|-
literal|1
condition|)
block|{
name|String
name|timeToIdleSeconds
init|=
literal|"timeToIdleSeconds"
decl_stmt|;
name|registry
operator|.
name|setInt
argument_list|(
name|prefix
operator|+
name|timeToIdleSeconds
argument_list|,
name|value
operator|.
name|getTimeToIdleSeconds
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getTimeToLiveSeconds
argument_list|()
operator|!=
operator|-
literal|1
condition|)
block|{
name|String
name|timeToLiveSeconds
init|=
literal|"timeToLiveSeconds"
decl_stmt|;
name|registry
operator|.
name|setInt
argument_list|(
name|prefix
operator|+
name|timeToLiveSeconds
argument_list|,
name|value
operator|.
name|getTimeToLiveSeconds
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getMaxElementsInMemory
argument_list|()
operator|!=
operator|-
literal|1
condition|)
block|{
name|String
name|maxElementsInMemory
init|=
literal|"maxElementsInMemory"
decl_stmt|;
name|registry
operator|.
name|setInt
argument_list|(
name|prefix
operator|+
name|maxElementsInMemory
argument_list|,
name|value
operator|.
name|getMaxElementsInMemory
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getMaxElementsOnDisk
argument_list|()
operator|!=
operator|-
literal|1
condition|)
block|{
name|String
name|maxElementsOnDisk
init|=
literal|"maxElementsOnDisk"
decl_stmt|;
name|registry
operator|.
name|setInt
argument_list|(
name|prefix
operator|+
name|maxElementsOnDisk
argument_list|,
name|value
operator|.
name|getMaxElementsOnDisk
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|writeLdapGroupMapping
parameter_list|(
name|String
name|prefix
parameter_list|,
name|LdapGroupMapping
name|value
parameter_list|,
name|Registry
name|registry
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|.
name|getGroup
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|group
init|=
literal|"group"
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|group
argument_list|,
name|value
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|.
name|getRoleNames
argument_list|()
operator|!=
literal|null
operator|&&
name|value
operator|.
name|getRoleNames
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|registry
operator|.
name|removeSubset
argument_list|(
name|prefix
operator|+
literal|"roleNames"
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|value
operator|.
name|getRoleNames
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
name|count
operator|++
control|)
block|{
name|String
name|name
init|=
literal|"roleNames.roleName("
operator|+
name|count
operator|+
literal|")"
decl_stmt|;
name|String
name|roleName
init|=
operator|(
name|String
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|registry
operator|.
name|setString
argument_list|(
name|prefix
operator|+
name|name
argument_list|,
name|roleName
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

