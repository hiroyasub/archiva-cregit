begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|model
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_comment
comment|/**  *   *         The redback runtime configuration.  *         *   * @version $Revision$ $Date$  */
end_comment

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"all"
argument_list|)
specifier|public
class|class
name|RedbackRuntimeConfiguration
implements|implements
name|java
operator|.
name|io
operator|.
name|Serializable
block|{
comment|//--------------------------/
comment|//- Class/Member Variables -/
comment|//--------------------------/
comment|/**      * flag to know if redback configuration has been      * checked/migrated.      */
specifier|private
name|boolean
name|migratedFromRedbackConfiguration
init|=
literal|false
decl_stmt|;
comment|/**      * Field userManagerImpls.      */
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|String
argument_list|>
name|userManagerImpls
decl_stmt|;
comment|/**      * Field rbacManagerImpls.      */
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|String
argument_list|>
name|rbacManagerImpls
decl_stmt|;
comment|/**      * the ldap configuration.      */
specifier|private
name|LdapConfiguration
name|ldapConfiguration
decl_stmt|;
comment|/**      * Field ldapGroupMappings.      */
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|LdapGroupMapping
argument_list|>
name|ldapGroupMappings
decl_stmt|;
comment|/**      * Field configurationProperties.      */
specifier|private
name|java
operator|.
name|util
operator|.
name|Map
name|configurationProperties
decl_stmt|;
comment|/**      * flag to know if redback will use a cache to prevent      * searching users already found.      */
specifier|private
name|boolean
name|useUsersCache
init|=
literal|true
decl_stmt|;
comment|/**      * the users cache configuration.      */
specifier|private
name|CacheConfiguration
name|usersCacheConfiguration
decl_stmt|;
comment|//-----------/
comment|//- Methods -/
comment|//-----------/
comment|/**      * Method addConfigurationProperty.      *       * @param key      * @param value      */
specifier|public
name|void
name|addConfigurationProperty
parameter_list|(
name|Object
name|key
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|getConfigurationProperties
argument_list|()
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|//-- void addConfigurationProperty( Object, String )
comment|/**      * Method addLdapGroupMapping.      *       * @param ldapGroupMapping      */
specifier|public
name|void
name|addLdapGroupMapping
parameter_list|(
name|LdapGroupMapping
name|ldapGroupMapping
parameter_list|)
block|{
name|getLdapGroupMappings
argument_list|()
operator|.
name|add
argument_list|(
name|ldapGroupMapping
argument_list|)
expr_stmt|;
block|}
comment|//-- void addLdapGroupMapping( LdapGroupMapping )
comment|/**      * Method addRbacManagerImpl.      *       * @param string      */
specifier|public
name|void
name|addRbacManagerImpl
parameter_list|(
name|String
name|string
parameter_list|)
block|{
name|getRbacManagerImpls
argument_list|()
operator|.
name|add
argument_list|(
name|string
argument_list|)
expr_stmt|;
block|}
comment|//-- void addRbacManagerImpl( String )
comment|/**      * Method addUserManagerImpl.      *       * @param string      */
specifier|public
name|void
name|addUserManagerImpl
parameter_list|(
name|String
name|string
parameter_list|)
block|{
name|getUserManagerImpls
argument_list|()
operator|.
name|add
argument_list|(
name|string
argument_list|)
expr_stmt|;
block|}
comment|//-- void addUserManagerImpl( String )
comment|/**      * Method getConfigurationProperties.      *       * @return Map      */
specifier|public
name|java
operator|.
name|util
operator|.
name|Map
name|getConfigurationProperties
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|configurationProperties
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|configurationProperties
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|HashMap
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|configurationProperties
return|;
block|}
comment|//-- java.util.Map getConfigurationProperties()
comment|/**      * Get the ldap configuration.      *       * @return LdapConfiguration      */
specifier|public
name|LdapConfiguration
name|getLdapConfiguration
parameter_list|()
block|{
return|return
name|this
operator|.
name|ldapConfiguration
return|;
block|}
comment|//-- LdapConfiguration getLdapConfiguration()
comment|/**      * Method getLdapGroupMappings.      *       * @return List      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|LdapGroupMapping
argument_list|>
name|getLdapGroupMappings
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|ldapGroupMappings
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|ldapGroupMappings
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|LdapGroupMapping
argument_list|>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|ldapGroupMappings
return|;
block|}
comment|//-- java.util.List<LdapGroupMapping> getLdapGroupMappings()
comment|/**      * Method getRbacManagerImpls.      *       * @return List      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|String
argument_list|>
name|getRbacManagerImpls
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|rbacManagerImpls
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|rbacManagerImpls
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|rbacManagerImpls
return|;
block|}
comment|//-- java.util.List<String> getRbacManagerImpls()
comment|/**      * Method getUserManagerImpls.      *       * @return List      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|String
argument_list|>
name|getUserManagerImpls
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|userManagerImpls
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|userManagerImpls
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|userManagerImpls
return|;
block|}
comment|//-- java.util.List<String> getUserManagerImpls()
comment|/**      * Get the users cache configuration.      *       * @return CacheConfiguration      */
specifier|public
name|CacheConfiguration
name|getUsersCacheConfiguration
parameter_list|()
block|{
return|return
name|this
operator|.
name|usersCacheConfiguration
return|;
block|}
comment|//-- CacheConfiguration getUsersCacheConfiguration()
comment|/**      * Get flag to know if redback configuration has been      * checked/migrated.      *       * @return boolean      */
specifier|public
name|boolean
name|isMigratedFromRedbackConfiguration
parameter_list|()
block|{
return|return
name|this
operator|.
name|migratedFromRedbackConfiguration
return|;
block|}
comment|//-- boolean isMigratedFromRedbackConfiguration()
comment|/**      * Get flag to know if redback will use a cache to prevent      * searching users already found.      *       * @return boolean      */
specifier|public
name|boolean
name|isUseUsersCache
parameter_list|()
block|{
return|return
name|this
operator|.
name|useUsersCache
return|;
block|}
comment|//-- boolean isUseUsersCache()
comment|/**      * Method removeLdapGroupMapping.      *       * @param ldapGroupMapping      */
specifier|public
name|void
name|removeLdapGroupMapping
parameter_list|(
name|LdapGroupMapping
name|ldapGroupMapping
parameter_list|)
block|{
name|getLdapGroupMappings
argument_list|()
operator|.
name|remove
argument_list|(
name|ldapGroupMapping
argument_list|)
expr_stmt|;
block|}
comment|//-- void removeLdapGroupMapping( LdapGroupMapping )
comment|/**      * Method removeRbacManagerImpl.      *       * @param string      */
specifier|public
name|void
name|removeRbacManagerImpl
parameter_list|(
name|String
name|string
parameter_list|)
block|{
name|getRbacManagerImpls
argument_list|()
operator|.
name|remove
argument_list|(
name|string
argument_list|)
expr_stmt|;
block|}
comment|//-- void removeRbacManagerImpl( String )
comment|/**      * Method removeUserManagerImpl.      *       * @param string      */
specifier|public
name|void
name|removeUserManagerImpl
parameter_list|(
name|String
name|string
parameter_list|)
block|{
name|getUserManagerImpls
argument_list|()
operator|.
name|remove
argument_list|(
name|string
argument_list|)
expr_stmt|;
block|}
comment|//-- void removeUserManagerImpl( String )
comment|/**      * Set extra properties for redback configuration.      * String/String.      *       * @param configurationProperties      */
specifier|public
name|void
name|setConfigurationProperties
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Map
name|configurationProperties
parameter_list|)
block|{
name|this
operator|.
name|configurationProperties
operator|=
name|configurationProperties
expr_stmt|;
block|}
comment|//-- void setConfigurationProperties( java.util.Map )
comment|/**      * Set the ldap configuration.      *       * @param ldapConfiguration      */
specifier|public
name|void
name|setLdapConfiguration
parameter_list|(
name|LdapConfiguration
name|ldapConfiguration
parameter_list|)
block|{
name|this
operator|.
name|ldapConfiguration
operator|=
name|ldapConfiguration
expr_stmt|;
block|}
comment|//-- void setLdapConfiguration( LdapConfiguration )
comment|/**      * Set ldapGroupMappings.      *       * @param ldapGroupMappings      */
specifier|public
name|void
name|setLdapGroupMappings
parameter_list|(
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|LdapGroupMapping
argument_list|>
name|ldapGroupMappings
parameter_list|)
block|{
name|this
operator|.
name|ldapGroupMappings
operator|=
name|ldapGroupMappings
expr_stmt|;
block|}
comment|//-- void setLdapGroupMappings( java.util.List )
comment|/**      * Set flag to know if redback configuration has been      * checked/migrated.      *       * @param migratedFromRedbackConfiguration      */
specifier|public
name|void
name|setMigratedFromRedbackConfiguration
parameter_list|(
name|boolean
name|migratedFromRedbackConfiguration
parameter_list|)
block|{
name|this
operator|.
name|migratedFromRedbackConfiguration
operator|=
name|migratedFromRedbackConfiguration
expr_stmt|;
block|}
comment|//-- void setMigratedFromRedbackConfiguration( boolean )
comment|/**      * Set the RBAC Manager impls to use.      *       * @param rbacManagerImpls      */
specifier|public
name|void
name|setRbacManagerImpls
parameter_list|(
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|String
argument_list|>
name|rbacManagerImpls
parameter_list|)
block|{
name|this
operator|.
name|rbacManagerImpls
operator|=
name|rbacManagerImpls
expr_stmt|;
block|}
comment|//-- void setRbacManagerImpls( java.util.List )
comment|/**      * Set flag to know if redback will use a cache to prevent      * searching users already found.      *       * @param useUsersCache      */
specifier|public
name|void
name|setUseUsersCache
parameter_list|(
name|boolean
name|useUsersCache
parameter_list|)
block|{
name|this
operator|.
name|useUsersCache
operator|=
name|useUsersCache
expr_stmt|;
block|}
comment|//-- void setUseUsersCache( boolean )
comment|/**      * Set the user manager impls to use.      *       * @param userManagerImpls      */
specifier|public
name|void
name|setUserManagerImpls
parameter_list|(
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|String
argument_list|>
name|userManagerImpls
parameter_list|)
block|{
name|this
operator|.
name|userManagerImpls
operator|=
name|userManagerImpls
expr_stmt|;
block|}
comment|//-- void setUserManagerImpls( java.util.List )
comment|/**      * Set the users cache configuration.      *       * @param usersCacheConfiguration      */
specifier|public
name|void
name|setUsersCacheConfiguration
parameter_list|(
name|CacheConfiguration
name|usersCacheConfiguration
parameter_list|)
block|{
name|this
operator|.
name|usersCacheConfiguration
operator|=
name|usersCacheConfiguration
expr_stmt|;
block|}
comment|//-- void setUsersCacheConfiguration( CacheConfiguration )
block|}
end_class

end_unit

