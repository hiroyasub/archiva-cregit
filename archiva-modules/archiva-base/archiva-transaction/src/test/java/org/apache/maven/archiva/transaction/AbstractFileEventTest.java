begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|transaction
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|spring
operator|.
name|PlexusInSpringTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|spring
operator|.
name|PlexusToSpringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|digest
operator|.
name|Digester
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  *   * @author<a href="mailto:carlos@apache.org">Carlos Sanchez</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractFileEventTest
extends|extends
name|PlexusInSpringTestCase
block|{
specifier|protected
name|List
name|digesters
decl_stmt|;
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|digesters
operator|=
name|PlexusToSpringUtils
operator|.
name|lookupList
argument_list|(
name|PlexusToSpringUtils
operator|.
name|buildSpringId
argument_list|(
name|Digester
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
name|getApplicationContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertChecksumExists
parameter_list|(
name|File
name|file
parameter_list|,
name|String
name|algorithm
parameter_list|)
block|{
name|assertChecksum
argument_list|(
name|file
argument_list|,
name|algorithm
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertChecksumDoesNotExist
parameter_list|(
name|File
name|file
parameter_list|,
name|String
name|algorithm
parameter_list|)
block|{
name|assertChecksum
argument_list|(
name|file
argument_list|,
name|algorithm
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertChecksum
parameter_list|(
name|File
name|file
parameter_list|,
name|String
name|algorithm
parameter_list|,
name|boolean
name|exist
parameter_list|)
block|{
name|String
name|msg
init|=
name|exist
condition|?
literal|"exists"
else|:
literal|"does not exist"
decl_stmt|;
name|File
name|checksumFile
init|=
operator|new
name|File
argument_list|(
name|file
operator|.
name|getPath
argument_list|()
operator|+
literal|"."
operator|+
name|algorithm
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Test file "
operator|+
name|algorithm
operator|+
literal|" checksum "
operator|+
name|msg
argument_list|,
name|exist
argument_list|,
name|checksumFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertChecksumCommit
parameter_list|(
name|File
name|file
parameter_list|)
throws|throws
name|IOException
block|{
name|assertChecksumExists
argument_list|(
name|file
argument_list|,
literal|"md5"
argument_list|)
expr_stmt|;
name|assertChecksumExists
argument_list|(
name|file
argument_list|,
literal|"sha1"
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertChecksumRollback
parameter_list|(
name|File
name|file
parameter_list|)
throws|throws
name|IOException
block|{
name|assertChecksumDoesNotExist
argument_list|(
name|file
argument_list|,
literal|"md5"
argument_list|)
expr_stmt|;
name|assertChecksumDoesNotExist
argument_list|(
name|file
argument_list|,
literal|"sha1"
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|String
name|readFile
parameter_list|(
name|File
name|file
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|FileUtils
operator|.
name|readFileToString
argument_list|(
name|file
argument_list|)
return|;
block|}
specifier|protected
name|void
name|writeFile
parameter_list|(
name|File
name|file
parameter_list|,
name|String
name|content
parameter_list|)
throws|throws
name|IOException
block|{
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|file
argument_list|,
name|content
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

