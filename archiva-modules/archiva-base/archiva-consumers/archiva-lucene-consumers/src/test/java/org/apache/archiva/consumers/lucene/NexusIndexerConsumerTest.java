begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|consumers
operator|.
name|lucene
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ManagedRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|consumers
operator|.
name|KnownRepositoryContentConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|scheduled
operator|.
name|ArchivaTaskScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|scheduled
operator|.
name|tasks
operator|.
name|ArtifactIndexingTask
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|scheduled
operator|.
name|tasks
operator|.
name|TaskCreator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|spring
operator|.
name|PlexusInSpringTestCase
import|;
end_import

begin_comment
comment|/**  * NexusIndexerConsumerTest  */
end_comment

begin_class
specifier|public
class|class
name|NexusIndexerConsumerTest
extends|extends
name|PlexusInSpringTestCase
block|{
specifier|private
name|KnownRepositoryContentConsumer
name|nexusIndexerConsumer
decl_stmt|;
specifier|private
name|ManagedRepositoryConfiguration
name|repositoryConfig
decl_stmt|;
specifier|private
name|ArchivaTaskScheduler
name|scheduler
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|scheduler
operator|=
operator|(
name|ArchivaTaskScheduler
operator|)
name|lookup
argument_list|(
name|ArchivaTaskScheduler
operator|.
name|class
argument_list|)
expr_stmt|;
name|nexusIndexerConsumer
operator|=
operator|new
name|NexusIndexerConsumer
argument_list|(
name|scheduler
argument_list|)
expr_stmt|;
name|repositoryConfig
operator|=
operator|new
name|ManagedRepositoryConfiguration
argument_list|()
expr_stmt|;
name|repositoryConfig
operator|.
name|setId
argument_list|(
literal|"test-repo"
argument_list|)
expr_stmt|;
name|repositoryConfig
operator|.
name|setLocation
argument_list|(
name|getBasedir
argument_list|()
operator|+
literal|"/target/test-classes/test-repo"
argument_list|)
expr_stmt|;
name|repositoryConfig
operator|.
name|setLayout
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
name|repositoryConfig
operator|.
name|setName
argument_list|(
literal|"Test Repository"
argument_list|)
expr_stmt|;
name|repositoryConfig
operator|.
name|setScanned
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|repositoryConfig
operator|.
name|setSnapshots
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|repositoryConfig
operator|.
name|setReleases
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
comment|// delete created index in the repository
name|File
name|indexDir
init|=
operator|new
name|File
argument_list|(
name|repositoryConfig
operator|.
name|getLocation
argument_list|()
argument_list|,
literal|".indexer"
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|indexDir
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|indexDir
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|indexDir
operator|=
operator|new
name|File
argument_list|(
name|repositoryConfig
operator|.
name|getLocation
argument_list|()
argument_list|,
literal|".index"
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|indexDir
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|indexDir
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testIndexerIndexArtifact
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|artifactFile
init|=
operator|new
name|File
argument_list|(
name|repositoryConfig
operator|.
name|getLocation
argument_list|()
argument_list|,
literal|"org/apache/archiva/archiva-index-methods-jar-test/1.0/archiva-index-methods-jar-test-1.0.jar"
argument_list|)
decl_stmt|;
name|ArtifactIndexingTask
name|task
init|=
name|TaskCreator
operator|.
name|createIndexingTask
argument_list|(
name|repositoryConfig
operator|.
name|getId
argument_list|()
argument_list|,
name|artifactFile
argument_list|,
name|ArtifactIndexingTask
operator|.
name|ADD
argument_list|)
decl_stmt|;
comment|// begin scan
name|Date
name|now
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|nexusIndexerConsumer
operator|.
name|beginScan
argument_list|(
name|repositoryConfig
argument_list|,
name|now
argument_list|)
expr_stmt|;
name|nexusIndexerConsumer
operator|.
name|processFile
argument_list|(
literal|"org/apache/archiva/archiva-index-methods-jar-test/1.0/archiva-index-methods-jar-test-1.0.jar"
argument_list|)
expr_stmt|;
name|nexusIndexerConsumer
operator|.
name|completeScan
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|scheduler
operator|.
name|isProcessingIndexingTaskWithName
argument_list|(
name|task
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testIndexerArtifactAlreadyIndexed
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|artifactFile
init|=
operator|new
name|File
argument_list|(
name|repositoryConfig
operator|.
name|getLocation
argument_list|()
argument_list|,
literal|"org/apache/archiva/archiva-index-methods-jar-test/1.0/archiva-index-methods-jar-test-1.0.jar"
argument_list|)
decl_stmt|;
name|ArtifactIndexingTask
name|task
init|=
name|TaskCreator
operator|.
name|createIndexingTask
argument_list|(
name|repositoryConfig
operator|.
name|getId
argument_list|()
argument_list|,
name|artifactFile
argument_list|,
name|ArtifactIndexingTask
operator|.
name|ADD
argument_list|)
decl_stmt|;
comment|// begin scan
name|Date
name|now
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|nexusIndexerConsumer
operator|.
name|beginScan
argument_list|(
name|repositoryConfig
argument_list|,
name|now
argument_list|)
expr_stmt|;
name|nexusIndexerConsumer
operator|.
name|processFile
argument_list|(
literal|"org/apache/archiva/archiva-index-methods-jar-test/1.0/archiva-index-methods-jar-test-1.0.jar"
argument_list|)
expr_stmt|;
name|nexusIndexerConsumer
operator|.
name|completeScan
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|scheduler
operator|.
name|isProcessingIndexingTaskWithName
argument_list|(
name|task
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// scan and index again
name|now
operator|=
name|Calendar
operator|.
name|getInstance
argument_list|()
operator|.
name|getTime
argument_list|()
expr_stmt|;
name|nexusIndexerConsumer
operator|.
name|beginScan
argument_list|(
name|repositoryConfig
argument_list|,
name|now
argument_list|)
expr_stmt|;
name|nexusIndexerConsumer
operator|.
name|processFile
argument_list|(
literal|"org/apache/archiva/archiva-index-methods-jar-test/1.0/archiva-index-methods-jar-test-1.0.jar"
argument_list|)
expr_stmt|;
name|nexusIndexerConsumer
operator|.
name|completeScan
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|scheduler
operator|.
name|isProcessingIndexingTaskWithName
argument_list|(
name|task
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testIndexerIndexArtifactThenPom
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|artifactFile
init|=
operator|new
name|File
argument_list|(
name|repositoryConfig
operator|.
name|getLocation
argument_list|()
argument_list|,
literal|"org/apache/archiva/archiva-index-methods-jar-test/1.0/archiva-index-methods-jar-test-1.0.jar"
argument_list|)
decl_stmt|;
name|ArtifactIndexingTask
name|task
init|=
name|TaskCreator
operator|.
name|createIndexingTask
argument_list|(
name|repositoryConfig
operator|.
name|getId
argument_list|()
argument_list|,
name|artifactFile
argument_list|,
name|ArtifactIndexingTask
operator|.
name|ADD
argument_list|)
decl_stmt|;
comment|// begin scan
name|Date
name|now
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|nexusIndexerConsumer
operator|.
name|beginScan
argument_list|(
name|repositoryConfig
argument_list|,
name|now
argument_list|)
expr_stmt|;
name|nexusIndexerConsumer
operator|.
name|processFile
argument_list|(
literal|"org/apache/archiva/archiva-index-methods-jar-test/1.0/archiva-index-methods-jar-test-1.0.jar"
argument_list|)
expr_stmt|;
name|nexusIndexerConsumer
operator|.
name|completeScan
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|scheduler
operator|.
name|isProcessingIndexingTaskWithName
argument_list|(
name|task
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|artifactFile
operator|=
operator|new
name|File
argument_list|(
name|repositoryConfig
operator|.
name|getLocation
argument_list|()
argument_list|,
literal|"org/apache/archiva/archiva-index-methods-jar-test/1.0/pom.xml"
argument_list|)
expr_stmt|;
name|task
operator|=
name|TaskCreator
operator|.
name|createIndexingTask
argument_list|(
name|repositoryConfig
operator|.
name|getId
argument_list|()
argument_list|,
name|artifactFile
argument_list|,
name|ArtifactIndexingTask
operator|.
name|ADD
argument_list|)
expr_stmt|;
comment|// scan and index again
name|now
operator|=
name|Calendar
operator|.
name|getInstance
argument_list|()
operator|.
name|getTime
argument_list|()
expr_stmt|;
name|nexusIndexerConsumer
operator|.
name|beginScan
argument_list|(
name|repositoryConfig
argument_list|,
name|now
argument_list|)
expr_stmt|;
name|nexusIndexerConsumer
operator|.
name|processFile
argument_list|(
literal|"org/apache/archiva/archiva-index-methods-jar-test/1.0/pom.xml"
argument_list|)
expr_stmt|;
name|nexusIndexerConsumer
operator|.
name|completeScan
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|scheduler
operator|.
name|isProcessingIndexingTaskWithName
argument_list|(
name|task
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|String
name|getPlexusConfigLocation
parameter_list|()
block|{
return|return
literal|"/org/apache/archiva/consumers/lucene/LuceneConsumersTest.xml"
return|;
block|}
block|}
end_class

end_unit

