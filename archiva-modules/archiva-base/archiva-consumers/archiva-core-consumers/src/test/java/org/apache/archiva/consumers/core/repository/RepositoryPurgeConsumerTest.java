begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|consumers
operator|.
name|core
operator|.
name|repository
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|RepositoryCommonValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|beans
operator|.
name|ManagedRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|managed
operator|.
name|ManagedRepositoryAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
operator|.
name|DefaultRepositoryCommonValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
operator|.
name|managed
operator|.
name|DefaultManagedRepositoryAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|BaseFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|FileType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|FileTypes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|consumers
operator|.
name|KnownRepositoryContentConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|consumers
operator|.
name|functors
operator|.
name|ConsumerWantsFilePredicate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ArtifactMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|MetadataFacet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|facets
operator|.
name|RepositoryProblemFacet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|mock
operator|.
name|MockRepositorySessionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|custommonkey
operator|.
name|xmlunit
operator|.
name|XMLAssert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|ArgumentCaptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|sun
operator|.
name|awt
operator|.
name|image
operator|.
name|ImageWatched
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|LinkOption
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|sun
operator|.
name|imageio
operator|.
name|plugins
operator|.
name|jpeg
operator|.
name|JPEG
operator|.
name|version
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|eq
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
annotation|@
name|ContextConfiguration
argument_list|(
name|locations
operator|=
block|{
literal|"classpath*:/META-INF/spring-context.xml"
block|,
literal|"classpath:/spring-context-purge-consumer-test.xml"
block|}
argument_list|)
specifier|public
class|class
name|RepositoryPurgeConsumerTest
extends|extends
name|AbstractRepositoryPurgeTest
block|{
annotation|@
name|Before
annotation|@
name|Override
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|MockRepositorySessionFactory
name|factory
init|=
name|applicationContext
operator|.
name|getBean
argument_list|(
name|MockRepositorySessionFactory
operator|.
name|class
argument_list|)
decl_stmt|;
name|factory
operator|.
name|setRepository
argument_list|(
name|metadataRepository
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
annotation|@
name|Override
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConsumption
parameter_list|()
throws|throws
name|Exception
block|{
name|assertNotConsumed
argument_list|(
literal|"org/apache/maven/plugins/maven-plugin-plugin/2.4.1/maven-metadata.xml"
argument_list|)
expr_stmt|;
name|cleanupFileTypes
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConsumptionOfOtherMetadata
parameter_list|()
throws|throws
name|Exception
block|{
name|assertNotConsumed
argument_list|(
literal|"org/apache/maven/plugins/maven-plugin-plugin/2.4.1/maven-metadata-central.xml"
argument_list|)
expr_stmt|;
name|cleanupFileTypes
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|cleanupFileTypes
parameter_list|()
block|{
name|ArchivaConfiguration
name|archivaConfiguration
init|=
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"archivaConfiguration#default"
argument_list|,
name|ArchivaConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
name|FileType
name|fileType
init|=
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getRepositoryScanning
argument_list|()
operator|.
name|getFileTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|fileType
operator|.
name|removePattern
argument_list|(
literal|"**/*.xml"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertNotConsumed
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|Exception
block|{
name|ArchivaConfiguration
name|archivaConfiguration
init|=
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"archivaConfiguration#default"
argument_list|,
name|ArchivaConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
name|FileType
name|fileType
init|=
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getRepositoryScanning
argument_list|()
operator|.
name|getFileTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|FileTypes
operator|.
name|ARTIFACTS
argument_list|,
name|fileType
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|fileType
operator|.
name|addPattern
argument_list|(
literal|"**/*.xml"
argument_list|)
expr_stmt|;
comment|// trigger reload
comment|//FileTypes fileTypes = applicationContext.getBean( FileTypes.class );
for|for
control|(
name|FileTypes
name|fileTypes
range|:
name|applicationContext
operator|.
name|getBeansOfType
argument_list|(
name|FileTypes
operator|.
name|class
argument_list|)
operator|.
name|values
argument_list|()
control|)
block|{
name|fileTypes
operator|.
name|afterConfigurationChange
argument_list|(
literal|null
argument_list|,
literal|"repositoryScanning.fileTypes"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
name|KnownRepositoryContentConsumer
name|repoPurgeConsumer
init|=
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"knownRepositoryContentConsumer#repository-purge"
argument_list|,
name|KnownRepositoryContentConsumer
operator|.
name|class
argument_list|)
decl_stmt|;
name|File
name|repoLocation
init|=
operator|new
name|File
argument_list|(
literal|"target/test-"
operator|+
name|getName
argument_list|()
operator|+
literal|"/test-repo"
argument_list|)
decl_stmt|;
name|File
name|localFile
init|=
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|ConsumerWantsFilePredicate
name|predicate
init|=
operator|new
name|ConsumerWantsFilePredicate
argument_list|()
decl_stmt|;
name|BaseFile
name|baseFile
init|=
operator|new
name|BaseFile
argument_list|(
name|repoLocation
argument_list|,
name|localFile
argument_list|)
decl_stmt|;
name|predicate
operator|.
name|setBasefile
argument_list|(
name|baseFile
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|predicate
operator|.
name|evaluate
argument_list|(
name|repoPurgeConsumer
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|setLastModified
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|File
name|dir
init|=
operator|new
name|File
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|File
index|[]
name|contents
init|=
name|dir
operator|.
name|listFiles
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|contents
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|contents
index|[
name|i
index|]
operator|.
name|setLastModified
argument_list|(
literal|1179382029
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConsumerByRetentionCount
parameter_list|()
throws|throws
name|Exception
block|{
name|KnownRepositoryContentConsumer
name|repoPurgeConsumer
init|=
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"knownRepositoryContentConsumer#repo-purge-consumer-by-retention-count"
argument_list|,
name|KnownRepositoryContentConsumer
operator|.
name|class
argument_list|)
decl_stmt|;
name|ManagedRepository
name|repoConfiguration
init|=
name|getRepoConfiguration
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|TEST_REPO_NAME
argument_list|)
decl_stmt|;
name|repoConfiguration
operator|.
name|setDaysOlder
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|// force days older off to allow retention count purge to execute.
name|repoConfiguration
operator|.
name|setRetentionCount
argument_list|(
name|TEST_RETENTION_COUNT
argument_list|)
expr_stmt|;
name|addRepoToConfiguration
argument_list|(
literal|"retention-count"
argument_list|,
name|repoConfiguration
argument_list|)
expr_stmt|;
name|repoPurgeConsumer
operator|.
name|beginScan
argument_list|(
name|repoConfiguration
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|String
name|repoRoot
init|=
name|prepareTestRepos
argument_list|()
decl_stmt|;
name|String
name|projectNs
init|=
literal|"org.jruby.plugins"
decl_stmt|;
name|String
name|projectPath
init|=
name|projectNs
operator|.
name|replaceAll
argument_list|(
literal|"\\."
argument_list|,
literal|"/"
argument_list|)
decl_stmt|;
name|String
name|projectName
init|=
literal|"jruby-rake-plugin"
decl_stmt|;
name|String
name|projectVersion
init|=
literal|"1.0RC1-SNAPSHOT"
decl_stmt|;
name|String
name|projectRoot
init|=
name|repoRoot
operator|+
literal|"/"
operator|+
name|projectPath
operator|+
literal|"/"
operator|+
name|projectName
decl_stmt|;
name|String
name|versionRoot
init|=
name|projectRoot
operator|+
literal|"/"
operator|+
name|projectVersion
decl_stmt|;
name|Path
name|repo
init|=
name|getTestRepoRootPath
argument_list|()
decl_stmt|;
name|Path
name|vDir
init|=
name|repo
operator|.
name|resolve
argument_list|(
name|projectPath
argument_list|)
operator|.
name|resolve
argument_list|(
name|projectName
argument_list|)
operator|.
name|resolve
argument_list|(
name|projectVersion
argument_list|)
decl_stmt|;
comment|// Provide the metadata list
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|ml
init|=
name|getArtifactMetadataFromDir
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|projectName
argument_list|,
name|repo
argument_list|,
name|vDir
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getArtifacts
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|projectNs
argument_list|,
name|projectName
argument_list|,
name|projectVersion
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ml
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|deletedVersions
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|deletedVersions
operator|.
name|add
argument_list|(
literal|"1.0RC1-20070504.153317-1"
argument_list|)
expr_stmt|;
name|deletedVersions
operator|.
name|add
argument_list|(
literal|"1.0RC1-20070504.160758-2"
argument_list|)
expr_stmt|;
name|repoPurgeConsumer
operator|.
name|processFile
argument_list|(
name|PATH_TO_BY_RETENTION_COUNT_ARTIFACT
argument_list|)
expr_stmt|;
comment|// Verify the metadataRepository invocations
name|verify
argument_list|(
name|metadataRepository
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|removeProjectVersion
argument_list|(
name|eq
argument_list|(
name|TEST_REPO_ID
argument_list|)
argument_list|,
name|eq
argument_list|(
name|projectNs
argument_list|)
argument_list|,
name|eq
argument_list|(
name|projectName
argument_list|)
argument_list|,
name|eq
argument_list|(
name|projectVersion
argument_list|)
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|ArtifactMetadata
argument_list|>
name|metadataArg
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|ArtifactMetadata
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|metadataRepository
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|removeArtifact
argument_list|(
name|metadataArg
operator|.
name|capture
argument_list|()
argument_list|,
name|eq
argument_list|(
name|projectVersion
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|metaL
init|=
name|metadataArg
operator|.
name|getAllValues
argument_list|()
decl_stmt|;
for|for
control|(
name|ArtifactMetadata
name|meta
range|:
name|metaL
control|)
block|{
name|assertTrue
argument_list|(
name|meta
operator|.
name|getId
argument_list|()
operator|.
name|startsWith
argument_list|(
name|projectName
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|deletedVersions
operator|.
name|contains
argument_list|(
name|meta
operator|.
name|getVersion
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// assert if removed from repo
name|assertDeleted
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070504.153317-1.jar"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070504.153317-1-javadoc.jar"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070504.153317-1-javadoc.zip"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070504.153317-1.jar.md5"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070504.153317-1.jar.sha1"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070504.153317-1.pom"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070504.153317-1.pom.md5"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070504.153317-1.pom.sha1"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070504.160758-2.jar"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070504.160758-2-javadoc.jar"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070504.160758-2-javadoc.zip"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070504.160758-2.jar.md5"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070504.160758-2.jar.sha1"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070504.160758-2.pom"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070504.160758-2.pom.md5"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070504.160758-2.pom.sha1"
argument_list|)
expr_stmt|;
comment|// assert if not removed from repo
name|assertExists
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070505.090015-3.jar"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070505.090015-3-javadoc.jar"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070505.090015-3-javadoc.zip"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070505.090015-3.jar.md5"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070505.090015-3.jar.sha1"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070505.090015-3.pom"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070505.090015-3.pom.md5"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070505.090015-3.pom.sha1"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070506.090132-4.jar"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070506.090132-4.jar.md5"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070506.090132-4.jar.sha1"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070506.090132-4.pom"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070506.090132-4.pom.md5"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|versionRoot
operator|+
literal|"/jruby-rake-plugin-1.0RC1-20070506.090132-4.pom.sha1"
argument_list|)
expr_stmt|;
name|removeRepoFromConfiguration
argument_list|(
literal|"retention-count"
argument_list|,
name|repoConfiguration
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|addRepoToConfiguration
parameter_list|(
name|String
name|configHint
parameter_list|,
name|ManagedRepository
name|repoConfiguration
parameter_list|)
throws|throws
name|Exception
block|{
name|ArchivaConfiguration
name|archivaConfiguration
init|=
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"archivaConfiguration#"
operator|+
name|configHint
argument_list|,
name|ArchivaConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
operator|(
operator|(
name|DefaultManagedRepositoryAdmin
operator|)
name|applicationContext
operator|.
name|getBean
argument_list|(
name|ManagedRepositoryAdmin
operator|.
name|class
argument_list|)
operator|)
operator|.
name|setArchivaConfiguration
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
comment|// skygo: Default Validator was not looking at same config
operator|(
operator|(
name|DefaultRepositoryCommonValidator
operator|)
name|applicationContext
operator|.
name|getBean
argument_list|(
name|RepositoryCommonValidator
operator|.
name|class
argument_list|)
operator|)
operator|.
name|setArchivaConfiguration
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
name|ManagedRepositoryAdmin
name|managedRepositoryAdmin
init|=
name|applicationContext
operator|.
name|getBean
argument_list|(
name|ManagedRepositoryAdmin
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|managedRepositoryAdmin
operator|.
name|getManagedRepository
argument_list|(
name|repoConfiguration
operator|.
name|getId
argument_list|()
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|managedRepositoryAdmin
operator|.
name|deleteManagedRepository
argument_list|(
name|repoConfiguration
operator|.
name|getId
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|managedRepositoryAdmin
operator|.
name|addManagedRepository
argument_list|(
name|repoConfiguration
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|removeRepoFromConfiguration
parameter_list|(
name|String
name|configHint
parameter_list|,
name|ManagedRepository
name|repoConfiguration
parameter_list|)
throws|throws
name|Exception
block|{
name|ArchivaConfiguration
name|archivaConfiguration
init|=
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"archivaConfiguration#"
operator|+
name|configHint
argument_list|,
name|ArchivaConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
operator|(
operator|(
name|DefaultManagedRepositoryAdmin
operator|)
name|applicationContext
operator|.
name|getBean
argument_list|(
name|ManagedRepositoryAdmin
operator|.
name|class
argument_list|)
operator|)
operator|.
name|setArchivaConfiguration
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
comment|// skygo: Default Validator was not looking at same config
operator|(
operator|(
name|DefaultRepositoryCommonValidator
operator|)
name|applicationContext
operator|.
name|getBean
argument_list|(
name|RepositoryCommonValidator
operator|.
name|class
argument_list|)
operator|)
operator|.
name|setArchivaConfiguration
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
name|ManagedRepositoryAdmin
name|managedRepositoryAdmin
init|=
name|applicationContext
operator|.
name|getBean
argument_list|(
name|ManagedRepositoryAdmin
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|managedRepositoryAdmin
operator|.
name|getManagedRepository
argument_list|(
name|repoConfiguration
operator|.
name|getId
argument_list|()
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|managedRepositoryAdmin
operator|.
name|deleteManagedRepository
argument_list|(
name|repoConfiguration
operator|.
name|getId
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConsumerByDaysOld
parameter_list|()
throws|throws
name|Exception
block|{
name|KnownRepositoryContentConsumer
name|repoPurgeConsumer
init|=
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"knownRepositoryContentConsumer#repo-purge-consumer-by-days-old"
argument_list|,
name|KnownRepositoryContentConsumer
operator|.
name|class
argument_list|)
decl_stmt|;
name|ManagedRepository
name|repoConfiguration
init|=
name|getRepoConfiguration
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|TEST_REPO_NAME
argument_list|)
decl_stmt|;
name|repoConfiguration
operator|.
name|setDaysOlder
argument_list|(
name|TEST_DAYS_OLDER
argument_list|)
expr_stmt|;
name|addRepoToConfiguration
argument_list|(
literal|"days-old"
argument_list|,
name|repoConfiguration
argument_list|)
expr_stmt|;
name|repoPurgeConsumer
operator|.
name|beginScan
argument_list|(
name|repoConfiguration
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|String
name|repoRoot
init|=
name|prepareTestRepos
argument_list|()
decl_stmt|;
name|String
name|projectNs
init|=
literal|"org.apache.maven.plugins"
decl_stmt|;
name|String
name|projectPath
init|=
name|projectNs
operator|.
name|replaceAll
argument_list|(
literal|"\\."
argument_list|,
literal|"/"
argument_list|)
decl_stmt|;
name|String
name|projectName
init|=
literal|"maven-install-plugin"
decl_stmt|;
name|String
name|projectVersion
init|=
literal|"2.2-SNAPSHOT"
decl_stmt|;
name|String
name|projectRoot
init|=
name|repoRoot
operator|+
literal|"/"
operator|+
name|projectPath
operator|+
literal|"/"
operator|+
name|projectName
decl_stmt|;
name|setLastModified
argument_list|(
name|projectRoot
operator|+
literal|"/"
operator|+
name|projectVersion
argument_list|)
expr_stmt|;
name|Path
name|repo
init|=
name|getTestRepoRootPath
argument_list|()
decl_stmt|;
name|Path
name|vDir
init|=
name|repo
operator|.
name|resolve
argument_list|(
name|projectPath
argument_list|)
operator|.
name|resolve
argument_list|(
name|projectName
argument_list|)
operator|.
name|resolve
argument_list|(
name|projectVersion
argument_list|)
decl_stmt|;
comment|// Provide the metadata list
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|ml
init|=
name|getArtifactMetadataFromDir
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|projectName
argument_list|,
name|repo
argument_list|,
name|vDir
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getArtifacts
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|projectNs
argument_list|,
name|projectName
argument_list|,
name|projectVersion
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ml
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|deletedVersions
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|deletedVersions
operator|.
name|add
argument_list|(
literal|"2.2-SNAPSHOT"
argument_list|)
expr_stmt|;
name|deletedVersions
operator|.
name|add
argument_list|(
literal|"2.2-20061118.060401-2"
argument_list|)
expr_stmt|;
name|repoPurgeConsumer
operator|.
name|processFile
argument_list|(
name|PATH_TO_BY_DAYS_OLD_ARTIFACT
argument_list|)
expr_stmt|;
comment|// Verify the metadataRepository invocations
name|verify
argument_list|(
name|metadataRepository
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|removeProjectVersion
argument_list|(
name|eq
argument_list|(
name|TEST_REPO_ID
argument_list|)
argument_list|,
name|eq
argument_list|(
name|projectNs
argument_list|)
argument_list|,
name|eq
argument_list|(
name|projectName
argument_list|)
argument_list|,
name|eq
argument_list|(
name|projectVersion
argument_list|)
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|ArtifactMetadata
argument_list|>
name|metadataArg
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|ArtifactMetadata
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|metadataRepository
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|removeArtifact
argument_list|(
name|metadataArg
operator|.
name|capture
argument_list|()
argument_list|,
name|eq
argument_list|(
name|projectVersion
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|metaL
init|=
name|metadataArg
operator|.
name|getAllValues
argument_list|()
decl_stmt|;
for|for
control|(
name|ArtifactMetadata
name|meta
range|:
name|metaL
control|)
block|{
name|assertTrue
argument_list|(
name|meta
operator|.
name|getId
argument_list|()
operator|.
name|startsWith
argument_list|(
name|projectName
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|deletedVersions
operator|.
name|contains
argument_list|(
name|meta
operator|.
name|getVersion
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-SNAPSHOT.jar"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-SNAPSHOT.jar.md5"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-SNAPSHOT.jar.sha1"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-SNAPSHOT.pom"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-SNAPSHOT.pom.md5"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-SNAPSHOT.pom.sha1"
argument_list|)
expr_stmt|;
comment|// shouldn't be deleted because even if older than 30 days (because retention count = 2)
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-20070513.034619-5.jar"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-20070513.034619-5.jar.md5"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-20070513.034619-5.jar.sha1"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-20070513.034619-5.pom"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-20070513.034619-5.pom.md5"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-20070513.034619-5.pom.sha1"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-20070510.010101-4.jar"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-20070510.010101-4.jar.md5"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-20070510.010101-4.jar.sha1"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-20070510.010101-4.pom"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-20070510.010101-4.pom.md5"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-20070510.010101-4.pom.sha1"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-20061118.060401-2.jar"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-20061118.060401-2.jar.md5"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-20061118.060401-2.jar.sha1"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-20061118.060401-2.pom"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-20061118.060401-2.pom.md5"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.2-SNAPSHOT/maven-install-plugin-2.2-20061118.060401-2.pom.sha1"
argument_list|)
expr_stmt|;
name|removeRepoFromConfiguration
argument_list|(
literal|"days-old"
argument_list|,
name|repoConfiguration
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test the snapshot clean consumer on a repository set to NOT clean/delete snapshots based on released versions.      *      * @throws Exception      */
annotation|@
name|Test
specifier|public
name|void
name|testReleasedSnapshotsWereNotCleaned
parameter_list|()
throws|throws
name|Exception
block|{
name|KnownRepositoryContentConsumer
name|repoPurgeConsumer
init|=
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"knownRepositoryContentConsumer#repo-purge-consumer-by-retention-count"
argument_list|,
name|KnownRepositoryContentConsumer
operator|.
name|class
argument_list|)
decl_stmt|;
name|ManagedRepository
name|repoConfiguration
init|=
name|getRepoConfiguration
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|TEST_REPO_NAME
argument_list|)
decl_stmt|;
name|repoConfiguration
operator|.
name|setDeleteReleasedSnapshots
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// Set to NOT delete released snapshots.
name|addRepoToConfiguration
argument_list|(
literal|"retention-count"
argument_list|,
name|repoConfiguration
argument_list|)
expr_stmt|;
name|repoPurgeConsumer
operator|.
name|beginScan
argument_list|(
name|repoConfiguration
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|String
name|repoRoot
init|=
name|prepareTestRepos
argument_list|()
decl_stmt|;
name|String
name|projectNs
init|=
literal|"org.apache.maven.plugins"
decl_stmt|;
name|String
name|projectPath
init|=
name|projectNs
operator|.
name|replaceAll
argument_list|(
literal|"\\."
argument_list|,
literal|"/"
argument_list|)
decl_stmt|;
name|String
name|projectName
init|=
literal|"maven-plugin-plugin"
decl_stmt|;
name|String
name|projectVersion
init|=
literal|"2.3-SNAPSHOT"
decl_stmt|;
name|String
name|projectRoot
init|=
name|repoRoot
operator|+
literal|"/"
operator|+
name|projectPath
operator|+
literal|"/"
operator|+
name|projectName
decl_stmt|;
name|Path
name|repo
init|=
name|getTestRepoRootPath
argument_list|()
decl_stmt|;
name|Path
name|vDir
init|=
name|repo
operator|.
name|resolve
argument_list|(
name|projectPath
argument_list|)
operator|.
name|resolve
argument_list|(
name|projectName
argument_list|)
operator|.
name|resolve
argument_list|(
name|projectVersion
argument_list|)
decl_stmt|;
comment|// Provide the metadata list
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|ml
init|=
name|getArtifactMetadataFromDir
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|projectName
argument_list|,
name|repo
argument_list|,
name|vDir
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getArtifacts
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|projectNs
argument_list|,
name|projectName
argument_list|,
name|projectVersion
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ml
argument_list|)
expr_stmt|;
name|repoPurgeConsumer
operator|.
name|processFile
argument_list|(
name|CleanupReleasedSnapshotsRepositoryPurgeTest
operator|.
name|PATH_TO_RELEASED_SNAPSHOT_IN_SAME_REPO
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|metadataRepository
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|removeProjectVersion
argument_list|(
name|eq
argument_list|(
name|TEST_REPO_ID
argument_list|)
argument_list|,
name|eq
argument_list|(
name|projectNs
argument_list|)
argument_list|,
name|eq
argument_list|(
name|projectName
argument_list|)
argument_list|,
name|eq
argument_list|(
name|projectVersion
argument_list|)
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|ArtifactMetadata
argument_list|>
name|metadataArg
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|ArtifactMetadata
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|metadataRepository
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|removeArtifact
argument_list|(
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|metadataRepository
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|removeArtifact
argument_list|(
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|,
name|any
argument_list|(
name|MetadataFacet
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// check if the snapshot wasn't removed
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.3-SNAPSHOT"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.3-SNAPSHOT/maven-plugin-plugin-2.3-SNAPSHOT.jar"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.3-SNAPSHOT/maven-plugin-plugin-2.3-SNAPSHOT.jar.md5"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.3-SNAPSHOT/maven-plugin-plugin-2.3-SNAPSHOT.jar.sha1"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.3-SNAPSHOT/maven-plugin-plugin-2.3-SNAPSHOT.pom"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.3-SNAPSHOT/maven-plugin-plugin-2.3-SNAPSHOT.pom.md5"
argument_list|)
expr_stmt|;
name|assertExists
argument_list|(
name|projectRoot
operator|+
literal|"/2.3-SNAPSHOT/maven-plugin-plugin-2.3-SNAPSHOT.pom.sha1"
argument_list|)
expr_stmt|;
comment|// check if metadata file wasn't updated
name|File
name|artifactMetadataFile
init|=
operator|new
name|File
argument_list|(
name|projectRoot
operator|+
literal|"/maven-metadata.xml"
argument_list|)
decl_stmt|;
name|String
name|metadataXml
init|=
name|FileUtils
operator|.
name|readFileToString
argument_list|(
name|artifactMetadataFile
argument_list|,
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|expectedVersions
init|=
literal|"<expected><versions><version>2.3-SNAPSHOT</version></versions></expected>"
decl_stmt|;
name|XMLAssert
operator|.
name|assertXpathEvaluatesTo
argument_list|(
literal|"2.3-SNAPSHOT"
argument_list|,
literal|"//metadata/versioning/latest"
argument_list|,
name|metadataXml
argument_list|)
expr_stmt|;
name|XMLAssert
operator|.
name|assertXpathsEqual
argument_list|(
literal|"//expected/versions/version"
argument_list|,
name|expectedVersions
argument_list|,
literal|"//metadata/versioning/versions/version"
argument_list|,
name|metadataXml
argument_list|)
expr_stmt|;
name|XMLAssert
operator|.
name|assertXpathEvaluatesTo
argument_list|(
literal|"20070315032817"
argument_list|,
literal|"//metadata/versioning/lastUpdated"
argument_list|,
name|metadataXml
argument_list|)
expr_stmt|;
name|removeRepoFromConfiguration
argument_list|(
literal|"retention-count"
argument_list|,
name|repoConfiguration
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReleasedSnapshotsWereCleaned
parameter_list|()
throws|throws
name|Exception
block|{
name|KnownRepositoryContentConsumer
name|repoPurgeConsumer
init|=
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"knownRepositoryContentConsumer#repo-purge-consumer-by-days-old"
argument_list|,
name|KnownRepositoryContentConsumer
operator|.
name|class
argument_list|)
decl_stmt|;
name|ManagedRepository
name|repoConfiguration
init|=
name|getRepoConfiguration
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|TEST_REPO_NAME
argument_list|)
decl_stmt|;
name|repoConfiguration
operator|.
name|setDeleteReleasedSnapshots
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|addRepoToConfiguration
argument_list|(
literal|"days-old"
argument_list|,
name|repoConfiguration
argument_list|)
expr_stmt|;
name|repoPurgeConsumer
operator|.
name|beginScan
argument_list|(
name|repoConfiguration
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|String
name|repoRoot
init|=
name|prepareTestRepos
argument_list|()
decl_stmt|;
name|String
name|projectNs
init|=
literal|"org.apache.maven.plugins"
decl_stmt|;
name|String
name|projectPath
init|=
name|projectNs
operator|.
name|replaceAll
argument_list|(
literal|"\\."
argument_list|,
literal|"/"
argument_list|)
decl_stmt|;
name|String
name|projectName
init|=
literal|"maven-plugin-plugin"
decl_stmt|;
name|String
name|projectVersion
init|=
literal|"2.3-SNAPSHOT"
decl_stmt|;
name|String
name|projectRoot
init|=
name|repoRoot
operator|+
literal|"/"
operator|+
name|projectPath
operator|+
literal|"/"
operator|+
name|projectName
decl_stmt|;
name|Path
name|repo
init|=
name|getTestRepoRootPath
argument_list|()
decl_stmt|;
name|Path
name|vDir
init|=
name|repo
operator|.
name|resolve
argument_list|(
name|projectPath
argument_list|)
operator|.
name|resolve
argument_list|(
name|projectName
argument_list|)
operator|.
name|resolve
argument_list|(
name|projectVersion
argument_list|)
decl_stmt|;
comment|// Provide the metadata list
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|ml
init|=
name|getArtifactMetadataFromDir
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|projectName
argument_list|,
name|repo
operator|.
name|getParent
argument_list|()
argument_list|,
name|vDir
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|metadataRepository
operator|.
name|getArtifacts
argument_list|(
name|TEST_REPO_ID
argument_list|,
name|projectNs
argument_list|,
name|projectName
argument_list|,
name|projectVersion
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ml
argument_list|)
expr_stmt|;
name|repoPurgeConsumer
operator|.
name|processFile
argument_list|(
name|CleanupReleasedSnapshotsRepositoryPurgeTest
operator|.
name|PATH_TO_RELEASED_SNAPSHOT_IN_SAME_REPO
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|metadataRepository
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|removeProjectVersion
argument_list|(
name|eq
argument_list|(
name|TEST_REPO_ID
argument_list|)
argument_list|,
name|eq
argument_list|(
name|projectNs
argument_list|)
argument_list|,
name|eq
argument_list|(
name|projectName
argument_list|)
argument_list|,
name|eq
argument_list|(
name|projectVersion
argument_list|)
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|ArtifactMetadata
argument_list|>
name|metadataArg
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|ArtifactMetadata
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|metadataRepository
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|removeArtifact
argument_list|(
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// check if the snapshot was removed
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.3-SNAPSHOT"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.3-SNAPSHOT/maven-plugin-plugin-2.3-SNAPSHOT.jar"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.3-SNAPSHOT/maven-plugin-plugin-2.3-SNAPSHOT.jar.md5"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.3-SNAPSHOT/maven-plugin-plugin-2.3-SNAPSHOT.jar.sha1"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.3-SNAPSHOT/maven-plugin-plugin-2.3-SNAPSHOT.pom"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.3-SNAPSHOT/maven-plugin-plugin-2.3-SNAPSHOT.pom.md5"
argument_list|)
expr_stmt|;
name|assertDeleted
argument_list|(
name|projectRoot
operator|+
literal|"/2.3-SNAPSHOT/maven-plugin-plugin-2.3-SNAPSHOT.pom.sha1"
argument_list|)
expr_stmt|;
comment|// check if metadata file was updated
name|File
name|artifactMetadataFile
init|=
operator|new
name|File
argument_list|(
name|projectRoot
operator|+
literal|"/maven-metadata.xml"
argument_list|)
decl_stmt|;
name|String
name|metadataXml
init|=
name|FileUtils
operator|.
name|readFileToString
argument_list|(
name|artifactMetadataFile
argument_list|,
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|expectedVersions
init|=
literal|"<expected><versions><version>2.2</version>"
operator|+
literal|"<version>2.3</version></versions></expected>"
decl_stmt|;
name|XMLAssert
operator|.
name|assertXpathEvaluatesTo
argument_list|(
literal|"2.3"
argument_list|,
literal|"//metadata/versioning/latest"
argument_list|,
name|metadataXml
argument_list|)
expr_stmt|;
name|XMLAssert
operator|.
name|assertXpathsEqual
argument_list|(
literal|"//expected/versions/version"
argument_list|,
name|expectedVersions
argument_list|,
literal|"//metadata/versioning/versions/version"
argument_list|,
name|metadataXml
argument_list|)
expr_stmt|;
name|XMLAssert
operator|.
name|assertXpathEvaluatesTo
argument_list|(
literal|"20070315032817"
argument_list|,
literal|"//metadata/versioning/lastUpdated"
argument_list|,
name|metadataXml
argument_list|)
expr_stmt|;
name|removeRepoFromConfiguration
argument_list|(
literal|"days-old"
argument_list|,
name|repoConfiguration
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

