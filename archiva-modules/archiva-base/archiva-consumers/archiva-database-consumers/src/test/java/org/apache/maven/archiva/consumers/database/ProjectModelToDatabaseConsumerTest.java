begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|consumers
operator|.
name|database
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ManagedRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|consumers
operator|.
name|ConsumerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ArchivaDatabaseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ObjectNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ProjectModelDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|updater
operator|.
name|DatabaseUnprocessedArtifactConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaArtifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaArtifactModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaProjectModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|Dependency
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|Keys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|spring
operator|.
name|PlexusInSpringTestCase
import|;
end_import

begin_comment
comment|/**  * Test for ProjectModelToDatabaseConsumerTest  *   */
end_comment

begin_class
specifier|public
class|class
name|ProjectModelToDatabaseConsumerTest
extends|extends
name|PlexusInSpringTestCase
block|{
specifier|private
name|ProjectModelToDatabaseConsumer
name|consumer
decl_stmt|;
specifier|private
name|ProjectModelDAO
name|modelDao
decl_stmt|;
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|ArchivaConfiguration
name|archivaConfig
init|=
operator|(
name|ArchivaConfiguration
operator|)
name|lookup
argument_list|(
name|ArchivaConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
name|Configuration
name|configuration
init|=
name|archivaConfig
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|ManagedRepositoryConfiguration
name|repo
init|=
name|configuration
operator|.
name|findManagedRepositoryById
argument_list|(
literal|"internal"
argument_list|)
decl_stmt|;
name|repo
operator|.
name|setLocation
argument_list|(
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"src/test/resources/test-repo"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|consumer
operator|=
operator|(
name|ProjectModelToDatabaseConsumer
operator|)
name|lookup
argument_list|(
name|DatabaseUnprocessedArtifactConsumer
operator|.
name|class
argument_list|,
literal|"update-db-project"
argument_list|)
expr_stmt|;
name|modelDao
operator|=
operator|(
name|ProjectModelDAO
operator|)
name|lookup
argument_list|(
name|ProjectModelDAO
operator|.
name|class
argument_list|,
literal|"jdo"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testProcess
parameter_list|()
throws|throws
name|Exception
block|{
name|ArchivaProjectModel
name|model
init|=
name|processAndGetModel
argument_list|(
literal|"test-project"
argument_list|,
literal|"test-project-endpoint-pom"
argument_list|,
literal|"2.4.4"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|model
operator|.
name|getParentProject
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test-project:test-project:2.4.4"
argument_list|,
name|Keys
operator|.
name|toKey
argument_list|(
name|model
operator|.
name|getParentProject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|model
operator|.
name|getDependencyManagement
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|=
name|processAndGetModel
argument_list|(
literal|"test-project"
argument_list|,
literal|"test-project-endpoint-ejb"
argument_list|,
literal|"2.4.4"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|model
operator|.
name|getParentProject
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test-project:test-project-endpoint-pom:2.4.4"
argument_list|,
name|Keys
operator|.
name|toKey
argument_list|(
name|model
operator|.
name|getParentProject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|hasDependency
argument_list|(
name|model
argument_list|,
literal|"test-project:test-project-api:2.4.4"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|hasDependency
argument_list|(
name|model
argument_list|,
literal|"commons-id:commons-id:0.1-dev"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|=
name|processAndGetModel
argument_list|(
literal|"test-project"
argument_list|,
literal|"test-project"
argument_list|,
literal|"2.4.4"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|model
operator|.
name|getDependencyManagement
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|boolean
name|hasDependency
parameter_list|(
name|ArchivaProjectModel
name|model
parameter_list|,
name|String
name|key
parameter_list|)
block|{
for|for
control|(
name|Dependency
name|dependency
range|:
name|model
operator|.
name|getDependencies
argument_list|()
control|)
block|{
if|if
condition|(
name|key
operator|.
name|equals
argument_list|(
name|Keys
operator|.
name|toKey
argument_list|(
name|dependency
operator|.
name|getGroupId
argument_list|()
argument_list|,
name|dependency
operator|.
name|getArtifactId
argument_list|()
argument_list|,
name|dependency
operator|.
name|getVersion
argument_list|()
argument_list|)
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|ArchivaProjectModel
name|processAndGetModel
parameter_list|(
name|String
name|group
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|)
throws|throws
name|ConsumerException
throws|,
name|ObjectNotFoundException
throws|,
name|ArchivaDatabaseException
block|{
name|ArchivaArtifact
name|artifact
init|=
name|createArtifact
argument_list|(
name|group
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
literal|"pom"
argument_list|)
decl_stmt|;
name|consumer
operator|.
name|processArchivaArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|ArchivaProjectModel
name|model
init|=
name|modelDao
operator|.
name|getProjectModel
argument_list|(
name|group
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|group
argument_list|,
name|model
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artifactId
argument_list|,
name|model
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|version
argument_list|,
name|model
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|model
return|;
block|}
specifier|protected
name|ArchivaArtifact
name|createArtifact
parameter_list|(
name|String
name|group
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|String
name|type
parameter_list|)
block|{
name|ArchivaArtifactModel
name|model
init|=
operator|new
name|ArchivaArtifactModel
argument_list|()
decl_stmt|;
name|model
operator|.
name|setGroupId
argument_list|(
name|group
argument_list|)
expr_stmt|;
name|model
operator|.
name|setArtifactId
argument_list|(
name|artifactId
argument_list|)
expr_stmt|;
name|model
operator|.
name|setVersion
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|model
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRepositoryId
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
return|return
operator|new
name|ArchivaArtifact
argument_list|(
name|model
argument_list|)
return|;
block|}
block|}
end_class

end_unit

