begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|AuditInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|RepositoryAdminException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|RepositoryCommonValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|beans
operator|.
name|AbstractRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|AbstractRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|IndeterminateConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|facets
operator|.
name|AuditEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|components
operator|.
name|registry
operator|.
name|Registry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|users
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|audit
operator|.
name|AuditListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|features
operator|.
name|IndexCreationFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|modelmapper
operator|.
name|ModelMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|modelmapper
operator|.
name|convention
operator|.
name|MatchingStrategies
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Named
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  * @since 1.4-M1  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractRepositoryAdmin
block|{
specifier|protected
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
annotation|@
name|Inject
annotation|@
name|Autowired
argument_list|(
name|required
operator|=
literal|false
argument_list|)
specifier|private
name|List
argument_list|<
name|AuditListener
argument_list|>
name|auditListeners
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|RepositoryCommonValidator
name|repositoryCommonValidator
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|ArchivaConfiguration
name|archivaConfiguration
decl_stmt|;
annotation|@
name|Inject
annotation|@
name|Named
argument_list|(
name|value
operator|=
literal|"commons-configuration"
argument_list|)
specifier|private
name|Registry
name|registry
decl_stmt|;
specifier|protected
name|void
name|triggerAuditEvent
parameter_list|(
name|String
name|repositoryId
parameter_list|,
name|String
name|resource
parameter_list|,
name|String
name|action
parameter_list|,
name|AuditInformation
name|auditInformation
parameter_list|)
block|{
name|User
name|user
init|=
name|auditInformation
operator|==
literal|null
condition|?
literal|null
else|:
name|auditInformation
operator|.
name|getUser
argument_list|()
decl_stmt|;
name|AuditEvent
name|event
init|=
operator|new
name|AuditEvent
argument_list|(
name|repositoryId
argument_list|,
name|user
operator|==
literal|null
condition|?
literal|"null"
else|:
name|user
operator|.
name|getUsername
argument_list|()
argument_list|,
name|resource
argument_list|,
name|action
argument_list|)
decl_stmt|;
name|event
operator|.
name|setRemoteIP
argument_list|(
name|auditInformation
operator|==
literal|null
condition|?
literal|"null"
else|:
name|auditInformation
operator|.
name|getRemoteAddr
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|AuditListener
name|listener
range|:
name|getAuditListeners
argument_list|()
control|)
block|{
name|listener
operator|.
name|auditEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|saveConfiguration
parameter_list|(
name|Configuration
name|config
parameter_list|)
throws|throws
name|RepositoryAdminException
block|{
try|try
block|{
name|getArchivaConfiguration
argument_list|()
operator|.
name|save
argument_list|(
name|config
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|components
operator|.
name|registry
operator|.
name|RegistryException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryAdminException
argument_list|(
literal|"Error occurred in the registry: "
operator|+
name|e
operator|.
name|getLocalizedMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IndeterminateConfigurationException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryAdminException
argument_list|(
literal|"Error occurred while saving the configuration: "
operator|+
name|e
operator|.
name|getLocalizedMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|protected
name|String
name|convertUriToString
parameter_list|(
name|URI
name|uri
parameter_list|)
block|{
if|if
condition|(
name|uri
operator|==
literal|null
condition|)
block|{
return|return
literal|""
return|;
block|}
name|String
name|result
decl_stmt|;
if|if
condition|(
name|uri
operator|.
name|getScheme
argument_list|()
operator|==
literal|null
condition|)
block|{
name|result
operator|=
name|uri
operator|.
name|getPath
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
literal|"file"
operator|.
name|equals
argument_list|(
name|uri
operator|.
name|getScheme
argument_list|()
argument_list|)
condition|)
block|{
name|result
operator|=
name|Paths
operator|.
name|get
argument_list|(
name|uri
argument_list|)
operator|.
name|normalize
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|result
operator|=
name|uri
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|log
operator|.
name|debug
argument_list|(
literal|"Converted uri {} -> {}"
argument_list|,
name|uri
argument_list|,
name|result
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|protected
name|void
name|setBaseRepoAttributes
parameter_list|(
name|AbstractRepository
name|adminRepo
parameter_list|,
name|Repository
name|repo
parameter_list|)
block|{
name|adminRepo
operator|.
name|setId
argument_list|(
name|repo
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|adminRepo
operator|.
name|setName
argument_list|(
name|repo
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|adminRepo
operator|.
name|setLayout
argument_list|(
name|repo
operator|.
name|getLayout
argument_list|( )
argument_list|)
expr_stmt|;
name|adminRepo
operator|.
name|setDescription
argument_list|(
name|repo
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
name|adminRepo
operator|.
name|setType
argument_list|(
name|repo
operator|.
name|getType
argument_list|()
operator|==
literal|null
condition|?
literal|"MAVEN"
else|:
name|repo
operator|.
name|getType
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|repo
operator|.
name|supportsFeature
argument_list|(
name|IndexCreationFeature
operator|.
name|class
argument_list|)
condition|)
block|{
name|IndexCreationFeature
name|icf
init|=
name|repo
operator|.
name|getFeature
argument_list|(
name|IndexCreationFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|adminRepo
operator|.
name|setIndexDirectory
argument_list|(
name|convertUriToString
argument_list|(
name|icf
operator|.
name|getIndexPath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|adminRepo
operator|.
name|setPackedIndexDirectory
argument_list|(
name|convertUriToString
argument_list|(
name|icf
operator|.
name|getPackedIndexPath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|setBaseRepoAttributes
parameter_list|(
name|AbstractRepositoryConfiguration
name|repoConfig
parameter_list|,
name|AbstractRepository
name|repo
parameter_list|)
block|{
name|repoConfig
operator|.
name|setId
argument_list|(
name|repo
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setName
argument_list|(
name|repo
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setLayout
argument_list|(
name|repo
operator|.
name|getLayout
argument_list|()
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setDescription
argument_list|(
name|repo
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setIndexDir
argument_list|(
name|repo
operator|.
name|getIndexDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setPackedIndexDir
argument_list|(
name|repo
operator|.
name|getPackedIndexDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setType
argument_list|(
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|repo
operator|.
name|getType
argument_list|()
argument_list|)
condition|?
literal|"MAVEN"
else|:
name|repo
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
class|class
name|ModelMapperHolder
block|{
specifier|private
specifier|static
name|ModelMapper
name|MODEL_MAPPER
init|=
operator|new
name|ModelMapper
argument_list|()
decl_stmt|;
static|static
block|{
name|MODEL_MAPPER
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setMatchingStrategy
argument_list|(
name|MatchingStrategies
operator|.
name|STRICT
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|ModelMapper
name|getModelMapper
parameter_list|()
block|{
return|return
name|ModelMapperHolder
operator|.
name|MODEL_MAPPER
return|;
block|}
specifier|public
name|List
argument_list|<
name|AuditListener
argument_list|>
name|getAuditListeners
parameter_list|()
block|{
return|return
name|auditListeners
return|;
block|}
specifier|public
name|void
name|setAuditListeners
parameter_list|(
name|List
argument_list|<
name|AuditListener
argument_list|>
name|auditListeners
parameter_list|)
block|{
name|this
operator|.
name|auditListeners
operator|=
name|auditListeners
expr_stmt|;
block|}
specifier|public
name|void
name|setArchivaConfiguration
parameter_list|(
name|ArchivaConfiguration
name|archivaConfiguration
parameter_list|)
block|{
name|this
operator|.
name|archivaConfiguration
operator|=
name|archivaConfiguration
expr_stmt|;
block|}
specifier|public
name|ArchivaConfiguration
name|getArchivaConfiguration
parameter_list|()
block|{
return|return
name|archivaConfiguration
return|;
block|}
specifier|public
name|RepositoryCommonValidator
name|getRepositoryCommonValidator
parameter_list|()
block|{
return|return
name|repositoryCommonValidator
return|;
block|}
specifier|public
name|void
name|setRepositoryCommonValidator
parameter_list|(
name|RepositoryCommonValidator
name|repositoryCommonValidator
parameter_list|)
block|{
name|this
operator|.
name|repositoryCommonValidator
operator|=
name|repositoryCommonValidator
expr_stmt|;
block|}
specifier|public
name|Registry
name|getRegistry
parameter_list|()
block|{
return|return
name|registry
return|;
block|}
specifier|public
name|void
name|setRegistry
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|components
operator|.
name|registry
operator|.
name|Registry
name|registry
parameter_list|)
block|{
name|this
operator|.
name|registry
operator|=
name|registry
expr_stmt|;
block|}
block|}
end_class

end_unit

