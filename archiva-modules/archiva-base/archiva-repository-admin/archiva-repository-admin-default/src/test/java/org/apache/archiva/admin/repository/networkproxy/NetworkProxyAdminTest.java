begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
operator|.
name|networkproxy
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|beans
operator|.
name|NetworkProxy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|beans
operator|.
name|RemoteRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|networkproxy
operator|.
name|NetworkProxyAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
operator|.
name|AbstractRepositoryAdminTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|facets
operator|.
name|AuditEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  */
end_comment

begin_class
specifier|public
class|class
name|NetworkProxyAdminTest
extends|extends
name|AbstractRepositoryAdminTest
block|{
annotation|@
name|Inject
specifier|private
name|NetworkProxyAdmin
name|networkProxyAdmin
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|getAllEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|assertNotNull
argument_list|(
name|networkProxyAdmin
operator|.
name|getNetworkProxies
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|addAndDelete
parameter_list|()
throws|throws
name|Exception
block|{
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
name|int
name|initialSize
init|=
name|networkProxyAdmin
operator|.
name|getNetworkProxies
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|NetworkProxy
name|networkProxy
init|=
name|getNetworkProxyTest
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|networkProxyAdmin
operator|.
name|addNetworkProxy
argument_list|(
name|networkProxy
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|initialSize
operator|+
literal|1
argument_list|,
name|networkProxyAdmin
operator|.
name|getNetworkProxies
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|networkProxy
operator|=
name|networkProxyAdmin
operator|.
name|getNetworkProxy
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|networkProxy
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getNetworkProxyTest
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|,
name|networkProxy
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getNetworkProxyTest
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|getHost
argument_list|()
argument_list|,
name|networkProxy
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getNetworkProxyTest
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|getPassword
argument_list|()
argument_list|,
name|networkProxy
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getNetworkProxyTest
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|getPort
argument_list|()
argument_list|,
name|networkProxy
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getNetworkProxyTest
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|getUsername
argument_list|()
argument_list|,
name|networkProxy
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getNetworkProxyTest
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|getProtocol
argument_list|()
argument_list|,
name|networkProxy
operator|.
name|getProtocol
argument_list|()
argument_list|)
expr_stmt|;
name|networkProxyAdmin
operator|.
name|deleteNetworkProxy
argument_list|(
literal|"foo"
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|networkProxyAdmin
operator|.
name|getNetworkProxy
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|ADD_NETWORK_PROXY
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|DELETE_NETWORK_PROXY
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|addAndUpdateAndDelete
parameter_list|()
throws|throws
name|Exception
block|{
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
name|int
name|initialSize
init|=
name|networkProxyAdmin
operator|.
name|getNetworkProxies
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|NetworkProxy
name|networkProxy
init|=
name|getNetworkProxyTest
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|networkProxyAdmin
operator|.
name|addNetworkProxy
argument_list|(
name|networkProxy
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|initialSize
operator|+
literal|1
argument_list|,
name|networkProxyAdmin
operator|.
name|getNetworkProxies
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|networkProxy
operator|=
name|networkProxyAdmin
operator|.
name|getNetworkProxy
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|networkProxy
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getNetworkProxyTest
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|,
name|networkProxy
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getNetworkProxyTest
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|getHost
argument_list|()
argument_list|,
name|networkProxy
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getNetworkProxyTest
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|getPassword
argument_list|()
argument_list|,
name|networkProxy
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getNetworkProxyTest
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|getPort
argument_list|()
argument_list|,
name|networkProxy
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getNetworkProxyTest
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|getUsername
argument_list|()
argument_list|,
name|networkProxy
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getNetworkProxyTest
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|getProtocol
argument_list|()
argument_list|,
name|networkProxy
operator|.
name|getProtocol
argument_list|()
argument_list|)
expr_stmt|;
name|networkProxy
operator|.
name|setHost
argument_list|(
literal|"https://toto.com"
argument_list|)
expr_stmt|;
name|networkProxy
operator|.
name|setPassword
argument_list|(
literal|"newpasswd"
argument_list|)
expr_stmt|;
name|networkProxy
operator|.
name|setPort
argument_list|(
literal|9191
argument_list|)
expr_stmt|;
name|networkProxy
operator|.
name|setProtocol
argument_list|(
literal|"http"
argument_list|)
expr_stmt|;
name|networkProxy
operator|.
name|setUsername
argument_list|(
literal|"newusername"
argument_list|)
expr_stmt|;
name|networkProxyAdmin
operator|.
name|updateNetworkProxy
argument_list|(
name|networkProxy
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|NetworkProxy
name|updatedNetworkProxy
init|=
name|networkProxyAdmin
operator|.
name|getNetworkProxy
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|updatedNetworkProxy
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|networkProxy
operator|.
name|getId
argument_list|()
argument_list|,
name|updatedNetworkProxy
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|networkProxy
operator|.
name|getHost
argument_list|()
argument_list|,
name|updatedNetworkProxy
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|networkProxy
operator|.
name|getPassword
argument_list|()
argument_list|,
name|updatedNetworkProxy
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|networkProxy
operator|.
name|getPort
argument_list|()
argument_list|,
name|updatedNetworkProxy
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|networkProxy
operator|.
name|getUsername
argument_list|()
argument_list|,
name|updatedNetworkProxy
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|networkProxy
operator|.
name|getProtocol
argument_list|()
argument_list|,
name|updatedNetworkProxy
operator|.
name|getProtocol
argument_list|()
argument_list|)
expr_stmt|;
name|networkProxyAdmin
operator|.
name|deleteNetworkProxy
argument_list|(
literal|"foo"
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|ADD_NETWORK_PROXY
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|MODIFY_NETWORK_PROXY
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|DELETE_NETWORK_PROXY
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
block|}
comment|/**      * ensure we cleanup remote repos linked to a network proxy      */
annotation|@
name|Test
specifier|public
name|void
name|addAndDeleteWithRemoteRepoLinked
parameter_list|()
throws|throws
name|Exception
block|{
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
name|int
name|initialSize
init|=
name|networkProxyAdmin
operator|.
name|getNetworkProxies
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|NetworkProxy
name|networkProxy
init|=
name|getNetworkProxyTest
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|networkProxyAdmin
operator|.
name|addNetworkProxy
argument_list|(
name|networkProxy
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|initialSize
operator|+
literal|1
argument_list|,
name|networkProxyAdmin
operator|.
name|getNetworkProxies
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|networkProxy
operator|=
name|networkProxyAdmin
operator|.
name|getNetworkProxy
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|networkProxy
argument_list|)
expr_stmt|;
name|RemoteRepository
name|remoteRepository
init|=
name|getRemoteRepository
argument_list|()
decl_stmt|;
name|remoteRepository
operator|.
name|setRemoteDownloadNetworkProxyId
argument_list|(
name|networkProxy
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|remoteRepositoryAdmin
operator|.
name|addRemoteRepository
argument_list|(
name|remoteRepository
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|networkProxyAdmin
operator|.
name|deleteNetworkProxy
argument_list|(
literal|"foo"
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|remoteRepository
operator|=
name|remoteRepositoryAdmin
operator|.
name|getRemoteRepository
argument_list|(
name|getRemoteRepository
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|remoteRepository
operator|.
name|getRemoteDownloadNetworkProxyId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|remoteRepositoryAdmin
operator|.
name|deleteRemoteRepository
argument_list|(
name|getRemoteRepository
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|NetworkProxy
name|getNetworkProxyTest
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|NetworkProxy
name|networkProxy
init|=
operator|new
name|NetworkProxy
argument_list|()
decl_stmt|;
name|networkProxy
operator|.
name|setId
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|networkProxy
operator|.
name|setHost
argument_list|(
literal|"http://foo.com"
argument_list|)
expr_stmt|;
name|networkProxy
operator|.
name|setPassword
argument_list|(
literal|"passwd"
argument_list|)
expr_stmt|;
name|networkProxy
operator|.
name|setPort
argument_list|(
literal|9090
argument_list|)
expr_stmt|;
name|networkProxy
operator|.
name|setUsername
argument_list|(
literal|"root"
argument_list|)
expr_stmt|;
name|networkProxy
operator|.
name|setProtocol
argument_list|(
literal|"https"
argument_list|)
expr_stmt|;
return|return
name|networkProxy
return|;
block|}
block|}
end_class

end_unit

