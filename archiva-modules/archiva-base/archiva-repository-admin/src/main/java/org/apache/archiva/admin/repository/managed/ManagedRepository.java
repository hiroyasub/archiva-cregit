begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
operator|.
name|managed
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_comment
comment|/**  * @since 1.4  */
end_comment

begin_class
specifier|public
class|class
name|ManagedRepository
implements|implements
name|Serializable
block|{
specifier|private
name|String
name|id
decl_stmt|;
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|String
name|location
decl_stmt|;
specifier|private
name|String
name|layout
decl_stmt|;
specifier|private
name|boolean
name|snapshots
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|releases
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|blockRedeployments
decl_stmt|;
specifier|private
name|String
name|cronExpression
decl_stmt|;
specifier|private
name|boolean
name|stageRepoNeeded
decl_stmt|;
comment|/**      * not need when creating the repo : only available when reading      */
specifier|private
name|ManagedRepository
name|stagingRepository
decl_stmt|;
specifier|public
name|ManagedRepository
parameter_list|()
block|{
comment|// no op
block|}
specifier|public
name|ManagedRepository
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|location
parameter_list|,
name|String
name|layout
parameter_list|,
name|boolean
name|snapshots
parameter_list|,
name|boolean
name|releases
parameter_list|,
name|boolean
name|blockRedeployments
parameter_list|,
name|String
name|cronExpression
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|location
operator|=
name|location
expr_stmt|;
name|this
operator|.
name|layout
operator|=
name|layout
expr_stmt|;
name|this
operator|.
name|snapshots
operator|=
name|snapshots
expr_stmt|;
name|this
operator|.
name|releases
operator|=
name|releases
expr_stmt|;
name|this
operator|.
name|blockRedeployments
operator|=
name|blockRedeployments
expr_stmt|;
block|}
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|this
operator|.
name|id
return|;
block|}
specifier|public
name|String
name|getLayout
parameter_list|()
block|{
return|return
name|this
operator|.
name|layout
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|this
operator|.
name|name
return|;
block|}
specifier|public
name|String
name|getLocation
parameter_list|()
block|{
return|return
name|this
operator|.
name|location
return|;
block|}
specifier|public
name|boolean
name|isReleases
parameter_list|()
block|{
return|return
name|this
operator|.
name|releases
return|;
block|}
comment|/**      * Get null      */
specifier|public
name|boolean
name|isSnapshots
parameter_list|()
block|{
return|return
name|this
operator|.
name|snapshots
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|void
name|setLayout
parameter_list|(
name|String
name|layout
parameter_list|)
block|{
name|this
operator|.
name|layout
operator|=
name|layout
expr_stmt|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|void
name|setReleases
parameter_list|(
name|boolean
name|releases
parameter_list|)
block|{
name|this
operator|.
name|releases
operator|=
name|releases
expr_stmt|;
block|}
specifier|public
name|void
name|setSnapshots
parameter_list|(
name|boolean
name|snapshots
parameter_list|)
block|{
name|this
operator|.
name|snapshots
operator|=
name|snapshots
expr_stmt|;
block|}
specifier|public
name|void
name|setLocation
parameter_list|(
name|String
name|location
parameter_list|)
block|{
name|this
operator|.
name|location
operator|=
name|location
expr_stmt|;
block|}
specifier|public
name|boolean
name|isBlockRedeployments
parameter_list|()
block|{
return|return
name|blockRedeployments
return|;
block|}
specifier|public
name|void
name|setBlockRedeployments
parameter_list|(
name|boolean
name|blockRedeployments
parameter_list|)
block|{
name|this
operator|.
name|blockRedeployments
operator|=
name|blockRedeployments
expr_stmt|;
block|}
specifier|public
name|String
name|getCronExpression
parameter_list|()
block|{
return|return
name|cronExpression
return|;
block|}
specifier|public
name|void
name|setCronExpression
parameter_list|(
name|String
name|cronExpression
parameter_list|)
block|{
name|this
operator|.
name|cronExpression
operator|=
name|cronExpression
expr_stmt|;
block|}
specifier|public
name|ManagedRepository
name|getStagingRepository
parameter_list|()
block|{
return|return
name|stagingRepository
return|;
block|}
specifier|public
name|void
name|setStagingRepository
parameter_list|(
name|ManagedRepository
name|stagingRepository
parameter_list|)
block|{
name|this
operator|.
name|stagingRepository
operator|=
name|stagingRepository
expr_stmt|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
name|int
name|result
init|=
literal|17
decl_stmt|;
name|result
operator|=
literal|37
operator|*
name|result
operator|+
operator|(
name|id
operator|!=
literal|null
condition|?
name|id
operator|.
name|hashCode
argument_list|()
else|:
literal|0
operator|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|other
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|other
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|other
operator|instanceof
name|ManagedRepository
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|ManagedRepository
name|that
init|=
operator|(
name|ManagedRepository
operator|)
name|other
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|getId
argument_list|()
operator|==
literal|null
condition|?
name|that
operator|.
name|getId
argument_list|()
operator|==
literal|null
else|:
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|that
operator|.
name|getId
argument_list|()
argument_list|)
operator|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
specifier|final
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"ManagedRepository"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"{id='"
argument_list|)
operator|.
name|append
argument_list|(
name|id
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", name='"
argument_list|)
operator|.
name|append
argument_list|(
name|name
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", location='"
argument_list|)
operator|.
name|append
argument_list|(
name|location
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", layout='"
argument_list|)
operator|.
name|append
argument_list|(
name|layout
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", snapshots="
argument_list|)
operator|.
name|append
argument_list|(
name|snapshots
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", releases="
argument_list|)
operator|.
name|append
argument_list|(
name|releases
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", blockRedeployments="
argument_list|)
operator|.
name|append
argument_list|(
name|blockRedeployments
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", cronExpression='"
argument_list|)
operator|.
name|append
argument_list|(
name|cronExpression
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", stageRepoNeeded="
argument_list|)
operator|.
name|append
argument_list|(
name|stageRepoNeeded
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", stagingRepository="
argument_list|)
operator|.
name|append
argument_list|(
name|stagingRepository
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'}'
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

