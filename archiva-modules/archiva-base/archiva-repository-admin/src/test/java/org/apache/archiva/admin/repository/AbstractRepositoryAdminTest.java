begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|AuditInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|mock
operator|.
name|MockAuditListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|users
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|users
operator|.
name|memory
operator|.
name|SimpleUser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|junit4
operator|.
name|SpringJUnit4ClassRunner
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|SpringJUnit4ClassRunner
operator|.
name|class
argument_list|)
annotation|@
name|ContextConfiguration
argument_list|(
name|locations
operator|=
block|{
literal|"classpath*:/META-INF/spring-context.xml"
block|,
literal|"classpath:/spring-context.xml"
block|}
argument_list|)
specifier|public
specifier|abstract
class|class
name|AbstractRepositoryAdminTest
extends|extends
name|TestCase
block|{
specifier|protected
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|APPSERVER_BASE_PATH
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"appserver.base"
argument_list|)
decl_stmt|;
annotation|@
name|Inject
specifier|protected
name|MockAuditListener
name|mockAuditListener
decl_stmt|;
specifier|protected
name|AuditInformation
name|getFakeAuditInformation
parameter_list|()
block|{
name|AuditInformation
name|auditInformation
init|=
operator|new
name|AuditInformation
argument_list|(
name|getFakeUser
argument_list|()
argument_list|,
literal|"archiva-localhost"
argument_list|)
decl_stmt|;
return|return
name|auditInformation
return|;
block|}
specifier|protected
name|User
name|getFakeUser
parameter_list|()
block|{
name|SimpleUser
name|user
init|=
operator|new
name|SimpleUser
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|getPrincipal
parameter_list|()
block|{
return|return
literal|"root"
return|;
block|}
block|}
decl_stmt|;
name|user
operator|.
name|setUsername
argument_list|(
literal|"root"
argument_list|)
expr_stmt|;
name|user
operator|.
name|setFullName
argument_list|(
literal|"The top user"
argument_list|)
expr_stmt|;
return|return
name|user
return|;
block|}
block|}
end_class

end_unit

