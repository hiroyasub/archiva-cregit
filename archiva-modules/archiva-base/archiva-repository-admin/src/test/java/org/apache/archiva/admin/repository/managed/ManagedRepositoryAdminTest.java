begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
operator|.
name|managed
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|AuditInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|mock
operator|.
name|MockAuditListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|audit
operator|.
name|AuditEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|security
operator|.
name|ArchivaRoleConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|role
operator|.
name|RoleManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|users
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|users
operator|.
name|memory
operator|.
name|SimpleUser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  */
end_comment

begin_class
specifier|public
class|class
name|ManagedRepositoryAdminTest
extends|extends
name|AbstractRepositoryAdminTest
block|{
annotation|@
name|Inject
specifier|private
name|ManagedRepositoryAdmin
name|managedRepositoryAdmin
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|MockAuditListener
name|mockAuditListener
decl_stmt|;
annotation|@
name|Inject
specifier|protected
name|RoleManager
name|roleManager
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|getAllManagedRepos
parameter_list|()
throws|throws
name|Exception
block|{
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ManagedRepository
argument_list|>
name|repos
init|=
name|managedRepositoryAdmin
operator|.
name|getManagedRepositories
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|repos
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|repos
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"repos "
operator|+
name|repos
argument_list|)
expr_stmt|;
comment|// check default internal
name|ManagedRepository
name|internal
init|=
name|findManagedRepoById
argument_list|(
name|repos
argument_list|,
literal|"internal"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|internal
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|internal
operator|.
name|isReleases
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|internal
operator|.
name|isSnapshots
argument_list|()
argument_list|)
expr_stmt|;
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getById
parameter_list|()
throws|throws
name|Exception
block|{
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
name|ManagedRepository
name|repo
init|=
name|managedRepositoryAdmin
operator|.
name|getManagedRepository
argument_list|(
literal|"internal"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|repo
argument_list|)
expr_stmt|;
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|addDeleteManagedRepo
parameter_list|()
throws|throws
name|Exception
block|{
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ManagedRepository
argument_list|>
name|repos
init|=
name|managedRepositoryAdmin
operator|.
name|getManagedRepositories
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|repos
argument_list|)
expr_stmt|;
name|int
name|initialSize
init|=
name|repos
operator|.
name|size
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|initialSize
operator|>
literal|0
argument_list|)
expr_stmt|;
name|ManagedRepository
name|repo
init|=
operator|new
name|ManagedRepository
argument_list|()
decl_stmt|;
name|repo
operator|.
name|setId
argument_list|(
literal|"test-new-one"
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setName
argument_list|(
literal|"test repo"
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setLocation
argument_list|(
name|APPSERVER_BASE_PATH
operator|+
name|repo
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|managedRepositoryAdmin
operator|.
name|addManagedRepository
argument_list|(
name|repo
argument_list|,
literal|false
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|repos
operator|=
name|managedRepositoryAdmin
operator|.
name|getManagedRepositories
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|repos
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|initialSize
operator|+
literal|1
argument_list|,
name|repos
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|managedRepositoryAdmin
operator|.
name|getManagedRepository
argument_list|(
literal|"test-new-one"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_OBSERVER
argument_list|,
literal|"test-new-one"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_MANAGER
argument_list|,
literal|"test-new-one"
argument_list|)
argument_list|)
expr_stmt|;
name|managedRepositoryAdmin
operator|.
name|deleteManagedRepository
argument_list|(
literal|"test-new-one"
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|repos
operator|=
name|managedRepositoryAdmin
operator|.
name|getManagedRepositories
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|repos
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|initialSize
argument_list|,
name|repos
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_OBSERVER
argument_list|,
literal|"test-new-one"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_MANAGER
argument_list|,
literal|"test-new-one"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|ADD_MANAGED_REPO
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"root"
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getUserId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"archiva-localhost"
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRemoteIP
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|DELETE_MANAGED_REPO
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"root"
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getUserId
argument_list|()
argument_list|)
expr_stmt|;
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|updateDeleteManagedRepo
parameter_list|()
throws|throws
name|Exception
block|{
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ManagedRepository
argument_list|>
name|repos
init|=
name|managedRepositoryAdmin
operator|.
name|getManagedRepositories
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|repos
argument_list|)
expr_stmt|;
name|int
name|initialSize
init|=
name|repos
operator|.
name|size
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|initialSize
operator|>
literal|0
argument_list|)
expr_stmt|;
name|ManagedRepository
name|repo
init|=
operator|new
name|ManagedRepository
argument_list|()
decl_stmt|;
name|repo
operator|.
name|setId
argument_list|(
literal|"test-new-one"
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setName
argument_list|(
literal|"test repo"
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setLocation
argument_list|(
name|APPSERVER_BASE_PATH
operator|+
name|repo
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|managedRepositoryAdmin
operator|.
name|addManagedRepository
argument_list|(
name|repo
argument_list|,
literal|false
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_OBSERVER
argument_list|,
literal|"test-new-one"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_MANAGER
argument_list|,
literal|"test-new-one"
argument_list|)
argument_list|)
expr_stmt|;
name|repos
operator|=
name|managedRepositoryAdmin
operator|.
name|getManagedRepositories
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|repos
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|initialSize
operator|+
literal|1
argument_list|,
name|repos
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|newName
init|=
literal|"test repo update"
decl_stmt|;
name|repo
operator|.
name|setName
argument_list|(
name|newName
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setLocation
argument_list|(
name|APPSERVER_BASE_PATH
operator|+
literal|"new-path"
argument_list|)
expr_stmt|;
name|managedRepositoryAdmin
operator|.
name|updateManagedRepository
argument_list|(
name|repo
argument_list|,
literal|false
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|repo
operator|=
name|managedRepositoryAdmin
operator|.
name|getManagedRepository
argument_list|(
literal|"test-new-one"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|repo
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|newName
argument_list|,
name|repo
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|APPSERVER_BASE_PATH
operator|+
literal|"new-path"
argument_list|,
name|repo
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|APPSERVER_BASE_PATH
operator|+
literal|"new-path"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_OBSERVER
argument_list|,
literal|"test-new-one"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_MANAGER
argument_list|,
literal|"test-new-one"
argument_list|)
argument_list|)
expr_stmt|;
name|managedRepositoryAdmin
operator|.
name|deleteManagedRepository
argument_list|(
name|repo
operator|.
name|getId
argument_list|()
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_OBSERVER
argument_list|,
literal|"test-new-one"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_MANAGER
argument_list|,
literal|"test-new-one"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"not 3 audit events "
operator|+
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
argument_list|,
literal|3
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|ADD_MANAGED_REPO
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"root"
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getUserId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"archiva-localhost"
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRemoteIP
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|MODIFY_MANAGED_REPO
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|DELETE_MANAGED_REPO
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
block|}
specifier|private
name|ManagedRepository
name|findManagedRepoById
parameter_list|(
name|List
argument_list|<
name|ManagedRepository
argument_list|>
name|repos
parameter_list|,
name|String
name|id
parameter_list|)
block|{
for|for
control|(
name|ManagedRepository
name|repo
range|:
name|repos
control|)
block|{
if|if
condition|(
name|StringUtils
operator|.
name|equals
argument_list|(
name|id
argument_list|,
name|repo
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|repo
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
name|AuditInformation
name|getFakeAuditInformation
parameter_list|()
block|{
name|AuditInformation
name|auditInformation
init|=
operator|new
name|AuditInformation
argument_list|(
name|getFakeUser
argument_list|()
argument_list|,
literal|"archiva-localhost"
argument_list|)
decl_stmt|;
return|return
name|auditInformation
return|;
block|}
name|User
name|getFakeUser
parameter_list|()
block|{
name|SimpleUser
name|user
init|=
operator|new
name|SimpleUser
argument_list|()
decl_stmt|;
name|user
operator|.
name|setUsername
argument_list|(
literal|"root"
argument_list|)
expr_stmt|;
name|user
operator|.
name|setFullName
argument_list|(
literal|"The top user"
argument_list|)
expr_stmt|;
return|return
name|user
return|;
block|}
block|}
end_class

end_unit

