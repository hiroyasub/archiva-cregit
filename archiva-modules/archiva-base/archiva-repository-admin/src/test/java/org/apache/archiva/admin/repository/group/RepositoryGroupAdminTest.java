begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
operator|.
name|group
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
operator|.
name|AbstractRepositoryAdminTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
operator|.
name|managed
operator|.
name|ManagedRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|audit
operator|.
name|AuditEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  */
end_comment

begin_class
specifier|public
class|class
name|RepositoryGroupAdminTest
extends|extends
name|AbstractRepositoryAdminTest
block|{
annotation|@
name|Inject
name|RepositoryGroupAdmin
name|repositoryGroupAdmin
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|addAndDeleteGroup
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|ManagedRepository
name|managedRepositoryOne
init|=
name|getTestManagedRepository
argument_list|(
literal|"test-new-one"
argument_list|,
name|APPSERVER_BASE_PATH
operator|+
name|File
operator|.
name|separator
operator|+
literal|"test-new-one"
argument_list|)
decl_stmt|;
name|ManagedRepository
name|managedRepositoryTwo
init|=
name|getTestManagedRepository
argument_list|(
literal|"test-new-two"
argument_list|,
name|APPSERVER_BASE_PATH
operator|+
name|File
operator|.
name|separator
operator|+
literal|"test-new-two"
argument_list|)
decl_stmt|;
name|managedRepositoryAdmin
operator|.
name|addManagedRepository
argument_list|(
name|managedRepositoryOne
argument_list|,
literal|false
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|managedRepositoryAdmin
operator|.
name|addManagedRepository
argument_list|(
name|managedRepositoryTwo
argument_list|,
literal|false
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|RepositoryGroup
name|repositoryGroup
init|=
operator|new
name|RepositoryGroup
argument_list|(
literal|"repo-group-one"
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"test-new-one"
argument_list|,
literal|"test-new-two"
argument_list|)
argument_list|)
decl_stmt|;
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
name|repositoryGroupAdmin
operator|.
name|addRepositoryGroup
argument_list|(
name|repositoryGroup
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"repo-group-one"
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"test-new-one"
argument_list|,
literal|"test-new-two"
argument_list|)
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRepositories
argument_list|()
argument_list|)
expr_stmt|;
name|repositoryGroupAdmin
operator|.
name|deleteRepositoryGroup
argument_list|(
literal|"repo-group-one"
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|ADD_REPO_GROUP
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|DELETE_REPO_GROUP
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
name|managedRepositoryAdmin
operator|.
name|deleteManagedRepository
argument_list|(
literal|"test-new-one"
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|managedRepositoryAdmin
operator|.
name|deleteManagedRepository
argument_list|(
literal|"test-new-two"
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|addAndUpdateAndDeleteGroup
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|ManagedRepository
name|managedRepositoryOne
init|=
name|getTestManagedRepository
argument_list|(
literal|"test-new-one"
argument_list|,
name|APPSERVER_BASE_PATH
operator|+
name|File
operator|.
name|separator
operator|+
literal|"test-new-one"
argument_list|)
decl_stmt|;
name|ManagedRepository
name|managedRepositoryTwo
init|=
name|getTestManagedRepository
argument_list|(
literal|"test-new-two"
argument_list|,
name|APPSERVER_BASE_PATH
operator|+
name|File
operator|.
name|separator
operator|+
literal|"test-new-two"
argument_list|)
decl_stmt|;
name|managedRepositoryAdmin
operator|.
name|addManagedRepository
argument_list|(
name|managedRepositoryOne
argument_list|,
literal|false
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|managedRepositoryAdmin
operator|.
name|addManagedRepository
argument_list|(
name|managedRepositoryTwo
argument_list|,
literal|false
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|RepositoryGroup
name|repositoryGroup
init|=
operator|new
name|RepositoryGroup
argument_list|(
literal|"repo-group-one"
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"test-new-one"
argument_list|)
argument_list|)
decl_stmt|;
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
name|repositoryGroupAdmin
operator|.
name|addRepositoryGroup
argument_list|(
name|repositoryGroup
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"repo-group-one"
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"test-new-one"
argument_list|)
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRepositories
argument_list|()
argument_list|)
expr_stmt|;
name|repositoryGroup
operator|=
name|repositoryGroupAdmin
operator|.
name|getRepositoryGroup
argument_list|(
literal|"repo-group-one"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|repositoryGroup
argument_list|)
expr_stmt|;
name|repositoryGroup
operator|.
name|addRepository
argument_list|(
name|managedRepositoryTwo
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|repositoryGroupAdmin
operator|.
name|updateRepositoryGroup
argument_list|(
name|repositoryGroup
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"repo-group-one"
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"test-new-one"
argument_list|,
literal|"test-new-two"
argument_list|)
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRepositories
argument_list|()
argument_list|)
expr_stmt|;
name|repositoryGroupAdmin
operator|.
name|deleteRepositoryGroup
argument_list|(
literal|"repo-group-one"
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|ADD_REPO_GROUP
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|MODIFY_REPO_GROUP
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|DELETE_REPO_GROUP
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
name|managedRepositoryAdmin
operator|.
name|deleteManagedRepository
argument_list|(
literal|"test-new-one"
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|managedRepositoryAdmin
operator|.
name|deleteManagedRepository
argument_list|(
literal|"test-new-two"
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|addAndDeleteGroupWithRemowingManagedRepo
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|ManagedRepository
name|managedRepositoryOne
init|=
name|getTestManagedRepository
argument_list|(
literal|"test-new-one"
argument_list|,
name|APPSERVER_BASE_PATH
operator|+
name|File
operator|.
name|separator
operator|+
literal|"test-new-one"
argument_list|)
decl_stmt|;
name|ManagedRepository
name|managedRepositoryTwo
init|=
name|getTestManagedRepository
argument_list|(
literal|"test-new-two"
argument_list|,
name|APPSERVER_BASE_PATH
operator|+
name|File
operator|.
name|separator
operator|+
literal|"test-new-two"
argument_list|)
decl_stmt|;
name|managedRepositoryAdmin
operator|.
name|addManagedRepository
argument_list|(
name|managedRepositoryOne
argument_list|,
literal|false
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|managedRepositoryAdmin
operator|.
name|addManagedRepository
argument_list|(
name|managedRepositoryTwo
argument_list|,
literal|false
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|RepositoryGroup
name|repositoryGroup
init|=
operator|new
name|RepositoryGroup
argument_list|(
literal|"repo-group-one"
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"test-new-one"
argument_list|,
literal|"test-new-two"
argument_list|)
argument_list|)
decl_stmt|;
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
name|repositoryGroupAdmin
operator|.
name|addRepositoryGroup
argument_list|(
name|repositoryGroup
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"repo-group-one"
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"test-new-one"
argument_list|,
literal|"test-new-two"
argument_list|)
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRepositories
argument_list|()
argument_list|)
expr_stmt|;
comment|// deleting a managed repo to validate repogroup correctly updated !
name|managedRepositoryAdmin
operator|.
name|deleteManagedRepository
argument_list|(
literal|"test-new-one"
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"repo-group-one"
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"test-new-two"
argument_list|)
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRepositories
argument_list|()
argument_list|)
expr_stmt|;
name|repositoryGroupAdmin
operator|.
name|deleteRepositoryGroup
argument_list|(
literal|"repo-group-one"
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|repositoryGroupAdmin
operator|.
name|getRepositoriesGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|ADD_REPO_GROUP
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|DELETE_MANAGED_REPO
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuditEvent
operator|.
name|DELETE_REPO_GROUP
argument_list|,
name|mockAuditListener
operator|.
name|getAuditEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|mockAuditListener
operator|.
name|clearEvents
argument_list|()
expr_stmt|;
name|managedRepositoryAdmin
operator|.
name|deleteManagedRepository
argument_list|(
literal|"test-new-two"
argument_list|,
name|getFakeAuditInformation
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

