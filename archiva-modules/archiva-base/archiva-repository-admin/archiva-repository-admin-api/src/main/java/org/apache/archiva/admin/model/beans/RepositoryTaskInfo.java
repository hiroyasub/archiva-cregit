begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|beans
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|OffsetDateTime
import|;
end_import

begin_comment
comment|/**  * @author Martin Stockhammer<martin_s@apache.org>  */
end_comment

begin_class
specifier|public
class|class
name|RepositoryTaskInfo
block|{
comment|/**      * The repository identifier      */
specifier|protected
name|String
name|repositoryId
init|=
literal|""
decl_stmt|;
comment|/**      *<code>true</code>, if all files are scanned.<code>false</code>, if only updated files are scanned      */
specifier|protected
name|boolean
name|fullScan
decl_stmt|;
comment|/**      * The scanned resource, if this is not a full repository scan      */
specifier|protected
name|String
name|resource
init|=
literal|""
decl_stmt|;
comment|/**      * Running status of the task.      */
specifier|protected
name|boolean
name|running
init|=
literal|false
decl_stmt|;
comment|/**      * The maximum execution time set for this task.      */
specifier|protected
name|long
name|maxExecutionTimeMs
init|=
literal|0
decl_stmt|;
comment|/**      * The time when the status check was built      */
name|OffsetDateTime
name|checkTime
decl_stmt|;
specifier|public
name|RepositoryTaskInfo
parameter_list|( )
block|{
name|this
operator|.
name|checkTime
operator|=
name|OffsetDateTime
operator|.
name|now
argument_list|( )
expr_stmt|;
block|}
specifier|public
name|RepositoryTaskInfo
parameter_list|(
name|OffsetDateTime
name|checkTime
parameter_list|)
block|{
name|this
operator|.
name|checkTime
operator|=
name|checkTime
expr_stmt|;
block|}
specifier|public
name|String
name|getRepositoryId
parameter_list|( )
block|{
return|return
name|repositoryId
return|;
block|}
specifier|public
name|void
name|setRepositoryId
parameter_list|(
name|String
name|repositoryId
parameter_list|)
block|{
name|this
operator|.
name|repositoryId
operator|=
name|repositoryId
operator|==
literal|null
condition|?
literal|""
else|:
name|repositoryId
expr_stmt|;
block|}
specifier|public
name|boolean
name|isFullScan
parameter_list|( )
block|{
return|return
name|fullScan
return|;
block|}
specifier|public
name|void
name|setFullScan
parameter_list|(
name|boolean
name|fullScan
parameter_list|)
block|{
name|this
operator|.
name|fullScan
operator|=
name|fullScan
expr_stmt|;
block|}
specifier|public
name|String
name|getResource
parameter_list|( )
block|{
return|return
name|resource
return|;
block|}
specifier|public
name|void
name|setResource
parameter_list|(
name|String
name|resource
parameter_list|)
block|{
name|this
operator|.
name|resource
operator|=
name|resource
operator|==
literal|null
condition|?
literal|""
else|:
name|resource
expr_stmt|;
block|}
specifier|public
name|boolean
name|isRunning
parameter_list|( )
block|{
return|return
name|running
return|;
block|}
specifier|public
name|void
name|setRunning
parameter_list|(
name|boolean
name|running
parameter_list|)
block|{
name|this
operator|.
name|running
operator|=
name|running
expr_stmt|;
block|}
specifier|public
name|long
name|getMaxExecutionTimeMs
parameter_list|( )
block|{
return|return
name|maxExecutionTimeMs
return|;
block|}
specifier|public
name|void
name|setMaxExecutionTimeMs
parameter_list|(
name|long
name|maxExecutionTimeMs
parameter_list|)
block|{
name|this
operator|.
name|maxExecutionTimeMs
operator|=
name|maxExecutionTimeMs
expr_stmt|;
block|}
specifier|public
name|OffsetDateTime
name|getCheckTime
parameter_list|( )
block|{
return|return
name|checkTime
return|;
block|}
specifier|public
name|void
name|setCheckTime
parameter_list|(
name|OffsetDateTime
name|checkTime
parameter_list|)
block|{
name|this
operator|.
name|checkTime
operator|=
name|checkTime
expr_stmt|;
block|}
block|}
end_class

end_unit

