begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_comment
comment|/**  * BaseFile - convenient File object that tracks the Base Directory and can provide relative path values  * for the file object based on that Base Directory value.  *  *  */
end_comment

begin_class
specifier|public
class|class
name|BaseFile
extends|extends
name|File
block|{
specifier|private
name|File
name|baseDir
decl_stmt|;
specifier|public
name|BaseFile
parameter_list|(
name|File
name|pathFile
parameter_list|)
block|{
name|this
argument_list|(
name|pathFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|BaseFile
parameter_list|(
name|File
name|repoDir
parameter_list|,
name|File
name|pathFile
parameter_list|)
block|{
name|this
argument_list|(
name|repoDir
argument_list|,
name|PathUtil
operator|.
name|getRelative
argument_list|(
name|repoDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|pathFile
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|BaseFile
parameter_list|(
name|File
name|parent
parameter_list|,
name|String
name|child
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|this
operator|.
name|baseDir
operator|=
name|parent
expr_stmt|;
block|}
specifier|public
name|BaseFile
parameter_list|(
name|String
name|pathname
parameter_list|)
block|{
name|super
argument_list|(
name|pathname
argument_list|)
expr_stmt|;
comment|// Calculate the top level directory.
name|File
name|parent
init|=
name|this
decl_stmt|;
while|while
condition|(
name|parent
operator|.
name|getParentFile
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|parent
operator|=
name|parent
operator|.
name|getParentFile
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|baseDir
operator|=
name|parent
expr_stmt|;
block|}
specifier|public
name|BaseFile
parameter_list|(
name|String
name|repoDir
parameter_list|,
name|File
name|pathFile
parameter_list|)
block|{
name|this
argument_list|(
operator|new
name|File
argument_list|(
name|repoDir
argument_list|)
argument_list|,
name|pathFile
argument_list|)
expr_stmt|;
block|}
specifier|public
name|BaseFile
parameter_list|(
name|String
name|parent
parameter_list|,
name|String
name|child
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|this
operator|.
name|baseDir
operator|=
operator|new
name|File
argument_list|(
name|parent
argument_list|)
expr_stmt|;
block|}
specifier|public
name|BaseFile
parameter_list|(
name|URI
name|uri
parameter_list|)
block|{
name|super
argument_list|(
name|uri
argument_list|)
expr_stmt|;
comment|// only to satisfy java compiler.
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"The "
operator|+
name|BaseFile
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|" object does not support URI construction."
argument_list|)
throw|;
block|}
specifier|public
name|File
name|getBaseDir
parameter_list|()
block|{
return|return
name|baseDir
return|;
block|}
specifier|public
name|String
name|getRelativePath
parameter_list|()
block|{
return|return
name|PathUtil
operator|.
name|getRelative
argument_list|(
name|this
operator|.
name|baseDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|this
argument_list|)
return|;
block|}
specifier|public
name|void
name|setBaseDir
parameter_list|(
name|File
name|baseDir
parameter_list|)
block|{
name|this
operator|.
name|baseDir
operator|=
name|baseDir
expr_stmt|;
block|}
specifier|public
name|void
name|setBaseDir
parameter_list|(
name|String
name|repoDir
parameter_list|)
block|{
name|setBaseDir
argument_list|(
operator|new
name|File
argument_list|(
name|repoDir
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

