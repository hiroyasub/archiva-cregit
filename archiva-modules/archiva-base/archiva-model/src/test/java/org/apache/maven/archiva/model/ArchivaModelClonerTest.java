begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|spring
operator|.
name|PlexusInSpringTestCase
import|;
end_import

begin_comment
comment|/**  * ArchivaModelClonerTest  *  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|ArchivaModelClonerTest
extends|extends
name|PlexusInSpringTestCase
block|{
specifier|public
name|void
name|testCloneProjectModelWithParent
parameter_list|()
block|{
name|ArchivaProjectModel
name|actualModel
init|=
operator|new
name|ArchivaProjectModel
argument_list|()
decl_stmt|;
name|actualModel
operator|.
name|setGroupId
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|actualModel
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-common"
argument_list|)
expr_stmt|;
name|actualModel
operator|.
name|setVersion
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|actualModel
operator|.
name|setParentProject
argument_list|(
operator|new
name|VersionedReference
argument_list|()
argument_list|)
expr_stmt|;
name|actualModel
operator|.
name|getParentProject
argument_list|()
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.maven.archiva"
argument_list|)
expr_stmt|;
name|actualModel
operator|.
name|getParentProject
argument_list|()
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-parent"
argument_list|)
expr_stmt|;
name|actualModel
operator|.
name|getParentProject
argument_list|()
operator|.
name|setVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|ArchivaProjectModel
name|clonedModel
init|=
name|ArchivaModelCloner
operator|.
name|clone
argument_list|(
name|actualModel
argument_list|)
decl_stmt|;
comment|// Should not be the same object (in memory)
name|assertNotSame
argument_list|(
name|clonedModel
argument_list|,
name|actualModel
argument_list|)
expr_stmt|;
comment|// Should be equal in value.
name|assertEquals
argument_list|(
name|clonedModel
argument_list|,
name|actualModel
argument_list|)
expr_stmt|;
comment|// Test specific fields.
name|assertNull
argument_list|(
literal|"Group Id"
argument_list|,
name|clonedModel
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"Version"
argument_list|,
name|clonedModel
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Parent Reference"
argument_list|,
name|clonedModel
operator|.
name|getParentProject
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Parent Group Id"
argument_list|,
literal|"org.apache.maven.archiva"
argument_list|,
name|clonedModel
operator|.
name|getParentProject
argument_list|()
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Parent Artifact Id"
argument_list|,
literal|"archiva-parent"
argument_list|,
name|clonedModel
operator|.
name|getParentProject
argument_list|()
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Parent Version"
argument_list|,
literal|"1.0"
argument_list|,
name|clonedModel
operator|.
name|getParentProject
argument_list|()
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

