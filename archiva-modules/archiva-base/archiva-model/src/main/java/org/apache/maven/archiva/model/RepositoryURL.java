begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_comment
comment|/**  * RepositoryURL - Mutable (and protocol forgiving) URL object.  *  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|RepositoryURL
block|{
specifier|private
name|String
name|url
decl_stmt|;
specifier|private
name|String
name|protocol
decl_stmt|;
specifier|private
name|String
name|host
decl_stmt|;
specifier|private
name|String
name|port
decl_stmt|;
specifier|private
name|String
name|username
decl_stmt|;
specifier|private
name|String
name|password
decl_stmt|;
specifier|private
name|String
name|path
decl_stmt|;
specifier|public
name|RepositoryURL
parameter_list|(
name|String
name|url
parameter_list|)
block|{
name|this
operator|.
name|url
operator|=
name|url
expr_stmt|;
comment|// .\ Parse the URL \.____________________________________________
name|int
name|pos
decl_stmt|;
name|pos
operator|=
name|url
operator|.
name|indexOf
argument_list|(
literal|":/"
argument_list|)
expr_stmt|;
if|if
condition|(
name|pos
operator|==
operator|(
operator|-
literal|1
operator|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Invalid URL, unable to parse protocol:// from "
operator|+
name|url
argument_list|)
throw|;
block|}
name|protocol
operator|=
name|url
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|pos
argument_list|)
expr_stmt|;
comment|// Determine the post protocol position.
name|int
name|postProtocolPos
init|=
name|protocol
operator|.
name|length
argument_list|()
operator|+
literal|1
decl_stmt|;
while|while
condition|(
name|url
operator|.
name|charAt
argument_list|(
name|postProtocolPos
argument_list|)
operator|==
literal|'/'
condition|)
block|{
name|postProtocolPos
operator|++
expr_stmt|;
block|}
comment|// Handle special case with file protocol (which has no host, port, username, or password)
if|if
condition|(
literal|"file"
operator|.
name|equals
argument_list|(
name|protocol
argument_list|)
condition|)
block|{
name|path
operator|=
literal|"/"
operator|+
name|url
operator|.
name|substring
argument_list|(
name|postProtocolPos
argument_list|)
expr_stmt|;
return|return;
block|}
comment|// attempt to find the start of the 'path'
name|pos
operator|=
name|url
operator|.
name|indexOf
argument_list|(
literal|"/"
argument_list|,
name|postProtocolPos
argument_list|)
expr_stmt|;
comment|// no path specified - ex "http://localhost"
if|if
condition|(
name|pos
operator|==
operator|(
operator|-
literal|1
operator|)
condition|)
block|{
comment|// set pos to end of string. (needed for 'middle section')
name|pos
operator|=
name|url
operator|.
name|length
argument_list|()
expr_stmt|;
comment|// default path
name|path
operator|=
literal|"/"
expr_stmt|;
block|}
else|else
block|{
comment|// get actual path.
name|path
operator|=
name|url
operator|.
name|substring
argument_list|(
name|pos
argument_list|)
expr_stmt|;
block|}
comment|// get the middle section ( username : password @ hostname : port )
name|String
name|middle
init|=
name|url
operator|.
name|substring
argument_list|(
name|postProtocolPos
argument_list|,
name|pos
argument_list|)
decl_stmt|;
name|pos
operator|=
name|middle
operator|.
name|indexOf
argument_list|(
literal|'@'
argument_list|)
expr_stmt|;
comment|// we have an authentication section.
if|if
condition|(
name|pos
operator|>
literal|0
condition|)
block|{
name|String
name|authentication
init|=
name|middle
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|pos
argument_list|)
decl_stmt|;
name|middle
operator|=
name|middle
operator|.
name|substring
argument_list|(
name|pos
operator|+
literal|1
argument_list|)
expr_stmt|;
comment|// lop off authentication for host:port search
name|pos
operator|=
name|authentication
operator|.
name|indexOf
argument_list|(
literal|':'
argument_list|)
expr_stmt|;
comment|// we have a password.
if|if
condition|(
name|pos
operator|>
literal|0
condition|)
block|{
name|username
operator|=
name|authentication
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|pos
argument_list|)
expr_stmt|;
name|password
operator|=
name|authentication
operator|.
name|substring
argument_list|(
name|pos
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|username
operator|=
name|authentication
expr_stmt|;
block|}
block|}
name|pos
operator|=
name|middle
operator|.
name|indexOf
argument_list|(
literal|':'
argument_list|)
expr_stmt|;
comment|// we have a defined port
if|if
condition|(
name|pos
operator|>
literal|0
condition|)
block|{
name|host
operator|=
name|middle
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|pos
argument_list|)
expr_stmt|;
name|port
operator|=
name|middle
operator|.
name|substring
argument_list|(
name|pos
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|host
operator|=
name|middle
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|url
return|;
block|}
specifier|public
name|String
name|getUsername
parameter_list|()
block|{
return|return
name|username
return|;
block|}
specifier|public
name|String
name|getPassword
parameter_list|()
block|{
return|return
name|password
return|;
block|}
specifier|public
name|String
name|getHost
parameter_list|()
block|{
return|return
name|host
return|;
block|}
specifier|public
name|String
name|getPath
parameter_list|()
block|{
return|return
name|path
return|;
block|}
specifier|public
name|String
name|getPort
parameter_list|()
block|{
return|return
name|port
return|;
block|}
specifier|public
name|String
name|getProtocol
parameter_list|()
block|{
return|return
name|protocol
return|;
block|}
specifier|public
name|String
name|getUrl
parameter_list|()
block|{
return|return
name|url
return|;
block|}
block|}
end_class

end_unit

