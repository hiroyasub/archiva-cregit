begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_comment
comment|/**  * RepositoryProblemReport  *  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|RepositoryProblemReport
extends|extends
name|RepositoryProblem
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|4990893576717148324L
decl_stmt|;
specifier|protected
name|String
name|groupURL
decl_stmt|;
specifier|protected
name|String
name|artifactURL
decl_stmt|;
specifier|protected
name|String
name|versionURL
decl_stmt|;
specifier|public
name|RepositoryProblemReport
parameter_list|(
name|RepositoryProblem
name|repositoryProblem
parameter_list|)
block|{
name|setGroupId
argument_list|(
name|repositoryProblem
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|setArtifactId
argument_list|(
name|repositoryProblem
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|setVersion
argument_list|(
name|repositoryProblem
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|setMessage
argument_list|(
name|repositoryProblem
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|setOrigin
argument_list|(
name|repositoryProblem
operator|.
name|getOrigin
argument_list|()
argument_list|)
expr_stmt|;
name|setPath
argument_list|(
name|repositoryProblem
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|setType
argument_list|(
name|repositoryProblem
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|setRepositoryId
argument_list|(
name|repositoryProblem
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setGroupURL
parameter_list|(
name|String
name|groupURL
parameter_list|)
block|{
name|this
operator|.
name|groupURL
operator|=
name|groupURL
expr_stmt|;
block|}
specifier|public
name|String
name|getGroupURL
parameter_list|()
block|{
return|return
name|groupURL
return|;
block|}
specifier|public
name|void
name|setArtifactURL
parameter_list|(
name|String
name|artifactURL
parameter_list|)
block|{
name|this
operator|.
name|artifactURL
operator|=
name|artifactURL
expr_stmt|;
block|}
specifier|public
name|String
name|getArtifactURL
parameter_list|()
block|{
return|return
name|artifactURL
return|;
block|}
specifier|public
name|void
name|setVersionURL
parameter_list|(
name|String
name|versionURL
parameter_list|)
block|{
name|this
operator|.
name|versionURL
operator|=
name|versionURL
expr_stmt|;
block|}
specifier|public
name|String
name|getVersionURL
parameter_list|()
block|{
return|return
name|versionURL
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|RepositoryProblemReport
name|that
init|=
operator|(
name|RepositoryProblemReport
operator|)
name|o
decl_stmt|;
if|if
condition|(
name|artifactURL
operator|!=
literal|null
condition|?
operator|!
name|artifactURL
operator|.
name|equals
argument_list|(
name|that
operator|.
name|artifactURL
argument_list|)
else|:
name|that
operator|.
name|artifactURL
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|groupURL
operator|!=
literal|null
condition|?
operator|!
name|groupURL
operator|.
name|equals
argument_list|(
name|that
operator|.
name|groupURL
argument_list|)
else|:
name|that
operator|.
name|groupURL
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|versionURL
operator|!=
literal|null
condition|?
operator|!
name|versionURL
operator|.
name|equals
argument_list|(
name|that
operator|.
name|versionURL
argument_list|)
else|:
name|that
operator|.
name|versionURL
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
name|int
name|result
init|=
name|groupURL
operator|!=
literal|null
condition|?
name|groupURL
operator|.
name|hashCode
argument_list|()
else|:
literal|0
decl_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
operator|(
name|artifactURL
operator|!=
literal|null
condition|?
name|artifactURL
operator|.
name|hashCode
argument_list|()
else|:
literal|0
operator|)
expr_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
operator|(
name|versionURL
operator|!=
literal|null
condition|?
name|versionURL
operator|.
name|hashCode
argument_list|()
else|:
literal|0
operator|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"RepositoryProblemReport{"
operator|+
literal|"groupURL='"
operator|+
name|groupURL
operator|+
literal|'\''
operator|+
literal|", artifactURL='"
operator|+
name|artifactURL
operator|+
literal|'\''
operator|+
literal|", versionURL='"
operator|+
name|versionURL
operator|+
literal|'\''
operator|+
literal|'}'
return|;
block|}
block|}
end_class

end_unit

