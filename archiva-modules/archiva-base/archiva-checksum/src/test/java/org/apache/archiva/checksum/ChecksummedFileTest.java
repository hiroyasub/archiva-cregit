begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|checksum
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|StandardCopyOption
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_comment
comment|/**  * ChecksummedFileTest  *  *  */
end_comment

begin_class
specifier|public
class|class
name|ChecksummedFileTest
extends|extends
name|AbstractChecksumTestCase
block|{
comment|/**      * SHA1 checksum from www.ibiblio.org/maven2, incuding file path      */
specifier|private
specifier|static
specifier|final
name|String
name|SERVLETAPI_SHA1
init|=
literal|"bcc82975c0f9c681fcb01cc38504c992553e93ba"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|REMOTE_METADATA_SHA1
init|=
literal|"da39a3ee5e6b4b0d3255bfef95601890afd80709"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|REMOTE_METADATA_MD5
init|=
literal|"d41d8cd98f00b204e9800998ecf8427e"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Charset
name|FILE_ENCODING
init|=
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|cleanTestDir
parameter_list|()
block|{
try|try
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|getTestOutputDir
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ChecksummedFileTest
operator|.
name|class
argument_list|)
operator|.
name|warn
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|Path
name|createTestableJar
parameter_list|(
name|String
name|filename
parameter_list|)
throws|throws
name|IOException
block|{
name|Path
name|srcFile
init|=
name|getTestResource
argument_list|(
name|filename
argument_list|)
decl_stmt|;
name|Path
name|destFile
init|=
name|getTestOutputDir
argument_list|( )
operator|.
name|resolve
argument_list|(
name|srcFile
operator|.
name|getFileName
argument_list|()
argument_list|)
decl_stmt|;
name|Files
operator|.
name|copy
argument_list|(
name|srcFile
argument_list|,
name|destFile
argument_list|,
name|StandardCopyOption
operator|.
name|REPLACE_EXISTING
argument_list|)
expr_stmt|;
return|return
name|destFile
return|;
block|}
specifier|private
name|Path
name|createTestableJar
parameter_list|(
name|String
name|filename
parameter_list|,
name|boolean
name|copySha1
parameter_list|,
name|boolean
name|copyMd5
parameter_list|)
throws|throws
name|IOException
block|{
name|Path
name|srcFile
init|=
name|getTestResource
argument_list|(
name|filename
argument_list|)
decl_stmt|;
name|Path
name|jarFile
init|=
name|getTestOutputDir
argument_list|()
operator|.
name|resolve
argument_list|(
name|srcFile
operator|.
name|getFileName
argument_list|()
argument_list|)
decl_stmt|;
name|Files
operator|.
name|copy
argument_list|(
name|srcFile
argument_list|,
name|jarFile
argument_list|,
name|StandardCopyOption
operator|.
name|REPLACE_EXISTING
argument_list|)
expr_stmt|;
if|if
condition|(
name|copySha1
condition|)
block|{
name|Path
name|srcSha1
init|=
name|srcFile
operator|.
name|resolveSibling
argument_list|(
name|srcFile
operator|.
name|getFileName
argument_list|()
operator|+
literal|".sha1"
argument_list|)
decl_stmt|;
name|Path
name|sha1File
init|=
name|jarFile
operator|.
name|resolveSibling
argument_list|(
name|jarFile
operator|.
name|getFileName
argument_list|()
operator|+
literal|".sha1"
argument_list|)
decl_stmt|;
name|Files
operator|.
name|copy
argument_list|(
name|srcSha1
argument_list|,
name|sha1File
argument_list|,
name|StandardCopyOption
operator|.
name|REPLACE_EXISTING
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|copyMd5
condition|)
block|{
name|Path
name|srcMd5
init|=
name|srcFile
operator|.
name|resolveSibling
argument_list|(
name|srcFile
operator|.
name|getFileName
argument_list|()
operator|+
literal|".md5"
argument_list|)
decl_stmt|;
name|Path
name|md5File
init|=
name|jarFile
operator|.
name|resolveSibling
argument_list|(
name|jarFile
operator|.
name|getFileName
argument_list|()
operator|+
literal|".md5"
argument_list|)
decl_stmt|;
name|Files
operator|.
name|copy
argument_list|(
name|srcMd5
argument_list|,
name|md5File
argument_list|,
name|StandardCopyOption
operator|.
name|REPLACE_EXISTING
argument_list|)
expr_stmt|;
block|}
return|return
name|jarFile
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCalculateChecksumMd5
parameter_list|()
throws|throws
name|IOException
block|{
name|Path
name|testfile
init|=
name|getTestResource
argument_list|(
literal|"examples/redback-authz-open.jar"
argument_list|)
decl_stmt|;
name|ChecksummedFile
name|checksummedFile
init|=
operator|new
name|ChecksummedFile
argument_list|(
name|testfile
argument_list|)
decl_stmt|;
name|String
name|expectedChecksum
init|=
literal|"f42047fe2e177ac04d0df7aa44d408be"
decl_stmt|;
name|String
name|actualChecksum
init|=
name|checksummedFile
operator|.
name|calculateChecksum
argument_list|(
name|ChecksumAlgorithm
operator|.
name|MD5
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedChecksum
argument_list|,
name|actualChecksum
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCalculateChecksumSha1
parameter_list|()
throws|throws
name|IOException
block|{
name|Path
name|testfile
init|=
name|getTestResource
argument_list|(
literal|"examples/redback-authz-open.jar"
argument_list|)
decl_stmt|;
name|ChecksummedFile
name|checksummedFile
init|=
operator|new
name|ChecksummedFile
argument_list|(
name|testfile
argument_list|)
decl_stmt|;
name|String
name|expectedChecksum
init|=
literal|"2bb14b388973351b0a4dfe11d171965f59cc61a1"
decl_stmt|;
name|String
name|actualChecksum
init|=
name|checksummedFile
operator|.
name|calculateChecksum
argument_list|(
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedChecksum
argument_list|,
name|actualChecksum
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateChecksum
parameter_list|()
throws|throws
name|IOException
block|{
name|Path
name|testableJar
init|=
name|createTestableJar
argument_list|(
literal|"examples/redback-authz-open.jar"
argument_list|)
decl_stmt|;
name|ChecksummedFile
name|checksummedFile
init|=
operator|new
name|ChecksummedFile
argument_list|(
name|testableJar
argument_list|)
decl_stmt|;
name|checksummedFile
operator|.
name|writeFile
argument_list|(
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|)
expr_stmt|;
name|Path
name|hashFile
init|=
name|checksummedFile
operator|.
name|getChecksumFile
argument_list|(
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"ChecksumAlgorithm file should exist."
argument_list|,
name|Files
operator|.
name|exists
argument_list|(
name|hashFile
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|hashContents
init|=
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
operator|.
name|readFileToString
argument_list|(
name|hashFile
operator|.
name|toFile
argument_list|()
argument_list|,
literal|"UTF-8"
argument_list|)
decl_stmt|;
name|hashContents
operator|=
name|StringUtils
operator|.
name|trim
argument_list|(
name|hashContents
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2bb14b388973351b0a4dfe11d171965f59cc61a1  redback-authz-open.jar"
argument_list|,
name|hashContents
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFixChecksum
parameter_list|()
throws|throws
name|IOException
throws|,
name|ChecksumValidationException
block|{
name|Path
name|jarFile
init|=
name|createTestableJar
argument_list|(
literal|"examples/redback-authz-open.jar"
argument_list|)
decl_stmt|;
name|Path
name|sha1File
init|=
name|jarFile
operator|.
name|resolveSibling
argument_list|(
name|jarFile
operator|.
name|getFileName
argument_list|()
operator|+
literal|".sha1"
argument_list|)
decl_stmt|;
comment|// A typical scenario seen in the wild.
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|sha1File
operator|.
name|toFile
argument_list|()
argument_list|,
literal|"sha1sum: redback-authz-open.jar: No such file or directory"
argument_list|,
literal|"UTF-8"
argument_list|)
expr_stmt|;
name|ChecksummedFile
name|checksummedFile
init|=
operator|new
name|ChecksummedFile
argument_list|(
name|jarFile
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
literal|"ChecksummedFile.isValid(SHA1) == false"
argument_list|,
name|checksummedFile
operator|.
name|isValidChecksum
argument_list|(
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|)
argument_list|)
expr_stmt|;
name|UpdateStatusList
name|fixed
init|=
name|checksummedFile
operator|.
name|fixChecksums
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|fixed
operator|.
name|getStatusList
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|fixed
operator|.
name|getTotalStatus
argument_list|()
operator|==
name|UpdateStatus
operator|.
name|ERROR
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"ChecksummedFile.fixChecksums() == true"
argument_list|,
name|fixed
operator|.
name|getStatusList
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getValue
argument_list|()
operator|==
name|UpdateStatus
operator|.
name|UPDATED
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"ChecksummedFile.isValid(SHA1) == true"
argument_list|,
name|checksummedFile
operator|.
name|isValidChecksum
argument_list|(
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetChecksumFile
parameter_list|()
block|{
name|ChecksummedFile
name|checksummedFile
init|=
operator|new
name|ChecksummedFile
argument_list|(
name|Paths
operator|.
name|get
argument_list|(
literal|"test.jar"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"test.jar.sha1"
argument_list|,
name|checksummedFile
operator|.
name|getChecksumFile
argument_list|(
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|)
operator|.
name|getFileName
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsValidChecksum
parameter_list|()
throws|throws
name|IOException
throws|,
name|ChecksumValidationException
block|{
name|Path
name|jarFile
init|=
name|createTestableJar
argument_list|(
literal|"examples/redback-authz-open.jar"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|ChecksummedFile
name|checksummedFile
init|=
operator|new
name|ChecksummedFile
argument_list|(
name|jarFile
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"ChecksummedFile.isValid(SHA1)"
argument_list|,
name|checksummedFile
operator|.
name|isValidChecksum
argument_list|(
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsValidChecksumInvalidSha1Format
parameter_list|()
throws|throws
name|IOException
throws|,
name|ChecksumValidationException
block|{
name|Path
name|jarFile
init|=
name|createTestableJar
argument_list|(
literal|"examples/redback-authz-open.jar"
argument_list|)
decl_stmt|;
name|Path
name|sha1File
init|=
name|jarFile
operator|.
name|resolveSibling
argument_list|(
name|jarFile
operator|.
name|getFileName
argument_list|()
operator|+
literal|".sha1"
argument_list|)
decl_stmt|;
comment|// A typical scenario seen in the wild.
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|sha1File
argument_list|,
name|FILE_ENCODING
argument_list|,
literal|"sha1sum: redback-authz-open.jar: No such file or directory"
argument_list|)
expr_stmt|;
name|ChecksummedFile
name|checksummedFile
init|=
operator|new
name|ChecksummedFile
argument_list|(
name|jarFile
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
literal|"ChecksummedFile.isValid(SHA1)"
argument_list|,
name|checksummedFile
operator|.
name|isValidChecksum
argument_list|(
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsValidChecksumNoChecksumFiles
parameter_list|()
throws|throws
name|IOException
throws|,
name|ChecksumValidationException
block|{
name|Path
name|jarFile
init|=
name|createTestableJar
argument_list|(
literal|"examples/redback-authz-open.jar"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|ChecksummedFile
name|checksummedFile
init|=
operator|new
name|ChecksummedFile
argument_list|(
name|jarFile
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
literal|"ChecksummedFile.isValid(SHA1,MD5)"
argument_list|,
name|checksummedFile
operator|.
name|isValidChecksums
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|,
name|ChecksumAlgorithm
operator|.
name|MD5
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsValidChecksumSha1AndMd5
parameter_list|()
throws|throws
name|IOException
throws|,
name|ChecksumValidationException
block|{
name|Path
name|jarFile
init|=
name|createTestableJar
argument_list|(
literal|"examples/redback-authz-open.jar"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|ChecksummedFile
name|checksummedFile
init|=
operator|new
name|ChecksummedFile
argument_list|(
name|jarFile
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"ChecksummedFile.isValid(SHA1,MD5)"
argument_list|,
name|checksummedFile
operator|.
name|isValidChecksums
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|,
name|ChecksumAlgorithm
operator|.
name|MD5
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsValidChecksumSha1NoMd5
parameter_list|()
throws|throws
name|IOException
throws|,
name|ChecksumValidationException
block|{
name|Path
name|jarFile
init|=
name|createTestableJar
argument_list|(
literal|"examples/redback-authz-open.jar"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|ChecksummedFile
name|checksummedFile
init|=
operator|new
name|ChecksummedFile
argument_list|(
name|jarFile
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"ChecksummedFile.isValid(SHA1)"
argument_list|,
name|checksummedFile
operator|.
name|isValidChecksums
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|,
name|ChecksumAlgorithm
operator|.
name|MD5
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParseChecksum
parameter_list|()
throws|throws
name|IOException
throws|,
name|ChecksumValidationException
block|{
name|Path
name|expectedFile
init|=
name|getTestOutputDir
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"servletapi-2.4.pom.sha1"
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|expectedFile
argument_list|,
name|FILE_ENCODING
argument_list|,
name|SERVLETAPI_SHA1
operator|+
literal|"  /home/projects/maven/repository-staging/to-ibiblio/maven2/servletapi/servletapi/2.4/servletapi-2.4.pom"
argument_list|)
expr_stmt|;
name|Path
name|testfile
init|=
name|getTestResource
argument_list|(
literal|"examples/redback-authz-open.jar"
argument_list|)
decl_stmt|;
name|ChecksummedFile
name|checksummedFile
init|=
operator|new
name|ChecksummedFile
argument_list|(
name|testfile
argument_list|)
decl_stmt|;
name|String
name|s
init|=
name|checksummedFile
operator|.
name|parseChecksum
argument_list|(
name|expectedFile
argument_list|,
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|,
literal|"servletapi/servletapi/2.4/servletapi-2.4.pom"
argument_list|,
name|FILE_ENCODING
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Checksum doesn't match"
argument_list|,
name|SERVLETAPI_SHA1
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParseChecksumAltDash1
parameter_list|()
throws|throws
name|IOException
throws|,
name|ChecksumValidationException
block|{
name|Path
name|expectedFile
init|=
name|getTestOutputDir
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"redback-authz-open.jar.sha1"
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|expectedFile
argument_list|,
name|FILE_ENCODING
argument_list|,
name|SERVLETAPI_SHA1
operator|+
literal|"  -"
argument_list|)
expr_stmt|;
name|Path
name|testfile
init|=
name|getTestResource
argument_list|(
literal|"examples/redback-authz-open.jar"
argument_list|)
decl_stmt|;
name|ChecksummedFile
name|checksummedFile
init|=
operator|new
name|ChecksummedFile
argument_list|(
name|testfile
argument_list|)
decl_stmt|;
name|String
name|s
init|=
name|checksummedFile
operator|.
name|parseChecksum
argument_list|(
name|expectedFile
argument_list|,
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|,
literal|"servletapi/servletapi/2.4/servletapi-2.4.pom"
argument_list|,
name|FILE_ENCODING
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Checksum doesn't match"
argument_list|,
name|SERVLETAPI_SHA1
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParseChecksumAltDash2
parameter_list|()
throws|throws
name|IOException
throws|,
name|ChecksumValidationException
block|{
name|Path
name|expectedFile
init|=
name|getTestOutputDir
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"redback-authz-open.jar.sha1"
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|expectedFile
argument_list|,
name|FILE_ENCODING
argument_list|,
literal|"SHA1(-)="
operator|+
name|SERVLETAPI_SHA1
argument_list|)
expr_stmt|;
name|Path
name|testfile
init|=
name|getTestResource
argument_list|(
literal|"examples/redback-authz-open.jar"
argument_list|)
decl_stmt|;
name|ChecksummedFile
name|checksummedFile
init|=
operator|new
name|ChecksummedFile
argument_list|(
name|testfile
argument_list|)
decl_stmt|;
name|String
name|s
init|=
name|checksummedFile
operator|.
name|parseChecksum
argument_list|(
name|expectedFile
argument_list|,
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|,
literal|"servletapi/servletapi/2.4/servletapi-2.4.pom"
argument_list|,
name|FILE_ENCODING
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Checksum doesn't match"
argument_list|,
name|SERVLETAPI_SHA1
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRemoteMetadataChecksumFilePathSha1
parameter_list|()
throws|throws
name|IOException
block|{
name|Path
name|expectedFile
init|=
name|getTestOutputDir
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"maven-metadata-remote.xml.sha1"
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|expectedFile
argument_list|,
name|FILE_ENCODING
argument_list|,
name|REMOTE_METADATA_SHA1
operator|+
literal|"  /home/test/repository/examples/metadata/maven-metadata.xml"
argument_list|)
expr_stmt|;
name|Path
name|testfile
init|=
name|getTestResource
argument_list|(
literal|"examples/metadata/maven-metadata-remote.xml"
argument_list|)
decl_stmt|;
name|ChecksummedFile
name|checksummedFile
init|=
operator|new
name|ChecksummedFile
argument_list|(
name|testfile
argument_list|)
decl_stmt|;
try|try
block|{
name|String
name|s
init|=
name|checksummedFile
operator|.
name|parseChecksum
argument_list|(
name|expectedFile
argument_list|,
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|,
literal|"maven-metadata-remote.xml"
argument_list|,
name|FILE_ENCODING
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Checksum doesn't match"
argument_list|,
name|REMOTE_METADATA_SHA1
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ChecksumValidationException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"IOException should not occur."
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRemoteMetadataChecksumFilePathMd5
parameter_list|()
throws|throws
name|IOException
block|{
name|Path
name|expectedFile
init|=
name|getTestOutputDir
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"maven-metadata.xml.md5"
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|expectedFile
argument_list|,
name|FILE_ENCODING
argument_list|,
name|REMOTE_METADATA_MD5
operator|+
literal|"  ./examples/metadata/maven-metadata.xml"
argument_list|)
expr_stmt|;
name|Path
name|testfile
init|=
name|getTestResource
argument_list|(
literal|"examples/metadata/maven-metadata-remote.xml"
argument_list|)
decl_stmt|;
name|ChecksummedFile
name|checksummedFile
init|=
operator|new
name|ChecksummedFile
argument_list|(
name|testfile
argument_list|)
decl_stmt|;
try|try
block|{
name|String
name|s
init|=
name|checksummedFile
operator|.
name|parseChecksum
argument_list|(
name|expectedFile
argument_list|,
name|ChecksumAlgorithm
operator|.
name|MD5
argument_list|,
literal|"maven-metadata-remote.xml"
argument_list|,
name|FILE_ENCODING
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Checksum doesn't match"
argument_list|,
name|REMOTE_METADATA_MD5
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ChecksumValidationException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"IOException should not occur."
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

