begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|checksum
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_comment
comment|/**  * Exception thrown by the ChecksumValidator  *  * Has an error type for different validation errors.  *  * @author Martin Stockhammer<martin_s@apache.org>  */
end_comment

begin_class
specifier|public
class|class
name|ChecksumValidationException
extends|extends
name|RuntimeException
block|{
specifier|public
enum|enum
name|ValidationError
block|{
name|INVALID_FORMAT
block|,
name|DIGEST_ERROR
block|,
name|READ_ERROR
block|,
name|FILE_NOT_FOUND
block|,
name|BAD_CHECKSUM_FILE_REF
block|}
empty_stmt|;
specifier|final
specifier|private
name|ValidationError
name|errorType
decl_stmt|;
specifier|public
name|ChecksumValidationException
parameter_list|(
name|ValidationError
name|errorType
parameter_list|)
block|{
name|super
argument_list|( )
expr_stmt|;
name|this
operator|.
name|errorType
operator|=
name|errorType
expr_stmt|;
block|}
specifier|public
name|ChecksumValidationException
parameter_list|(
name|ValidationError
name|errorType
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|super
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|this
operator|.
name|errorType
operator|=
name|errorType
expr_stmt|;
block|}
specifier|public
name|ChecksumValidationException
parameter_list|(
name|ValidationError
name|errorType
parameter_list|,
name|String
name|message
parameter_list|,
name|Throwable
name|cause
parameter_list|)
block|{
name|super
argument_list|(
name|message
argument_list|,
name|cause
argument_list|)
expr_stmt|;
name|this
operator|.
name|errorType
operator|=
name|errorType
expr_stmt|;
block|}
specifier|public
name|ChecksumValidationException
parameter_list|(
name|ValidationError
name|errorType
parameter_list|,
name|Throwable
name|cause
parameter_list|)
block|{
name|super
argument_list|(
name|cause
argument_list|)
expr_stmt|;
name|this
operator|.
name|errorType
operator|=
name|errorType
expr_stmt|;
block|}
specifier|public
name|ValidationError
name|getErrorType
parameter_list|()
block|{
return|return
name|errorType
return|;
block|}
block|}
end_class

end_unit

