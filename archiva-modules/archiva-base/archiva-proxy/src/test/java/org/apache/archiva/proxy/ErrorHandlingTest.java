begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|proxy
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|policies
operator|.
name|CachedFailuresPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|policies
operator|.
name|ChecksumPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|policies
operator|.
name|PropagateErrorsDownloadPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|policies
operator|.
name|PropagateErrorsOnUpdateDownloadPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|policies
operator|.
name|ProxyDownloadException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|policies
operator|.
name|ReleasesPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|policies
operator|.
name|SnapshotsPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|layout
operator|.
name|LayoutException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|wagon
operator|.
name|ResourceDoesNotExistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|wagon
operator|.
name|TransferFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|wagon
operator|.
name|authorization
operator|.
name|AuthorizationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * ErrorHandlingTest  *  *  */
end_comment

begin_class
specifier|public
class|class
name|ErrorHandlingTest
extends|extends
name|AbstractProxyTestCase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
init|=
literal|"org/apache/maven/test/get-in-both-proxies/1.0/get-in-both-proxies-1.0.jar"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PATH_IN_BOTH_REMOTES_AND_LOCAL
init|=
literal|"org/apache/maven/test/get-on-multiple-repos/1.0/get-on-multiple-repos-1.0.pom"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ID_MOCKED_PROXIED1
init|=
literal|"badproxied1"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|NAME_MOCKED_PROXIED1
init|=
literal|"Bad Proxied 1"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ID_MOCKED_PROXIED2
init|=
literal|"badproxied2"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|NAME_MOCKED_PROXIED2
init|=
literal|"Bad Proxied 2"
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testPropagateErrorImmediatelyWithErrorThenSuccess
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|STOP
argument_list|)
expr_stmt|;
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
name|ID_PROXIED2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmSingleFailure
argument_list|(
name|path
argument_list|,
name|ID_MOCKED_PROXIED1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateErrorImmediatelyWithNotFoundThenError
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|STOP
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|STOP
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createResourceNotFoundException
argument_list|()
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmSingleFailure
argument_list|(
name|path
argument_list|,
name|ID_MOCKED_PROXIED2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateErrorImmediatelyWithSuccessThenError
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
name|ID_PROXIED1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|STOP
argument_list|)
expr_stmt|;
name|confirmSuccess
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|REPOPATH_PROXIED1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateErrorImmediatelyWithNotFoundThenSuccess
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|STOP
argument_list|)
expr_stmt|;
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
name|ID_PROXIED2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createResourceNotFoundException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmSuccess
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|REPOPATH_PROXIED2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateErrorAtEndWithErrorThenSuccess
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|STOP
argument_list|)
expr_stmt|;
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
name|ID_PROXIED2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmSingleFailure
argument_list|(
name|path
argument_list|,
name|ID_MOCKED_PROXIED1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateErrorAtEndWithSuccessThenError
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
name|ID_PROXIED1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|QUEUE
argument_list|)
expr_stmt|;
name|confirmSuccess
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|REPOPATH_PROXIED1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateErrorAtEndWithNotFoundThenError
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|QUEUE
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|QUEUE
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createResourceNotFoundException
argument_list|()
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmSingleFailure
argument_list|(
name|path
argument_list|,
name|ID_MOCKED_PROXIED2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateErrorAtEndWithErrorThenNotFound
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|QUEUE
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|QUEUE
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createResourceNotFoundException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmSingleFailure
argument_list|(
name|path
argument_list|,
name|ID_MOCKED_PROXIED1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateErrorAtEndWithErrorThenError
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|QUEUE
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|QUEUE
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmFailures
argument_list|(
name|path
argument_list|,
operator|new
name|String
index|[]
block|{
name|ID_MOCKED_PROXIED1
block|,
name|ID_MOCKED_PROXIED2
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateErrorAtEndWithNotFoundThenSuccess
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|QUEUE
argument_list|)
expr_stmt|;
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
name|ID_PROXIED2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createResourceNotFoundException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmSuccess
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|REPOPATH_PROXIED2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIgnoreErrorWithErrorThenSuccess
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|IGNORE
argument_list|)
expr_stmt|;
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
name|ID_PROXIED2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmSuccess
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|REPOPATH_PROXIED2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIgnoreErrorWithSuccessThenError
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
name|ID_PROXIED1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|IGNORE
argument_list|)
expr_stmt|;
name|confirmSuccess
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|REPOPATH_PROXIED1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIgnoreErrorWithNotFoundThenError
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|IGNORE
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|IGNORE
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createResourceNotFoundException
argument_list|()
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmNotDownloadedNoError
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIgnoreErrorWithErrorThenNotFound
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|IGNORE
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|IGNORE
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createResourceNotFoundException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmNotDownloadedNoError
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIgnoreErrorWithErrorThenError
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|IGNORE
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|IGNORE
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmNotDownloadedNoError
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateOnUpdateAlwaysArtifactNotPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|STOP
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|ALWAYS
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|STOP
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|ALWAYS
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmSingleFailure
argument_list|(
name|path
argument_list|,
name|ID_MOCKED_PROXIED1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateOnUpdateAlwaysArtifactPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_AND_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFilePresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|STOP
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|ALWAYS
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|STOP
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|ALWAYS
argument_list|)
expr_stmt|;
name|simulateGetIfNewerError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmSingleFailure
argument_list|(
name|path
argument_list|,
name|ID_MOCKED_PROXIED1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateOnUpdateAlwaysQueueArtifactNotPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|QUEUE
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|ALWAYS
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|QUEUE
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|ALWAYS
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmFailures
argument_list|(
name|path
argument_list|,
operator|new
name|String
index|[]
block|{
name|ID_MOCKED_PROXIED1
block|,
name|ID_MOCKED_PROXIED2
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateOnUpdateAlwaysQueueArtifactPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_AND_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFilePresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|QUEUE
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|ALWAYS
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|QUEUE
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|ALWAYS
argument_list|)
expr_stmt|;
name|simulateGetIfNewerError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|simulateGetIfNewerError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmFailures
argument_list|(
name|path
argument_list|,
operator|new
name|String
index|[]
block|{
name|ID_MOCKED_PROXIED1
block|,
name|ID_MOCKED_PROXIED2
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateOnUpdateAlwaysIgnoreArtifactNotPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|IGNORE
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|ALWAYS
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|IGNORE
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|ALWAYS
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmNotDownloadedNoError
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateOnUpdateAlwaysIgnoreArtifactPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_AND_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFilePresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|IGNORE
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|ALWAYS
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|IGNORE
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|ALWAYS
argument_list|)
expr_stmt|;
name|simulateGetIfNewerError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|simulateGetIfNewerError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmNotDownloadedNoError
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|expectedFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateOnUpdateNotPresentArtifactNotPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|STOP
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|NOT_PRESENT
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|STOP
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|NOT_PRESENT
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmSingleFailure
argument_list|(
name|path
argument_list|,
name|ID_MOCKED_PROXIED1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateOnUpdateNotPresentArtifactPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_AND_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFilePresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|STOP
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|NOT_PRESENT
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|STOP
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|NOT_PRESENT
argument_list|)
expr_stmt|;
name|simulateGetIfNewerError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmNotDownloadedNoError
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|expectedFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateOnUpdateNotPresentQueueArtifactNotPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|QUEUE
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|NOT_PRESENT
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|QUEUE
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|NOT_PRESENT
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmFailures
argument_list|(
name|path
argument_list|,
operator|new
name|String
index|[]
block|{
name|ID_MOCKED_PROXIED1
block|,
name|ID_MOCKED_PROXIED2
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateOnUpdateNotPresentQueueArtifactPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_AND_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFilePresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|QUEUE
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|NOT_PRESENT
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|QUEUE
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|NOT_PRESENT
argument_list|)
expr_stmt|;
name|simulateGetIfNewerError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|simulateGetIfNewerError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmNotDownloadedNoError
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|expectedFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateOnUpdateNotPresentIgnoreArtifactNotPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_NOT_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFileNotPresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|IGNORE
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|NOT_PRESENT
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|IGNORE
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|NOT_PRESENT
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|simulateGetError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmNotDownloadedNoError
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPropagateOnUpdateNotPresentIgnoreArtifactPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
name|PATH_IN_BOTH_REMOTES_AND_LOCAL
decl_stmt|;
name|File
name|expectedFile
init|=
name|setupRepositoriesWithLocalFilePresent
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED1
argument_list|,
name|NAME_MOCKED_PROXIED1
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|IGNORE
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|NOT_PRESENT
argument_list|)
expr_stmt|;
name|createMockedProxyConnector
argument_list|(
name|ID_MOCKED_PROXIED2
argument_list|,
name|NAME_MOCKED_PROXIED2
argument_list|,
name|PropagateErrorsDownloadPolicy
operator|.
name|IGNORE
argument_list|,
name|PropagateErrorsOnUpdateDownloadPolicy
operator|.
name|NOT_PRESENT
argument_list|)
expr_stmt|;
name|simulateGetIfNewerError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|simulateGetIfNewerError
argument_list|(
name|path
argument_list|,
name|expectedFile
argument_list|,
name|createTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|confirmNotDownloadedNoError
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|expectedFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// ------------------------------------------
comment|// HELPER METHODS
comment|// ------------------------------------------
specifier|private
name|void
name|createMockedProxyConnector
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|errorPolicy
parameter_list|)
block|{
name|saveRemoteRepositoryConfig
argument_list|(
name|id
argument_list|,
name|name
argument_list|,
literal|"test://bad.machine.com/repo/"
argument_list|,
literal|"default"
argument_list|)
expr_stmt|;
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
name|id
argument_list|,
name|ChecksumPolicy
operator|.
name|FIX
argument_list|,
name|ReleasesPolicy
operator|.
name|ALWAYS
argument_list|,
name|SnapshotsPolicy
operator|.
name|ALWAYS
argument_list|,
name|CachedFailuresPolicy
operator|.
name|NO
argument_list|,
name|errorPolicy
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createMockedProxyConnector
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|errorPolicy
parameter_list|,
name|String
name|errorOnUpdatePolicy
parameter_list|)
block|{
name|saveRemoteRepositoryConfig
argument_list|(
name|id
argument_list|,
name|name
argument_list|,
literal|"test://bad.machine.com/repo/"
argument_list|,
literal|"default"
argument_list|)
expr_stmt|;
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
name|id
argument_list|,
name|ChecksumPolicy
operator|.
name|FIX
argument_list|,
name|ReleasesPolicy
operator|.
name|ALWAYS
argument_list|,
name|SnapshotsPolicy
operator|.
name|ALWAYS
argument_list|,
name|CachedFailuresPolicy
operator|.
name|NO
argument_list|,
name|errorPolicy
argument_list|,
name|errorOnUpdatePolicy
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
name|File
name|setupRepositoriesWithLocalFileNotPresent
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|Exception
block|{
name|setupTestableManagedRepository
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|managedDefaultDir
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|assertNotExistsInManagedDefaultRepo
argument_list|(
name|file
argument_list|)
expr_stmt|;
return|return
name|file
return|;
block|}
specifier|private
name|File
name|setupRepositoriesWithLocalFilePresent
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|Exception
block|{
name|setupTestableManagedRepository
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|managedDefaultDir
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|file
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|file
return|;
block|}
specifier|private
name|void
name|simulateGetError
parameter_list|(
name|String
name|path
parameter_list|,
name|File
name|expectedFile
parameter_list|,
name|Exception
name|throwable
parameter_list|)
throws|throws
name|TransferFailedException
throws|,
name|ResourceDoesNotExistException
throws|,
name|AuthorizationException
block|{
comment|//wagonMock.get( path, createExpectedTempFile( expectedFile ) );
comment|//wagonMockControl.setMatcher(customWagonGetMatcher);
comment|//wagonMockControl.setThrowable( throwable, 1 );
name|wagonMock
operator|.
name|get
argument_list|(
name|EasyMock
operator|.
name|eq
argument_list|(
name|path
argument_list|)
argument_list|,
name|EasyMock
operator|.
name|anyObject
argument_list|(
name|File
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andThrow
argument_list|(
name|throwable
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|simulateGetIfNewerError
parameter_list|(
name|String
name|path
parameter_list|,
name|File
name|expectedFile
parameter_list|,
name|TransferFailedException
name|exception
parameter_list|)
throws|throws
name|TransferFailedException
throws|,
name|ResourceDoesNotExistException
throws|,
name|AuthorizationException
block|{
comment|//wagonMock.getIfNewer( path, createExpectedTempFile( expectedFile ), expectedFile.lastModified() );
comment|//wagonMockControl.setMatcher(customWagonGetIfNewerMatcher);
comment|//wagonMockControl.setThrowable( exception, 1 );
name|wagonMock
operator|.
name|getIfNewer
argument_list|(
name|EasyMock
operator|.
name|eq
argument_list|(
name|path
argument_list|)
argument_list|,
name|EasyMock
operator|.
name|anyObject
argument_list|(
name|File
operator|.
name|class
argument_list|)
argument_list|,
name|EasyMock
operator|.
name|eq
argument_list|(
name|expectedFile
operator|.
name|lastModified
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andThrow
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
specifier|private
name|File
name|createExpectedTempFile
parameter_list|(
name|File
name|expectedFile
parameter_list|)
block|{
return|return
operator|new
name|File
argument_list|(
name|managedDefaultDir
argument_list|,
name|expectedFile
operator|.
name|getName
argument_list|()
operator|+
literal|".tmp"
argument_list|)
operator|.
name|getAbsoluteFile
argument_list|()
return|;
block|}
specifier|private
name|void
name|confirmSingleFailure
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|id
parameter_list|)
throws|throws
name|LayoutException
block|{
name|confirmFailures
argument_list|(
name|path
argument_list|,
operator|new
name|String
index|[]
block|{
name|id
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|confirmFailures
parameter_list|(
name|String
name|path
parameter_list|,
name|String
index|[]
name|ids
parameter_list|)
throws|throws
name|LayoutException
block|{
name|wagonMockControl
operator|.
name|replay
argument_list|()
expr_stmt|;
comment|// Attempt the proxy fetch.
name|File
name|downloadedFile
init|=
literal|null
decl_stmt|;
try|try
block|{
name|downloadedFile
operator|=
name|proxyHandler
operator|.
name|fetchFromProxies
argument_list|(
name|managedDefaultRepository
argument_list|,
name|managedDefaultRepository
operator|.
name|toArtifactReference
argument_list|(
name|path
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Proxy should not have succeeded"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ProxyDownloadException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|ids
operator|.
name|length
argument_list|,
name|e
operator|.
name|getFailures
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|id
range|:
name|ids
control|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|getFailures
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
name|id
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|wagonMockControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotDownloaded
argument_list|(
name|downloadedFile
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|confirmSuccess
parameter_list|(
name|String
name|path
parameter_list|,
name|File
name|expectedFile
parameter_list|,
name|String
name|basedir
parameter_list|)
throws|throws
name|Exception
block|{
name|File
name|downloadedFile
init|=
name|performDownload
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|File
name|proxied1File
init|=
operator|new
name|File
argument_list|(
name|basedir
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|assertFileEquals
argument_list|(
name|expectedFile
argument_list|,
name|downloadedFile
argument_list|,
name|proxied1File
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|confirmNotDownloadedNoError
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|Exception
block|{
name|File
name|downloadedFile
init|=
name|performDownload
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|assertNotDownloaded
argument_list|(
name|downloadedFile
argument_list|)
expr_stmt|;
block|}
specifier|private
name|File
name|performDownload
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|ProxyDownloadException
throws|,
name|LayoutException
block|{
name|wagonMockControl
operator|.
name|replay
argument_list|()
expr_stmt|;
comment|// Attempt the proxy fetch.
name|File
name|downloadedFile
init|=
name|proxyHandler
operator|.
name|fetchFromProxies
argument_list|(
name|managedDefaultRepository
argument_list|,
name|managedDefaultRepository
operator|.
name|toArtifactReference
argument_list|(
name|path
argument_list|)
argument_list|)
decl_stmt|;
name|wagonMockControl
operator|.
name|verify
argument_list|()
expr_stmt|;
return|return
name|downloadedFile
return|;
block|}
specifier|private
specifier|static
name|TransferFailedException
name|createTransferException
parameter_list|()
block|{
return|return
operator|new
name|TransferFailedException
argument_list|(
literal|"test download exception"
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|ResourceDoesNotExistException
name|createResourceNotFoundException
parameter_list|()
block|{
return|return
operator|new
name|ResourceDoesNotExistException
argument_list|(
literal|"test download not found"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

