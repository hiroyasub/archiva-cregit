#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

releases.policy.name=Release Artifact Update Policy
releases.policy.description=This policy tells, when a release artifact will be updated. This policy is applied before the artifact is downloaded.\
  It allows to set the following options: {0}.
snapshots.policy.name=Snapshot Artifact Update Policy
snapshots.policy.description=This policy tells, when a snapshot artifact will be updated. This policy is applied before the artifact is downloaded. \
  It allows to set the following options: {0}.
update.option.always.description=Updates the artifact on each download from the remote repository.
update.option.always.name=Update always
update.option.never.description=Update the artifact never from the remote repository.
update.option.never.name=Do not download from remote
update.option.daily.description=Downloads the artifact if it does not exist locally, or if the local modification timestamp is older than one day.
update.option.daily.name=Update, if older than a day
update.option.hourly.description=Downloads the artifact if it does not exist locally, or if the local modification timestamp is older than one hour.
update.option.hourly.name=Update, if older than a hour
update.option.once.description=Downloads the artifact only, if it does not exist locally.
update.option.once.name=Download only once

cache-failures.policy.name=Cache Failures Policy
cache-failures.policy.description=This policies decides, if download failures will be cached. The policy is applied before the artifact is downloaded. \
  The option 'yes' enables the cache.
cache-failures.option.yes.description=Download failures are cached and download is not attempted, if it failed before.
cache-failures.option.yes.name=Yes
cache-failures.option.no.description=Download failures are not cached. It will try the download again, if the file is requested.
cache-failures.option.no.name=No

checksum.policy.name=Checksum Policy
checksum.policy.description=This policy tells, what happens if the downloaded checksum of a artifact does not match. \
  The policy is applied after downloading the artifact. The following options can be set: {0}.
checksum.option.fail.description=The download fails and the artifact is removed locally.
checksum.option.fail.name=Fail, if no match
checksum.option.fix.description=The artifact will remain and the checksum will be generated locally.
checksum.option.fix.name=Fix, if no match
checksum.option.ignore.description=The error will be ignored.
checksum.option.ignore.name=Ignore, if no match

propagate-errors.policy.name=Propagate Download Errors Policy
propagate-errors.policy.description=This policy tells, what happens, if an error occurs during download of the artifact.
propagate-errors.option.stop.name=Stop on error
propagate-errors.option.stop.description=Stops the artifact download. Further remote repositories will not be checked. 
propagate-errors.option.queue-error.name=Continue on error
propagate-errors.option.queue-error.description=Checks further remote repositories for the artifact. If all downloads fail, the error is propagated.
propagate-errors.option.ignore.name=Ignore errors
propagate-errors.option.ignore.description=Treat the error as 'not found'. Check following repositories if defined.

propagate-errors-on-update.policy.name=Propagate Errors on Update Policy
propagate-errors-on-update.policy.description=This policy tells what happens, if an error occurs during download of an artifact that exists already locally.
propagate-errors-on-update.option.always.name=Propagate always
propagate-errors-on-update.option.always.description=Propagates the error, even if the file exists already locally.
propagate-errors-on-update.option.not-present.name=Propagate only, if not exists
propagate-errors-on-update.option.not-present.description=Propagates the error only, if the file does not exist already locally.





