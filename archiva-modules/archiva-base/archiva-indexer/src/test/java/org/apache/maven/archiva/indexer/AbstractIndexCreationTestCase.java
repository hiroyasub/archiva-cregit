begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|lucene
operator|.
name|LuceneRepositoryContentRecord
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_comment
comment|/**  * AbstractIndexCreationTestCase   *  * @author<a href="mailto:joakime@apache.org">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractIndexCreationTestCase
extends|extends
name|AbstractIndexerTestCase
block|{
specifier|protected
specifier|abstract
name|LuceneRepositoryContentRecord
name|createSimpleRecord
parameter_list|()
function_decl|;
specifier|public
name|void
name|testIndexExists
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFalse
argument_list|(
literal|"check index doesn't exist"
argument_list|,
name|index
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|indexLocation
init|=
name|index
operator|.
name|getIndexDirectory
argument_list|()
decl_stmt|;
comment|// create empty directory
name|indexLocation
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
literal|"check index doesn't exist even if directory does"
argument_list|,
name|index
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// create index, with no records
name|createEmptyIndex
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
literal|"check index is considered to exist"
argument_list|,
name|index
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test non-directory
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|indexLocation
argument_list|)
expr_stmt|;
name|indexLocation
operator|.
name|createNewFile
argument_list|()
expr_stmt|;
try|try
block|{
name|index
operator|.
name|exists
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Index operation should fail as the location is not valid"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RepositoryIndexException
name|e
parameter_list|)
block|{
comment|// great
block|}
finally|finally
block|{
name|indexLocation
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testAddRecordNoIndex
parameter_list|()
throws|throws
name|IOException
throws|,
name|RepositoryIndexException
throws|,
name|ParseException
block|{
name|LuceneRepositoryContentRecord
name|record
init|=
name|createSimpleRecord
argument_list|()
decl_stmt|;
name|index
operator|.
name|indexRecords
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|record
argument_list|)
argument_list|)
expr_stmt|;
name|IndexReader
name|reader
init|=
name|IndexReader
operator|.
name|open
argument_list|(
name|index
operator|.
name|getIndexDirectory
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|assertEquals
argument_list|(
literal|"Check index size"
argument_list|,
literal|1
argument_list|,
name|reader
operator|.
name|numDocs
argument_list|()
argument_list|)
expr_stmt|;
name|Document
name|document
init|=
name|reader
operator|.
name|document
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertRecord
argument_list|(
name|record
argument_list|,
name|document
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testAddRecordExistingEmptyIndex
parameter_list|()
throws|throws
name|IOException
throws|,
name|RepositoryIndexException
throws|,
name|ParseException
block|{
name|createEmptyIndex
argument_list|()
expr_stmt|;
name|LuceneRepositoryContentRecord
name|record
init|=
name|createSimpleRecord
argument_list|()
decl_stmt|;
name|index
operator|.
name|indexRecords
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|record
argument_list|)
argument_list|)
expr_stmt|;
name|IndexReader
name|reader
init|=
name|IndexReader
operator|.
name|open
argument_list|(
name|index
operator|.
name|getIndexDirectory
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|assertEquals
argument_list|(
literal|"Check index size"
argument_list|,
literal|1
argument_list|,
name|reader
operator|.
name|numDocs
argument_list|()
argument_list|)
expr_stmt|;
name|Document
name|document
init|=
name|reader
operator|.
name|document
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertRecord
argument_list|(
name|record
argument_list|,
name|document
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testAddRecordInIndex
parameter_list|()
throws|throws
name|IOException
throws|,
name|RepositoryIndexException
throws|,
name|ParseException
block|{
name|createEmptyIndex
argument_list|()
expr_stmt|;
name|LuceneRepositoryContentRecord
name|record
init|=
name|createSimpleRecord
argument_list|()
decl_stmt|;
name|index
operator|.
name|indexRecords
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|record
argument_list|)
argument_list|)
expr_stmt|;
comment|// Do it again
name|record
operator|=
name|createSimpleRecord
argument_list|()
expr_stmt|;
name|index
operator|.
name|indexRecords
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|record
argument_list|)
argument_list|)
expr_stmt|;
name|IndexReader
name|reader
init|=
name|IndexReader
operator|.
name|open
argument_list|(
name|index
operator|.
name|getIndexDirectory
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|assertEquals
argument_list|(
literal|"Check index size"
argument_list|,
literal|1
argument_list|,
name|reader
operator|.
name|numDocs
argument_list|()
argument_list|)
expr_stmt|;
name|Document
name|document
init|=
name|reader
operator|.
name|document
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertRecord
argument_list|(
name|record
argument_list|,
name|document
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testDeleteRecordInIndex
parameter_list|()
throws|throws
name|IOException
throws|,
name|RepositoryIndexException
block|{
name|createEmptyIndex
argument_list|()
expr_stmt|;
name|LuceneRepositoryContentRecord
name|record
init|=
name|createSimpleRecord
argument_list|()
decl_stmt|;
name|index
operator|.
name|indexRecords
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|record
argument_list|)
argument_list|)
expr_stmt|;
name|index
operator|.
name|deleteRecords
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|record
argument_list|)
argument_list|)
expr_stmt|;
name|IndexReader
name|reader
init|=
name|IndexReader
operator|.
name|open
argument_list|(
name|index
operator|.
name|getIndexDirectory
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|assertEquals
argument_list|(
literal|"No documents"
argument_list|,
literal|0
argument_list|,
name|reader
operator|.
name|numDocs
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testDeleteRecordNotInIndex
parameter_list|()
throws|throws
name|IOException
throws|,
name|RepositoryIndexException
block|{
name|createEmptyIndex
argument_list|()
expr_stmt|;
name|LuceneRepositoryContentRecord
name|record
init|=
name|createSimpleRecord
argument_list|()
decl_stmt|;
name|index
operator|.
name|deleteRecords
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|record
argument_list|)
argument_list|)
expr_stmt|;
name|IndexReader
name|reader
init|=
name|IndexReader
operator|.
name|open
argument_list|(
name|index
operator|.
name|getIndexDirectory
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|assertEquals
argument_list|(
literal|"No documents"
argument_list|,
literal|0
argument_list|,
name|reader
operator|.
name|numDocs
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testDeleteRecordNoIndex
parameter_list|()
throws|throws
name|IOException
throws|,
name|RepositoryIndexException
block|{
name|LuceneRepositoryContentRecord
name|record
init|=
name|createSimpleRecord
argument_list|()
decl_stmt|;
name|index
operator|.
name|deleteRecords
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|record
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|index
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

