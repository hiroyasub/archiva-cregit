begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Hits
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|MatchAllDocsQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Searcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ManagedRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|MockConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|RepositoryContentIndex
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|RepositoryContentIndexFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|bytecode
operator|.
name|BytecodeRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|filecontent
operator|.
name|FileContentRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|hashcodes
operator|.
name|HashcodesRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|spring
operator|.
name|PlexusInSpringTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * DefaultCrossRepositorySearchTest  *  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|DefaultCrossRepositorySearchTest
extends|extends
name|PlexusInSpringTestCase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|TEST_DEFAULT_REPOSITORY_NAME
init|=
literal|"Test Default Repository"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_DEFAULT_REPO_ID
init|=
literal|"testDefaultRepo"
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|RepositoryContentIndexFactory
name|indexFactory
init|=
operator|(
name|RepositoryContentIndexFactory
operator|)
name|lookup
argument_list|(
name|RepositoryContentIndexFactory
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|"lucene"
argument_list|)
decl_stmt|;
name|File
name|repoDir
init|=
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"src/test/managed-repository"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Default Test Repository should exist."
argument_list|,
name|repoDir
operator|.
name|exists
argument_list|()
operator|&&
name|repoDir
operator|.
name|isDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|ManagedRepositoryConfiguration
name|repository
init|=
name|createRepository
argument_list|(
name|TEST_DEFAULT_REPO_ID
argument_list|,
name|TEST_DEFAULT_REPOSITORY_NAME
argument_list|,
name|repoDir
argument_list|)
decl_stmt|;
name|File
name|indexLocation
init|=
operator|new
name|File
argument_list|(
literal|"target/index-crossrepo-"
operator|+
name|getName
argument_list|()
operator|+
literal|"/"
argument_list|)
decl_stmt|;
name|MockConfiguration
name|config
init|=
operator|(
name|MockConfiguration
operator|)
name|lookup
argument_list|(
name|ArchivaConfiguration
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|"mock"
argument_list|)
decl_stmt|;
name|ManagedRepositoryConfiguration
name|repoConfig
init|=
operator|new
name|ManagedRepositoryConfiguration
argument_list|()
decl_stmt|;
name|repoConfig
operator|.
name|setId
argument_list|(
name|TEST_DEFAULT_REPO_ID
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setName
argument_list|(
name|TEST_DEFAULT_REPOSITORY_NAME
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setLocation
argument_list|(
name|repoDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setIndexDir
argument_list|(
name|indexLocation
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setScanned
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|indexLocation
operator|.
name|exists
argument_list|()
condition|)
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|indexLocation
argument_list|)
expr_stmt|;
block|}
name|config
operator|.
name|getConfiguration
argument_list|()
operator|.
name|addManagedRepository
argument_list|(
name|repoConfig
argument_list|)
expr_stmt|;
comment|// Create the (empty) indexes.
name|RepositoryContentIndex
name|indexHashcode
init|=
name|indexFactory
operator|.
name|createHashcodeIndex
argument_list|(
name|repository
argument_list|)
decl_stmt|;
name|RepositoryContentIndex
name|indexBytecode
init|=
name|indexFactory
operator|.
name|createBytecodeIndex
argument_list|(
name|repository
argument_list|)
decl_stmt|;
name|RepositoryContentIndex
name|indexContents
init|=
name|indexFactory
operator|.
name|createFileContentIndex
argument_list|(
name|repository
argument_list|)
decl_stmt|;
comment|// Now populate them.
name|Map
argument_list|<
name|String
argument_list|,
name|HashcodesRecord
argument_list|>
name|hashcodesMap
init|=
operator|new
name|HashcodesIndexPopulator
argument_list|()
operator|.
name|populate
argument_list|(
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|indexHashcode
operator|.
name|indexRecords
argument_list|(
name|hashcodesMap
operator|.
name|values
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Hashcode Key Count"
argument_list|,
name|hashcodesMap
operator|.
name|size
argument_list|()
argument_list|,
name|indexHashcode
operator|.
name|getAllRecordKeys
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertRecordCount
argument_list|(
name|indexHashcode
argument_list|,
name|hashcodesMap
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|BytecodeRecord
argument_list|>
name|bytecodeMap
init|=
operator|new
name|BytecodeIndexPopulator
argument_list|()
operator|.
name|populate
argument_list|(
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|indexBytecode
operator|.
name|indexRecords
argument_list|(
name|bytecodeMap
operator|.
name|values
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Bytecode Key Count"
argument_list|,
name|bytecodeMap
operator|.
name|size
argument_list|()
argument_list|,
name|indexBytecode
operator|.
name|getAllRecordKeys
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertRecordCount
argument_list|(
name|indexBytecode
argument_list|,
name|bytecodeMap
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|FileContentRecord
argument_list|>
name|contentMap
init|=
operator|new
name|FileContentIndexPopulator
argument_list|()
operator|.
name|populate
argument_list|(
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|indexContents
operator|.
name|indexRecords
argument_list|(
name|contentMap
operator|.
name|values
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"File Content Key Count"
argument_list|,
name|contentMap
operator|.
name|size
argument_list|()
argument_list|,
name|indexContents
operator|.
name|getAllRecordKeys
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertRecordCount
argument_list|(
name|indexContents
argument_list|,
name|contentMap
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertRecordCount
parameter_list|(
name|RepositoryContentIndex
name|index
parameter_list|,
name|int
name|expectedCount
parameter_list|)
throws|throws
name|Exception
block|{
name|Query
name|query
init|=
operator|new
name|MatchAllDocsQuery
argument_list|()
decl_stmt|;
name|Searcher
name|searcher
init|=
operator|(
name|Searcher
operator|)
name|index
operator|.
name|getSearchable
argument_list|()
decl_stmt|;
name|Hits
name|hits
init|=
name|searcher
operator|.
name|search
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Expected Record Count for "
operator|+
name|index
operator|.
name|getId
argument_list|()
argument_list|,
name|expectedCount
argument_list|,
name|hits
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|CrossRepositorySearch
name|lookupCrossRepositorySearch
parameter_list|()
throws|throws
name|Exception
block|{
name|CrossRepositorySearch
name|search
init|=
operator|(
name|CrossRepositorySearch
operator|)
name|lookup
argument_list|(
name|CrossRepositorySearch
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"CrossRepositorySearch:default should not be null."
argument_list|,
name|search
argument_list|)
expr_stmt|;
return|return
name|search
return|;
block|}
specifier|public
name|void
name|testSearchTerm_Org
parameter_list|()
throws|throws
name|Exception
block|{
name|CrossRepositorySearch
name|search
init|=
name|lookupCrossRepositorySearch
argument_list|()
decl_stmt|;
name|String
name|expectedRepos
index|[]
init|=
operator|new
name|String
index|[]
block|{
name|TEST_DEFAULT_REPO_ID
block|}
decl_stmt|;
name|String
name|expectedResults
index|[]
init|=
operator|new
name|String
index|[]
block|{
literal|"org"
block|,
literal|"org2"
block|,
literal|"org3"
block|,
literal|"org4"
block|,
literal|"org5"
block|,
literal|"org6"
block|,
literal|"org7"
block|}
decl_stmt|;
name|assertSearchResults
argument_list|(
name|expectedRepos
argument_list|,
name|expectedResults
argument_list|,
name|search
argument_list|,
literal|"org"
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSearchTerm_Junit
parameter_list|()
throws|throws
name|Exception
block|{
name|CrossRepositorySearch
name|search
init|=
name|lookupCrossRepositorySearch
argument_list|()
decl_stmt|;
name|String
name|expectedRepos
index|[]
init|=
operator|new
name|String
index|[]
block|{
name|TEST_DEFAULT_REPO_ID
block|}
decl_stmt|;
name|String
name|expectedResults
index|[]
init|=
operator|new
name|String
index|[]
block|{
literal|"junit"
block|,
literal|"junit2"
block|,
literal|"junit3"
block|}
decl_stmt|;
name|assertSearchResults
argument_list|(
name|expectedRepos
argument_list|,
name|expectedResults
argument_list|,
name|search
argument_list|,
literal|"junit"
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSearchInvalidTerm
parameter_list|()
throws|throws
name|Exception
block|{
name|CrossRepositorySearch
name|search
init|=
name|lookupCrossRepositorySearch
argument_list|()
decl_stmt|;
name|String
name|expectedRepos
index|[]
init|=
operator|new
name|String
index|[]
block|{
name|TEST_DEFAULT_REPO_ID
block|}
decl_stmt|;
name|String
name|expectedResults
index|[]
init|=
operator|new
name|String
index|[]
block|{
comment|// Nothing.
block|}
decl_stmt|;
name|assertSearchResults
argument_list|(
name|expectedRepos
argument_list|,
name|expectedResults
argument_list|,
name|search
argument_list|,
literal|"monosodium"
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSearchWithinSearchResults
parameter_list|()
throws|throws
name|Exception
block|{
name|CrossRepositorySearch
name|search
init|=
name|lookupCrossRepositorySearch
argument_list|()
decl_stmt|;
name|String
name|expectedRepos
index|[]
init|=
operator|new
name|String
index|[]
block|{
name|TEST_DEFAULT_REPO_ID
block|}
decl_stmt|;
name|String
name|expectedResults
index|[]
init|=
operator|new
name|String
index|[]
block|{
literal|"org"
block|,
literal|"org2"
block|,
literal|"org3"
block|,
literal|"org4"
block|,
literal|"org5"
block|,
literal|"org6"
block|,
literal|"org7"
block|}
decl_stmt|;
comment|// first search
name|assertSearchResults
argument_list|(
name|expectedRepos
argument_list|,
name|expectedResults
argument_list|,
name|search
argument_list|,
literal|"org"
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|previousSearchTerms
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|previousSearchTerms
operator|.
name|add
argument_list|(
literal|"org"
argument_list|)
expr_stmt|;
name|String
name|secondSearchExpectedResults
index|[]
init|=
operator|new
name|String
index|[]
block|{
literal|"org.apache.maven.archiva.record"
block|,
literal|"org.apache.maven.archiva.record2"
block|,
literal|"org.apache.maven.archiva.record3"
block|,
literal|"org.apache.maven.archiva.record4"
block|,
literal|"org.apache.maven.archiva.record5"
block|,
literal|"org.apache.maven.archiva.record6"
block|,
literal|"org.apache.maven.archiva.record7"
block|}
decl_stmt|;
comment|//second search
name|assertSearchResults
argument_list|(
name|expectedRepos
argument_list|,
name|secondSearchExpectedResults
argument_list|,
name|search
argument_list|,
literal|"org.apache.maven.archiva.record"
argument_list|,
name|previousSearchTerms
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|previousSearchTerms
operator|.
name|add
argument_list|(
literal|"org.apache.maven.archiva.record"
argument_list|)
expr_stmt|;
name|String
name|thirdSearchExpectedResults
index|[]
init|=
operator|new
name|String
index|[]
block|{
literal|"junit"
block|,
literal|"junit2"
block|,
literal|"junit3"
block|}
decl_stmt|;
comment|//third search
name|assertSearchResults
argument_list|(
name|expectedRepos
argument_list|,
name|thirdSearchExpectedResults
argument_list|,
name|search
argument_list|,
literal|"junit"
argument_list|,
name|previousSearchTerms
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSearchForClassesAndPackages
parameter_list|()
throws|throws
name|Exception
block|{
name|CrossRepositorySearch
name|search
init|=
name|lookupCrossRepositorySearch
argument_list|()
decl_stmt|;
name|String
name|expectedRepos
index|[]
init|=
operator|new
name|String
index|[]
block|{
name|TEST_DEFAULT_REPO_ID
block|}
decl_stmt|;
name|String
name|expectedResults
index|[]
init|=
operator|new
name|String
index|[]
block|{
literal|"archiva-common-1.0.jar"
block|}
decl_stmt|;
comment|// class with packagename search
name|assertSearchResults
argument_list|(
name|expectedRepos
argument_list|,
name|expectedResults
argument_list|,
name|search
argument_list|,
literal|"org.apache.maven.archiva.common.utils.BaseFile"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// class name search
name|assertSearchResults
argument_list|(
name|expectedRepos
argument_list|,
name|expectedResults
argument_list|,
name|search
argument_list|,
literal|"BaseFile"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|String
name|expectedMethodSearchResults
index|[]
init|=
operator|new
name|String
index|[]
block|{
literal|"continuum-webapp-1.0.3-SNAPSHOT.war"
block|}
decl_stmt|;
comment|// method search
name|assertSearchResults
argument_list|(
name|expectedRepos
argument_list|,
name|expectedMethodSearchResults
argument_list|,
name|search
argument_list|,
literal|"org.apache.maven.continuum.web.action.BuildDefinitionAction.isBuildFresh"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testExecuteFilteredSearch
parameter_list|()
throws|throws
name|Exception
block|{
name|CrossRepositorySearch
name|search
init|=
name|lookupCrossRepositorySearch
argument_list|()
decl_stmt|;
name|String
name|expectedRepos
index|[]
init|=
operator|new
name|String
index|[]
block|{
name|TEST_DEFAULT_REPO_ID
block|}
decl_stmt|;
name|String
name|expectedResults
index|[]
init|=
operator|new
name|String
index|[]
block|{
literal|"org1"
block|,
literal|"org2"
block|,
literal|"org3"
block|,
literal|"org4"
block|,
literal|"org5"
block|,
literal|"org6"
block|,
literal|"org7"
block|,
literal|"org8"
block|}
decl_stmt|;
name|String
name|secondExpectedResults
index|[]
init|=
operator|new
name|String
index|[]
block|{
literal|"continuum-webapp"
block|}
decl_stmt|;
name|String
name|thirdExpectedResults
index|[]
init|=
operator|new
name|String
index|[]
block|{
literal|"archiva-common"
block|}
decl_stmt|;
comment|// search for groupId
name|assertFilteredSearchResults
argument_list|(
name|expectedRepos
argument_list|,
name|expectedResults
argument_list|,
name|search
argument_list|,
literal|"org"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|30
argument_list|)
expr_stmt|;
comment|// search for groupId and artifactId
name|assertFilteredSearchResults
argument_list|(
name|expectedRepos
argument_list|,
name|secondExpectedResults
argument_list|,
name|search
argument_list|,
literal|"org.apache.maven"
argument_list|,
literal|"continuum-webapp"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|30
argument_list|)
expr_stmt|;
comment|// search for groupId , artifactId and version
name|assertFilteredSearchResults
argument_list|(
name|expectedRepos
argument_list|,
name|thirdExpectedResults
argument_list|,
name|search
argument_list|,
literal|"org.apache.maven.archiva"
argument_list|,
literal|"archiva-common"
argument_list|,
literal|"1.0"
argument_list|,
literal|null
argument_list|,
literal|30
argument_list|)
expr_stmt|;
block|}
comment|// MRM-981 - artifactIds with numeric characters aren't found in advanced search
specifier|public
name|void
name|testFilteredSearchArtifactIdHasNumericChar
parameter_list|()
throws|throws
name|Exception
block|{
name|CrossRepositorySearch
name|search
init|=
name|lookupCrossRepositorySearch
argument_list|()
decl_stmt|;
name|String
name|expectedRepos
index|[]
init|=
operator|new
name|String
index|[]
block|{
name|TEST_DEFAULT_REPO_ID
block|}
decl_stmt|;
name|String
name|expectedResults
index|[]
init|=
operator|new
name|String
index|[]
block|{
literal|"a-common5"
block|}
decl_stmt|;
name|assertFilteredSearchResults
argument_list|(
name|expectedRepos
argument_list|,
name|expectedResults
argument_list|,
name|search
argument_list|,
literal|null
argument_list|,
literal|"a-common5"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|assertFilteredSearchResults
argument_list|(
name|expectedRepos
argument_list|,
name|expectedResults
argument_list|,
name|search
argument_list|,
literal|"a"
argument_list|,
literal|"a-common5"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|assertFilteredSearchResults
argument_list|(
name|expectedRepos
argument_list|,
name|expectedResults
argument_list|,
name|search
argument_list|,
literal|"a"
argument_list|,
literal|"a-common5"
argument_list|,
literal|"1.0"
argument_list|,
literal|null
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|assertFilteredSearchResults
argument_list|(
name|expectedRepos
argument_list|,
name|expectedResults
argument_list|,
name|search
argument_list|,
literal|"a"
argument_list|,
literal|"a-common5"
argument_list|,
literal|"1.0"
argument_list|,
literal|"ACommonTestFile"
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|assertFilteredSearchResults
argument_list|(
name|expectedRepos
argument_list|,
name|expectedResults
argument_list|,
name|search
argument_list|,
literal|"a"
argument_list|,
literal|"a-common5"
argument_list|,
literal|"1.0"
argument_list|,
literal|"a.common5.package."
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|String
name|noHitsExpectedResults
index|[]
init|=
operator|new
name|String
index|[]
block|{}
decl_stmt|;
name|assertFilteredSearchResults
argument_list|(
name|expectedRepos
argument_list|,
name|noHitsExpectedResults
argument_list|,
name|search
argument_list|,
literal|"org.apache.maven.archiva"
argument_list|,
literal|"a-common5"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|30
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertFilteredSearchResults
parameter_list|(
name|String
name|expectedRepos
index|[]
parameter_list|,
name|String
name|expectedResults
index|[]
parameter_list|,
name|CrossRepositorySearch
name|search
parameter_list|,
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|String
name|className
parameter_list|,
name|int
name|rowCount
parameter_list|)
block|{
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|limits
operator|.
name|setPageSize
argument_list|(
name|rowCount
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|selectedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|selectedRepos
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|expectedRepos
argument_list|)
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
literal|null
decl_stmt|;
name|results
operator|=
name|search
operator|.
name|executeFilteredSearch
argument_list|(
literal|"guest"
argument_list|,
name|selectedRepos
argument_list|,
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
name|className
argument_list|,
name|limits
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Search Results should not be null."
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Repository Hits"
argument_list|,
name|expectedRepos
operator|.
name|length
argument_list|,
name|results
operator|.
name|getRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedRepos
operator|.
name|length
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_DEFAULT_REPO_ID
argument_list|,
name|selectedRepos
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Search Result Hits"
argument_list|,
name|expectedResults
operator|.
name|length
argument_list|,
name|results
operator|.
name|getHits
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertSearchResults
parameter_list|(
name|String
name|expectedRepos
index|[]
parameter_list|,
name|String
name|expectedResults
index|[]
parameter_list|,
name|CrossRepositorySearch
name|search
parameter_list|,
name|String
name|term
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|previousSearchTerms
parameter_list|,
name|boolean
name|bytecode
parameter_list|)
throws|throws
name|Exception
block|{
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|limits
operator|.
name|setPageSize
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|selectedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|selectedRepos
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|expectedRepos
argument_list|)
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|previousSearchTerms
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|bytecode
condition|)
block|{
name|results
operator|=
name|search
operator|.
name|searchForBytecode
argument_list|(
literal|"guest"
argument_list|,
name|selectedRepos
argument_list|,
name|term
argument_list|,
name|limits
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|results
operator|=
name|search
operator|.
name|searchForTerm
argument_list|(
literal|"guest"
argument_list|,
name|selectedRepos
argument_list|,
name|term
argument_list|,
name|limits
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|results
operator|=
name|search
operator|.
name|searchForTerm
argument_list|(
literal|"guest"
argument_list|,
name|selectedRepos
argument_list|,
name|term
argument_list|,
name|limits
argument_list|,
name|previousSearchTerms
argument_list|)
expr_stmt|;
block|}
name|assertNotNull
argument_list|(
literal|"Search Results should not be null."
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Repository Hits"
argument_list|,
name|expectedRepos
operator|.
name|length
argument_list|,
name|results
operator|.
name|getRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// TODO: test the repository ids returned.
name|assertEquals
argument_list|(
literal|"Search Result Hits"
argument_list|,
name|expectedResults
operator|.
name|length
argument_list|,
name|results
operator|.
name|getHits
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// TODO: test the order of hits.
comment|// TODO: test the value of the hits.
block|}
specifier|protected
name|ManagedRepositoryConfiguration
name|createRepository
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|,
name|File
name|location
parameter_list|)
block|{
name|ManagedRepositoryConfiguration
name|repo
init|=
operator|new
name|ManagedRepositoryConfiguration
argument_list|()
decl_stmt|;
name|repo
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setLocation
argument_list|(
name|location
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|repo
return|;
block|}
block|}
end_class

end_unit

