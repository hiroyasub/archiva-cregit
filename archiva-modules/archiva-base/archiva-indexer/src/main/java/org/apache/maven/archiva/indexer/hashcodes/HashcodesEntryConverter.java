begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|hashcodes
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|ArtifactKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|lucene
operator|.
name|LuceneDocumentMaker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|lucene
operator|.
name|LuceneEntryConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|lucene
operator|.
name|LuceneRepositoryContentRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaArtifact
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_comment
comment|/**  * Converter for Hashcode records and documents.   *  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|HashcodesEntryConverter
implements|implements
name|LuceneEntryConverter
block|{
specifier|public
name|Document
name|convert
parameter_list|(
name|LuceneRepositoryContentRecord
name|record
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|record
operator|instanceof
name|HashcodesRecord
operator|)
condition|)
block|{
throw|throw
operator|new
name|ClassCastException
argument_list|(
literal|"Unable to convert type "
operator|+
name|record
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" to "
operator|+
name|HashcodesRecord
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|"."
argument_list|)
throw|;
block|}
name|HashcodesRecord
name|hashcodes
init|=
operator|(
name|HashcodesRecord
operator|)
name|record
decl_stmt|;
name|LuceneDocumentMaker
name|doc
init|=
operator|new
name|LuceneDocumentMaker
argument_list|(
name|hashcodes
argument_list|)
decl_stmt|;
comment|// Artifact Reference
name|doc
operator|.
name|addFieldTokenized
argument_list|(
name|ArtifactKeys
operator|.
name|GROUPID
argument_list|,
name|hashcodes
operator|.
name|getArtifact
argument_list|()
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addFieldExact
argument_list|(
name|ArtifactKeys
operator|.
name|GROUPID_EXACT
argument_list|,
name|hashcodes
operator|.
name|getArtifact
argument_list|()
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addFieldTokenized
argument_list|(
name|ArtifactKeys
operator|.
name|ARTIFACTID
argument_list|,
name|hashcodes
operator|.
name|getArtifact
argument_list|()
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addFieldExact
argument_list|(
name|ArtifactKeys
operator|.
name|ARTIFACTID_EXACT
argument_list|,
name|hashcodes
operator|.
name|getArtifact
argument_list|()
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addFieldTokenized
argument_list|(
name|ArtifactKeys
operator|.
name|VERSION
argument_list|,
name|hashcodes
operator|.
name|getArtifact
argument_list|()
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addFieldExact
argument_list|(
name|ArtifactKeys
operator|.
name|VERSION_EXACT
argument_list|,
name|hashcodes
operator|.
name|getArtifact
argument_list|()
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addFieldTokenized
argument_list|(
name|ArtifactKeys
operator|.
name|TYPE
argument_list|,
name|hashcodes
operator|.
name|getArtifact
argument_list|()
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addFieldUntokenized
argument_list|(
name|ArtifactKeys
operator|.
name|CLASSIFIER
argument_list|,
name|hashcodes
operator|.
name|getArtifact
argument_list|()
operator|.
name|getClassifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// Hashcode Specifics
name|doc
operator|.
name|addFieldUntokenized
argument_list|(
name|HashcodesKeys
operator|.
name|MD5
argument_list|,
name|hashcodes
operator|.
name|getArtifact
argument_list|()
operator|.
name|getModel
argument_list|()
operator|.
name|getChecksumMD5
argument_list|()
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addFieldUntokenized
argument_list|(
name|HashcodesKeys
operator|.
name|SHA1
argument_list|,
name|hashcodes
operator|.
name|getArtifact
argument_list|()
operator|.
name|getModel
argument_list|()
operator|.
name|getChecksumSHA1
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|doc
operator|.
name|getDocument
argument_list|()
return|;
block|}
specifier|public
name|LuceneRepositoryContentRecord
name|convert
parameter_list|(
name|Document
name|document
parameter_list|)
throws|throws
name|ParseException
block|{
name|HashcodesRecord
name|record
init|=
operator|new
name|HashcodesRecord
argument_list|()
decl_stmt|;
name|record
operator|.
name|setRepositoryId
argument_list|(
name|document
operator|.
name|get
argument_list|(
name|LuceneDocumentMaker
operator|.
name|REPOSITORY_ID
argument_list|)
argument_list|)
expr_stmt|;
comment|// Artifact Reference
name|String
name|groupId
init|=
name|document
operator|.
name|get
argument_list|(
name|ArtifactKeys
operator|.
name|GROUPID
argument_list|)
decl_stmt|;
name|String
name|artifactId
init|=
name|document
operator|.
name|get
argument_list|(
name|ArtifactKeys
operator|.
name|ARTIFACTID
argument_list|)
decl_stmt|;
name|String
name|version
init|=
name|document
operator|.
name|get
argument_list|(
name|ArtifactKeys
operator|.
name|VERSION
argument_list|)
decl_stmt|;
name|String
name|classifier
init|=
name|document
operator|.
name|get
argument_list|(
name|ArtifactKeys
operator|.
name|CLASSIFIER
argument_list|)
decl_stmt|;
name|String
name|type
init|=
name|document
operator|.
name|get
argument_list|(
name|ArtifactKeys
operator|.
name|TYPE
argument_list|)
decl_stmt|;
name|ArchivaArtifact
name|artifact
init|=
operator|new
name|ArchivaArtifact
argument_list|(
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
name|classifier
argument_list|,
name|type
argument_list|)
decl_stmt|;
name|record
operator|.
name|setArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
comment|// Hashcode Specifics
name|record
operator|.
name|getArtifact
argument_list|()
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumMD5
argument_list|(
name|document
operator|.
name|get
argument_list|(
name|HashcodesKeys
operator|.
name|MD5
argument_list|)
argument_list|)
expr_stmt|;
name|record
operator|.
name|getArtifact
argument_list|()
operator|.
name|getModel
argument_list|()
operator|.
name|setChecksumSHA1
argument_list|(
name|document
operator|.
name|get
argument_list|(
name|HashcodesKeys
operator|.
name|SHA1
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|record
return|;
block|}
block|}
end_class

end_unit

