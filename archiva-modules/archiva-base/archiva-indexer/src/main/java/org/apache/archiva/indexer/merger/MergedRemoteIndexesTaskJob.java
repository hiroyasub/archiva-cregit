begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|merger
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|components
operator|.
name|scheduler
operator|.
name|AbstractJob
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|index
operator|.
name|context
operator|.
name|IndexingContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|quartz
operator|.
name|JobExecutionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|quartz
operator|.
name|JobExecutionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  * @since 2.0.0  */
end_comment

begin_class
specifier|public
class|class
name|MergedRemoteIndexesTaskJob
extends|extends
name|AbstractJob
block|{
specifier|private
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|(
name|JobExecutionContext
name|context
parameter_list|)
throws|throws
name|JobExecutionException
block|{
block|}
specifier|public
name|MergedRemoteIndexesTaskResult
name|execute
parameter_list|(
name|MergedRemoteIndexesTaskRequest
name|mergedRemoteIndexesTaskRequest
parameter_list|)
throws|throws
name|IndexMergerException
block|{
name|IndexMerger
name|indexMerger
init|=
name|mergedRemoteIndexesTaskRequest
operator|.
name|indexMerger
decl_stmt|;
name|IndexingContext
name|indexingContext
init|=
name|indexMerger
operator|.
name|buildMergedIndex
argument_list|(
name|mergedRemoteIndexesTaskRequest
operator|.
name|indexMergerRequest
argument_list|)
decl_stmt|;
return|return
operator|new
name|MergedRemoteIndexesTaskResult
argument_list|(
name|indexingContext
argument_list|)
return|;
block|}
specifier|public
specifier|static
class|class
name|MergedRemoteIndexesTaskRequest
block|{
specifier|private
name|IndexMergerRequest
name|indexMergerRequest
decl_stmt|;
specifier|private
name|IndexMerger
name|indexMerger
decl_stmt|;
specifier|public
name|MergedRemoteIndexesTaskRequest
parameter_list|(
name|IndexMergerRequest
name|indexMergerRequest
parameter_list|,
name|IndexMerger
name|indexMerger
parameter_list|)
block|{
name|this
operator|.
name|indexMergerRequest
operator|=
name|indexMergerRequest
expr_stmt|;
name|this
operator|.
name|indexMerger
operator|=
name|indexMerger
expr_stmt|;
block|}
specifier|public
name|IndexMergerRequest
name|getIndexMergerRequest
parameter_list|()
block|{
return|return
name|indexMergerRequest
return|;
block|}
specifier|public
name|void
name|setIndexMergerRequest
parameter_list|(
name|IndexMergerRequest
name|indexMergerRequest
parameter_list|)
block|{
name|this
operator|.
name|indexMergerRequest
operator|=
name|indexMergerRequest
expr_stmt|;
block|}
specifier|public
name|IndexMerger
name|getIndexMerger
parameter_list|()
block|{
return|return
name|indexMerger
return|;
block|}
specifier|public
name|void
name|setIndexMerger
parameter_list|(
name|IndexMerger
name|indexMerger
parameter_list|)
block|{
name|this
operator|.
name|indexMerger
operator|=
name|indexMerger
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|MergedRemoteIndexesTaskResult
block|{
specifier|private
name|IndexingContext
name|indexingContext
decl_stmt|;
specifier|public
name|MergedRemoteIndexesTaskResult
parameter_list|(
name|IndexingContext
name|indexingContext
parameter_list|)
block|{
name|this
operator|.
name|indexingContext
operator|=
name|indexingContext
expr_stmt|;
block|}
specifier|public
name|IndexingContext
name|getIndexingContext
parameter_list|()
block|{
return|return
name|indexingContext
return|;
block|}
specifier|public
name|void
name|setIndexingContext
parameter_list|(
name|IndexingContext
name|indexingContext
parameter_list|)
block|{
name|this
operator|.
name|indexingContext
operator|=
name|indexingContext
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

