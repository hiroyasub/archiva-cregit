begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|validation
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * @author Martin Stockhammer<martin_s@apache.org>  */
end_comment

begin_class
specifier|public
class|class
name|CombinedValidationResponse
parameter_list|<
name|R
extends|extends
name|Repository
parameter_list|>
implements|implements
name|CheckedResult
argument_list|<
name|R
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|ValidationError
argument_list|>
argument_list|>
argument_list|>
block|{
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|ValidationError
argument_list|>
argument_list|>
name|errorMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|( )
decl_stmt|;
specifier|private
specifier|final
name|R
name|repository
decl_stmt|;
specifier|public
name|CombinedValidationResponse
parameter_list|(
name|R
name|repository
parameter_list|)
block|{
name|this
operator|.
name|repository
operator|=
name|repository
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|R
name|getRepository
parameter_list|( )
block|{
return|return
name|repository
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isValid
parameter_list|( )
block|{
return|return
name|errorMap
operator|.
name|size
argument_list|()
operator|==
literal|0
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|ValidationError
argument_list|>
argument_list|>
name|getResult
parameter_list|( )
block|{
return|return
name|errorMap
return|;
block|}
specifier|public
name|void
name|addErrors
parameter_list|(
name|String
name|key
parameter_list|,
name|List
argument_list|<
name|ValidationError
argument_list|>
name|errorList
parameter_list|)
block|{
if|if
condition|(
name|StringUtils
operator|.
name|isNotEmpty
argument_list|(
name|key
argument_list|)
operator|&&
name|errorList
operator|!=
literal|null
operator|&&
name|errorList
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|this
operator|.
name|errorMap
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|errorList
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|addErrors
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|ValidationError
argument_list|>
argument_list|>
name|errorMap
parameter_list|)
block|{
if|if
condition|(
name|errorMap
operator|!=
literal|null
condition|)
block|{
name|errorMap
operator|.
name|entrySet
argument_list|( )
operator|.
name|stream
argument_list|( )
operator|.
name|forEach
argument_list|(
name|e
lambda|->
name|addErrors
argument_list|(
name|e
operator|.
name|getKey
argument_list|( )
argument_list|,
name|e
operator|.
name|getValue
argument_list|( )
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|addResult
parameter_list|(
name|CheckedResult
argument_list|<
name|R
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|ValidationError
argument_list|>
argument_list|>
argument_list|>
name|result
parameter_list|)
block|{
name|this
operator|.
name|addErrors
argument_list|(
name|result
operator|.
name|getResult
argument_list|( )
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

