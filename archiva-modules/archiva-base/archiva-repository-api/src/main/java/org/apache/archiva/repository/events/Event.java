begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|events
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|LocalDateTime
import|;
end_import

begin_class
specifier|public
class|class
name|Event
parameter_list|<
name|O
parameter_list|>
block|{
name|Event
name|previous
decl_stmt|;
specifier|final
name|O
name|originator
decl_stmt|;
specifier|final
name|EventType
name|type
decl_stmt|;
specifier|final
name|LocalDateTime
name|instant
decl_stmt|;
specifier|public
name|Event
parameter_list|(
name|EventType
name|type
parameter_list|,
name|O
name|originator
parameter_list|)
block|{
name|this
operator|.
name|originator
operator|=
name|originator
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|instant
operator|=
name|LocalDateTime
operator|.
name|now
argument_list|()
expr_stmt|;
block|}
specifier|private
parameter_list|<
name|OO
parameter_list|>
name|Event
parameter_list|(
name|Event
argument_list|<
name|OO
argument_list|>
name|previous
parameter_list|,
name|O
name|originator
parameter_list|)
block|{
name|this
operator|.
name|previous
operator|=
name|previous
expr_stmt|;
name|this
operator|.
name|originator
operator|=
name|originator
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|previous
operator|.
name|getType
argument_list|()
expr_stmt|;
name|this
operator|.
name|instant
operator|=
name|previous
operator|.
name|getInstant
argument_list|()
expr_stmt|;
block|}
specifier|public
name|EventType
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
empty_stmt|;
specifier|public
name|LocalDateTime
name|getInstant
parameter_list|()
block|{
return|return
name|instant
return|;
block|}
specifier|public
name|O
name|getOriginator
parameter_list|()
block|{
return|return
name|originator
return|;
block|}
specifier|public
parameter_list|<
name|NO
parameter_list|>
name|Event
argument_list|<
name|NO
argument_list|>
name|recreate
parameter_list|(
name|NO
name|newOrigin
parameter_list|)
block|{
return|return
operator|new
name|Event
argument_list|(
name|this
argument_list|,
name|newOrigin
argument_list|)
return|;
block|}
specifier|public
name|Event
name|getPreviousEvent
parameter_list|()
block|{
return|return
name|previous
return|;
block|}
specifier|public
name|boolean
name|hasPreviousEvent
parameter_list|()
block|{
return|return
name|previous
operator|!=
literal|null
return|;
block|}
block|}
end_class

end_unit

