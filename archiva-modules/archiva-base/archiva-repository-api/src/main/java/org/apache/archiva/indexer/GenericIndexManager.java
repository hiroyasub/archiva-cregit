begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|PathUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RepositoryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|features
operator|.
name|IndexCreationFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_class
annotation|@
name|Service
argument_list|(
literal|"indexManager#none"
argument_list|)
specifier|public
class|class
name|GenericIndexManager
implements|implements
name|ArchivaIndexManager
block|{
specifier|private
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|GenericIndexManager
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_INDEXER_DIR
init|=
literal|".indexer"
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|pack
parameter_list|(
name|ArchivaIndexingContext
name|context
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|scan
parameter_list|(
name|ArchivaIndexingContext
name|context
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|update
parameter_list|(
name|ArchivaIndexingContext
name|context
parameter_list|,
name|boolean
name|fullUpdate
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|addArtifactsToIndex
parameter_list|(
name|ArchivaIndexingContext
name|context
parameter_list|,
name|Collection
argument_list|<
name|URI
argument_list|>
name|artifactReference
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|removeArtifactsFromIndex
parameter_list|(
name|ArchivaIndexingContext
name|context
parameter_list|,
name|Collection
argument_list|<
name|URI
argument_list|>
name|artifactReference
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|supportsRepository
parameter_list|(
name|RepositoryType
name|type
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|ArchivaIndexingContext
name|createContext
parameter_list|(
name|Repository
name|repository
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|ArchivaIndexingContext
name|reset
parameter_list|(
name|ArchivaIndexingContext
name|context
parameter_list|)
throws|throws
name|IndexUpdateFailedException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|ArchivaIndexingContext
name|move
parameter_list|(
name|ArchivaIndexingContext
name|context
parameter_list|,
name|Repository
name|repo
parameter_list|)
throws|throws
name|IndexCreationFailedException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateLocalIndexPath
parameter_list|(
name|Repository
name|repo
parameter_list|)
block|{
if|if
condition|(
name|repo
operator|.
name|supportsFeature
argument_list|(
name|IndexCreationFeature
operator|.
name|class
argument_list|)
condition|)
block|{
name|IndexCreationFeature
name|icf
init|=
name|repo
operator|.
name|getFeature
argument_list|(
name|IndexCreationFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
try|try
block|{
name|icf
operator|.
name|setLocalIndexPath
argument_list|(
name|getIndexPath
argument_list|(
name|repo
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Could not set local index path for {}. New URI: {}"
argument_list|,
name|repo
operator|.
name|getId
argument_list|()
argument_list|,
name|icf
operator|.
name|getIndexPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|Path
name|getIndexPath
parameter_list|(
name|Repository
name|repo
parameter_list|)
throws|throws
name|IOException
block|{
name|IndexCreationFeature
name|icf
init|=
name|repo
operator|.
name|getFeature
argument_list|(
name|IndexCreationFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|Path
name|repoDir
init|=
name|repo
operator|.
name|getLocalPath
argument_list|()
decl_stmt|;
name|URI
name|indexDir
init|=
name|icf
operator|.
name|getIndexPath
argument_list|()
decl_stmt|;
name|Path
name|indexDirectory
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|indexDir
operator|.
name|toString
argument_list|( )
argument_list|)
condition|)
block|{
name|indexDirectory
operator|=
name|PathUtil
operator|.
name|getPathFromUri
argument_list|(
name|indexDir
argument_list|)
expr_stmt|;
comment|// not absolute so create it in repository directory
if|if
condition|(
operator|!
name|indexDirectory
operator|.
name|isAbsolute
argument_list|( )
condition|)
block|{
name|indexDirectory
operator|=
name|repoDir
operator|.
name|resolve
argument_list|(
name|indexDirectory
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|indexDirectory
operator|=
name|repoDir
operator|.
name|resolve
argument_list|(
name|DEFAULT_INDEXER_DIR
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|Files
operator|.
name|exists
argument_list|(
name|indexDirectory
argument_list|)
condition|)
block|{
name|Files
operator|.
name|createDirectories
argument_list|(
name|indexDirectory
argument_list|)
expr_stmt|;
block|}
return|return
name|indexDirectory
return|;
block|}
block|}
end_class

end_unit

