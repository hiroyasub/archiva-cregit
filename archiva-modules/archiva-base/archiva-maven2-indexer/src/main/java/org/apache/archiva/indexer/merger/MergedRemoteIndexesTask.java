begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|merger
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|index
operator|.
name|context
operator|.
name|IndexingContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  * @since 2.0.0  */
end_comment

begin_class
specifier|public
class|class
name|MergedRemoteIndexesTask
implements|implements
name|Runnable
block|{
specifier|private
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|MergedRemoteIndexesTaskRequest
name|mergedRemoteIndexesTaskRequest
decl_stmt|;
specifier|public
name|MergedRemoteIndexesTask
parameter_list|(
name|MergedRemoteIndexesTaskRequest
name|mergedRemoteIndexesTaskRequest
parameter_list|)
block|{
name|this
operator|.
name|mergedRemoteIndexesTaskRequest
operator|=
name|mergedRemoteIndexesTaskRequest
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|this
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IndexMergerException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|error
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|MergedRemoteIndexesTaskResult
name|execute
parameter_list|()
throws|throws
name|IndexMergerException
block|{
name|IndexMerger
name|indexMerger
init|=
name|mergedRemoteIndexesTaskRequest
operator|.
name|getIndexMerger
argument_list|()
decl_stmt|;
name|IndexingContext
name|indexingContext
init|=
name|indexMerger
operator|.
name|buildMergedIndex
argument_list|(
name|mergedRemoteIndexesTaskRequest
operator|.
name|getIndexMergerRequest
argument_list|()
argument_list|)
decl_stmt|;
return|return
operator|new
name|MergedRemoteIndexesTaskResult
argument_list|(
name|indexingContext
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|o
operator|instanceof
name|MergedRemoteIndexesTask
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|MergedRemoteIndexesTask
name|that
init|=
operator|(
name|MergedRemoteIndexesTask
operator|)
name|o
decl_stmt|;
return|return
name|mergedRemoteIndexesTaskRequest
operator|.
name|equals
argument_list|(
name|that
operator|.
name|mergedRemoteIndexesTaskRequest
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|mergedRemoteIndexesTaskRequest
operator|.
name|hashCode
argument_list|()
return|;
block|}
block|}
end_class

end_unit

