begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|maven
package|;
end_package

begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *  http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, * software distributed under the License is distributed on an * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY * KIND, either express or implied.  See the License for the * specific language governing permissions and limitations * under the License. */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|ArchivaIndexingContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ManagedRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|features
operator|.
name|IndexCreationFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|maven2
operator|.
name|MavenManagedRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|test
operator|.
name|utils
operator|.
name|ArchivaSpringJUnit4ClassRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|ArchivaSpringJUnit4ClassRunner
operator|.
name|class
argument_list|)
annotation|@
name|ContextConfiguration
argument_list|(
name|locations
operator|=
block|{
literal|"classpath*:/META-INF/spring-context.xml"
block|,
literal|"classpath:/spring-context.xml"
block|}
argument_list|)
specifier|public
class|class
name|MavenIndexManagerTest
block|{
annotation|@
name|Inject
name|MavenIndexManager
name|mavenIndexManager
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|pack
parameter_list|()
throws|throws
name|Exception
block|{
block|}
annotation|@
name|Test
specifier|public
name|void
name|scan
parameter_list|()
throws|throws
name|Exception
block|{
block|}
annotation|@
name|Test
specifier|public
name|void
name|update
parameter_list|()
throws|throws
name|Exception
block|{
block|}
annotation|@
name|Test
specifier|public
name|void
name|addArtifactsToIndex
parameter_list|()
throws|throws
name|Exception
block|{
block|}
annotation|@
name|Test
specifier|public
name|void
name|removeArtifactsFromIndex
parameter_list|()
throws|throws
name|Exception
block|{
block|}
annotation|@
name|Test
specifier|public
name|void
name|supportsRepository
parameter_list|()
throws|throws
name|Exception
block|{
block|}
annotation|@
name|Test
specifier|public
name|void
name|createContext
parameter_list|()
throws|throws
name|Exception
block|{
name|MavenManagedRepository
name|repository
init|=
operator|new
name|MavenManagedRepository
argument_list|(
literal|"test-repo"
argument_list|,
literal|"Test Repo"
argument_list|,
name|Paths
operator|.
name|get
argument_list|(
literal|"target/repositories"
argument_list|)
argument_list|)
decl_stmt|;
name|repository
operator|.
name|setLocation
argument_list|(
operator|new
name|URI
argument_list|(
literal|"test-repo"
argument_list|)
argument_list|)
expr_stmt|;
name|IndexCreationFeature
name|icf
init|=
name|repository
operator|.
name|getFeature
argument_list|(
name|IndexCreationFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|icf
operator|.
name|setIndexPath
argument_list|(
operator|new
name|URI
argument_list|(
literal|".index-test"
argument_list|)
argument_list|)
expr_stmt|;
name|ArchivaIndexingContext
name|ctx
init|=
name|mavenIndexManager
operator|.
name|createContext
argument_list|(
name|repository
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|repository
argument_list|,
name|ctx
operator|.
name|getRepository
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test-repo"
argument_list|,
name|ctx
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|Path
name|indexPath
init|=
name|Paths
operator|.
name|get
argument_list|(
literal|"target/repositories/test-repo/.index-test"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|indexPath
operator|.
name|toAbsolutePath
argument_list|()
argument_list|,
name|Paths
operator|.
name|get
argument_list|(
name|ctx
operator|.
name|getPath
argument_list|()
argument_list|)
operator|.
name|toAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|indexPath
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

