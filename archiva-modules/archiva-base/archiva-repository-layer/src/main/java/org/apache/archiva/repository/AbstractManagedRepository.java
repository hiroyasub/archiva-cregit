begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_comment
comment|/**  * Simple implementation of a managed repository.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractManagedRepository
extends|extends
name|AbstractRepository
implements|implements
name|EditableManagedRepository
block|{
specifier|private
name|boolean
name|blocksRedeployment
init|=
literal|false
decl_stmt|;
specifier|private
name|ManagedRepositoryContent
name|content
decl_stmt|;
specifier|public
name|AbstractManagedRepository
parameter_list|(
name|RepositoryType
name|type
parameter_list|,
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|type
argument_list|,
name|id
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
specifier|public
name|AbstractManagedRepository
parameter_list|(
name|Locale
name|primaryLocale
parameter_list|,
name|RepositoryType
name|type
parameter_list|,
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|primaryLocale
argument_list|,
name|type
argument_list|,
name|id
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|ManagedRepositoryContent
name|getContent
parameter_list|( )
block|{
return|return
name|content
return|;
block|}
specifier|protected
name|void
name|setContent
parameter_list|(
name|ManagedRepositoryContent
name|content
parameter_list|)
block|{
name|this
operator|.
name|content
operator|=
name|content
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBlocksRedeployment
parameter_list|(
name|boolean
name|blocksRedeployment
parameter_list|)
block|{
name|this
operator|.
name|blocksRedeployment
operator|=
name|blocksRedeployment
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|blocksRedeployments
parameter_list|( )
block|{
return|return
name|blocksRedeployment
return|;
block|}
block|}
end_class

end_unit

