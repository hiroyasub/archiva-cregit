begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|features
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_comment
comment|/**  * Created by martin on 30.09.17.  */
end_comment

begin_interface
specifier|public
interface|interface
name|RepositoryFeature
parameter_list|<
name|T
extends|extends
name|RepositoryFeature
parameter_list|<
name|T
parameter_list|>
parameter_list|>
block|{
specifier|default
name|String
name|getId
parameter_list|()
block|{
return|return
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
return|;
block|}
specifier|default
name|boolean
name|isFeature
parameter_list|(
name|String
name|featureId
parameter_list|)
block|{
return|return
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|featureId
argument_list|)
return|;
block|}
specifier|default
parameter_list|<
name|K
extends|extends
name|RepositoryFeature
argument_list|<
name|K
argument_list|>
parameter_list|>
name|boolean
name|isFeature
parameter_list|(
name|Class
argument_list|<
name|K
argument_list|>
name|clazz
parameter_list|)
block|{
return|return
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|equals
argument_list|(
name|clazz
argument_list|)
return|;
block|}
name|T
name|get
parameter_list|()
function_decl|;
block|}
end_interface

end_unit

