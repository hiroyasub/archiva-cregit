begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|project
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|project
operator|.
name|ProjectModelMerge
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaProjectModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|VersionedReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|spring
operator|.
name|PlexusInSpringTestCase
import|;
end_import

begin_comment
comment|/**  * ProjectModelMergeTest  *   * @author jzurbano  */
end_comment

begin_class
specifier|public
class|class
name|ProjectModelMergeTest
extends|extends
name|PlexusInSpringTestCase
block|{
specifier|private
name|ProjectModelMerge
name|modelMerge
decl_stmt|;
specifier|private
name|Enumeration
argument_list|<
name|String
argument_list|>
name|keys
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|modelMerge
operator|=
operator|new
name|ProjectModelMerge
argument_list|()
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
name|void
name|testPropertiesMerge
parameter_list|()
throws|throws
name|Exception
block|{
name|ArchivaProjectModel
name|mainProject
init|=
name|createMainProject
argument_list|()
decl_stmt|;
name|ArchivaProjectModel
name|parentProject
init|=
name|createParentProject
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|mainProject
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
name|Properties
name|prop
init|=
name|parentProject
operator|.
name|getProperties
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|prop
argument_list|)
expr_stmt|;
name|keys
operator|=
operator|(
name|Enumeration
argument_list|<
name|String
argument_list|>
operator|)
name|prop
operator|.
name|propertyNames
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|keys
operator|.
name|hasMoreElements
argument_list|()
argument_list|)
expr_stmt|;
name|modelMerge
operator|.
name|merge
argument_list|(
name|mainProject
argument_list|,
name|parentProject
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ArchivaProjectModel
name|createMainProject
parameter_list|()
block|{
name|ArchivaProjectModel
name|mainProject
init|=
operator|new
name|ArchivaProjectModel
argument_list|()
decl_stmt|;
name|VersionedReference
name|parent
init|=
operator|new
name|VersionedReference
argument_list|()
decl_stmt|;
name|parent
operator|.
name|setGroupId
argument_list|(
literal|"org.apache"
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setArtifactId
argument_list|(
literal|"apache"
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setVersion
argument_list|(
literal|"4"
argument_list|)
expr_stmt|;
name|mainProject
operator|.
name|setParentProject
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|mainProject
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.servicemix"
argument_list|)
expr_stmt|;
name|mainProject
operator|.
name|setArtifactId
argument_list|(
literal|"servicemix-pom"
argument_list|)
expr_stmt|;
name|mainProject
operator|.
name|setVersion
argument_list|(
literal|"2"
argument_list|)
expr_stmt|;
name|mainProject
operator|.
name|setPackaging
argument_list|(
literal|"pom"
argument_list|)
expr_stmt|;
name|mainProject
operator|.
name|setName
argument_list|(
literal|"ServiceMix POM"
argument_list|)
expr_stmt|;
name|mainProject
operator|.
name|setUrl
argument_list|(
literal|"http://servicemix.apache.org/"
argument_list|)
expr_stmt|;
name|mainProject
operator|.
name|setDescription
argument_list|(
literal|"This pom provides project information that is common to all ServiceMix branches."
argument_list|)
expr_stmt|;
name|mainProject
operator|.
name|setProperties
argument_list|(
operator|new
name|Properties
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|mainProject
return|;
block|}
specifier|private
name|ArchivaProjectModel
name|createParentProject
parameter_list|()
block|{
name|ArchivaProjectModel
name|parentProject
init|=
operator|new
name|ArchivaProjectModel
argument_list|()
decl_stmt|;
name|parentProject
operator|.
name|setGroupId
argument_list|(
literal|"org.apache"
argument_list|)
expr_stmt|;
name|parentProject
operator|.
name|setArtifactId
argument_list|(
literal|"apache"
argument_list|)
expr_stmt|;
name|parentProject
operator|.
name|setVersion
argument_list|(
literal|"4"
argument_list|)
expr_stmt|;
name|parentProject
operator|.
name|setPackaging
argument_list|(
literal|"pom"
argument_list|)
expr_stmt|;
name|Properties
name|prop
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|prop
operator|.
name|setProperty
argument_list|(
literal|"test.key"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|parentProject
operator|.
name|setProperties
argument_list|(
name|prop
argument_list|)
expr_stmt|;
return|return
name|parentProject
return|;
block|}
block|}
end_class

end_unit

