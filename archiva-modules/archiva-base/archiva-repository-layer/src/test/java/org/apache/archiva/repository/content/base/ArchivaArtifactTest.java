begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|base
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|base
operator|.
name|builder
operator|.
name|OptBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|BeforeEach
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * @author Martin Stockhammer<martin_s@apache.org>  */
end_comment

begin_class
class|class
name|ArchivaArtifactTest
extends|extends
name|ContentItemTest
block|{
name|ArchivaProject
name|project
decl_stmt|;
name|ArchivaVersion
name|version
decl_stmt|;
annotation|@
name|BeforeEach
name|void
name|init
parameter_list|()
block|{
name|ArchivaNamespace
name|namespace
init|=
name|ArchivaNamespace
operator|.
name|withRepository
argument_list|(
name|repository
argument_list|)
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withNamespace
argument_list|(
literal|"abc.def"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|project
operator|=
name|ArchivaProject
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withNamespace
argument_list|(
name|namespace
argument_list|)
operator|.
name|withId
argument_list|(
literal|"proj001"
argument_list|)
operator|.
name|build
argument_list|( )
expr_stmt|;
name|version
operator|=
name|ArchivaVersion
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withProject
argument_list|(
name|project
argument_list|)
operator|.
name|withVersion
argument_list|(
literal|"2.33.1"
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|OptBuilder
name|getBuilder
parameter_list|( )
block|{
return|return
name|ArchivaArtifact
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|withId
argument_list|(
literal|"testartifact"
argument_list|)
return|;
block|}
annotation|@
name|Test
name|void
name|idOnly
parameter_list|()
block|{
name|ArchivaArtifact
name|item
init|=
name|ArchivaArtifact
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|withId
argument_list|(
literal|"testartifact"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getRepository
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|repository
argument_list|,
name|item
operator|.
name|getRepository
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getAsset
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|asset
argument_list|,
name|item
operator|.
name|getAsset
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|version
argument_list|,
name|item
operator|.
name|getVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getArtifactVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getArtifactVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getRemainder
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getRemainder
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getContentType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getContentType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getId
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testartifact"
argument_list|,
name|item
operator|.
name|getId
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
name|void
name|withArtifactVersion
parameter_list|()
block|{
name|ArchivaArtifact
name|item
init|=
name|ArchivaArtifact
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|withId
argument_list|(
literal|"testartifact"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"1.0.10494949"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getRepository
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|repository
argument_list|,
name|item
operator|.
name|getRepository
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getAsset
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|asset
argument_list|,
name|item
operator|.
name|getAsset
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|version
argument_list|,
name|item
operator|.
name|getVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getRemainder
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getRemainder
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getContentType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getContentType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testartifact"
argument_list|,
name|item
operator|.
name|getId
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getArtifactVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.0.10494949"
argument_list|,
name|item
operator|.
name|getArtifactVersion
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
name|void
name|withType
parameter_list|()
block|{
name|ArchivaArtifact
name|item
init|=
name|ArchivaArtifact
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|withId
argument_list|(
literal|"testartifact"
argument_list|)
operator|.
name|withType
argument_list|(
literal|"javadoc"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getRepository
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|repository
argument_list|,
name|item
operator|.
name|getRepository
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getAsset
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|asset
argument_list|,
name|item
operator|.
name|getAsset
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|version
argument_list|,
name|item
operator|.
name|getVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"javadoc"
argument_list|,
name|item
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getRemainder
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getRemainder
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getContentType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getContentType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testartifact"
argument_list|,
name|item
operator|.
name|getId
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getArtifactVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getArtifactVersion
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
name|void
name|withClassifier
parameter_list|()
block|{
name|ArchivaArtifact
name|item
init|=
name|ArchivaArtifact
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|withId
argument_list|(
literal|"testartifact"
argument_list|)
operator|.
name|withClassifier
argument_list|(
literal|"source"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getRepository
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|repository
argument_list|,
name|item
operator|.
name|getRepository
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getAsset
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|asset
argument_list|,
name|item
operator|.
name|getAsset
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|version
argument_list|,
name|item
operator|.
name|getVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"source"
argument_list|,
name|item
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getRemainder
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getRemainder
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getContentType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getContentType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testartifact"
argument_list|,
name|item
operator|.
name|getId
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getArtifactVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getArtifactVersion
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
name|void
name|withRemainder
parameter_list|()
block|{
name|ArchivaArtifact
name|item
init|=
name|ArchivaArtifact
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|withId
argument_list|(
literal|"testartifact"
argument_list|)
operator|.
name|withRemainder
argument_list|(
literal|"jar.md5"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getRepository
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|repository
argument_list|,
name|item
operator|.
name|getRepository
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getAsset
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|asset
argument_list|,
name|item
operator|.
name|getAsset
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|version
argument_list|,
name|item
operator|.
name|getVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getRemainder
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jar.md5"
argument_list|,
name|item
operator|.
name|getRemainder
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getContentType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getContentType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testartifact"
argument_list|,
name|item
operator|.
name|getId
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getArtifactVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getArtifactVersion
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
name|void
name|withContentType
parameter_list|()
block|{
name|ArchivaArtifact
name|item
init|=
name|ArchivaArtifact
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|withId
argument_list|(
literal|"testartifact"
argument_list|)
operator|.
name|withContentType
argument_list|(
literal|"text/xml"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getRepository
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|repository
argument_list|,
name|item
operator|.
name|getRepository
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getAsset
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|asset
argument_list|,
name|item
operator|.
name|getAsset
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|version
argument_list|,
name|item
operator|.
name|getVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getRemainder
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getRemainder
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getContentType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"text/xml"
argument_list|,
name|item
operator|.
name|getContentType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testartifact"
argument_list|,
name|item
operator|.
name|getId
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getArtifactVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|item
operator|.
name|getArtifactVersion
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
name|void
name|withAllAttributes
parameter_list|()
block|{
name|ArchivaArtifact
name|item
init|=
name|ArchivaArtifact
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|withId
argument_list|(
literal|"testartifact"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"3.0.484848"
argument_list|)
operator|.
name|withType
argument_list|(
literal|"jar"
argument_list|)
operator|.
name|withClassifier
argument_list|(
literal|"private"
argument_list|)
operator|.
name|withRemainder
argument_list|(
literal|"jar.sha1"
argument_list|)
operator|.
name|withContentType
argument_list|(
literal|"text/html"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|assertNotNull
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getRepository
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|repository
argument_list|,
name|item
operator|.
name|getRepository
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getAsset
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|asset
argument_list|,
name|item
operator|.
name|getAsset
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|version
argument_list|,
name|item
operator|.
name|getVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|item
operator|.
name|getType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"private"
argument_list|,
name|item
operator|.
name|getClassifier
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getRemainder
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jar.sha1"
argument_list|,
name|item
operator|.
name|getRemainder
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getContentType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"text/html"
argument_list|,
name|item
operator|.
name|getContentType
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testartifact"
argument_list|,
name|item
operator|.
name|getId
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|item
operator|.
name|getArtifactVersion
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"3.0.484848"
argument_list|,
name|item
operator|.
name|getArtifactVersion
argument_list|( )
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
name|void
name|equality
parameter_list|()
block|{
name|ArchivaArtifact
name|item1
init|=
name|ArchivaArtifact
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|withId
argument_list|(
literal|"testartifact"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"3.0.484848"
argument_list|)
operator|.
name|withType
argument_list|(
literal|"jar"
argument_list|)
operator|.
name|withClassifier
argument_list|(
literal|"private"
argument_list|)
operator|.
name|withRemainder
argument_list|(
literal|"jar.sha1"
argument_list|)
operator|.
name|withContentType
argument_list|(
literal|"text/html"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|ArchivaArtifact
name|item2
init|=
name|ArchivaArtifact
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|withId
argument_list|(
literal|"testartifact"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"3.0.484849"
argument_list|)
operator|.
name|withType
argument_list|(
literal|"jar"
argument_list|)
operator|.
name|withClassifier
argument_list|(
literal|"private"
argument_list|)
operator|.
name|withRemainder
argument_list|(
literal|"jar.sha1"
argument_list|)
operator|.
name|withContentType
argument_list|(
literal|"text/html"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|ArchivaArtifact
name|item3
init|=
name|ArchivaArtifact
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|withId
argument_list|(
literal|"testartifact"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"3.0.484848"
argument_list|)
operator|.
name|withType
argument_list|(
literal|"jar"
argument_list|)
operator|.
name|withClassifier
argument_list|(
literal|"private"
argument_list|)
operator|.
name|withRemainder
argument_list|(
literal|"jar.sha1"
argument_list|)
operator|.
name|withContentType
argument_list|(
literal|"text/html"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|ArchivaArtifact
name|item4
init|=
name|ArchivaArtifact
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|withId
argument_list|(
literal|"testartifact"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"3.0.484848"
argument_list|)
operator|.
name|withType
argument_list|(
literal|"sourcejar"
argument_list|)
operator|.
name|withClassifier
argument_list|(
literal|"private"
argument_list|)
operator|.
name|withRemainder
argument_list|(
literal|"jar.sha1"
argument_list|)
operator|.
name|withContentType
argument_list|(
literal|"text/html"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|ArchivaArtifact
name|item5
init|=
name|ArchivaArtifact
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|withId
argument_list|(
literal|"testartifact"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"3.0.484848"
argument_list|)
operator|.
name|withType
argument_list|(
literal|"jar"
argument_list|)
operator|.
name|withClassifier
argument_list|(
literal|"public"
argument_list|)
operator|.
name|withRemainder
argument_list|(
literal|"jar.sha1"
argument_list|)
operator|.
name|withContentType
argument_list|(
literal|"text/html"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|ArchivaArtifact
name|item6
init|=
name|ArchivaArtifact
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|withId
argument_list|(
literal|"testartifact"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"3.0.484848"
argument_list|)
operator|.
name|withType
argument_list|(
literal|"jar"
argument_list|)
operator|.
name|withClassifier
argument_list|(
literal|"private"
argument_list|)
operator|.
name|withRemainder
argument_list|(
literal|"jar.md5"
argument_list|)
operator|.
name|withContentType
argument_list|(
literal|"text/html"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|ArchivaArtifact
name|item7
init|=
name|ArchivaArtifact
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|withId
argument_list|(
literal|"testartifact"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"3.0.484848"
argument_list|)
operator|.
name|withType
argument_list|(
literal|"jar"
argument_list|)
operator|.
name|withClassifier
argument_list|(
literal|"private"
argument_list|)
operator|.
name|withRemainder
argument_list|(
literal|"jar.sha1"
argument_list|)
operator|.
name|withContentType
argument_list|(
literal|"text/xml"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|ArchivaArtifact
name|item8
init|=
name|ArchivaArtifact
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|withId
argument_list|(
literal|"testartifact2"
argument_list|)
operator|.
name|withArtifactVersion
argument_list|(
literal|"3.0.484848"
argument_list|)
operator|.
name|withType
argument_list|(
literal|"jar"
argument_list|)
operator|.
name|withClassifier
argument_list|(
literal|"private"
argument_list|)
operator|.
name|withRemainder
argument_list|(
literal|"jar.sha1"
argument_list|)
operator|.
name|withContentType
argument_list|(
literal|"text/html"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|ArchivaArtifact
name|item9
init|=
name|ArchivaArtifact
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|withId
argument_list|(
literal|"testartifact2"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|ArchivaArtifact
name|item10
init|=
name|ArchivaArtifact
operator|.
name|withAsset
argument_list|(
name|asset
argument_list|)
operator|.
name|withVersion
argument_list|(
name|version
argument_list|)
operator|.
name|withId
argument_list|(
literal|"testartifact2"
argument_list|)
operator|.
name|build
argument_list|( )
decl_stmt|;
name|assertNotEquals
argument_list|(
name|item1
argument_list|,
name|item2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|item1
argument_list|,
name|item3
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
name|item1
argument_list|,
name|item4
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
name|item1
argument_list|,
name|item5
argument_list|)
expr_stmt|;
comment|// remainder and content type are ignored
name|assertEquals
argument_list|(
name|item1
argument_list|,
name|item6
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|item1
argument_list|,
name|item7
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
name|item1
argument_list|,
name|item8
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|item9
argument_list|,
name|item10
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

