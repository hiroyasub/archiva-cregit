begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|base
operator|.
name|group
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|merger
operator|.
name|MergedRemoteIndexesScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RepositoryRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|base
operator|.
name|ArchivaRepositoryRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|base
operator|.
name|ConfigurationHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|validation
operator|.
name|RepositoryValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|extension
operator|.
name|ExtendWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|SpringExtension
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Named
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * @author Martin Stockhammer<martin_s@apache.org>  */
end_comment

begin_class
annotation|@
name|ExtendWith
argument_list|(
name|SpringExtension
operator|.
name|class
argument_list|)
annotation|@
name|ContextConfiguration
argument_list|(
name|locations
operator|=
block|{
literal|"classpath*:/META-INF/spring-context.xml"
block|,
literal|"classpath:/spring-context-group.xml"
block|}
argument_list|)
class|class
name|RepositoryGroupHandlerTest
block|{
annotation|@
name|Inject
annotation|@
name|Named
argument_list|(
literal|"repositoryRegistry"
argument_list|)
name|ArchivaRepositoryRegistry
name|repositoryRegistry
decl_stmt|;
annotation|@
name|Inject
name|ConfigurationHandler
name|configurationHandler
decl_stmt|;
annotation|@
name|Inject
annotation|@
name|Named
argument_list|(
literal|"mergedRemoteIndexesScheduler#default"
argument_list|)
name|MergedRemoteIndexesScheduler
name|mergedRemoteIndexesScheduler
decl_stmt|;
annotation|@
name|Inject
name|List
argument_list|<
name|RepositoryValidator
argument_list|<
name|?
extends|extends
name|Repository
argument_list|>
argument_list|>
name|repositoryValidatorList
decl_stmt|;
annotation|@
name|Inject
name|ArchivaConfiguration
name|archivaConfiguration
decl_stmt|;
specifier|private
name|RepositoryGroupHandler
name|createHandler
parameter_list|()
block|{
name|RepositoryGroupHandler
name|groupHandler
init|=
operator|new
name|RepositoryGroupHandler
argument_list|(
name|repositoryRegistry
argument_list|,
name|configurationHandler
argument_list|,
name|mergedRemoteIndexesScheduler
argument_list|,
name|repositoryValidatorList
argument_list|)
decl_stmt|;
name|groupHandler
operator|.
name|init
argument_list|()
expr_stmt|;
return|return
name|groupHandler
return|;
block|}
annotation|@
name|Test
name|void
name|initializeFromConfig
parameter_list|( )
block|{
name|RepositoryGroupHandler
name|groupHandler
init|=
name|createHandler
argument_list|( )
decl_stmt|;
name|assertNotNull
argument_list|(
name|groupHandler
argument_list|)
expr_stmt|;
name|groupHandler
operator|.
name|initializeFromConfig
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|groupHandler
operator|.
name|getAll
argument_list|( )
operator|.
name|size
argument_list|( )
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|groupHandler
operator|.
name|get
argument_list|(
literal|"test-group-01"
argument_list|)
operator|.
name|getRepositories
argument_list|( )
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"internal"
argument_list|,
name|groupHandler
operator|.
name|get
argument_list|(
literal|"test-group-01"
argument_list|)
operator|.
name|getRepositories
argument_list|( )
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
name|void
name|activateRepository
parameter_list|( )
block|{
block|}
annotation|@
name|Test
name|void
name|newInstancesFromConfig
parameter_list|( )
block|{
block|}
annotation|@
name|Test
name|void
name|newInstance
parameter_list|( )
block|{
block|}
annotation|@
name|Test
name|void
name|testNewInstance
parameter_list|( )
block|{
block|}
annotation|@
name|Test
name|void
name|put
parameter_list|( )
block|{
block|}
annotation|@
name|Test
name|void
name|testPut
parameter_list|( )
block|{
block|}
annotation|@
name|Test
name|void
name|testPut1
parameter_list|( )
block|{
block|}
annotation|@
name|Test
name|void
name|putWithCheck
parameter_list|( )
block|{
block|}
annotation|@
name|Test
name|void
name|remove
parameter_list|( )
block|{
block|}
annotation|@
name|Test
name|void
name|testRemove
parameter_list|( )
block|{
block|}
annotation|@
name|Test
name|void
name|get
parameter_list|( )
block|{
block|}
annotation|@
name|Test
name|void
name|testClone
parameter_list|( )
block|{
block|}
annotation|@
name|Test
name|void
name|updateReferences
parameter_list|( )
block|{
block|}
annotation|@
name|Test
name|void
name|getAll
parameter_list|( )
block|{
block|}
annotation|@
name|Test
name|void
name|getValidator
parameter_list|( )
block|{
block|}
annotation|@
name|Test
name|void
name|validateRepository
parameter_list|( )
block|{
block|}
annotation|@
name|Test
name|void
name|validateRepositoryForUpdate
parameter_list|( )
block|{
block|}
annotation|@
name|Test
name|void
name|has
parameter_list|( )
block|{
block|}
annotation|@
name|Test
name|void
name|close
parameter_list|( )
block|{
block|}
block|}
end_class

end_unit

