begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|event
operator|.
name|context
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|event
operator|.
name|EventContext
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * This context provides user information.  *  * @author Martin Schreier<martin_s@apache.org>  */
end_comment

begin_class
specifier|public
class|class
name|UserContext
implements|implements
name|EventContext
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|3499164111736559781L
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PREFIX
init|=
literal|"user"
decl_stmt|;
specifier|private
specifier|final
name|String
name|userId
decl_stmt|;
specifier|private
specifier|final
name|String
name|remoteAddress
decl_stmt|;
specifier|public
name|UserContext
parameter_list|(
name|String
name|user
parameter_list|,
name|String
name|remoteAddress
parameter_list|)
block|{
name|this
operator|.
name|userId
operator|=
name|user
operator|==
literal|null
condition|?
literal|""
else|:
name|user
expr_stmt|;
name|this
operator|.
name|remoteAddress
operator|=
name|remoteAddress
operator|==
literal|null
condition|?
literal|""
else|:
name|remoteAddress
expr_stmt|;
block|}
specifier|public
name|String
name|getUserId
parameter_list|( )
block|{
return|return
name|userId
return|;
block|}
specifier|public
name|String
name|getRemoteAddress
parameter_list|( )
block|{
return|return
name|remoteAddress
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getData
parameter_list|( )
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|values
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|( )
decl_stmt|;
name|values
operator|.
name|put
argument_list|(
name|PREFIX
operator|+
literal|".user_id"
argument_list|,
name|userId
argument_list|)
expr_stmt|;
name|values
operator|.
name|put
argument_list|(
name|PREFIX
operator|+
literal|".remote_address"
argument_list|,
name|remoteAddress
argument_list|)
expr_stmt|;
return|return
name|values
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getPrefix
parameter_list|( )
block|{
return|return
name|PREFIX
return|;
block|}
block|}
end_class

end_unit

