begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|event
operator|.
name|context
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|event
operator|.
name|EventContext
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Provides information about a REST call.  *  * @author Martin Schreier<martin_s@apache.org>  */
end_comment

begin_class
specifier|public
class|class
name|RestContext
implements|implements
name|EventContext
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|4109505194250928317L
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ID
init|=
literal|"rest"
decl_stmt|;
specifier|private
specifier|final
name|String
name|service
decl_stmt|;
specifier|private
specifier|final
name|String
name|path
decl_stmt|;
specifier|private
specifier|final
name|String
name|operation
decl_stmt|;
specifier|private
specifier|final
name|String
name|requestMethod
decl_stmt|;
specifier|private
specifier|final
name|int
name|resultCode
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|pathParameter
decl_stmt|;
specifier|public
name|RestContext
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|service
parameter_list|,
name|String
name|operation
parameter_list|,
name|String
name|requestMethod
parameter_list|,
name|int
name|resultCode
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|pathParameter
parameter_list|)
block|{
name|this
operator|.
name|service
operator|=
name|service
expr_stmt|;
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
name|this
operator|.
name|operation
operator|=
name|operation
expr_stmt|;
name|this
operator|.
name|resultCode
operator|=
name|resultCode
expr_stmt|;
name|this
operator|.
name|requestMethod
operator|=
name|requestMethod
expr_stmt|;
name|this
operator|.
name|pathParameter
operator|=
name|pathParameter
expr_stmt|;
block|}
specifier|public
name|String
name|getService
parameter_list|( )
block|{
return|return
name|service
return|;
block|}
specifier|public
name|String
name|getPath
parameter_list|( )
block|{
return|return
name|path
return|;
block|}
specifier|public
name|String
name|getOperation
parameter_list|( )
block|{
return|return
name|operation
return|;
block|}
specifier|public
name|String
name|getRequestMethod
parameter_list|( )
block|{
return|return
name|requestMethod
return|;
block|}
specifier|public
name|int
name|getResultCode
parameter_list|( )
block|{
return|return
name|resultCode
return|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|getPathParameter
parameter_list|()
block|{
return|return
name|pathParameter
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getData
parameter_list|( )
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|values
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|( )
decl_stmt|;
name|values
operator|.
name|put
argument_list|(
name|ID
operator|+
literal|".service"
argument_list|,
name|service
argument_list|)
expr_stmt|;
name|values
operator|.
name|put
argument_list|(
name|ID
operator|+
literal|".path"
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|values
operator|.
name|put
argument_list|(
name|ID
operator|+
literal|".operation"
argument_list|,
name|operation
argument_list|)
expr_stmt|;
name|values
operator|.
name|put
argument_list|(
name|ID
operator|+
literal|".requestMethod"
argument_list|,
name|requestMethod
argument_list|)
expr_stmt|;
name|values
operator|.
name|put
argument_list|(
name|ID
operator|+
literal|".pathParameter"
argument_list|,
name|getParamString
argument_list|( )
argument_list|)
expr_stmt|;
return|return
name|values
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getId
parameter_list|( )
block|{
return|return
name|ID
return|;
block|}
specifier|private
name|String
name|getParamString
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|( )
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|entry
range|:
name|pathParameter
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|entry
operator|.
name|getKey
argument_list|( )
argument_list|)
operator|.
name|append
argument_list|(
name|String
operator|.
name|join
argument_list|(
literal|","
argument_list|,
name|entry
operator|.
name|getValue
argument_list|( )
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|sb
operator|.
name|toString
argument_list|( )
return|;
block|}
block|}
end_class

end_unit

