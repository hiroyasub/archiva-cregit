begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|test
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|test
operator|.
name|parent
operator|.
name|AbstractArchivaTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|AfterTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|BeforeSuite
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|BeforeTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|Parameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|ArchivaAdminTest
extends|extends
name|AbstractArchivaTest
block|{
annotation|@
name|Override
annotation|@
name|AfterTest
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|BeforeSuite
specifier|public
name|void
name|open
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|open
argument_list|()
expr_stmt|;
block|}
annotation|@
name|BeforeTest
annotation|@
name|Parameters
argument_list|(
block|{
literal|"baseUrl"
block|,
literal|"browser"
block|,
literal|"maxWaitTimeInMs"
block|,
literal|"seleniumHost"
block|,
literal|"seleniumPort"
block|}
argument_list|)
specifier|public
name|void
name|initializeArchiva
parameter_list|(
name|String
name|baseUrl
parameter_list|,
name|String
name|browser
parameter_list|,
name|int
name|maxWaitTimeInMs
parameter_list|,
annotation|@
name|Optional
argument_list|(
literal|"localhost"
argument_list|)
name|String
name|seleniumHost
parameter_list|,
annotation|@
name|Optional
argument_list|(
literal|"4444"
argument_list|)
name|int
name|seleniumPort
parameter_list|)
throws|throws
name|Exception
block|{
name|super
operator|.
name|open
argument_list|(
name|baseUrl
argument_list|,
name|browser
argument_list|,
name|seleniumHost
argument_list|,
name|seleniumPort
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|maxWaitTimeInMs
argument_list|)
argument_list|)
expr_stmt|;
name|getSelenium
argument_list|()
operator|.
name|open
argument_list|(
name|baseUrl
argument_list|)
expr_stmt|;
name|waitPage
argument_list|()
expr_stmt|;
comment|// if not admin user created create one
if|if
condition|(
name|isElementVisible
argument_list|(
literal|"create-admin-link"
argument_list|)
condition|)
block|{
name|clickLinkWithLocator
argument_list|(
literal|"create-admin-link-a"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertCreateAdmin
argument_list|()
expr_stmt|;
name|String
name|fullname
init|=
name|getProperty
argument_list|(
literal|"ADMIN_FULLNAME"
argument_list|)
decl_stmt|;
name|String
name|username
init|=
name|getProperty
argument_list|(
literal|"ADMIN_USERNAME"
argument_list|)
decl_stmt|;
name|String
name|mail
init|=
name|getProperty
argument_list|(
literal|"ADMIN_EMAIL"
argument_list|)
decl_stmt|;
name|String
name|password
init|=
name|getProperty
argument_list|(
literal|"ADMIN_PASSWORD"
argument_list|)
decl_stmt|;
name|submitAdminData
argument_list|(
name|fullname
argument_list|,
name|mail
argument_list|,
name|password
argument_list|)
expr_stmt|;
name|assertUserLoggedIn
argument_list|(
name|username
argument_list|)
expr_stmt|;
name|clickLinkWithLocator
argument_list|(
literal|"logout-link-a"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|login
argument_list|(
name|getAdminUsername
argument_list|()
argument_list|,
name|getAdminPassword
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|groups
operator|=
block|{
literal|"about"
block|}
argument_list|,
name|alwaysRun
operator|=
literal|true
argument_list|)
specifier|public
name|void
name|testHome
parameter_list|()
block|{
name|getSelenium
argument_list|()
operator|.
name|open
argument_list|(
name|baseUrl
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Apache Archiva"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

