begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|test
operator|.
name|tools
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|BlockJUnit4ClassRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|model
operator|.
name|FrameworkMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|model
operator|.
name|InitializationError
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|model
operator|.
name|Statement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  */
end_comment

begin_class
specifier|public
class|class
name|ArchivaSeleniumRunner
extends|extends
name|BlockJUnit4ClassRunner
block|{
comment|/**      * @param clazz Test class      * @throws InitializationError if the test class is malformed.      */
specifier|public
name|ArchivaSeleniumRunner
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
parameter_list|)
throws|throws
name|InitializationError
block|{
name|super
argument_list|(
name|clazz
argument_list|)
expr_stmt|;
block|}
comment|/*      * FIXME move that to a Rule.      */
annotation|@
name|Override
specifier|protected
name|Statement
name|withAfters
parameter_list|(
name|FrameworkMethod
name|method
parameter_list|,
name|Object
name|target
parameter_list|,
name|Statement
name|statement
parameter_list|)
block|{
name|statement
operator|=
name|super
operator|.
name|withAfters
argument_list|(
name|method
argument_list|,
name|target
argument_list|,
name|statement
argument_list|)
expr_stmt|;
return|return
name|withAfterFailures
argument_list|(
name|method
argument_list|,
name|target
argument_list|,
name|statement
argument_list|)
return|;
block|}
specifier|protected
name|Statement
name|withAfterFailures
parameter_list|(
name|FrameworkMethod
name|method
parameter_list|,
name|Object
name|target
parameter_list|,
name|Statement
name|statement
parameter_list|)
block|{
name|List
argument_list|<
name|FrameworkMethod
argument_list|>
name|failures
init|=
name|getTestClass
argument_list|()
operator|.
name|getAnnotatedMethods
argument_list|(
name|AfterSeleniumFailure
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
operator|new
name|RunAfterSeleniumFailures
argument_list|(
name|statement
argument_list|,
name|failures
argument_list|,
name|target
argument_list|)
return|;
block|}
block|}
end_class

end_unit

