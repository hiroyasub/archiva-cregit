begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|security
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|RepositoryAdminException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|beans
operator|.
name|RedbackRuntimeConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|runtime
operator|.
name|RedbackRuntimeConfigurationAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|authorization
operator|.
name|AuthorizationDataSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|authorization
operator|.
name|AuthorizationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|authorization
operator|.
name|AuthorizationResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|authorization
operator|.
name|Authorizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Named
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  * @since 1.4-M4  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"authorizer#archiva"
argument_list|)
specifier|public
class|class
name|ArchivaAuthorizer
implements|implements
name|Authorizer
block|{
specifier|private
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|ApplicationContext
name|applicationContext
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|RedbackRuntimeConfigurationAdmin
name|redbackRuntimeConfigurationAdmin
decl_stmt|;
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
literal|"archiva"
return|;
block|}
specifier|public
name|AuthorizationResult
name|isAuthorized
parameter_list|(
name|AuthorizationDataSource
name|source
parameter_list|)
throws|throws
name|AuthorizationException
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"isAuthorized source: {}"
argument_list|,
name|source
argument_list|)
expr_stmt|;
try|try
block|{
name|RedbackRuntimeConfiguration
name|redbackRuntimeConfiguration
init|=
name|redbackRuntimeConfigurationAdmin
operator|.
name|getRedbackRuntimeConfiguration
argument_list|()
decl_stmt|;
name|AuthorizationException
name|authorizationException
init|=
literal|null
decl_stmt|;
name|AuthorizationResult
name|lastResult
init|=
literal|null
decl_stmt|;
for|for
control|(
name|String
name|id
range|:
name|redbackRuntimeConfiguration
operator|.
name|getAuthorizerImpls
argument_list|()
control|)
block|{
name|Authorizer
name|authorizer
init|=
name|getAuthorizer
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|AuthorizationResult
name|result
init|=
literal|null
decl_stmt|;
try|try
block|{
name|result
operator|=
name|authorizer
operator|.
name|isAuthorized
argument_list|(
name|source
argument_list|)
expr_stmt|;
name|log
operator|.
name|debug
argument_list|(
literal|"AuthorizationResult {} with id '{}"
argument_list|,
name|result
argument_list|,
name|id
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AuthorizationException
name|e
parameter_list|)
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"AuthorizationException {} with id '{}"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|authorizationException
operator|=
name|e
expr_stmt|;
block|}
if|if
condition|(
name|result
operator|.
name|isAuthorized
argument_list|()
condition|)
block|{
return|return
name|result
return|;
block|}
name|lastResult
operator|=
name|result
expr_stmt|;
block|}
if|if
condition|(
name|authorizationException
operator|!=
literal|null
condition|)
block|{
throw|throw
name|authorizationException
throw|;
block|}
return|return
name|lastResult
return|;
block|}
catch|catch
parameter_list|(
name|RepositoryAdminException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|AuthorizationException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
name|Authorizer
name|getAuthorizer
parameter_list|(
name|String
name|id
parameter_list|)
block|{
return|return
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"authorizer#"
operator|+
name|id
argument_list|,
name|Authorizer
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isFinalImplementation
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|String
name|getDescriptionKey
parameter_list|()
block|{
return|return
literal|"archiva.redback.authorizer.archiva"
return|;
block|}
block|}
end_class

end_unit

