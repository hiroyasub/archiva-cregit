begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|security
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|RepositoryAdminException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|runtime
operator|.
name|ArchivaRuntimeConfigurationAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|users
operator|.
name|UserManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|users
operator|.
name|configurable
operator|.
name|ConfigurableUserManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  * @since 1.4-M4  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"userManager#archiva"
argument_list|)
specifier|public
class|class
name|ArchivaConfigurableUsersManager
extends|extends
name|ConfigurableUserManager
block|{
annotation|@
name|Inject
specifier|private
name|ArchivaRuntimeConfigurationAdmin
name|archivaRuntimeConfigurationAdmin
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|ApplicationContext
name|applicationContext
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|initialize
parameter_list|()
block|{
try|try
block|{
name|String
name|userManagerImplStr
init|=
name|archivaRuntimeConfigurationAdmin
operator|.
name|getArchivaRuntimeConfiguration
argument_list|()
operator|.
name|getUserManagerImpl
argument_list|()
decl_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"use userManagerImpl: '{}'"
argument_list|,
name|userManagerImplStr
argument_list|)
expr_stmt|;
name|UserManager
name|userManagerImpl
init|=
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"userManager#"
operator|+
name|userManagerImplStr
argument_list|,
name|UserManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|setUserManagerImpl
argument_list|(
name|userManagerImpl
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RepositoryAdminException
name|e
parameter_list|)
block|{
comment|// revert to a default one ?
name|log
operator|.
name|error
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|String
name|getDescriptionKey
parameter_list|()
block|{
return|return
literal|"archiva.redback.usermanager.configurable.archiva"
return|;
block|}
block|}
end_class

end_unit

