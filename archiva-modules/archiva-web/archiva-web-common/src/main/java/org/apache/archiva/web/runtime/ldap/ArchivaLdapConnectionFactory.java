begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|runtime
operator|.
name|ldap
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|RepositoryAdminException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|beans
operator|.
name|LdapConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|runtime
operator|.
name|RedbackRuntimeConfigurationAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|common
operator|.
name|ldap
operator|.
name|connection
operator|.
name|ConfigurableLdapConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|common
operator|.
name|ldap
operator|.
name|connection
operator|.
name|LdapConnectionConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|PostConstruct
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|InvalidNameException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  * @since 1.4-M4  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"ldapConnectionFactory#archiva"
argument_list|)
specifier|public
class|class
name|ArchivaLdapConnectionFactory
extends|extends
name|ConfigurableLdapConnectionFactory
block|{
annotation|@
name|Inject
specifier|private
name|RedbackRuntimeConfigurationAdmin
name|redbackRuntimeConfigurationAdmin
decl_stmt|;
specifier|private
name|LdapConnectionConfiguration
name|ldapConnectionConfiguration
decl_stmt|;
annotation|@
name|PostConstruct
specifier|public
name|void
name|initialize
parameter_list|()
block|{
try|try
block|{
name|LdapConfiguration
name|ldapConfiguration
init|=
name|redbackRuntimeConfigurationAdmin
operator|.
name|getRedbackRuntimeConfiguration
argument_list|()
operator|.
name|getLdapConfiguration
argument_list|()
decl_stmt|;
name|ldapConnectionConfiguration
operator|=
operator|new
name|LdapConnectionConfiguration
argument_list|()
expr_stmt|;
name|ldapConnectionConfiguration
operator|.
name|setHostname
argument_list|(
name|ldapConfiguration
operator|.
name|getHostName
argument_list|()
argument_list|)
expr_stmt|;
name|ldapConnectionConfiguration
operator|.
name|setPort
argument_list|(
name|ldapConfiguration
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|ldapConnectionConfiguration
operator|.
name|setSsl
argument_list|(
name|ldapConfiguration
operator|.
name|isSsl
argument_list|()
argument_list|)
expr_stmt|;
name|ldapConnectionConfiguration
operator|.
name|setBaseDn
argument_list|(
name|ldapConfiguration
operator|.
name|getBaseDn
argument_list|()
argument_list|)
expr_stmt|;
name|ldapConnectionConfiguration
operator|.
name|setContextFactory
argument_list|(
name|ldapConfiguration
operator|.
name|getContextFactory
argument_list|()
argument_list|)
expr_stmt|;
name|ldapConnectionConfiguration
operator|.
name|setBindDn
argument_list|(
name|ldapConfiguration
operator|.
name|getBindDn
argument_list|()
argument_list|)
expr_stmt|;
name|ldapConnectionConfiguration
operator|.
name|setPassword
argument_list|(
name|ldapConfiguration
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|ldapConnectionConfiguration
operator|.
name|setAuthenticationMethod
argument_list|(
name|ldapConfiguration
operator|.
name|getAuthenticationMethod
argument_list|()
argument_list|)
expr_stmt|;
name|ldapConnectionConfiguration
operator|.
name|setExtraProperties
argument_list|(
name|toProperties
argument_list|(
name|ldapConfiguration
operator|.
name|getExtraProperties
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InvalidNameException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Error while initializing connection factory."
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|RepositoryAdminException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Error while initializing ldapConnectionConfiguration: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
name|Properties
name|toProperties
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
parameter_list|)
block|{
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
if|if
condition|(
name|map
operator|==
literal|null
condition|)
block|{
return|return
name|properties
return|;
block|}
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|map
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|properties
operator|.
name|put
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|properties
return|;
block|}
annotation|@
name|Override
specifier|public
name|LdapConnectionConfiguration
name|getLdapConnectionConfiguration
parameter_list|()
block|{
return|return
name|this
operator|.
name|ldapConnectionConfiguration
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setLdapConnectionConfiguration
parameter_list|(
name|LdapConnectionConfiguration
name|ldapConnectionConfiguration
parameter_list|)
block|{
name|this
operator|.
name|ldapConnectionConfiguration
operator|=
name|ldapConnectionConfiguration
expr_stmt|;
block|}
block|}
end_class

end_unit

