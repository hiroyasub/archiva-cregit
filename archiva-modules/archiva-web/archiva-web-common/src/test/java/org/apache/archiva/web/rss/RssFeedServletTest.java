begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|rss
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|test
operator|.
name|utils
operator|.
name|ArchivaSpringJUnit4ClassRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|codec
operator|.
name|Encoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|codec
operator|.
name|binary
operator|.
name|Base64
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|BeansException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|BeanFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|NoSuchBeanDefinitionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|config
operator|.
name|AutowireCapableBeanFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|MessageSourceResolvable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|NoSuchMessageException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|env
operator|.
name|Environment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|mock
operator|.
name|web
operator|.
name|MockHttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|mock
operator|.
name|web
operator|.
name|MockHttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|mock
operator|.
name|web
operator|.
name|MockServletConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|mock
operator|.
name|web
operator|.
name|MockServletContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|web
operator|.
name|context
operator|.
name|WebApplicationContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|ArchivaSpringJUnit4ClassRunner
operator|.
name|class
argument_list|)
annotation|@
name|ContextConfiguration
argument_list|(
name|locations
operator|=
block|{
literal|"classpath*:/META-INF/spring-context.xml"
block|,
literal|"classpath*:/spring-context-test-common.xml"
block|,
literal|"classpath*:/spring-context-rss-servlet.xml"
block|}
argument_list|)
specifier|public
class|class
name|RssFeedServletTest
extends|extends
name|TestCase
block|{
specifier|private
name|RssFeedServlet
name|rssFeedServlet
init|=
operator|new
name|RssFeedServlet
argument_list|()
decl_stmt|;
specifier|static
name|String
name|PREVIOUS_ARCHIVA_PATH
decl_stmt|;
annotation|@
name|Inject
specifier|protected
name|ApplicationContext
name|applicationContext
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|initConfigurationPath
parameter_list|()
throws|throws
name|Exception
block|{
name|PREVIOUS_ARCHIVA_PATH
operator|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"archiva.user.configFileName"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"archiva.user.configFileName"
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.resources.path/"
argument_list|)
operator|+
literal|"empty-archiva.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|restoreConfigurationPath
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"archiva.user.configFileName"
argument_list|,
name|PREVIOUS_ARCHIVA_PATH
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
annotation|@
name|Override
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|MockServletContext
name|mockServletContext
init|=
operator|new
name|MockServletContext
argument_list|()
decl_stmt|;
name|WebApplicationContext
name|webApplicationContext
init|=
operator|new
name|TestWebapplicationContext
argument_list|(
name|applicationContext
argument_list|,
name|mockServletContext
argument_list|)
decl_stmt|;
name|mockServletContext
operator|.
name|setAttribute
argument_list|(
name|WebApplicationContext
operator|.
name|ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE
argument_list|,
name|webApplicationContext
argument_list|)
expr_stmt|;
name|MockServletConfig
name|mockServletConfig
init|=
operator|new
name|MockServletConfig
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ServletContext
name|getServletContext
parameter_list|()
block|{
return|return
name|mockServletContext
return|;
block|}
block|}
decl_stmt|;
name|rssFeedServlet
operator|.
name|init
argument_list|(
name|mockServletConfig
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
annotation|@
name|Override
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|TestWebapplicationContext
implements|implements
name|WebApplicationContext
block|{
specifier|private
name|ApplicationContext
name|applicationContext
decl_stmt|;
specifier|private
name|ServletContext
name|servletContext
decl_stmt|;
name|TestWebapplicationContext
parameter_list|(
name|ApplicationContext
name|applicationContext
parameter_list|,
name|ServletContext
name|servletContext
parameter_list|)
block|{
name|this
operator|.
name|applicationContext
operator|=
name|applicationContext
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|ServletContext
name|getServletContext
parameter_list|()
block|{
return|return
name|servletContext
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|applicationContext
operator|.
name|getId
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getApplicationName
parameter_list|()
block|{
return|return
name|applicationContext
operator|.
name|getApplicationName
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDisplayName
parameter_list|()
block|{
return|return
name|applicationContext
operator|.
name|getDisplayName
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getStartupDate
parameter_list|()
block|{
return|return
name|applicationContext
operator|.
name|getStartupDate
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|ApplicationContext
name|getParent
parameter_list|()
block|{
return|return
name|applicationContext
operator|.
name|getParent
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|AutowireCapableBeanFactory
name|getAutowireCapableBeanFactory
parameter_list|()
throws|throws
name|IllegalStateException
block|{
return|return
name|applicationContext
operator|.
name|getAutowireCapableBeanFactory
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|publishEvent
parameter_list|(
name|ApplicationEvent
name|applicationEvent
parameter_list|)
block|{
name|applicationContext
operator|.
name|publishEvent
argument_list|(
name|applicationEvent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Environment
name|getEnvironment
parameter_list|()
block|{
return|return
name|applicationContext
operator|.
name|getEnvironment
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|BeanFactory
name|getParentBeanFactory
parameter_list|()
block|{
return|return
name|applicationContext
operator|.
name|getParentBeanFactory
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|containsLocalBean
parameter_list|(
name|String
name|s
parameter_list|)
block|{
return|return
name|applicationContext
operator|.
name|containsLocalBean
argument_list|(
name|s
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|containsBeanDefinition
parameter_list|(
name|String
name|s
parameter_list|)
block|{
return|return
name|applicationContext
operator|.
name|containsBeanDefinition
argument_list|(
name|s
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getBeanDefinitionCount
parameter_list|()
block|{
return|return
name|applicationContext
operator|.
name|getBeanDefinitionCount
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getBeanDefinitionNames
parameter_list|()
block|{
return|return
name|applicationContext
operator|.
name|getBeanDefinitionNames
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getBeanNamesForType
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|aClass
parameter_list|)
block|{
return|return
name|applicationContext
operator|.
name|getBeanNamesForType
argument_list|(
name|aClass
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getBeanNamesForType
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|aClass
parameter_list|,
name|boolean
name|b
parameter_list|,
name|boolean
name|b2
parameter_list|)
block|{
return|return
name|applicationContext
operator|.
name|getBeanNamesForType
argument_list|(
name|aClass
argument_list|,
name|b
argument_list|,
name|b2
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Map
argument_list|<
name|String
argument_list|,
name|T
argument_list|>
name|getBeansOfType
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|tClass
parameter_list|)
throws|throws
name|BeansException
block|{
return|return
name|applicationContext
operator|.
name|getBeansOfType
argument_list|(
name|tClass
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|getBean
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|aClass
parameter_list|,
name|Object
modifier|...
name|objects
parameter_list|)
throws|throws
name|BeansException
block|{
return|return
name|applicationContext
operator|.
name|getBean
argument_list|(
name|aClass
argument_list|,
name|objects
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Map
argument_list|<
name|String
argument_list|,
name|T
argument_list|>
name|getBeansOfType
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|tClass
parameter_list|,
name|boolean
name|b
parameter_list|,
name|boolean
name|b2
parameter_list|)
throws|throws
name|BeansException
block|{
return|return
name|applicationContext
operator|.
name|getBeansOfType
argument_list|(
name|tClass
argument_list|,
name|b
argument_list|,
name|b2
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getBeanNamesForAnnotation
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|Annotation
argument_list|>
name|aClass
parameter_list|)
block|{
return|return
name|applicationContext
operator|.
name|getBeanNamesForAnnotation
argument_list|(
name|aClass
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getBeansWithAnnotation
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|Annotation
argument_list|>
name|aClass
parameter_list|)
throws|throws
name|BeansException
block|{
return|return
name|applicationContext
operator|.
name|getBeansWithAnnotation
argument_list|(
name|aClass
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|A
extends|extends
name|Annotation
parameter_list|>
name|A
name|findAnnotationOnBean
parameter_list|(
name|String
name|s
parameter_list|,
name|Class
argument_list|<
name|A
argument_list|>
name|aClass
parameter_list|)
throws|throws
name|NoSuchBeanDefinitionException
block|{
return|return
name|applicationContext
operator|.
name|findAnnotationOnBean
argument_list|(
name|s
argument_list|,
name|aClass
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getBean
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|BeansException
block|{
return|return
name|applicationContext
operator|.
name|getBean
argument_list|(
name|s
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|getBean
parameter_list|(
name|String
name|s
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|tClass
parameter_list|)
throws|throws
name|BeansException
block|{
return|return
name|applicationContext
operator|.
name|getBean
argument_list|(
name|s
argument_list|,
name|tClass
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|getBean
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|tClass
parameter_list|)
throws|throws
name|BeansException
block|{
return|return
name|applicationContext
operator|.
name|getBean
argument_list|(
name|tClass
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getBean
parameter_list|(
name|String
name|s
parameter_list|,
name|Object
modifier|...
name|objects
parameter_list|)
throws|throws
name|BeansException
block|{
return|return
name|applicationContext
operator|.
name|getBean
argument_list|(
name|s
argument_list|,
name|objects
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|containsBean
parameter_list|(
name|String
name|s
parameter_list|)
block|{
return|return
name|applicationContext
operator|.
name|containsBean
argument_list|(
name|s
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSingleton
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|NoSuchBeanDefinitionException
block|{
return|return
name|applicationContext
operator|.
name|isSingleton
argument_list|(
name|s
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isPrototype
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|NoSuchBeanDefinitionException
block|{
return|return
name|applicationContext
operator|.
name|isPrototype
argument_list|(
name|s
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isTypeMatch
parameter_list|(
name|String
name|s
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|aClass
parameter_list|)
throws|throws
name|NoSuchBeanDefinitionException
block|{
return|return
name|applicationContext
operator|.
name|isTypeMatch
argument_list|(
name|s
argument_list|,
name|aClass
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
name|getType
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|NoSuchBeanDefinitionException
block|{
return|return
name|applicationContext
operator|.
name|getType
argument_list|(
name|s
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getAliases
parameter_list|(
name|String
name|s
parameter_list|)
block|{
return|return
name|applicationContext
operator|.
name|getAliases
argument_list|(
name|s
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getMessage
parameter_list|(
name|String
name|s
parameter_list|,
name|Object
index|[]
name|objects
parameter_list|,
name|String
name|s2
parameter_list|,
name|Locale
name|locale
parameter_list|)
block|{
return|return
name|applicationContext
operator|.
name|getMessage
argument_list|(
name|s
argument_list|,
name|objects
argument_list|,
name|s2
argument_list|,
name|locale
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getMessage
parameter_list|(
name|String
name|s
parameter_list|,
name|Object
index|[]
name|objects
parameter_list|,
name|Locale
name|locale
parameter_list|)
throws|throws
name|NoSuchMessageException
block|{
return|return
name|applicationContext
operator|.
name|getMessage
argument_list|(
name|s
argument_list|,
name|objects
argument_list|,
name|locale
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getMessage
parameter_list|(
name|MessageSourceResolvable
name|messageSourceResolvable
parameter_list|,
name|Locale
name|locale
parameter_list|)
throws|throws
name|NoSuchMessageException
block|{
return|return
name|applicationContext
operator|.
name|getMessage
argument_list|(
name|messageSourceResolvable
argument_list|,
name|locale
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Resource
index|[]
name|getResources
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|applicationContext
operator|.
name|getResources
argument_list|(
name|s
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Resource
name|getResource
parameter_list|(
name|String
name|s
parameter_list|)
block|{
return|return
name|applicationContext
operator|.
name|getResource
argument_list|(
name|s
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ClassLoader
name|getClassLoader
parameter_list|()
block|{
return|return
name|applicationContext
operator|.
name|getClassLoader
argument_list|()
return|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRequestNewArtifactsInRepo
parameter_list|()
throws|throws
name|Exception
block|{
name|MockHttpServletRequest
name|request
init|=
operator|new
name|MockHttpServletRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setRequestURI
argument_list|(
literal|"/feeds/test-repo"
argument_list|)
expr_stmt|;
name|request
operator|.
name|addHeader
argument_list|(
literal|"User-Agent"
argument_list|,
literal|"Apache Archiva unit test"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|Base64
name|encoder
init|=
operator|new
name|Base64
argument_list|(
literal|0
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|String
name|userPass
init|=
literal|"user1:password1"
decl_stmt|;
name|String
name|encodedUserPass
init|=
name|encoder
operator|.
name|encodeToString
argument_list|(
name|userPass
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|request
operator|.
name|addHeader
argument_list|(
literal|"Authorization"
argument_list|,
literal|"BASIC "
operator|+
name|encodedUserPass
argument_list|)
expr_stmt|;
name|MockHttpServletResponse
name|mockHttpServletResponse
init|=
operator|new
name|MockHttpServletResponse
argument_list|()
decl_stmt|;
name|rssFeedServlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|,
name|mockHttpServletResponse
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|RssFeedServlet
operator|.
name|MIME_TYPE
argument_list|,
name|mockHttpServletResponse
operator|.
name|getHeader
argument_list|(
literal|"CONTENT-TYPE"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Should have recieved a response"
argument_list|,
name|mockHttpServletResponse
operator|.
name|getContentAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Should have been an OK response code."
argument_list|,
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|,
name|mockHttpServletResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRequestNewVersionsOfArtifact
parameter_list|()
throws|throws
name|Exception
block|{
name|MockHttpServletRequest
name|request
init|=
operator|new
name|MockHttpServletRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setRequestURI
argument_list|(
literal|"/feeds/org/apache/archiva/artifact-two"
argument_list|)
expr_stmt|;
name|request
operator|.
name|addHeader
argument_list|(
literal|"User-Agent"
argument_list|,
literal|"Apache Archiva unit test"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
comment|//WebRequest request = new GetMethodWebRequest( "http://localhost/feeds/org/apache/archiva/artifact-two" );
name|Base64
name|encoder
init|=
operator|new
name|Base64
argument_list|(
literal|0
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|String
name|userPass
init|=
literal|"user1:password1"
decl_stmt|;
name|String
name|encodedUserPass
init|=
name|encoder
operator|.
name|encodeToString
argument_list|(
name|userPass
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|request
operator|.
name|addHeader
argument_list|(
literal|"Authorization"
argument_list|,
literal|"BASIC "
operator|+
name|encodedUserPass
argument_list|)
expr_stmt|;
name|MockHttpServletResponse
name|mockHttpServletResponse
init|=
operator|new
name|MockHttpServletResponse
argument_list|()
decl_stmt|;
name|rssFeedServlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|,
name|mockHttpServletResponse
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|RssFeedServlet
operator|.
name|MIME_TYPE
argument_list|,
name|mockHttpServletResponse
operator|.
name|getHeader
argument_list|(
literal|"CONTENT-TYPE"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Should have recieved a response"
argument_list|,
name|mockHttpServletResponse
operator|.
name|getContentAsString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Should have been an OK response code."
argument_list|,
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|,
name|mockHttpServletResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
specifier|public
name|void
name|testInvalidRequest
parameter_list|()
throws|throws
name|Exception
block|{
comment|//RssFeedServlet servlet =
comment|//    (RssFeedServlet) client.newInvocation( "http://localhost/feeds?invalid_param=xxx" ).getServlet();
name|MockHttpServletRequest
name|request
init|=
operator|new
name|MockHttpServletRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setRequestURI
argument_list|(
literal|"/feeds?invalid_param=xxx"
argument_list|)
expr_stmt|;
name|request
operator|.
name|addHeader
argument_list|(
literal|"User-Agent"
argument_list|,
literal|"Apache Archiva unit test"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|MockHttpServletResponse
name|mockHttpServletResponse
init|=
operator|new
name|MockHttpServletResponse
argument_list|()
decl_stmt|;
name|rssFeedServlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|,
name|mockHttpServletResponse
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HttpServletResponse
operator|.
name|SC_BAD_REQUEST
argument_list|,
name|mockHttpServletResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
specifier|public
name|void
name|testInvalidAuthenticationRequest
parameter_list|()
throws|throws
name|Exception
block|{
comment|//RssFeedServlet servlet =
comment|//    (RssFeedServlet) client.newInvocation( "http://localhost/feeds/unauthorized-repo" ).getServlet();
comment|//WebRequest request = new GetMethodWebRequest( "http://localhost/feeds/unauthorized-repo" );
name|MockHttpServletRequest
name|request
init|=
operator|new
name|MockHttpServletRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setRequestURI
argument_list|(
literal|"/feeds/unauthorized-repo"
argument_list|)
expr_stmt|;
name|request
operator|.
name|addHeader
argument_list|(
literal|"User-Agent"
argument_list|,
literal|"Apache Archiva unit test"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|Encoder
name|encoder
init|=
operator|new
name|Base64
argument_list|()
decl_stmt|;
name|String
name|userPass
init|=
literal|"unauthUser:unauthPass"
decl_stmt|;
name|String
name|encodedUserPass
init|=
operator|new
name|String
argument_list|(
operator|(
name|byte
index|[]
operator|)
name|encoder
operator|.
name|encode
argument_list|(
name|userPass
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|request
operator|.
name|addHeader
argument_list|(
literal|"Authorization"
argument_list|,
literal|"BASIC "
operator|+
name|encodedUserPass
argument_list|)
expr_stmt|;
name|MockHttpServletResponse
name|mockHttpServletResponse
init|=
operator|new
name|MockHttpServletResponse
argument_list|()
decl_stmt|;
name|rssFeedServlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|,
name|mockHttpServletResponse
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HttpServletResponse
operator|.
name|SC_UNAUTHORIZED
argument_list|,
name|mockHttpServletResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
specifier|public
name|void
name|testUnauthorizedRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|MockHttpServletRequest
name|request
init|=
operator|new
name|MockHttpServletRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setRequestURI
argument_list|(
literal|"/feeds/unauthorized-repo"
argument_list|)
expr_stmt|;
name|request
operator|.
name|addHeader
argument_list|(
literal|"User-Agent"
argument_list|,
literal|"Apache Archiva unit test"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
comment|//WebRequest request = new GetMethodWebRequest( "http://localhost/feeds/unauthorized-repo" );
name|Base64
name|encoder
init|=
operator|new
name|Base64
argument_list|(
literal|0
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|String
name|userPass
init|=
literal|"user1:password1"
decl_stmt|;
name|String
name|encodedUserPass
init|=
name|encoder
operator|.
name|encodeToString
argument_list|(
name|userPass
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|request
operator|.
name|addHeader
argument_list|(
literal|"Authorization"
argument_list|,
literal|"BASIC "
operator|+
name|encodedUserPass
argument_list|)
expr_stmt|;
name|MockHttpServletResponse
name|mockHttpServletResponse
init|=
operator|new
name|MockHttpServletResponse
argument_list|()
decl_stmt|;
name|rssFeedServlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|,
name|mockHttpServletResponse
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HttpServletResponse
operator|.
name|SC_UNAUTHORIZED
argument_list|,
name|mockHttpServletResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

