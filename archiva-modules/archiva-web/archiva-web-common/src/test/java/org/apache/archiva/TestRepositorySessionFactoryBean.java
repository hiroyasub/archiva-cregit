begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|RepositorySessionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|RepositorySessionFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  */
end_comment

begin_class
specifier|public
class|class
name|TestRepositorySessionFactoryBean
extends|extends
name|RepositorySessionFactoryBean
block|{
specifier|private
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|String
name|beanId
decl_stmt|;
specifier|public
name|TestRepositorySessionFactoryBean
parameter_list|(
name|String
name|beanId
parameter_list|)
block|{
name|super
argument_list|(
operator|new
name|Properties
argument_list|(  )
argument_list|)
expr_stmt|;
name|this
operator|.
name|beanId
operator|=
name|beanId
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Class
argument_list|<
name|RepositorySessionFactory
argument_list|>
name|getObjectType
parameter_list|()
block|{
return|return
name|RepositorySessionFactory
operator|.
name|class
return|;
block|}
annotation|@
name|Override
specifier|protected
name|RepositorySessionFactory
name|createInstance
parameter_list|()
throws|throws
name|Exception
block|{
name|RepositorySessionFactory
name|repositorySessionFactory
init|=
name|getBeanFactory
argument_list|()
operator|.
name|getBean
argument_list|(
literal|"repositorySessionFactory#"
operator|+
name|this
operator|.
name|beanId
argument_list|,
name|RepositorySessionFactory
operator|.
name|class
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"create RepositorySessionFactory instance of {}"
argument_list|,
name|repositorySessionFactory
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|repositorySessionFactory
return|;
block|}
block|}
end_class

end_unit

