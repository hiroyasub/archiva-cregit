begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|RepositorySessionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|RepositorySessionFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  */
end_comment

begin_class
specifier|public
class|class
name|TestRepositorySessionFactoryBean
extends|extends
name|RepositorySessionFactoryBean
block|{
specifier|private
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|String
name|beanId
decl_stmt|;
specifier|public
name|TestRepositorySessionFactoryBean
parameter_list|(
name|String
name|beanId
parameter_list|)
block|{
name|super
argument_list|(
operator|new
name|Properties
argument_list|(  )
argument_list|)
expr_stmt|;
name|this
operator|.
name|beanId
operator|=
name|beanId
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Class
argument_list|<
name|RepositorySessionFactory
argument_list|>
name|getObjectType
parameter_list|()
block|{
return|return
name|RepositorySessionFactory
operator|.
name|class
return|;
block|}
annotation|@
name|Override
specifier|protected
name|RepositorySessionFactory
name|createInstance
parameter_list|()
throws|throws
name|Exception
block|{
name|RepositorySessionFactory
name|repositorySessionFactory
init|=
name|getBeanFactory
argument_list|()
operator|.
name|getBean
argument_list|(
literal|"repositorySessionFactory#"
operator|+
name|this
operator|.
name|beanId
argument_list|,
name|RepositorySessionFactory
operator|.
name|class
argument_list|)
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"create RepositorySessionFactory instance of {}"
argument_list|,
name|repositorySessionFactory
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|repositorySessionFactory
operator|.
name|isOpen
argument_list|()
condition|)
block|{
name|repositorySessionFactory
operator|.
name|open
argument_list|()
expr_stmt|;
block|}
return|return
name|repositorySessionFactory
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|this
operator|.
name|beanId
return|;
block|}
block|}
end_class

end_unit

