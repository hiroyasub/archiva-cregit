begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|action
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|RepositorySearch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|SearchFields
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|SearchResultHit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|SearchResultLimits
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|SearchResults
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|util
operator|.
name|SearchUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ArchivaDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ArtifactDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|constraints
operator|.
name|ArtifactsByChecksumConstraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|constraints
operator|.
name|UniqueVersionConstraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaArtifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|security
operator|.
name|ArchivaXworkUser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|security
operator|.
name|UserRepositories
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|spring
operator|.
name|PlexusInSpringTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|MockControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|MockClassControl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|opensymphony
operator|.
name|xwork2
operator|.
name|Action
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|SearchActionTest
extends|extends
name|PlexusInSpringTestCase
block|{
specifier|private
name|SearchAction
name|action
decl_stmt|;
specifier|private
name|MockControl
name|archivaConfigControl
decl_stmt|;
specifier|private
name|ArchivaConfiguration
name|archivaConfig
decl_stmt|;
specifier|private
name|MockControl
name|daoControl
decl_stmt|;
specifier|private
name|ArchivaDAO
name|dao
decl_stmt|;
specifier|private
name|MockControl
name|userReposControl
decl_stmt|;
specifier|private
name|UserRepositories
name|userRepos
decl_stmt|;
specifier|private
name|MockControl
name|archivaXworkUserControl
decl_stmt|;
specifier|private
name|ArchivaXworkUser
name|archivaXworkUser
decl_stmt|;
specifier|private
name|MockControl
name|searchControl
decl_stmt|;
specifier|private
name|RepositorySearch
name|search
decl_stmt|;
specifier|private
name|MockControl
name|artifactDaoControl
decl_stmt|;
specifier|private
name|ArtifactDAO
name|artifactDao
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|action
operator|=
operator|new
name|SearchAction
argument_list|()
expr_stmt|;
name|archivaConfigControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|ArchivaConfiguration
operator|.
name|class
argument_list|)
expr_stmt|;
name|archivaConfig
operator|=
operator|(
name|ArchivaConfiguration
operator|)
name|archivaConfigControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|daoControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|ArchivaDAO
operator|.
name|class
argument_list|)
expr_stmt|;
name|daoControl
operator|.
name|setDefaultMatcher
argument_list|(
name|MockControl
operator|.
name|ALWAYS_MATCHER
argument_list|)
expr_stmt|;
name|dao
operator|=
operator|(
name|ArchivaDAO
operator|)
name|daoControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|userReposControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|UserRepositories
operator|.
name|class
argument_list|)
expr_stmt|;
name|userRepos
operator|=
operator|(
name|UserRepositories
operator|)
name|userReposControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|archivaXworkUserControl
operator|=
name|MockClassControl
operator|.
name|createControl
argument_list|(
name|ArchivaXworkUser
operator|.
name|class
argument_list|)
expr_stmt|;
name|archivaXworkUserControl
operator|.
name|setDefaultMatcher
argument_list|(
name|MockControl
operator|.
name|ALWAYS_MATCHER
argument_list|)
expr_stmt|;
name|archivaXworkUser
operator|=
operator|(
name|ArchivaXworkUser
operator|)
name|archivaXworkUserControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|searchControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|RepositorySearch
operator|.
name|class
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|setDefaultMatcher
argument_list|(
name|MockControl
operator|.
name|ALWAYS_MATCHER
argument_list|)
expr_stmt|;
name|search
operator|=
operator|(
name|RepositorySearch
operator|)
name|searchControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|artifactDaoControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|ArtifactDAO
operator|.
name|class
argument_list|)
expr_stmt|;
name|artifactDaoControl
operator|.
name|setDefaultMatcher
argument_list|(
name|MockControl
operator|.
name|ALWAYS_MATCHER
argument_list|)
expr_stmt|;
name|artifactDao
operator|=
operator|(
name|ArtifactDAO
operator|)
name|artifactDaoControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|action
operator|.
name|setArchivaConfiguration
argument_list|(
name|archivaConfig
argument_list|)
expr_stmt|;
name|action
operator|.
name|setArchivaXworkUser
argument_list|(
name|archivaXworkUser
argument_list|)
expr_stmt|;
name|action
operator|.
name|setUserRepositories
argument_list|(
name|userRepos
argument_list|)
expr_stmt|;
name|action
operator|.
name|setDao
argument_list|(
name|dao
argument_list|)
expr_stmt|;
name|action
operator|.
name|setNexusSearch
argument_list|(
name|search
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
comment|// quick search...
specifier|public
name|void
name|testQuickSearch
parameter_list|()
throws|throws
name|Exception
block|{
name|action
operator|.
name|setQ
argument_list|(
literal|"archiva"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCurrentPage
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|action
operator|.
name|setSearchResultsOnly
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCompleteQueryString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|selectedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"snapshots"
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|action
operator|.
name|getCurrentPage
argument_list|()
argument_list|)
decl_stmt|;
name|limits
operator|.
name|setPageSize
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|SearchResultHit
name|hit
init|=
operator|new
name|SearchResultHit
argument_list|()
decl_stmt|;
name|hit
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.archiva"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-configuration"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|setUrl
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|addVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|addVersion
argument_list|(
literal|"1.1"
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|results
operator|.
name|setLimits
argument_list|(
name|limits
argument_list|)
expr_stmt|;
name|results
operator|.
name|setTotalHits
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|results
operator|.
name|addHit
argument_list|(
name|SearchUtil
operator|.
name|getHitId
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-configuration"
argument_list|)
argument_list|,
name|hit
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|versions
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.1"
argument_list|)
expr_stmt|;
name|archivaXworkUserControl
operator|.
name|expectAndReturn
argument_list|(
name|getActivePrincipal
argument_list|()
argument_list|,
literal|"user"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositoryIds
argument_list|(
literal|"user"
argument_list|)
argument_list|,
name|selectedRepos
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|expectAndReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|"user"
argument_list|,
name|selectedRepos
argument_list|,
literal|"archiva"
argument_list|,
name|limits
argument_list|,
literal|null
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|daoControl
operator|.
name|expectAndReturn
argument_list|(
name|dao
operator|.
name|query
argument_list|(
operator|new
name|UniqueVersionConstraint
argument_list|(
name|selectedRepos
argument_list|,
name|hit
operator|.
name|getGroupId
argument_list|()
argument_list|,
name|hit
operator|.
name|getArtifactId
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|versions
argument_list|)
expr_stmt|;
name|archivaXworkUserControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|daoControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|quickSearch
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getTotalPages
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getResults
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|)
expr_stmt|;
name|archivaXworkUserControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|daoControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|private
name|String
name|getActivePrincipal
parameter_list|()
block|{
return|return
name|archivaXworkUser
operator|.
name|getActivePrincipal
argument_list|(
name|Collections
operator|.
expr|<
name|String
argument_list|,
name|Object
operator|>
name|emptyMap
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|void
name|testSearchWithinSearchResults
parameter_list|()
throws|throws
name|Exception
block|{
name|action
operator|.
name|setQ
argument_list|(
literal|"archiva"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCurrentPage
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|action
operator|.
name|setSearchResultsOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCompleteQueryString
argument_list|(
literal|"org;apache"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|parsed
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|parsed
operator|.
name|add
argument_list|(
literal|"org"
argument_list|)
expr_stmt|;
name|parsed
operator|.
name|add
argument_list|(
literal|"apache"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|selectedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"snapshots"
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|action
operator|.
name|getCurrentPage
argument_list|()
argument_list|)
decl_stmt|;
name|limits
operator|.
name|setPageSize
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|SearchResultHit
name|hit
init|=
operator|new
name|SearchResultHit
argument_list|()
decl_stmt|;
name|hit
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.archiva"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-configuration"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|setUrl
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|addVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|addVersion
argument_list|(
literal|"1.1"
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|results
operator|.
name|setLimits
argument_list|(
name|limits
argument_list|)
expr_stmt|;
name|results
operator|.
name|setTotalHits
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|results
operator|.
name|addHit
argument_list|(
name|SearchUtil
operator|.
name|getHitId
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-configuration"
argument_list|)
argument_list|,
name|hit
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|versions
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.1"
argument_list|)
expr_stmt|;
name|archivaXworkUserControl
operator|.
name|expectAndReturn
argument_list|(
name|getActivePrincipal
argument_list|()
argument_list|,
literal|"user"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositoryIds
argument_list|(
literal|"user"
argument_list|)
argument_list|,
name|selectedRepos
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|expectAndReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|"user"
argument_list|,
name|selectedRepos
argument_list|,
literal|"archiva"
argument_list|,
name|limits
argument_list|,
name|parsed
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|daoControl
operator|.
name|expectAndReturn
argument_list|(
name|dao
operator|.
name|query
argument_list|(
operator|new
name|UniqueVersionConstraint
argument_list|(
name|selectedRepos
argument_list|,
name|hit
operator|.
name|getGroupId
argument_list|()
argument_list|,
name|hit
operator|.
name|getArtifactId
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|versions
argument_list|)
expr_stmt|;
name|archivaXworkUserControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|daoControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|quickSearch
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org;apache;archiva"
argument_list|,
name|action
operator|.
name|getCompleteQueryString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getTotalPages
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getResults
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|)
expr_stmt|;
name|archivaXworkUserControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|daoControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testQuickSearchUserHasNoAccessToAnyRepository
parameter_list|()
throws|throws
name|Exception
block|{
name|action
operator|.
name|setQ
argument_list|(
literal|"archiva"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCurrentPage
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|selectedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|archivaXworkUserControl
operator|.
name|expectAndReturn
argument_list|(
name|getActivePrincipal
argument_list|()
argument_list|,
literal|"user"
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositoryIds
argument_list|(
literal|"user"
argument_list|)
argument_list|,
name|selectedRepos
argument_list|)
expr_stmt|;
name|archivaXworkUserControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|quickSearch
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|GlobalResults
operator|.
name|ACCESS_TO_NO_REPOS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|archivaXworkUserControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testQuickSearchNoSearchHits
parameter_list|()
throws|throws
name|Exception
block|{
name|action
operator|.
name|setQ
argument_list|(
literal|"archiva"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCurrentPage
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|action
operator|.
name|setSearchResultsOnly
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCompleteQueryString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|selectedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"snapshots"
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|action
operator|.
name|getCurrentPage
argument_list|()
argument_list|)
decl_stmt|;
name|limits
operator|.
name|setPageSize
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|archivaXworkUserControl
operator|.
name|expectAndReturn
argument_list|(
name|getActivePrincipal
argument_list|()
argument_list|,
literal|"user"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositoryIds
argument_list|(
literal|"user"
argument_list|)
argument_list|,
name|selectedRepos
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|expectAndReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|"user"
argument_list|,
name|selectedRepos
argument_list|,
literal|"archiva"
argument_list|,
name|limits
argument_list|,
literal|null
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|archivaXworkUserControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|quickSearch
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|INPUT
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|archivaXworkUserControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
comment|// advanced/filtered search...
specifier|public
name|void
name|testAdvancedSearchOneRepository
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|managedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|managedRepos
operator|.
name|add
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|managedRepos
operator|.
name|add
argument_list|(
literal|"snapshots"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRepositoryId
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setManagedRepositoryList
argument_list|(
name|managedRepos
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCurrentPage
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRowCount
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|action
operator|.
name|setGroupId
argument_list|(
literal|"org"
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|action
operator|.
name|getCurrentPage
argument_list|()
argument_list|)
decl_stmt|;
name|limits
operator|.
name|setPageSize
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|SearchResultHit
name|hit
init|=
operator|new
name|SearchResultHit
argument_list|()
decl_stmt|;
name|hit
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.archiva"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-configuration"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|setUrl
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|addVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|addVersion
argument_list|(
literal|"1.1"
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|results
operator|.
name|setLimits
argument_list|(
name|limits
argument_list|)
expr_stmt|;
name|results
operator|.
name|setTotalHits
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|results
operator|.
name|addHit
argument_list|(
name|SearchUtil
operator|.
name|getHitId
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-configuration"
argument_list|)
argument_list|,
name|hit
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|selectedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"snapshots"
argument_list|)
expr_stmt|;
name|SearchFields
name|searchFields
init|=
operator|new
name|SearchFields
argument_list|(
literal|"org"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|selectedRepos
argument_list|)
decl_stmt|;
name|archivaXworkUserControl
operator|.
name|expectAndReturn
argument_list|(
name|getActivePrincipal
argument_list|()
argument_list|,
literal|"user"
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|expectAndReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|"user"
argument_list|,
name|searchFields
argument_list|,
name|limits
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|archivaXworkUserControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|filteredSearch
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getTotalPages
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getResults
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|)
expr_stmt|;
name|archivaXworkUserControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testAdvancedSearchAllRepositories
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|managedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|managedRepos
operator|.
name|add
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|managedRepos
operator|.
name|add
argument_list|(
literal|"snapshots"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRepositoryId
argument_list|(
literal|"all"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setManagedRepositoryList
argument_list|(
name|managedRepos
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCurrentPage
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRowCount
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|action
operator|.
name|setGroupId
argument_list|(
literal|"org"
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|action
operator|.
name|getCurrentPage
argument_list|()
argument_list|)
decl_stmt|;
name|limits
operator|.
name|setPageSize
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|SearchResultHit
name|hit
init|=
operator|new
name|SearchResultHit
argument_list|()
decl_stmt|;
name|hit
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.archiva"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-configuration"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|setUrl
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|addVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|addVersion
argument_list|(
literal|"1.1"
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|results
operator|.
name|setLimits
argument_list|(
name|limits
argument_list|)
expr_stmt|;
name|results
operator|.
name|setTotalHits
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|results
operator|.
name|addHit
argument_list|(
name|SearchUtil
operator|.
name|getHitId
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-configuration"
argument_list|)
argument_list|,
name|hit
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|selectedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|SearchFields
name|searchFields
init|=
operator|new
name|SearchFields
argument_list|(
literal|"org"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|selectedRepos
argument_list|)
decl_stmt|;
name|archivaXworkUserControl
operator|.
name|expectAndReturn
argument_list|(
name|getActivePrincipal
argument_list|()
argument_list|,
literal|"user"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositoryIds
argument_list|(
literal|"user"
argument_list|)
argument_list|,
name|selectedRepos
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|expectAndReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|"user"
argument_list|,
name|searchFields
argument_list|,
name|limits
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|archivaXworkUserControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|filteredSearch
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getTotalPages
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getResults
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|)
expr_stmt|;
name|archivaXworkUserControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testAdvancedSearchNoSearchHits
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|managedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|managedRepos
operator|.
name|add
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|managedRepos
operator|.
name|add
argument_list|(
literal|"snapshots"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRepositoryId
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setManagedRepositoryList
argument_list|(
name|managedRepos
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCurrentPage
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRowCount
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|action
operator|.
name|setGroupId
argument_list|(
literal|"org"
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|action
operator|.
name|getCurrentPage
argument_list|()
argument_list|)
decl_stmt|;
name|limits
operator|.
name|setPageSize
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|selectedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"snapshots"
argument_list|)
expr_stmt|;
name|SearchFields
name|searchFields
init|=
operator|new
name|SearchFields
argument_list|(
literal|"org"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|selectedRepos
argument_list|)
decl_stmt|;
name|archivaXworkUserControl
operator|.
name|expectAndReturn
argument_list|(
name|getActivePrincipal
argument_list|()
argument_list|,
literal|"user"
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|expectAndReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|"user"
argument_list|,
name|searchFields
argument_list|,
name|limits
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|archivaXworkUserControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|filteredSearch
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|INPUT
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"No results found"
argument_list|,
operator|(
name|String
operator|)
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|archivaXworkUserControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testAdvancedSearchUserHasNoAccessToAnyRepository
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|managedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|action
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.archiva"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setManagedRepositoryList
argument_list|(
name|managedRepos
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|filteredSearch
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|GlobalResults
operator|.
name|ACCESS_TO_NO_REPOS
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testAdvancedSearchNoSpecifiedCriteria
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|managedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|action
operator|.
name|setManagedRepositoryList
argument_list|(
name|managedRepos
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|filteredSearch
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|INPUT
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Advanced Search - At least one search criteria must be provided."
argument_list|,
operator|(
name|String
operator|)
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// find artifact..
specifier|public
name|void
name|testFindArtifactWithOneHit
parameter_list|()
throws|throws
name|Exception
block|{
name|action
operator|.
name|setQ
argument_list|(
literal|"afbcdeaadbcffceabbba1"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ArchivaArtifact
argument_list|>
name|dbResults
init|=
operator|new
name|ArrayList
argument_list|<
name|ArchivaArtifact
argument_list|>
argument_list|()
decl_stmt|;
name|dbResults
operator|.
name|add
argument_list|(
operator|new
name|ArchivaArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-configuration"
argument_list|,
literal|"1.0"
argument_list|,
literal|null
argument_list|,
literal|"jar"
argument_list|,
literal|"test-repo"
argument_list|)
argument_list|)
expr_stmt|;
name|daoControl
operator|.
name|expectAndReturn
argument_list|(
name|dao
operator|.
name|getArtifactDAO
argument_list|()
argument_list|,
name|artifactDao
argument_list|)
expr_stmt|;
name|artifactDaoControl
operator|.
name|expectAndReturn
argument_list|(
name|artifactDao
operator|.
name|queryArtifacts
argument_list|(
operator|new
name|ArtifactsByChecksumConstraint
argument_list|(
name|action
operator|.
name|getQ
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|dbResults
argument_list|)
expr_stmt|;
name|daoControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|artifactDaoControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|findArtifact
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"artifact"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|action
operator|.
name|getDatabaseResults
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getDatabaseResults
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|daoControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|artifactDaoControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testFindArtifactWithMultipleHits
parameter_list|()
throws|throws
name|Exception
block|{
name|action
operator|.
name|setQ
argument_list|(
literal|"afbcdeaadbcffceabbba1"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ArchivaArtifact
argument_list|>
name|dbResults
init|=
operator|new
name|ArrayList
argument_list|<
name|ArchivaArtifact
argument_list|>
argument_list|()
decl_stmt|;
name|dbResults
operator|.
name|add
argument_list|(
operator|new
name|ArchivaArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-configuration"
argument_list|,
literal|"1.0"
argument_list|,
literal|null
argument_list|,
literal|"jar"
argument_list|,
literal|"test-repo"
argument_list|)
argument_list|)
expr_stmt|;
name|dbResults
operator|.
name|add
argument_list|(
operator|new
name|ArchivaArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-indexer"
argument_list|,
literal|"1.0"
argument_list|,
literal|null
argument_list|,
literal|"jar"
argument_list|,
literal|"test-repo"
argument_list|)
argument_list|)
expr_stmt|;
name|daoControl
operator|.
name|expectAndReturn
argument_list|(
name|dao
operator|.
name|getArtifactDAO
argument_list|()
argument_list|,
name|artifactDao
argument_list|)
expr_stmt|;
name|artifactDaoControl
operator|.
name|expectAndReturn
argument_list|(
name|artifactDao
operator|.
name|queryArtifacts
argument_list|(
operator|new
name|ArtifactsByChecksumConstraint
argument_list|(
name|action
operator|.
name|getQ
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|dbResults
argument_list|)
expr_stmt|;
name|daoControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|artifactDaoControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|findArtifact
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"results"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|action
operator|.
name|getDatabaseResults
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|action
operator|.
name|getDatabaseResults
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|daoControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|artifactDaoControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testFindArtifactNoChecksumSpecified
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|result
init|=
name|action
operator|.
name|findArtifact
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|INPUT
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Unable to search for a blank checksum"
argument_list|,
operator|(
name|String
operator|)
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFindArtifactNoResults
parameter_list|()
throws|throws
name|Exception
block|{
name|action
operator|.
name|setQ
argument_list|(
literal|"afbcdeaadbcffceabbba1"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ArchivaArtifact
argument_list|>
name|dbResults
init|=
operator|new
name|ArrayList
argument_list|<
name|ArchivaArtifact
argument_list|>
argument_list|()
decl_stmt|;
name|daoControl
operator|.
name|expectAndReturn
argument_list|(
name|dao
operator|.
name|getArtifactDAO
argument_list|()
argument_list|,
name|artifactDao
argument_list|)
expr_stmt|;
name|artifactDaoControl
operator|.
name|expectAndReturn
argument_list|(
name|artifactDao
operator|.
name|queryArtifacts
argument_list|(
operator|new
name|ArtifactsByChecksumConstraint
argument_list|(
name|action
operator|.
name|getQ
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|dbResults
argument_list|)
expr_stmt|;
name|daoControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|artifactDaoControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|findArtifact
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|INPUT
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"No results found"
argument_list|,
operator|(
name|String
operator|)
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|daoControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|artifactDaoControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

