begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|rss
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|codec
operator|.
name|Encoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|codec
operator|.
name|binary
operator|.
name|Base64
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|spring
operator|.
name|PlexusInSpringTestCase
import|;
end_import

begin_import
import|import
name|sun
operator|.
name|misc
operator|.
name|BASE64Encoder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|httpunit
operator|.
name|GetMethodWebRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|httpunit
operator|.
name|HttpException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|httpunit
operator|.
name|WebRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|httpunit
operator|.
name|WebResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|servletunit
operator|.
name|ServletRunner
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|servletunit
operator|.
name|ServletUnitClient
import|;
end_import

begin_comment
comment|/**  *   * @author<a href="mailto:oching@apache.org">Maria Odea Ching</a>  * @version  */
end_comment

begin_class
specifier|public
class|class
name|RssFeedServletTest
extends|extends
name|PlexusInSpringTestCase
block|{
specifier|private
name|ServletRunner
name|sr
decl_stmt|;
specifier|private
name|ServletUnitClient
name|client
decl_stmt|;
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|sr
operator|=
operator|new
name|ServletRunner
argument_list|(
name|getTestFile
argument_list|(
literal|"src/test/webapp/WEB-INF/feedServletTest-web.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|=
name|sr
operator|.
name|newClient
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testRetrieveServlet
parameter_list|()
throws|throws
name|Exception
block|{
name|RssFeedServlet
name|servlet
init|=
operator|(
name|RssFeedServlet
operator|)
name|client
operator|.
name|newInvocation
argument_list|(
literal|"http://localhost/rss/rss_feeds?repoId=test-repo"
argument_list|)
operator|.
name|getServlet
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|servlet
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testRequestNewArtifactsInRepo
parameter_list|()
throws|throws
name|Exception
block|{
name|RssFeedServlet
name|servlet
init|=
operator|(
name|RssFeedServlet
operator|)
name|client
operator|.
name|newInvocation
argument_list|(
literal|"http://localhost/rss/rss_feeds?repoId=test-repo"
argument_list|)
operator|.
name|getServlet
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|servlet
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://localhost/rss/rss_feeds?repoId=test-repo"
argument_list|)
decl_stmt|;
name|BASE64Encoder
name|encoder
init|=
operator|new
name|BASE64Encoder
argument_list|()
decl_stmt|;
name|String
name|userPass
init|=
literal|"user1:password1"
decl_stmt|;
name|String
name|encodedUserPass
init|=
name|encoder
operator|.
name|encode
argument_list|(
name|userPass
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|request
operator|.
name|setHeaderField
argument_list|(
literal|"Authorization"
argument_list|,
literal|"BASIC "
operator|+
name|encodedUserPass
argument_list|)
expr_stmt|;
name|WebResponse
name|response
init|=
name|client
operator|.
name|getResponse
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RssFeedServlet
operator|.
name|MIME_TYPE
argument_list|,
name|response
operator|.
name|getHeaderField
argument_list|(
literal|"CONTENT-TYPE"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Should have recieved a response"
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Should have been an OK response code."
argument_list|,
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|,
name|response
operator|.
name|getResponseCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*     public void testRequestNewVersionsOfArtifact()         throws Exception     {         RssFeedServlet servlet =             (RssFeedServlet) client.newInvocation(                                                    "http://localhost/rss/rss_feeds?groupId=org.apache.archiva&artifactId=artifact-two" ).getServlet();         assertNotNull( servlet );          WebRequest request = new GetMethodWebRequest( "http://localhost/rss/rss_feeds?groupId=org.apache.archiva&artifactId=artifact-two" );                  BASE64Encoder encoder = new BASE64Encoder();         String userPass = "user1:password1";         String encodedUserPass = encoder.encode( userPass.getBytes() );                 request.setHeaderField( "Authorization", "BASIC " + encodedUserPass );                          WebResponse response = client.getResponse( request );                 assertEquals( RssFeedServlet.MIME_TYPE, response.getHeaderField( "CONTENT-TYPE" ) );         assertNotNull( "Should have recieved a response", response );         assertEquals( "Should have been an OK response code.", HttpServletResponse.SC_OK, response.getResponseCode() );             }     */
specifier|public
name|void
name|testInvalidRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|RssFeedServlet
name|servlet
init|=
operator|(
name|RssFeedServlet
operator|)
name|client
operator|.
name|newInvocation
argument_list|(
literal|"http://localhost/rss/rss_feeds?invalid_param=xxx"
argument_list|)
operator|.
name|getServlet
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|servlet
argument_list|)
expr_stmt|;
try|try
block|{
name|WebResponse
name|response
init|=
name|client
operator|.
name|getResponse
argument_list|(
literal|"http://localhost/rss/rss_feeds?invalid_param=xxx"
argument_list|)
decl_stmt|;
block|}
catch|catch
parameter_list|(
name|HttpException
name|he
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Should have been a bad request response code."
argument_list|,
name|HttpServletResponse
operator|.
name|SC_BAD_REQUEST
argument_list|,
name|he
operator|.
name|getResponseCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testInvalidAuthenticationRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|RssFeedServlet
name|servlet
init|=
operator|(
name|RssFeedServlet
operator|)
name|client
operator|.
name|newInvocation
argument_list|(
literal|"http://localhost/rss/rss_feeds?repoId=unauthorized-repo"
argument_list|)
operator|.
name|getServlet
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|servlet
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://localhost/rss/rss_feeds?repoId=unauthorized-repo"
argument_list|)
decl_stmt|;
name|Encoder
name|encoder
init|=
operator|new
name|Base64
argument_list|()
decl_stmt|;
name|String
name|userPass
init|=
literal|"unauthUser:unauthPass"
decl_stmt|;
name|String
name|encodedUserPass
init|=
operator|new
name|String
argument_list|(
operator|(
name|byte
index|[]
operator|)
name|encoder
operator|.
name|encode
argument_list|(
name|userPass
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|request
operator|.
name|setHeaderField
argument_list|(
literal|"Authorization"
argument_list|,
literal|"BASIC "
operator|+
name|encodedUserPass
argument_list|)
expr_stmt|;
try|try
block|{
name|WebResponse
name|response
init|=
name|client
operator|.
name|getResponse
argument_list|(
name|request
argument_list|)
decl_stmt|;
block|}
catch|catch
parameter_list|(
name|HttpException
name|he
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Should have been a unauthorized response."
argument_list|,
name|HttpServletResponse
operator|.
name|SC_UNAUTHORIZED
argument_list|,
name|he
operator|.
name|getResponseCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testUnauthorizedRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|RssFeedServlet
name|servlet
init|=
operator|(
name|RssFeedServlet
operator|)
name|client
operator|.
name|newInvocation
argument_list|(
literal|"http://localhost/rss/rss_feeds?repoId=unauthorized-repo"
argument_list|)
operator|.
name|getServlet
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|servlet
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://localhost/rss/rss_feeds?repoId=unauthorized-repo"
argument_list|)
decl_stmt|;
name|BASE64Encoder
name|encoder
init|=
operator|new
name|BASE64Encoder
argument_list|()
decl_stmt|;
name|String
name|userPass
init|=
literal|"user1:password1"
decl_stmt|;
name|String
name|encodedUserPass
init|=
name|encoder
operator|.
name|encode
argument_list|(
name|userPass
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|request
operator|.
name|setHeaderField
argument_list|(
literal|"Authorization"
argument_list|,
literal|"BASIC "
operator|+
name|encodedUserPass
argument_list|)
expr_stmt|;
try|try
block|{
name|WebResponse
name|response
init|=
name|client
operator|.
name|getResponse
argument_list|(
name|request
argument_list|)
decl_stmt|;
block|}
catch|catch
parameter_list|(
name|HttpException
name|he
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Should have been a unauthorized response."
argument_list|,
name|HttpServletResponse
operator|.
name|SC_UNAUTHORIZED
argument_list|,
name|he
operator|.
name|getResponseCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|String
name|getPlexusConfigLocation
parameter_list|()
block|{
return|return
literal|"org/apache/maven/archiva/web/rss/RssFeedServletTest.xml"
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|client
operator|!=
literal|null
condition|)
block|{
name|client
operator|.
name|clearContents
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|sr
operator|!=
literal|null
condition|)
block|{
name|sr
operator|.
name|shutDown
argument_list|()
expr_stmt|;
block|}
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

