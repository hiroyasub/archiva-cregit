begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|action
operator|.
name|admin
operator|.
name|repositories
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|servletunit
operator|.
name|ServletRunner
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|servletunit
operator|.
name|ServletUnitClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|opensymphony
operator|.
name|xwork2
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
operator|.
name|RepositoryAdminException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
operator|.
name|group
operator|.
name|DefaultRepositoryGroupAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
operator|.
name|group
operator|.
name|RepositoryGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
operator|.
name|managed
operator|.
name|DefaultManagedRepositoryAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ManagedRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|RepositoryGroupConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|action
operator|.
name|AbstractActionTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|redback
operator|.
name|integration
operator|.
name|interceptor
operator|.
name|SecureActionBundle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|redback
operator|.
name|integration
operator|.
name|interceptor
operator|.
name|SecureActionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|MockControl
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * RepositoryGroupsActionTest  */
end_comment

begin_class
specifier|public
class|class
name|RepositoryGroupsActionTest
extends|extends
name|AbstractActionTestCase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|REPO_GROUP_ID
init|=
literal|"repo-group-ident"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|REPO1_ID
init|=
literal|"managed-repo-ident-1"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|REPO2_ID
init|=
literal|"managed-repo-ident-2"
decl_stmt|;
specifier|private
name|RepositoryGroupsAction
name|action
decl_stmt|;
specifier|private
name|MockControl
name|archivaConfigurationControl
decl_stmt|;
specifier|private
name|ArchivaConfiguration
name|archivaConfiguration
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|action
operator|=
operator|(
name|RepositoryGroupsAction
operator|)
name|getActionProxy
argument_list|(
literal|"/admin/repositoryGroups.action"
argument_list|)
operator|.
name|getAction
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|ArchivaConfiguration
operator|.
name|class
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|=
operator|(
name|ArchivaConfiguration
operator|)
name|archivaConfigurationControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|action
operator|.
name|setArchivaConfiguration
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
operator|(
operator|(
name|DefaultRepositoryGroupAdmin
operator|)
name|action
operator|.
name|getRepositoryGroupAdmin
argument_list|()
operator|)
operator|.
name|setArchivaConfiguration
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
operator|(
operator|(
name|DefaultManagedRepositoryAdmin
operator|)
operator|(
operator|(
name|DefaultRepositoryGroupAdmin
operator|)
name|action
operator|.
name|getRepositoryGroupAdmin
argument_list|()
operator|)
operator|.
name|getManagedRepositoryAdmin
argument_list|()
operator|)
operator|.
name|setArchivaConfiguration
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSecureActionBundle
parameter_list|()
throws|throws
name|SecureActionException
throws|,
name|RepositoryAdminException
block|{
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|action
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|SecureActionBundle
name|bundle
init|=
name|action
operator|.
name|getSecureActionBundle
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|bundle
operator|.
name|requiresAuthentication
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|bundle
operator|.
name|getAuthorizationTuples
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testAddRepositoryGroup
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|configuration
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|.
name|save
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|action
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|RepositoryGroup
name|repositoryGroup
init|=
name|action
operator|.
name|getRepositoryGroup
argument_list|()
decl_stmt|;
name|repositoryGroup
operator|.
name|setId
argument_list|(
name|REPO_GROUP_ID
argument_list|)
expr_stmt|;
name|String
name|status
init|=
name|action
operator|.
name|addRepositoryGroup
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|status
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|repositoryGroup
argument_list|)
argument_list|,
name|action
operator|.
name|getRepositoryGroupAdmin
argument_list|()
operator|.
name|getRepositoriesGroups
argument_list|()
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testAddEmptyRepositoryGroup
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|configuration
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|.
name|save
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|action
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|String
name|status
init|=
name|action
operator|.
name|addRepositoryGroup
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|ERROR
argument_list|,
name|status
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|configuration
operator|.
name|getRepositoryGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testAddDuplicateRepositoryGroup
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|configuration
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|.
name|save
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|action
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|RepositoryGroup
name|repositoryGroup
init|=
name|action
operator|.
name|getRepositoryGroup
argument_list|()
decl_stmt|;
name|repositoryGroup
operator|.
name|setId
argument_list|(
name|REPO_GROUP_ID
argument_list|)
expr_stmt|;
name|String
name|status
init|=
name|action
operator|.
name|addRepositoryGroup
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|status
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|repositoryGroup
argument_list|)
argument_list|,
name|action
operator|.
name|getRepositoryGroupAdmin
argument_list|()
operator|.
name|getRepositoriesGroups
argument_list|()
argument_list|)
expr_stmt|;
name|repositoryGroup
operator|.
name|setId
argument_list|(
name|REPO_GROUP_ID
argument_list|)
expr_stmt|;
name|status
operator|=
name|action
operator|.
name|addRepositoryGroup
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|ERROR
argument_list|,
name|status
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|repositoryGroup
argument_list|)
argument_list|,
name|action
operator|.
name|getRepositoryGroupAdmin
argument_list|()
operator|.
name|getRepositoriesGroups
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetRepositoryGroups
parameter_list|()
throws|throws
name|Exception
block|{
name|ServletRunner
name|sr
init|=
operator|new
name|ServletRunner
argument_list|()
decl_stmt|;
name|ServletUnitClient
name|sc
init|=
name|sr
operator|.
name|newClient
argument_list|()
decl_stmt|;
name|Configuration
name|configuration
init|=
name|createInitialConfiguration
argument_list|()
decl_stmt|;
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|action
operator|.
name|setServletRequest
argument_list|(
name|sc
operator|.
name|newInvocation
argument_list|(
literal|"http://localhost/admin/repositoryGroups.action"
argument_list|)
operator|.
name|getRequest
argument_list|()
argument_list|)
expr_stmt|;
name|action
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|execute
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://localhost:0/repository"
argument_list|,
name|action
operator|.
name|getBaseUrl
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|action
operator|.
name|getRepositoryGroups
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getRepositoryGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|action
operator|.
name|getManagedRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|RepositoryGroup
name|repoGroup
init|=
name|action
operator|.
name|getRepositoryGroups
argument_list|()
operator|.
name|get
argument_list|(
name|REPO_GROUP_ID
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repoGroup
operator|.
name|getRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|REPO1_ID
argument_list|,
name|repoGroup
operator|.
name|getRepositories
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|repos
init|=
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
operator|.
name|get
argument_list|(
name|repoGroup
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repos
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|REPO2_ID
argument_list|,
name|repos
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testAddRepositoryToGroup
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|configuration
init|=
name|createInitialConfiguration
argument_list|()
decl_stmt|;
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|,
literal|17
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|.
name|save
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|action
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|execute
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|action
operator|.
name|getRepositoryGroups
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getRepositoryGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|action
operator|.
name|getManagedRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|RepositoryGroup
name|repoGroup
init|=
name|action
operator|.
name|getRepositoryGroups
argument_list|()
operator|.
name|get
argument_list|(
name|REPO_GROUP_ID
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repoGroup
operator|.
name|getRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|REPO1_ID
argument_list|,
name|repoGroup
operator|.
name|getRepositories
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|repos
init|=
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
operator|.
name|get
argument_list|(
name|repoGroup
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repos
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|REPO2_ID
argument_list|,
name|repos
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRepoGroupId
argument_list|(
name|REPO_GROUP_ID
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRepoId
argument_list|(
name|REPO2_ID
argument_list|)
expr_stmt|;
name|result
operator|=
name|action
operator|.
name|addRepositoryToGroup
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|action
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|result
operator|=
name|action
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getRepositoryGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|repoGroup
operator|=
name|action
operator|.
name|getRepositoryGroups
argument_list|()
operator|.
name|get
argument_list|(
name|REPO_GROUP_ID
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|repoGroup
operator|.
name|getRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|REPO1_ID
argument_list|,
name|repoGroup
operator|.
name|getRepositories
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|REPO2_ID
argument_list|,
name|repoGroup
operator|.
name|getRepositories
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
operator|.
name|get
argument_list|(
name|repoGroup
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testRemoveRepositoryFromGroup
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|configuration
init|=
name|createInitialConfiguration
argument_list|()
decl_stmt|;
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|,
literal|13
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|.
name|save
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|action
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|execute
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|action
operator|.
name|getRepositoryGroups
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getRepositoryGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|action
operator|.
name|getManagedRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|RepositoryGroup
name|repoGroup
init|=
name|action
operator|.
name|getRepositoryGroups
argument_list|()
operator|.
name|get
argument_list|(
name|REPO_GROUP_ID
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repoGroup
operator|.
name|getRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|REPO1_ID
argument_list|,
name|repoGroup
operator|.
name|getRepositories
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|repos
init|=
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
operator|.
name|get
argument_list|(
name|repoGroup
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repos
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|REPO2_ID
argument_list|,
name|repos
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRepoGroupId
argument_list|(
name|REPO_GROUP_ID
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRepoId
argument_list|(
name|REPO1_ID
argument_list|)
expr_stmt|;
name|result
operator|=
name|action
operator|.
name|removeRepositoryFromGroup
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|action
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|result
operator|=
name|action
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|repoGroup
operator|=
name|action
operator|.
name|getRepositoryGroups
argument_list|()
operator|.
name|get
argument_list|(
name|REPO_GROUP_ID
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|repoGroup
operator|.
name|getRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|repos
operator|=
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
operator|.
name|get
argument_list|(
name|repoGroup
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|repos
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|REPO1_ID
argument_list|,
name|repos
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|REPO2_ID
argument_list|,
name|repos
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testAddDuplicateRepositoryToGroup
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|configuration
init|=
name|createInitialConfiguration
argument_list|()
decl_stmt|;
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|.
name|save
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|action
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|execute
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|action
operator|.
name|getRepositoryGroups
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getRepositoryGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|action
operator|.
name|getManagedRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|RepositoryGroup
name|repoGroup
init|=
name|action
operator|.
name|getRepositoryGroups
argument_list|()
operator|.
name|get
argument_list|(
name|REPO_GROUP_ID
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repoGroup
operator|.
name|getRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|REPO1_ID
argument_list|,
name|repoGroup
operator|.
name|getRepositories
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|repos
init|=
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
operator|.
name|get
argument_list|(
name|repoGroup
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repos
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|REPO2_ID
argument_list|,
name|repos
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRepoGroupId
argument_list|(
name|REPO_GROUP_ID
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRepoId
argument_list|(
name|REPO1_ID
argument_list|)
expr_stmt|;
name|result
operator|=
name|action
operator|.
name|addRepositoryToGroup
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|ERROR
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testRemoveRepositoryNotInGroup
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|configuration
init|=
name|createInitialConfiguration
argument_list|()
decl_stmt|;
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|.
name|save
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|action
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|execute
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|action
operator|.
name|getRepositoryGroups
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getRepositoryGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|action
operator|.
name|getManagedRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|RepositoryGroup
name|repoGroup
init|=
name|action
operator|.
name|getRepositoryGroups
argument_list|()
operator|.
name|get
argument_list|(
name|REPO_GROUP_ID
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repoGroup
operator|.
name|getRepositories
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|REPO1_ID
argument_list|,
name|repoGroup
operator|.
name|getRepositories
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|repos
init|=
name|action
operator|.
name|getGroupToRepositoryMap
argument_list|()
operator|.
name|get
argument_list|(
name|repoGroup
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repos
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|REPO2_ID
argument_list|,
name|repos
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRepoGroupId
argument_list|(
name|REPO_GROUP_ID
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRepoId
argument_list|(
name|REPO2_ID
argument_list|)
expr_stmt|;
name|result
operator|=
name|action
operator|.
name|removeRepositoryFromGroup
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|ERROR
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Configuration
name|createInitialConfiguration
parameter_list|()
block|{
name|Configuration
name|config
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|ManagedRepositoryConfiguration
name|managedRepo1
init|=
operator|new
name|ManagedRepositoryConfiguration
argument_list|()
decl_stmt|;
name|managedRepo1
operator|.
name|setId
argument_list|(
name|REPO1_ID
argument_list|)
expr_stmt|;
name|config
operator|.
name|addManagedRepository
argument_list|(
name|managedRepo1
argument_list|)
expr_stmt|;
name|ManagedRepositoryConfiguration
name|managedRepo2
init|=
operator|new
name|ManagedRepositoryConfiguration
argument_list|()
decl_stmt|;
name|managedRepo2
operator|.
name|setId
argument_list|(
name|REPO2_ID
argument_list|)
expr_stmt|;
name|config
operator|.
name|addManagedRepository
argument_list|(
name|managedRepo2
argument_list|)
expr_stmt|;
name|RepositoryGroupConfiguration
name|repoGroup
init|=
operator|new
name|RepositoryGroupConfiguration
argument_list|()
decl_stmt|;
name|repoGroup
operator|.
name|setId
argument_list|(
name|REPO_GROUP_ID
argument_list|)
expr_stmt|;
name|repoGroup
operator|.
name|addRepository
argument_list|(
name|REPO1_ID
argument_list|)
expr_stmt|;
name|config
operator|.
name|addRepositoryGroup
argument_list|(
name|repoGroup
argument_list|)
expr_stmt|;
return|return
name|config
return|;
block|}
block|}
end_class

end_unit

