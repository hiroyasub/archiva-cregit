begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|action
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|com
operator|.
name|opensymphony
operator|.
name|xwork2
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ProjectVersionMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|MetadataResolverException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|memory
operator|.
name|TestMetadataResolver
import|;
end_import

begin_class
specifier|public
class|class
name|BrowseActionTest
extends|extends
name|AbstractActionTestCase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|ACTION_HINT
init|=
literal|"browseAction"
decl_stmt|;
specifier|private
name|BrowseAction
name|action
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|GROUPS
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"commons-lang"
argument_list|,
literal|"org.apache.maven"
argument_list|,
literal|"com.sun"
argument_list|,
literal|"com.oracle"
argument_list|,
literal|"repeat.repeat"
argument_list|)
decl_stmt|;
specifier|public
name|void
name|testInstantiation
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|action
operator|==
name|lookup
argument_list|(
name|Action
operator|.
name|class
argument_list|,
name|ACTION_HINT
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testBrowse
parameter_list|()
block|{
name|metadataResolver
operator|.
name|setNamespaces
argument_list|(
name|GROUPS
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|browse
argument_list|()
decl_stmt|;
name|assertSuccessResult
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"com"
argument_list|,
literal|"commons-lang"
argument_list|,
literal|"org.apache"
argument_list|,
literal|"repeat.repeat"
argument_list|)
argument_list|,
name|action
operator|.
name|getNamespaces
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectIds
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectVersions
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getSharedModel
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testBrowseNoObservableRepos
parameter_list|()
block|{
name|setObservableRepos
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|browse
argument_list|()
decl_stmt|;
name|assertNoAccessResult
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertNoOutputVariables
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testBrowseGroupNoObservableRepos
parameter_list|()
block|{
name|setObservableRepos
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|selectedGroupId
init|=
literal|"org"
decl_stmt|;
name|action
operator|.
name|setGroupId
argument_list|(
name|selectedGroupId
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|browseGroup
argument_list|()
decl_stmt|;
name|assertNoAccessResult
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|selectedGroupId
argument_list|,
name|action
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getNamespaces
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectIds
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectVersions
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getSharedModel
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testBrowseArtifactNoObservableRepos
parameter_list|()
throws|throws
name|MetadataResolverException
block|{
name|setObservableRepos
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|selectedGroupId
init|=
literal|"org.apache"
decl_stmt|;
name|String
name|selectedArtifactId
init|=
literal|"apache"
decl_stmt|;
name|action
operator|.
name|setGroupId
argument_list|(
name|selectedGroupId
argument_list|)
expr_stmt|;
name|action
operator|.
name|setArtifactId
argument_list|(
name|selectedArtifactId
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|browseArtifact
argument_list|()
decl_stmt|;
name|assertNoAccessResult
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|selectedGroupId
argument_list|,
name|action
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|selectedArtifactId
argument_list|,
name|action
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getNamespaces
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectIds
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectVersions
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getSharedModel
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testBrowseGroupNoGroupId
parameter_list|()
block|{
name|String
name|result
init|=
name|action
operator|.
name|browseGroup
argument_list|()
decl_stmt|;
name|assertErrorResult
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertNoOutputVariables
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testBrowseGroupNoArtifacts
parameter_list|()
block|{
name|String
name|selectedGroupId
init|=
literal|"org"
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|groups
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"org.apache.maven"
argument_list|)
decl_stmt|;
name|metadataResolver
operator|.
name|setNamespaces
argument_list|(
name|groups
argument_list|)
expr_stmt|;
name|action
operator|.
name|setGroupId
argument_list|(
name|selectedGroupId
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|browseGroup
argument_list|()
decl_stmt|;
name|assertSuccessResult
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"org.apache"
argument_list|)
argument_list|,
name|action
operator|.
name|getNamespaces
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|action
operator|.
name|getProjectIds
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectVersions
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|selectedGroupId
argument_list|,
name|action
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getSharedModel
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testBrowseGroupWithArtifacts
parameter_list|()
block|{
name|String
name|artifacts
init|=
literal|"apache"
decl_stmt|;
name|String
name|selectedGroupId
init|=
literal|"org.apache"
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|groups
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"org.apache.maven"
argument_list|)
decl_stmt|;
name|metadataResolver
operator|.
name|setNamespaces
argument_list|(
name|groups
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|selectedGroupId
argument_list|,
name|artifacts
argument_list|,
operator|new
name|ProjectVersionMetadata
argument_list|()
argument_list|)
expr_stmt|;
name|action
operator|.
name|setGroupId
argument_list|(
name|selectedGroupId
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|browseGroup
argument_list|()
decl_stmt|;
name|assertSuccessResult
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|groups
argument_list|,
name|action
operator|.
name|getNamespaces
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|artifacts
argument_list|)
argument_list|,
name|action
operator|.
name|getProjectIds
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectVersions
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|selectedGroupId
argument_list|,
name|action
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getSharedModel
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testBrowseWithCollapsedGroupsAndArtifacts
parameter_list|()
block|{
name|List
argument_list|<
name|String
argument_list|>
name|groups
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"org.apache"
argument_list|)
decl_stmt|;
name|metadataResolver
operator|.
name|setNamespaces
argument_list|(
name|groups
argument_list|)
expr_stmt|;
comment|// add an artifact in the tree to make sure "single" is not collapsed
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
literal|"org.apache"
argument_list|,
literal|"apache"
argument_list|,
operator|new
name|ProjectVersionMetadata
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|browse
argument_list|()
decl_stmt|;
name|assertSuccessResult
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"org.apache"
argument_list|)
argument_list|,
name|action
operator|.
name|getNamespaces
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectIds
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectVersions
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getSharedModel
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testBrowseGroupWithCollapsedGroupsAndArtifacts
parameter_list|()
block|{
name|String
name|artifacts
init|=
literal|"apache"
decl_stmt|;
name|String
name|selectedGroupId
init|=
literal|"org.apache"
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|groups
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"org.apache"
argument_list|)
decl_stmt|;
name|metadataResolver
operator|.
name|setNamespaces
argument_list|(
name|groups
argument_list|)
expr_stmt|;
comment|// add an artifact in the tree to make sure "single" is not collapsed
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
literal|"org.apache"
argument_list|,
literal|"apache"
argument_list|,
operator|new
name|ProjectVersionMetadata
argument_list|()
argument_list|)
expr_stmt|;
name|action
operator|.
name|setGroupId
argument_list|(
name|selectedGroupId
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|browseGroup
argument_list|()
decl_stmt|;
name|assertSuccessResult
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"org.apache.archiva"
argument_list|)
argument_list|,
name|action
operator|.
name|getNamespaces
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|artifacts
argument_list|)
argument_list|,
name|action
operator|.
name|getProjectIds
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectVersions
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|selectedGroupId
argument_list|,
name|action
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getSharedModel
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testBrowseArtifactNoGroupId
parameter_list|()
throws|throws
name|MetadataResolverException
block|{
name|String
name|selectedArtifactId
init|=
literal|"apache"
decl_stmt|;
name|action
operator|.
name|setArtifactId
argument_list|(
name|selectedArtifactId
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|browseArtifact
argument_list|()
decl_stmt|;
name|assertErrorResult
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getNamespaces
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectIds
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectVersions
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|selectedArtifactId
argument_list|,
name|action
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getSharedModel
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testBrowseArtifactNoArtifactId
parameter_list|()
throws|throws
name|MetadataResolverException
block|{
name|String
name|selectedGroupId
init|=
literal|"org.apache"
decl_stmt|;
name|action
operator|.
name|setGroupId
argument_list|(
name|selectedGroupId
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|browseArtifact
argument_list|()
decl_stmt|;
name|assertErrorResult
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getNamespaces
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectIds
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectVersions
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|selectedGroupId
argument_list|,
name|action
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getSharedModel
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testBrowseArtifact
parameter_list|()
throws|throws
name|MetadataResolverException
block|{
name|String
name|selectedGroupId
init|=
literal|"org.apache"
decl_stmt|;
name|String
name|selectedArtifactId
init|=
literal|"apache"
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|versions
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1"
argument_list|,
literal|"2"
argument_list|,
literal|"3"
argument_list|,
literal|"4"
argument_list|)
decl_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
name|createProjectModel
argument_list|(
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
name|createProjectModel
argument_list|(
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
name|createProjectModel
argument_list|(
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
literal|"3"
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
name|createProjectModel
argument_list|(
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
literal|"4"
argument_list|)
argument_list|)
expr_stmt|;
name|action
operator|.
name|setGroupId
argument_list|(
name|selectedGroupId
argument_list|)
expr_stmt|;
name|action
operator|.
name|setArtifactId
argument_list|(
name|selectedArtifactId
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|browseArtifact
argument_list|()
decl_stmt|;
name|assertSuccessResult
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|selectedGroupId
argument_list|,
name|action
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|selectedArtifactId
argument_list|,
name|action
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getNamespaces
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectIds
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|versions
argument_list|,
name|action
operator|.
name|getProjectVersions
argument_list|()
argument_list|)
expr_stmt|;
name|ProjectVersionMetadata
name|model
init|=
name|action
operator|.
name|getSharedModel
argument_list|()
decl_stmt|;
name|assertDefaultModel
argument_list|(
name|model
argument_list|,
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testBrowseArtifactWithSnapshots
parameter_list|()
throws|throws
name|MetadataResolverException
block|{
name|String
name|selectedGroupId
init|=
literal|"org.apache"
decl_stmt|;
name|String
name|selectedArtifactId
init|=
literal|"apache"
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|versions
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1"
argument_list|,
literal|"2"
argument_list|,
literal|"3"
argument_list|,
literal|"4-SNAPSHOT"
argument_list|,
literal|"4"
argument_list|,
literal|"5-SNAPSHOT"
argument_list|)
decl_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
name|createProjectModel
argument_list|(
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
name|createProjectModel
argument_list|(
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
name|createProjectModel
argument_list|(
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
literal|"3"
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
name|createProjectModel
argument_list|(
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
literal|"4-SNAPSHOT"
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
name|createProjectModel
argument_list|(
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
literal|"4"
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
name|createProjectModel
argument_list|(
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
literal|"5-SNAPSHOT"
argument_list|)
argument_list|)
expr_stmt|;
name|action
operator|.
name|setGroupId
argument_list|(
name|selectedGroupId
argument_list|)
expr_stmt|;
name|action
operator|.
name|setArtifactId
argument_list|(
name|selectedArtifactId
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|browseArtifact
argument_list|()
decl_stmt|;
name|assertSuccessResult
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|selectedGroupId
argument_list|,
name|action
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|selectedArtifactId
argument_list|,
name|action
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getNamespaces
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectIds
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|versions
argument_list|,
name|action
operator|.
name|getProjectVersions
argument_list|()
argument_list|)
expr_stmt|;
name|ProjectVersionMetadata
name|model
init|=
name|action
operator|.
name|getSharedModel
argument_list|()
decl_stmt|;
name|assertDefaultModel
argument_list|(
name|model
argument_list|,
name|selectedGroupId
argument_list|,
name|selectedArtifactId
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
comment|// TODO: test with restricted observable repos
comment|// TODO: current behaviour is to ignore values that differ between models - instead, pick the latest and use that.
comment|//       Need to update the tests to verify this as models are currently the same
specifier|private
name|void
name|assertNoAccessResult
parameter_list|(
name|String
name|result
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|GlobalResults
operator|.
name|ACCESS_TO_NO_REPOS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|action
operator|.
name|getActionMessages
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertSuccessResult
parameter_list|(
name|String
name|result
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|action
operator|.
name|getActionMessages
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertErrorResult
parameter_list|(
name|String
name|result
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|Action
operator|.
name|ERROR
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|action
operator|.
name|getActionMessages
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertNoOutputVariables
parameter_list|()
block|{
name|assertNull
argument_list|(
name|action
operator|.
name|getNamespaces
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectIds
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getProjectVersions
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getSharedModel
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|action
operator|=
operator|(
name|BrowseAction
operator|)
name|lookup
argument_list|(
name|Action
operator|.
name|class
argument_list|,
name|ACTION_HINT
argument_list|)
expr_stmt|;
name|metadataResolver
operator|=
operator|(
name|TestMetadataResolver
operator|)
name|action
operator|.
name|getMetadataResolver
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

