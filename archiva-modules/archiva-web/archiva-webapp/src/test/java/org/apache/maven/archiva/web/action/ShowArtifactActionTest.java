begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|action
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|com
operator|.
name|opensymphony
operator|.
name|xwork2
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ArtifactMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|Dependency
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|MailingList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ProjectVersionMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ProjectVersionReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|memory
operator|.
name|TestMetadataResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|storage
operator|.
name|maven2
operator|.
name|MavenArtifactFacet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ManagedRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ManagedRepositoryContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RepositoryContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|ManagedDefaultRepositoryContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|MockControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|MockClassControl
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
specifier|public
class|class
name|ShowArtifactActionTest
extends|extends
name|AbstractActionTestCase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|ACTION_HINT
init|=
literal|"showArtifactAction"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_VERSION
init|=
literal|"version"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_SNAPSHOT_VERSION
init|=
literal|"1.0-SNAPSHOT"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_TS_SNAPSHOT_VERSION
init|=
literal|"1.0-20091120.111111-1"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|OTHER_TEST_REPO
init|=
literal|"first-repo"
decl_stmt|;
specifier|private
name|ShowArtifactAction
name|action
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|TEST_SNAPSHOT_ARTIFACTS
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|createArtifact
argument_list|(
name|TEST_TS_SNAPSHOT_VERSION
argument_list|)
argument_list|,
name|createArtifact
argument_list|(
literal|"1.0-20091120.222222-2"
argument_list|,
literal|"20091120.222222"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|createArtifact
argument_list|(
literal|"1.0-20091123.333333-3"
argument_list|,
literal|"20091123.333333"
argument_list|,
literal|3
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|long
name|TEST_SIZE
init|=
literal|12345L
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_TYPE
init|=
literal|"jar"
decl_stmt|;
specifier|public
name|void
name|testInstantiation
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|action
operator|==
name|lookup
argument_list|(
name|Action
operator|.
name|class
argument_list|,
name|ACTION_HINT
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetArtifactUniqueRelease
parameter_list|()
block|{
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|TEST_GROUP_ID
argument_list|,
name|TEST_ARTIFACT_ID
argument_list|,
name|createProjectModel
argument_list|(
name|TEST_VERSION
argument_list|)
argument_list|)
expr_stmt|;
name|setActionParameters
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|artifact
argument_list|()
decl_stmt|;
name|assertActionSuccess
argument_list|(
name|action
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertActionParameters
argument_list|(
name|action
argument_list|)
expr_stmt|;
name|ProjectVersionMetadata
name|model
init|=
name|action
operator|.
name|getModel
argument_list|()
decl_stmt|;
name|assertDefaultModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_REPO
argument_list|,
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getDependees
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getDependencies
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getMailingLists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|action
operator|.
name|getArtifacts
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetArtifactUniqueSnapshot
parameter_list|()
block|{
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|TEST_GROUP_ID
argument_list|,
name|TEST_ARTIFACT_ID
argument_list|,
name|createProjectModel
argument_list|(
name|TEST_SNAPSHOT_VERSION
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setArtifacts
argument_list|(
name|TEST_REPO
argument_list|,
name|TEST_GROUP_ID
argument_list|,
name|TEST_ARTIFACT_ID
argument_list|,
name|TEST_SNAPSHOT_VERSION
argument_list|,
name|TEST_SNAPSHOT_ARTIFACTS
argument_list|)
expr_stmt|;
name|action
operator|.
name|setGroupId
argument_list|(
name|TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|action
operator|.
name|setArtifactId
argument_list|(
name|TEST_ARTIFACT_ID
argument_list|)
expr_stmt|;
name|action
operator|.
name|setVersion
argument_list|(
name|TEST_SNAPSHOT_VERSION
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|artifact
argument_list|()
decl_stmt|;
name|assertActionSuccess
argument_list|(
name|action
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_GROUP_ID
argument_list|,
name|action
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_ARTIFACT_ID
argument_list|,
name|action
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_SNAPSHOT_VERSION
argument_list|,
name|action
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|ProjectVersionMetadata
name|model
init|=
name|action
operator|.
name|getModel
argument_list|()
decl_stmt|;
name|assertDefaultModel
argument_list|(
name|model
argument_list|,
name|TEST_SNAPSHOT_VERSION
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_REPO
argument_list|,
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertArtifacts
argument_list|(
name|TEST_SNAPSHOT_ARTIFACTS
argument_list|,
name|action
operator|.
name|getArtifacts
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getDependees
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getDependencies
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getMailingLists
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetArtifactUniqueSnapshotTimestamped
parameter_list|()
block|{
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|TEST_GROUP_ID
argument_list|,
name|TEST_ARTIFACT_ID
argument_list|,
name|createProjectModel
argument_list|(
name|TEST_SNAPSHOT_VERSION
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setArtifacts
argument_list|(
name|TEST_REPO
argument_list|,
name|TEST_GROUP_ID
argument_list|,
name|TEST_ARTIFACT_ID
argument_list|,
name|TEST_SNAPSHOT_VERSION
argument_list|,
name|TEST_SNAPSHOT_ARTIFACTS
argument_list|)
expr_stmt|;
name|action
operator|.
name|setGroupId
argument_list|(
name|TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|action
operator|.
name|setArtifactId
argument_list|(
name|TEST_ARTIFACT_ID
argument_list|)
expr_stmt|;
name|action
operator|.
name|setVersion
argument_list|(
name|TEST_TS_SNAPSHOT_VERSION
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|artifact
argument_list|()
decl_stmt|;
name|assertError
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertNoOutputFields
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testGetMissingProject
parameter_list|()
block|{
name|setActionParameters
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|artifact
argument_list|()
decl_stmt|;
name|assertError
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertActionParameters
argument_list|(
name|action
argument_list|)
expr_stmt|;
name|assertNoOutputFields
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testGetArtifactNoObservableRepos
parameter_list|()
block|{
name|setObservableRepos
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|)
expr_stmt|;
name|setActionParameters
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|artifact
argument_list|()
decl_stmt|;
comment|// Actually, it'd be better to have an error:
name|assertError
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertActionParameters
argument_list|(
name|action
argument_list|)
expr_stmt|;
name|assertNoOutputFields
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testGetArtifactNotInObservableRepos
parameter_list|()
block|{
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|OTHER_TEST_REPO
argument_list|,
name|TEST_GROUP_ID
argument_list|,
name|TEST_ARTIFACT_ID
argument_list|,
name|createProjectModel
argument_list|(
name|TEST_VERSION
argument_list|)
argument_list|)
expr_stmt|;
name|setActionParameters
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|artifact
argument_list|()
decl_stmt|;
name|assertError
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertActionParameters
argument_list|(
name|action
argument_list|)
expr_stmt|;
name|assertNoOutputFields
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testGetArtifactOnlySeenInSecondObservableRepo
parameter_list|()
block|{
name|setObservableRepos
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|OTHER_TEST_REPO
argument_list|,
name|TEST_REPO
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|TEST_GROUP_ID
argument_list|,
name|TEST_ARTIFACT_ID
argument_list|,
name|createProjectModel
argument_list|(
name|TEST_VERSION
argument_list|)
argument_list|)
expr_stmt|;
name|setActionParameters
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|artifact
argument_list|()
decl_stmt|;
name|assertActionSuccess
argument_list|(
name|action
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertActionParameters
argument_list|(
name|action
argument_list|)
expr_stmt|;
name|ProjectVersionMetadata
name|model
init|=
name|action
operator|.
name|getModel
argument_list|()
decl_stmt|;
name|assertDefaultModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_REPO
argument_list|,
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getDependees
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getDependencies
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getMailingLists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|action
operator|.
name|getArtifacts
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetArtifactSeenInBothObservableRepo
parameter_list|()
block|{
name|setObservableRepos
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|TEST_REPO
argument_list|,
name|OTHER_TEST_REPO
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|TEST_GROUP_ID
argument_list|,
name|TEST_ARTIFACT_ID
argument_list|,
name|createProjectModel
argument_list|(
name|TEST_VERSION
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|OTHER_TEST_REPO
argument_list|,
name|TEST_GROUP_ID
argument_list|,
name|TEST_ARTIFACT_ID
argument_list|,
name|createProjectModel
argument_list|(
name|TEST_VERSION
argument_list|)
argument_list|)
expr_stmt|;
name|setActionParameters
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|artifact
argument_list|()
decl_stmt|;
name|assertActionSuccess
argument_list|(
name|action
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertActionParameters
argument_list|(
name|action
argument_list|)
expr_stmt|;
name|ProjectVersionMetadata
name|model
init|=
name|action
operator|.
name|getModel
argument_list|()
decl_stmt|;
name|assertDefaultModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_REPO
argument_list|,
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getDependees
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getDependencies
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getMailingLists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|action
operator|.
name|getArtifacts
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetArtifactCanOnlyObserveInOneOfTwoRepos
parameter_list|()
block|{
name|setObservableRepos
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|TEST_REPO
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|OTHER_TEST_REPO
argument_list|,
name|TEST_GROUP_ID
argument_list|,
name|TEST_ARTIFACT_ID
argument_list|,
name|createProjectModel
argument_list|(
name|TEST_VERSION
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|TEST_GROUP_ID
argument_list|,
name|TEST_ARTIFACT_ID
argument_list|,
name|createProjectModel
argument_list|(
name|TEST_VERSION
argument_list|)
argument_list|)
expr_stmt|;
name|setActionParameters
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|artifact
argument_list|()
decl_stmt|;
name|assertActionSuccess
argument_list|(
name|action
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertActionParameters
argument_list|(
name|action
argument_list|)
expr_stmt|;
name|ProjectVersionMetadata
name|model
init|=
name|action
operator|.
name|getModel
argument_list|()
decl_stmt|;
name|assertDefaultModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_REPO
argument_list|,
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getDependees
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getDependencies
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getMailingLists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|action
operator|.
name|getArtifacts
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetArtifactNoMavenFacet
parameter_list|()
block|{
name|ProjectVersionMetadata
name|versionMetadata
init|=
operator|new
name|ProjectVersionMetadata
argument_list|()
decl_stmt|;
name|versionMetadata
operator|.
name|setId
argument_list|(
name|TEST_VERSION
argument_list|)
expr_stmt|;
name|versionMetadata
operator|.
name|setUrl
argument_list|(
name|TEST_URL
argument_list|)
expr_stmt|;
name|versionMetadata
operator|.
name|setName
argument_list|(
name|TEST_NAME
argument_list|)
expr_stmt|;
name|versionMetadata
operator|.
name|setDescription
argument_list|(
name|TEST_DESCRIPTION
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|TEST_GROUP_ID
argument_list|,
name|TEST_ARTIFACT_ID
argument_list|,
name|versionMetadata
argument_list|)
expr_stmt|;
name|setActionParameters
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|artifact
argument_list|()
decl_stmt|;
name|assertActionSuccess
argument_list|(
name|action
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertActionParameters
argument_list|(
name|action
argument_list|)
expr_stmt|;
name|ProjectVersionMetadata
name|model
init|=
name|action
operator|.
name|getModel
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|TEST_VERSION
argument_list|,
name|model
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_URL
argument_list|,
name|model
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_NAME
argument_list|,
name|model
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_DESCRIPTION
argument_list|,
name|model
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_REPO
argument_list|,
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getDependees
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getDependencies
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getMailingLists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|action
operator|.
name|getArtifacts
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetMailingLists
parameter_list|()
block|{
name|ProjectVersionMetadata
name|versionMetadata
init|=
name|createProjectModel
argument_list|(
name|TEST_VERSION
argument_list|)
decl_stmt|;
name|MailingList
name|ml1
init|=
name|createMailingList
argument_list|(
literal|"Users List"
argument_list|,
literal|"users"
argument_list|)
decl_stmt|;
name|MailingList
name|ml2
init|=
name|createMailingList
argument_list|(
literal|"Developers List"
argument_list|,
literal|"dev"
argument_list|)
decl_stmt|;
name|versionMetadata
operator|.
name|setMailingLists
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|ml1
argument_list|,
name|ml2
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|TEST_GROUP_ID
argument_list|,
name|TEST_ARTIFACT_ID
argument_list|,
name|versionMetadata
argument_list|)
expr_stmt|;
name|setActionParameters
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|mailingLists
argument_list|()
decl_stmt|;
name|assertActionSuccess
argument_list|(
name|action
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertActionParameters
argument_list|(
name|action
argument_list|)
expr_stmt|;
name|ProjectVersionMetadata
name|model
init|=
name|action
operator|.
name|getModel
argument_list|()
decl_stmt|;
name|assertDefaultModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|action
operator|.
name|getMailingLists
argument_list|()
argument_list|)
expr_stmt|;
name|assertMailingList
argument_list|(
name|action
operator|.
name|getMailingLists
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"Users List"
argument_list|,
literal|"users"
argument_list|)
expr_stmt|;
name|assertMailingList
argument_list|(
name|action
operator|.
name|getMailingLists
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"Developers List"
argument_list|,
literal|"dev"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_REPO
argument_list|,
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getDependees
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getDependencies
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|action
operator|.
name|getArtifacts
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetDependencies
parameter_list|()
block|{
name|ProjectVersionMetadata
name|versionMetadata
init|=
name|createProjectModel
argument_list|(
name|TEST_VERSION
argument_list|)
decl_stmt|;
name|Dependency
name|dependency1
init|=
name|createDependencyBasic
argument_list|(
literal|"artifactId1"
argument_list|)
decl_stmt|;
name|Dependency
name|dependency2
init|=
name|createDependencyExtended
argument_list|(
literal|"artifactId2"
argument_list|)
decl_stmt|;
name|versionMetadata
operator|.
name|setDependencies
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dependency1
argument_list|,
name|dependency2
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|TEST_GROUP_ID
argument_list|,
name|TEST_ARTIFACT_ID
argument_list|,
name|versionMetadata
argument_list|)
expr_stmt|;
name|setActionParameters
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|dependencies
argument_list|()
decl_stmt|;
name|assertActionSuccess
argument_list|(
name|action
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertActionParameters
argument_list|(
name|action
argument_list|)
expr_stmt|;
name|ProjectVersionMetadata
name|model
init|=
name|action
operator|.
name|getModel
argument_list|()
decl_stmt|;
name|assertDefaultModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|action
operator|.
name|getDependencies
argument_list|()
argument_list|)
expr_stmt|;
name|assertDependencyBasic
argument_list|(
name|action
operator|.
name|getDependencies
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"artifactId1"
argument_list|)
expr_stmt|;
name|assertDependencyExtended
argument_list|(
name|action
operator|.
name|getDependencies
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"artifactId2"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_REPO
argument_list|,
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getDependees
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getMailingLists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|action
operator|.
name|getArtifacts
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetDependees
parameter_list|()
block|{
name|ProjectVersionMetadata
name|versionMetadata
init|=
name|createProjectModel
argument_list|(
name|TEST_VERSION
argument_list|)
decl_stmt|;
name|metadataResolver
operator|.
name|setProjectVersion
argument_list|(
name|TEST_REPO
argument_list|,
name|TEST_GROUP_ID
argument_list|,
name|TEST_ARTIFACT_ID
argument_list|,
name|versionMetadata
argument_list|)
expr_stmt|;
name|ProjectVersionReference
name|dependee1
init|=
name|createReference
argument_list|(
literal|"artifactId1"
argument_list|)
decl_stmt|;
name|ProjectVersionReference
name|dependee2
init|=
name|createReference
argument_list|(
literal|"artifactId2"
argument_list|)
decl_stmt|;
name|metadataResolver
operator|.
name|setProjectReferences
argument_list|(
name|TEST_REPO
argument_list|,
name|TEST_GROUP_ID
argument_list|,
name|TEST_ARTIFACT_ID
argument_list|,
name|TEST_VERSION
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|dependee1
argument_list|,
name|dependee2
argument_list|)
argument_list|)
expr_stmt|;
name|setActionParameters
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|dependees
argument_list|()
decl_stmt|;
name|assertActionSuccess
argument_list|(
name|action
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertActionParameters
argument_list|(
name|action
argument_list|)
expr_stmt|;
name|ProjectVersionMetadata
name|model
init|=
name|action
operator|.
name|getModel
argument_list|()
decl_stmt|;
name|assertDefaultModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|action
operator|.
name|getDependees
argument_list|()
argument_list|)
expr_stmt|;
name|assertCoordinate
argument_list|(
name|action
operator|.
name|getDependees
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"artifactId1"
argument_list|)
expr_stmt|;
name|assertCoordinate
argument_list|(
name|action
operator|.
name|getDependees
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"artifactId2"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_REPO
argument_list|,
name|action
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getDependencies
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getMailingLists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|action
operator|.
name|getArtifacts
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertArtifacts
parameter_list|(
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|expectedArtifacts
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|ShowArtifactAction
operator|.
name|ArtifactDownloadInfo
argument_list|>
argument_list|>
name|artifactMap
parameter_list|)
block|{
comment|// assuming only one of each version at this point
name|assertEquals
argument_list|(
name|expectedArtifacts
operator|.
name|size
argument_list|()
argument_list|,
name|artifactMap
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|ArtifactMetadata
name|artifact
range|:
name|expectedArtifacts
control|)
block|{
name|assertTrue
argument_list|(
name|artifactMap
operator|.
name|containsKey
argument_list|(
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ShowArtifactAction
operator|.
name|ArtifactDownloadInfo
argument_list|>
name|list
init|=
name|artifactMap
operator|.
name|get
argument_list|(
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|)
decl_stmt|;
name|ShowArtifactAction
operator|.
name|ArtifactDownloadInfo
name|actual
init|=
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|artifact
operator|.
name|getNamespace
argument_list|()
argument_list|,
name|actual
operator|.
name|getNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artifact
operator|.
name|getId
argument_list|()
argument_list|,
name|actual
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artifact
operator|.
name|getProject
argument_list|()
argument_list|,
name|actual
operator|.
name|getProject
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|,
name|actual
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|,
name|actual
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_TYPE
argument_list|,
name|actual
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"12.06 K"
argument_list|,
name|actual
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artifact
operator|.
name|getNamespace
argument_list|()
operator|+
literal|"/"
operator|+
name|artifact
operator|.
name|getProject
argument_list|()
operator|+
literal|"/"
operator|+
name|TEST_SNAPSHOT_VERSION
operator|+
literal|"/"
operator|+
name|artifact
operator|.
name|getId
argument_list|()
argument_list|,
name|actual
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|ArtifactMetadata
name|createArtifact
parameter_list|(
name|String
name|version
parameter_list|)
block|{
return|return
name|createArtifact
argument_list|(
name|version
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|ArtifactMetadata
name|createArtifact
parameter_list|(
name|String
name|version
parameter_list|,
name|String
name|timestamp
parameter_list|,
name|int
name|buildNumber
parameter_list|)
block|{
name|ArtifactMetadata
name|metadata
init|=
operator|new
name|ArtifactMetadata
argument_list|()
decl_stmt|;
name|metadata
operator|.
name|setProject
argument_list|(
name|TEST_ARTIFACT_ID
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|setId
argument_list|(
name|TEST_ARTIFACT_ID
operator|+
literal|"-"
operator|+
name|version
operator|+
literal|".jar"
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|setNamespace
argument_list|(
name|TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|setRepositoryId
argument_list|(
name|TEST_REPO
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|setSize
argument_list|(
name|TEST_SIZE
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|setVersion
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|MavenArtifactFacet
name|facet
init|=
operator|new
name|MavenArtifactFacet
argument_list|()
decl_stmt|;
name|facet
operator|.
name|setType
argument_list|(
literal|"jar"
argument_list|)
expr_stmt|;
name|facet
operator|.
name|setTimestamp
argument_list|(
name|timestamp
argument_list|)
expr_stmt|;
name|facet
operator|.
name|setBuildNumber
argument_list|(
name|buildNumber
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|addFacet
argument_list|(
name|facet
argument_list|)
expr_stmt|;
return|return
name|metadata
return|;
block|}
specifier|private
name|ProjectVersionReference
name|createReference
parameter_list|(
name|String
name|projectId
parameter_list|)
block|{
name|ProjectVersionReference
name|reference
init|=
operator|new
name|ProjectVersionReference
argument_list|()
decl_stmt|;
name|reference
operator|.
name|setNamespace
argument_list|(
literal|"groupId"
argument_list|)
expr_stmt|;
name|reference
operator|.
name|setProjectId
argument_list|(
name|projectId
argument_list|)
expr_stmt|;
name|reference
operator|.
name|setProjectVersion
argument_list|(
literal|"version"
argument_list|)
expr_stmt|;
name|reference
operator|.
name|setReferenceType
argument_list|(
name|ProjectVersionReference
operator|.
name|ReferenceType
operator|.
name|DEPENDENCY
argument_list|)
expr_stmt|;
return|return
name|reference
return|;
block|}
specifier|private
name|void
name|assertCoordinate
parameter_list|(
name|ProjectVersionReference
name|dependee
parameter_list|,
name|String
name|artifactId
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|artifactId
argument_list|,
name|dependee
operator|.
name|getProjectId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"groupId"
argument_list|,
name|dependee
operator|.
name|getNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"version"
argument_list|,
name|dependee
operator|.
name|getProjectVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertDependencyBasic
parameter_list|(
name|Dependency
name|dependency
parameter_list|,
name|String
name|artifactId
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|artifactId
argument_list|,
name|dependency
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"groupId"
argument_list|,
name|dependency
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"version"
argument_list|,
name|dependency
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertDependencyExtended
parameter_list|(
name|Dependency
name|dependency
parameter_list|,
name|String
name|artifactId
parameter_list|)
block|{
name|assertDependencyBasic
argument_list|(
name|dependency
argument_list|,
name|artifactId
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|dependency
operator|.
name|isOptional
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"classifier"
argument_list|,
name|dependency
operator|.
name|getClassifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|dependency
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"scope"
argument_list|,
name|dependency
operator|.
name|getScope
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"systemPath"
argument_list|,
name|dependency
operator|.
name|getSystemPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Dependency
name|createDependencyExtended
parameter_list|(
name|String
name|artifactId
parameter_list|)
block|{
name|Dependency
name|dependency
init|=
name|createDependencyBasic
argument_list|(
name|artifactId
argument_list|)
decl_stmt|;
name|dependency
operator|.
name|setClassifier
argument_list|(
literal|"classifier"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setOptional
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setScope
argument_list|(
literal|"scope"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setSystemPath
argument_list|(
literal|"systemPath"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setType
argument_list|(
literal|"type"
argument_list|)
expr_stmt|;
return|return
name|dependency
return|;
block|}
specifier|private
name|Dependency
name|createDependencyBasic
parameter_list|(
name|String
name|artifactId
parameter_list|)
block|{
name|Dependency
name|dependency
init|=
operator|new
name|Dependency
argument_list|()
decl_stmt|;
name|dependency
operator|.
name|setArtifactId
argument_list|(
name|artifactId
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setGroupId
argument_list|(
literal|"groupId"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setVersion
argument_list|(
literal|"version"
argument_list|)
expr_stmt|;
return|return
name|dependency
return|;
block|}
specifier|private
name|void
name|assertMailingList
parameter_list|(
name|MailingList
name|mailingList
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|prefix
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|name
argument_list|,
name|mailingList
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|prefix
operator|+
literal|"-post@"
argument_list|,
name|mailingList
operator|.
name|getPostAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|prefix
operator|+
literal|"-subscribe@"
argument_list|,
name|mailingList
operator|.
name|getSubscribeAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|prefix
operator|+
literal|"-unsubscribe@"
argument_list|,
name|mailingList
operator|.
name|getUnsubscribeAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|prefix
operator|+
literal|"-archive-url"
argument_list|,
name|mailingList
operator|.
name|getMainArchiveUrl
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"other-"
operator|+
name|prefix
operator|+
literal|"-archive-url-1"
argument_list|,
literal|"other-"
operator|+
name|prefix
operator|+
literal|"-archive-url-2"
argument_list|)
argument_list|,
name|mailingList
operator|.
name|getOtherArchives
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|MailingList
name|createMailingList
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|prefix
parameter_list|)
block|{
name|MailingList
name|ml1
init|=
operator|new
name|MailingList
argument_list|()
decl_stmt|;
name|ml1
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|ml1
operator|.
name|setPostAddress
argument_list|(
name|prefix
operator|+
literal|"-post@"
argument_list|)
expr_stmt|;
name|ml1
operator|.
name|setSubscribeAddress
argument_list|(
name|prefix
operator|+
literal|"-subscribe@"
argument_list|)
expr_stmt|;
name|ml1
operator|.
name|setUnsubscribeAddress
argument_list|(
name|prefix
operator|+
literal|"-unsubscribe@"
argument_list|)
expr_stmt|;
name|ml1
operator|.
name|setMainArchiveUrl
argument_list|(
name|prefix
operator|+
literal|"-archive-url"
argument_list|)
expr_stmt|;
name|ml1
operator|.
name|setOtherArchives
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"other-"
operator|+
name|prefix
operator|+
literal|"-archive-url-1"
argument_list|,
literal|"other-"
operator|+
name|prefix
operator|+
literal|"-archive-url-2"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|ml1
return|;
block|}
specifier|private
name|void
name|assertNoOutputFields
parameter_list|()
block|{
name|assertNull
argument_list|(
name|action
operator|.
name|getModel
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getDependees
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getDependencies
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|action
operator|.
name|getMailingLists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|action
operator|.
name|getArtifacts
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertError
parameter_list|(
name|String
name|result
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|Action
operator|.
name|ERROR
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertDefaultModel
parameter_list|(
name|ProjectVersionMetadata
name|model
parameter_list|)
block|{
name|assertDefaultModel
argument_list|(
name|model
argument_list|,
name|TEST_VERSION
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|setActionParameters
parameter_list|()
block|{
name|action
operator|.
name|setGroupId
argument_list|(
name|TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|action
operator|.
name|setArtifactId
argument_list|(
name|TEST_ARTIFACT_ID
argument_list|)
expr_stmt|;
name|action
operator|.
name|setVersion
argument_list|(
name|TEST_VERSION
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertActionParameters
parameter_list|(
name|ShowArtifactAction
name|action
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|TEST_GROUP_ID
argument_list|,
name|action
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_ARTIFACT_ID
argument_list|,
name|action
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_VERSION
argument_list|,
name|action
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertActionSuccess
parameter_list|(
name|ShowArtifactAction
name|action
parameter_list|,
name|String
name|result
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|action
operator|.
name|getActionMessages
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|action
operator|=
operator|(
name|ShowArtifactAction
operator|)
name|lookup
argument_list|(
name|Action
operator|.
name|class
argument_list|,
name|ACTION_HINT
argument_list|)
expr_stmt|;
name|metadataResolver
operator|=
operator|(
name|TestMetadataResolver
operator|)
name|action
operator|.
name|getMetadataResolver
argument_list|()
expr_stmt|;
name|MockControl
name|control
init|=
name|MockClassControl
operator|.
name|createControl
argument_list|(
name|RepositoryContentFactory
operator|.
name|class
argument_list|)
decl_stmt|;
name|RepositoryContentFactory
name|factory
init|=
operator|(
name|RepositoryContentFactory
operator|)
name|control
operator|.
name|getMock
argument_list|()
decl_stmt|;
name|action
operator|.
name|setRepositoryFactory
argument_list|(
name|factory
argument_list|)
expr_stmt|;
name|ManagedRepositoryConfiguration
name|config
init|=
operator|new
name|ManagedRepositoryConfiguration
argument_list|()
decl_stmt|;
name|config
operator|.
name|setId
argument_list|(
name|TEST_REPO
argument_list|)
expr_stmt|;
name|config
operator|.
name|setLocation
argument_list|(
name|getTestFile
argument_list|(
literal|"target/test-repo"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|ManagedRepositoryContent
name|content
init|=
operator|new
name|ManagedDefaultRepositoryContent
argument_list|()
decl_stmt|;
name|content
operator|.
name|setRepository
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|factory
operator|.
name|getManagedRepositoryContent
argument_list|(
name|TEST_REPO
argument_list|)
expr_stmt|;
name|control
operator|.
name|setDefaultReturnValue
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|control
operator|.
name|replay
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

