begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|action
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|checksum
operator|.
name|ChecksumAlgorithm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|checksum
operator|.
name|ChecksummedFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ManagedRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|RepositoryScanningConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ManagedRepositoryContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RepositoryContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RepositoryNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|ManagedDefaultRepositoryContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|metadata
operator|.
name|MetadataTools
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|scheduled
operator|.
name|ArchivaTaskScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|spring
operator|.
name|PlexusInSpringTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|MockControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|MockClassControl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|opensymphony
operator|.
name|xwork2
operator|.
name|Action
import|;
end_import

begin_comment
comment|/**  * UploadActionTest  */
end_comment

begin_class
specifier|public
class|class
name|UploadActionTest
extends|extends
name|PlexusInSpringTestCase
block|{
specifier|private
name|ArchivaTaskScheduler
name|scheduler
decl_stmt|;
specifier|private
name|MockControl
name|schedulerControl
decl_stmt|;
specifier|private
name|UploadAction
name|uploadAction
decl_stmt|;
specifier|private
name|ArchivaConfiguration
name|archivaConfig
decl_stmt|;
specifier|private
name|MockControl
name|archivaConfigControl
decl_stmt|;
specifier|private
name|RepositoryContentFactory
name|repoFactory
decl_stmt|;
specifier|private
name|MockControl
name|repoFactoryControl
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|REPOSITORY_ID
init|=
literal|"test-repo"
decl_stmt|;
specifier|private
name|Configuration
name|config
decl_stmt|;
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|schedulerControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|ArchivaTaskScheduler
operator|.
name|class
argument_list|)
expr_stmt|;
name|scheduler
operator|=
operator|(
name|ArchivaTaskScheduler
operator|)
name|schedulerControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|archivaConfigControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|ArchivaConfiguration
operator|.
name|class
argument_list|)
expr_stmt|;
name|archivaConfig
operator|=
operator|(
name|ArchivaConfiguration
operator|)
name|archivaConfigControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|repoFactoryControl
operator|=
name|MockClassControl
operator|.
name|createControl
argument_list|(
name|RepositoryContentFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|repoFactory
operator|=
operator|(
name|RepositoryContentFactory
operator|)
name|repoFactoryControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|uploadAction
operator|=
operator|new
name|UploadAction
argument_list|()
expr_stmt|;
name|uploadAction
operator|.
name|setScheduler
argument_list|(
name|scheduler
argument_list|)
expr_stmt|;
name|uploadAction
operator|.
name|setConfiguration
argument_list|(
name|archivaConfig
argument_list|)
expr_stmt|;
name|uploadAction
operator|.
name|setRepositoryFactory
argument_list|(
name|repoFactory
argument_list|)
expr_stmt|;
name|File
name|testRepo
init|=
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"target/test-classes/test-repo"
argument_list|)
decl_stmt|;
name|testRepo
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|testRepo
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|config
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|ManagedRepositoryConfiguration
name|repoConfig
init|=
operator|new
name|ManagedRepositoryConfiguration
argument_list|()
decl_stmt|;
name|repoConfig
operator|.
name|setId
argument_list|(
name|REPOSITORY_ID
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setLayout
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setLocation
argument_list|(
name|testRepo
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setName
argument_list|(
name|REPOSITORY_ID
argument_list|)
expr_stmt|;
name|config
operator|.
name|addManagedRepository
argument_list|(
name|repoConfig
argument_list|)
expr_stmt|;
name|RepositoryScanningConfiguration
name|repoScanning
init|=
operator|new
name|RepositoryScanningConfiguration
argument_list|()
decl_stmt|;
name|repoScanning
operator|.
name|setKnownContentConsumers
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|config
operator|.
name|setRepositoryScanning
argument_list|(
name|repoScanning
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|testRepo
init|=
operator|new
name|File
argument_list|(
name|config
operator|.
name|findManagedRepositoryById
argument_list|(
name|REPOSITORY_ID
argument_list|)
operator|.
name|getLocation
argument_list|()
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|testRepo
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|testRepo
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|setUploadParameters
parameter_list|(
name|String
name|version
parameter_list|,
name|String
name|classifier
parameter_list|,
name|File
name|artifact
parameter_list|,
name|File
name|pomFile
parameter_list|,
name|boolean
name|generatePom
parameter_list|)
block|{
name|uploadAction
operator|.
name|setRepositoryId
argument_list|(
name|REPOSITORY_ID
argument_list|)
expr_stmt|;
name|uploadAction
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.archiva"
argument_list|)
expr_stmt|;
name|uploadAction
operator|.
name|setArtifactId
argument_list|(
literal|"artifact-upload"
argument_list|)
expr_stmt|;
name|uploadAction
operator|.
name|setVersion
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|uploadAction
operator|.
name|setPackaging
argument_list|(
literal|"jar"
argument_list|)
expr_stmt|;
name|uploadAction
operator|.
name|setClassifier
argument_list|(
name|classifier
argument_list|)
expr_stmt|;
name|uploadAction
operator|.
name|setArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|uploadAction
operator|.
name|setPom
argument_list|(
name|pomFile
argument_list|)
expr_stmt|;
name|uploadAction
operator|.
name|setGeneratePom
argument_list|(
name|generatePom
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertAllArtifactsIncludingSupportArtifactsArePresent
parameter_list|(
name|String
name|repoLocation
parameter_list|)
block|{
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0.jar"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0.jar.sha1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0.jar.md5"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0.pom"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0.pom.sha1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0.pom.md5"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/"
operator|+
name|MetadataTools
operator|.
name|MAVEN_METADATA
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/"
operator|+
name|MetadataTools
operator|.
name|MAVEN_METADATA
operator|+
literal|".sha1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/"
operator|+
name|MetadataTools
operator|.
name|MAVEN_METADATA
operator|+
literal|".md5"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|verifyChecksums
parameter_list|(
name|String
name|repoLocation
parameter_list|)
throws|throws
name|IOException
block|{
comment|// verify checksums of jar file
name|ChecksummedFile
name|checksum
init|=
operator|new
name|ChecksummedFile
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0.jar"
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|sha1
init|=
name|checksum
operator|.
name|calculateChecksum
argument_list|(
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|)
decl_stmt|;
name|String
name|md5
init|=
name|checksum
operator|.
name|calculateChecksum
argument_list|(
name|ChecksumAlgorithm
operator|.
name|MD5
argument_list|)
decl_stmt|;
name|String
name|contents
init|=
name|FileUtils
operator|.
name|readFileToString
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0.jar.sha1"
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|StringUtils
operator|.
name|contains
argument_list|(
name|contents
argument_list|,
name|sha1
argument_list|)
argument_list|)
expr_stmt|;
name|contents
operator|=
name|FileUtils
operator|.
name|readFileToString
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0.jar.md5"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|StringUtils
operator|.
name|contains
argument_list|(
name|contents
argument_list|,
name|md5
argument_list|)
argument_list|)
expr_stmt|;
comment|// verify checksums of pom file
name|checksum
operator|=
operator|new
name|ChecksummedFile
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0.pom"
argument_list|)
argument_list|)
expr_stmt|;
name|sha1
operator|=
name|checksum
operator|.
name|calculateChecksum
argument_list|(
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|)
expr_stmt|;
name|md5
operator|=
name|checksum
operator|.
name|calculateChecksum
argument_list|(
name|ChecksumAlgorithm
operator|.
name|MD5
argument_list|)
expr_stmt|;
name|contents
operator|=
name|FileUtils
operator|.
name|readFileToString
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0.pom.sha1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|StringUtils
operator|.
name|contains
argument_list|(
name|contents
argument_list|,
name|sha1
argument_list|)
argument_list|)
expr_stmt|;
name|contents
operator|=
name|FileUtils
operator|.
name|readFileToString
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0.pom.md5"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|StringUtils
operator|.
name|contains
argument_list|(
name|contents
argument_list|,
name|md5
argument_list|)
argument_list|)
expr_stmt|;
comment|// verify checksums of metadata file
name|checksum
operator|=
operator|new
name|ChecksummedFile
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/"
operator|+
name|MetadataTools
operator|.
name|MAVEN_METADATA
argument_list|)
argument_list|)
expr_stmt|;
name|sha1
operator|=
name|checksum
operator|.
name|calculateChecksum
argument_list|(
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|)
expr_stmt|;
name|md5
operator|=
name|checksum
operator|.
name|calculateChecksum
argument_list|(
name|ChecksumAlgorithm
operator|.
name|MD5
argument_list|)
expr_stmt|;
name|contents
operator|=
name|FileUtils
operator|.
name|readFileToString
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/"
operator|+
name|MetadataTools
operator|.
name|MAVEN_METADATA
operator|+
literal|".sha1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|StringUtils
operator|.
name|contains
argument_list|(
name|contents
argument_list|,
name|sha1
argument_list|)
argument_list|)
expr_stmt|;
name|contents
operator|=
name|FileUtils
operator|.
name|readFileToString
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/"
operator|+
name|MetadataTools
operator|.
name|MAVEN_METADATA
operator|+
literal|".md5"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|StringUtils
operator|.
name|contains
argument_list|(
name|contents
argument_list|,
name|md5
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testArtifactUploadWithPomSuccessful
parameter_list|()
throws|throws
name|Exception
block|{
name|setUploadParameters
argument_list|(
literal|"1.0"
argument_list|,
literal|null
argument_list|,
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"target/test-classes/upload-artifact-test/artifact-to-be-uploaded.jar"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"target/test-classes/upload-artifact-test/pom.xml"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|ManagedRepositoryContent
name|content
init|=
operator|new
name|ManagedDefaultRepositoryContent
argument_list|()
decl_stmt|;
name|content
operator|.
name|setRepository
argument_list|(
name|config
operator|.
name|findManagedRepositoryById
argument_list|(
name|REPOSITORY_ID
argument_list|)
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaConfig
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|repoFactoryControl
operator|.
name|expectAndReturn
argument_list|(
name|repoFactory
operator|.
name|getManagedRepositoryContent
argument_list|(
name|REPOSITORY_ID
argument_list|)
argument_list|,
name|content
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoFactoryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|returnString
init|=
name|uploadAction
operator|.
name|doUpload
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|returnString
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoFactoryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|String
name|repoLocation
init|=
name|config
operator|.
name|findManagedRepositoryById
argument_list|(
name|REPOSITORY_ID
argument_list|)
operator|.
name|getLocation
argument_list|()
decl_stmt|;
name|assertAllArtifactsIncludingSupportArtifactsArePresent
argument_list|(
name|repoLocation
argument_list|)
expr_stmt|;
name|verifyChecksums
argument_list|(
name|repoLocation
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testArtifactUploadWithClassifier
parameter_list|()
throws|throws
name|Exception
block|{
name|setUploadParameters
argument_list|(
literal|"1.0"
argument_list|,
literal|"tests"
argument_list|,
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"target/test-classes/upload-artifact-test/artifact-to-be-uploaded.jar"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|ManagedRepositoryContent
name|content
init|=
operator|new
name|ManagedDefaultRepositoryContent
argument_list|()
decl_stmt|;
name|content
operator|.
name|setRepository
argument_list|(
name|config
operator|.
name|findManagedRepositoryById
argument_list|(
name|REPOSITORY_ID
argument_list|)
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaConfig
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|repoFactoryControl
operator|.
name|expectAndReturn
argument_list|(
name|repoFactory
operator|.
name|getManagedRepositoryContent
argument_list|(
name|REPOSITORY_ID
argument_list|)
argument_list|,
name|content
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoFactoryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|returnString
init|=
name|uploadAction
operator|.
name|doUpload
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|returnString
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoFactoryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|String
name|repoLocation
init|=
name|config
operator|.
name|findManagedRepositoryById
argument_list|(
name|REPOSITORY_ID
argument_list|)
operator|.
name|getLocation
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0-tests.jar"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0-tests.jar.sha1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0-tests.jar.md5"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0.pom"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0.pom.sha1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0.pom.md5"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/"
operator|+
name|MetadataTools
operator|.
name|MAVEN_METADATA
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/"
operator|+
name|MetadataTools
operator|.
name|MAVEN_METADATA
operator|+
literal|".sha1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/"
operator|+
name|MetadataTools
operator|.
name|MAVEN_METADATA
operator|+
literal|".md5"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// verify checksums of jar file
name|ChecksummedFile
name|checksum
init|=
operator|new
name|ChecksummedFile
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0-tests.jar"
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|sha1
init|=
name|checksum
operator|.
name|calculateChecksum
argument_list|(
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|)
decl_stmt|;
name|String
name|md5
init|=
name|checksum
operator|.
name|calculateChecksum
argument_list|(
name|ChecksumAlgorithm
operator|.
name|MD5
argument_list|)
decl_stmt|;
name|String
name|contents
init|=
name|FileUtils
operator|.
name|readFileToString
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0-tests.jar.sha1"
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|StringUtils
operator|.
name|contains
argument_list|(
name|contents
argument_list|,
name|sha1
argument_list|)
argument_list|)
expr_stmt|;
name|contents
operator|=
name|FileUtils
operator|.
name|readFileToString
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0-tests.jar.md5"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|StringUtils
operator|.
name|contains
argument_list|(
name|contents
argument_list|,
name|md5
argument_list|)
argument_list|)
expr_stmt|;
comment|// verify checksums of metadata file
name|checksum
operator|=
operator|new
name|ChecksummedFile
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/"
operator|+
name|MetadataTools
operator|.
name|MAVEN_METADATA
argument_list|)
argument_list|)
expr_stmt|;
name|sha1
operator|=
name|checksum
operator|.
name|calculateChecksum
argument_list|(
name|ChecksumAlgorithm
operator|.
name|SHA1
argument_list|)
expr_stmt|;
name|md5
operator|=
name|checksum
operator|.
name|calculateChecksum
argument_list|(
name|ChecksumAlgorithm
operator|.
name|MD5
argument_list|)
expr_stmt|;
name|contents
operator|=
name|FileUtils
operator|.
name|readFileToString
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/"
operator|+
name|MetadataTools
operator|.
name|MAVEN_METADATA
operator|+
literal|".sha1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|StringUtils
operator|.
name|contains
argument_list|(
name|contents
argument_list|,
name|sha1
argument_list|)
argument_list|)
expr_stmt|;
name|contents
operator|=
name|FileUtils
operator|.
name|readFileToString
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/"
operator|+
name|MetadataTools
operator|.
name|MAVEN_METADATA
operator|+
literal|".md5"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|StringUtils
operator|.
name|contains
argument_list|(
name|contents
argument_list|,
name|md5
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testArtifactUploadGeneratePomSuccessful
parameter_list|()
throws|throws
name|Exception
block|{
name|setUploadParameters
argument_list|(
literal|"1.0"
argument_list|,
literal|null
argument_list|,
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"target/test-classes/upload-artifact-test/artifact-to-be-uploaded.jar"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|ManagedRepositoryContent
name|content
init|=
operator|new
name|ManagedDefaultRepositoryContent
argument_list|()
decl_stmt|;
name|content
operator|.
name|setRepository
argument_list|(
name|config
operator|.
name|findManagedRepositoryById
argument_list|(
name|REPOSITORY_ID
argument_list|)
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaConfig
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|repoFactoryControl
operator|.
name|expectAndReturn
argument_list|(
name|repoFactory
operator|.
name|getManagedRepositoryContent
argument_list|(
name|REPOSITORY_ID
argument_list|)
argument_list|,
name|content
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoFactoryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|returnString
init|=
name|uploadAction
operator|.
name|doUpload
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|returnString
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoFactoryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|String
name|repoLocation
init|=
name|config
operator|.
name|findManagedRepositoryById
argument_list|(
name|REPOSITORY_ID
argument_list|)
operator|.
name|getLocation
argument_list|()
decl_stmt|;
name|assertAllArtifactsIncludingSupportArtifactsArePresent
argument_list|(
name|repoLocation
argument_list|)
expr_stmt|;
name|verifyChecksums
argument_list|(
name|repoLocation
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testArtifactUploadFailedRepositoryNotFound
parameter_list|()
throws|throws
name|Exception
block|{
name|setUploadParameters
argument_list|(
literal|"1.0"
argument_list|,
literal|null
argument_list|,
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"target/test-classes/upload-artifact-test/artifact-to-be-uploaded.jar"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaConfig
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|repoFactoryControl
operator|.
name|expectAndThrow
argument_list|(
name|repoFactory
operator|.
name|getManagedRepositoryContent
argument_list|(
name|REPOSITORY_ID
argument_list|)
argument_list|,
operator|new
name|RepositoryNotFoundException
argument_list|()
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoFactoryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|returnString
init|=
name|uploadAction
operator|.
name|doUpload
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|ERROR
argument_list|,
name|returnString
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoFactoryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|String
name|repoLocation
init|=
name|config
operator|.
name|findManagedRepositoryById
argument_list|(
name|REPOSITORY_ID
argument_list|)
operator|.
name|getLocation
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0.jar"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0/artifact-upload-1.0.pom"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/"
operator|+
name|MetadataTools
operator|.
name|MAVEN_METADATA
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testArtifactUploadSnapshots
parameter_list|()
throws|throws
name|Exception
block|{
name|setUploadParameters
argument_list|(
literal|"1.0-SNAPSHOT"
argument_list|,
literal|null
argument_list|,
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"target/test-classes/upload-artifact-test/artifact-to-be-uploaded.jar"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|ManagedRepositoryContent
name|content
init|=
operator|new
name|ManagedDefaultRepositoryContent
argument_list|()
decl_stmt|;
name|content
operator|.
name|setRepository
argument_list|(
name|config
operator|.
name|findManagedRepositoryById
argument_list|(
name|REPOSITORY_ID
argument_list|)
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaConfig
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|repoFactoryControl
operator|.
name|expectAndReturn
argument_list|(
name|repoFactory
operator|.
name|getManagedRepositoryContent
argument_list|(
name|REPOSITORY_ID
argument_list|)
argument_list|,
name|content
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoFactoryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|returnString
init|=
name|uploadAction
operator|.
name|doUpload
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|returnString
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoFactoryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|String
name|repoLocation
init|=
name|config
operator|.
name|findManagedRepositoryById
argument_list|(
name|REPOSITORY_ID
argument_list|)
operator|.
name|getLocation
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/1.0-SNAPSHOT/"
argument_list|)
operator|.
name|list
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/"
operator|+
name|MetadataTools
operator|.
name|MAVEN_METADATA
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/"
operator|+
name|MetadataTools
operator|.
name|MAVEN_METADATA
operator|+
literal|".sha1"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"/org/apache/archiva/artifact-upload/"
operator|+
name|MetadataTools
operator|.
name|MAVEN_METADATA
operator|+
literal|".md5"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testChecksumIsCorrectWhenArtifactIsReUploaded
parameter_list|()
throws|throws
name|Exception
block|{
name|setUploadParameters
argument_list|(
literal|"1.0"
argument_list|,
literal|null
argument_list|,
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"target/test-classes/upload-artifact-test/artifact-to-be-uploaded.jar"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|ManagedRepositoryContent
name|content
init|=
operator|new
name|ManagedDefaultRepositoryContent
argument_list|()
decl_stmt|;
name|content
operator|.
name|setRepository
argument_list|(
name|config
operator|.
name|findManagedRepositoryById
argument_list|(
name|REPOSITORY_ID
argument_list|)
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaConfig
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|repoFactoryControl
operator|.
name|expectAndReturn
argument_list|(
name|repoFactory
operator|.
name|getManagedRepositoryContent
argument_list|(
name|REPOSITORY_ID
argument_list|)
argument_list|,
name|content
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoFactoryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|returnString
init|=
name|uploadAction
operator|.
name|doUpload
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|returnString
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoFactoryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|archivaConfigControl
operator|.
name|reset
argument_list|()
expr_stmt|;
name|repoFactoryControl
operator|.
name|reset
argument_list|()
expr_stmt|;
name|String
name|repoLocation
init|=
name|config
operator|.
name|findManagedRepositoryById
argument_list|(
name|REPOSITORY_ID
argument_list|)
operator|.
name|getLocation
argument_list|()
decl_stmt|;
name|assertAllArtifactsIncludingSupportArtifactsArePresent
argument_list|(
name|repoLocation
argument_list|)
expr_stmt|;
name|verifyChecksums
argument_list|(
name|repoLocation
argument_list|)
expr_stmt|;
comment|// RE-upload artifact
name|setUploadParameters
argument_list|(
literal|"1.0"
argument_list|,
literal|null
argument_list|,
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"target/test-classes/upload-artifact-test/artifact-to-be-reuploaded.jar"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaConfig
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|repoFactoryControl
operator|.
name|expectAndReturn
argument_list|(
name|repoFactory
operator|.
name|getManagedRepositoryContent
argument_list|(
name|REPOSITORY_ID
argument_list|)
argument_list|,
name|content
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoFactoryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|returnString
operator|=
name|uploadAction
operator|.
name|doUpload
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|returnString
argument_list|)
expr_stmt|;
name|archivaConfigControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoFactoryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoLocation
operator|=
name|config
operator|.
name|findManagedRepositoryById
argument_list|(
name|REPOSITORY_ID
argument_list|)
operator|.
name|getLocation
argument_list|()
expr_stmt|;
name|assertAllArtifactsIncludingSupportArtifactsArePresent
argument_list|(
name|repoLocation
argument_list|)
expr_stmt|;
name|verifyChecksums
argument_list|(
name|repoLocation
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

