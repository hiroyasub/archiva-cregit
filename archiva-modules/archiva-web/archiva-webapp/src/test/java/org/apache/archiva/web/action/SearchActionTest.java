begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|action
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|com
operator|.
name|opensymphony
operator|.
name|xwork2
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|managed
operator|.
name|ManagedRepositoryAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|RepositorySearch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|SearchFields
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|SearchResultHit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|SearchResultLimits
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|SearchResults
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|util
operator|.
name|SearchUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ArtifactMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|MetadataRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|RepositorySession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|security
operator|.
name|UserRepositories
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|webtest
operator|.
name|memory
operator|.
name|TestRepositorySessionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|MockControl
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|SearchActionTest
extends|extends
name|AbstractActionTestCase
block|{
specifier|private
name|SearchAction
name|action
decl_stmt|;
specifier|private
name|MockControl
name|userReposControl
decl_stmt|;
specifier|private
name|UserRepositories
name|userRepos
decl_stmt|;
specifier|private
name|MockControl
name|searchControl
decl_stmt|;
specifier|private
name|MockControl
name|repoAdminControl
decl_stmt|;
specifier|private
name|ManagedRepositoryAdmin
name|managedRepositoryAdmin
decl_stmt|;
specifier|private
name|RepositorySearch
name|search
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_CHECKSUM
init|=
literal|"afbcdeaadbcffceabbba1"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_REPO
init|=
literal|"test-repo"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|GUEST
init|=
literal|"guest"
decl_stmt|;
specifier|private
name|RepositorySession
name|session
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|action
operator|=
operator|new
name|SearchAction
argument_list|()
expr_stmt|;
name|session
operator|=
name|mock
argument_list|(
name|RepositorySession
operator|.
name|class
argument_list|)
expr_stmt|;
comment|//TestRepositorySessionFactory factory = (TestRepositorySessionFactory) lookup( RepositorySessionFactory.class );
name|TestRepositorySessionFactory
name|factory
init|=
operator|new
name|TestRepositorySessionFactory
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setRepositorySession
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRepositorySessionFactory
argument_list|(
name|factory
argument_list|)
expr_stmt|;
name|MockControl
name|archivaConfigControl
init|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|ArchivaConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
name|ArchivaConfiguration
name|archivaConfig
init|=
operator|(
name|ArchivaConfiguration
operator|)
name|archivaConfigControl
operator|.
name|getMock
argument_list|()
decl_stmt|;
name|userReposControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|UserRepositories
operator|.
name|class
argument_list|)
expr_stmt|;
name|userRepos
operator|=
operator|(
name|UserRepositories
operator|)
name|userReposControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|searchControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|RepositorySearch
operator|.
name|class
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|setDefaultMatcher
argument_list|(
name|MockControl
operator|.
name|ALWAYS_MATCHER
argument_list|)
expr_stmt|;
name|search
operator|=
operator|(
name|RepositorySearch
operator|)
name|searchControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|repoAdminControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|ManagedRepositoryAdmin
operator|.
name|class
argument_list|)
expr_stmt|;
name|managedRepositoryAdmin
operator|=
operator|(
name|ManagedRepositoryAdmin
operator|)
name|repoAdminControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
comment|//( (DefaultManagedRepositoryAdmin) action.getManagedRepositoryAdmin() ).setArchivaConfiguration( archivaConfig );
name|action
operator|.
name|setManagedRepositoryAdmin
argument_list|(
name|managedRepositoryAdmin
argument_list|)
expr_stmt|;
name|action
operator|.
name|setUserRepositories
argument_list|(
name|userRepos
argument_list|)
expr_stmt|;
name|action
operator|.
name|setNexusSearch
argument_list|(
name|search
argument_list|)
expr_stmt|;
block|}
comment|// quick search...
annotation|@
name|Test
specifier|public
name|void
name|testQuickSearch
parameter_list|()
throws|throws
name|Exception
block|{
name|action
operator|.
name|setQ
argument_list|(
literal|"archiva"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCurrentPage
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|action
operator|.
name|setSearchResultsOnly
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCompleteQueryString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|selectedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"snapshots"
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|action
operator|.
name|getCurrentPage
argument_list|()
argument_list|)
decl_stmt|;
name|limits
operator|.
name|setPageSize
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|SearchResultHit
name|hit
init|=
operator|new
name|SearchResultHit
argument_list|()
decl_stmt|;
name|hit
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.archiva"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-configuration"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|setUrl
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|addVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|addVersion
argument_list|(
literal|"1.1"
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|results
operator|.
name|setLimits
argument_list|(
name|limits
argument_list|)
expr_stmt|;
name|results
operator|.
name|setTotalHits
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|results
operator|.
name|addHit
argument_list|(
name|SearchUtil
operator|.
name|getHitId
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-configuration"
argument_list|,
literal|null
argument_list|,
literal|"jar"
argument_list|)
argument_list|,
name|hit
argument_list|)
expr_stmt|;
name|results
operator|.
name|setTotalHitsMapSize
argument_list|(
name|results
operator|.
name|getHitsMap
argument_list|()
operator|.
name|values
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositoryIds
argument_list|(
literal|"user"
argument_list|)
argument_list|,
name|selectedRepos
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|expectAndReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|"user"
argument_list|,
name|selectedRepos
argument_list|,
literal|"archiva"
argument_list|,
name|limits
argument_list|,
literal|null
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|action
operator|.
name|setPrincipal
argument_list|(
literal|"user"
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|quickSearch
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"total pages not 1"
argument_list|,
literal|1
argument_list|,
name|action
operator|.
name|getTotalPages
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"totol hits not 1"
argument_list|,
literal|1
argument_list|,
name|action
operator|.
name|getResults
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSearchWithinSearchResults
parameter_list|()
throws|throws
name|Exception
block|{
name|action
operator|.
name|setQ
argument_list|(
literal|"archiva"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCurrentPage
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|action
operator|.
name|setSearchResultsOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCompleteQueryString
argument_list|(
literal|"org;apache"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|parsed
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|parsed
operator|.
name|add
argument_list|(
literal|"org"
argument_list|)
expr_stmt|;
name|parsed
operator|.
name|add
argument_list|(
literal|"apache"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|selectedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"snapshots"
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|action
operator|.
name|getCurrentPage
argument_list|()
argument_list|)
decl_stmt|;
name|limits
operator|.
name|setPageSize
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|SearchResultHit
name|hit
init|=
operator|new
name|SearchResultHit
argument_list|()
decl_stmt|;
name|hit
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.archiva"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-configuration"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|setUrl
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|addVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|addVersion
argument_list|(
literal|"1.1"
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|results
operator|.
name|setLimits
argument_list|(
name|limits
argument_list|)
expr_stmt|;
name|results
operator|.
name|setTotalHits
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|results
operator|.
name|addHit
argument_list|(
name|SearchUtil
operator|.
name|getHitId
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-configuration"
argument_list|,
literal|null
argument_list|,
literal|"jar"
argument_list|)
argument_list|,
name|hit
argument_list|)
expr_stmt|;
name|results
operator|.
name|setTotalHitsMapSize
argument_list|(
name|results
operator|.
name|getHitsMap
argument_list|()
operator|.
name|values
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositoryIds
argument_list|(
literal|"user"
argument_list|)
argument_list|,
name|selectedRepos
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|expectAndReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|"user"
argument_list|,
name|selectedRepos
argument_list|,
literal|"archiva"
argument_list|,
name|limits
argument_list|,
name|parsed
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|action
operator|.
name|setPrincipal
argument_list|(
literal|"user"
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|quickSearch
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org;apache;archiva"
argument_list|,
name|action
operator|.
name|getCompleteQueryString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getTotalPages
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getResults
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testQuickSearchUserHasNoAccessToAnyRepository
parameter_list|()
throws|throws
name|Exception
block|{
name|action
operator|.
name|setQ
argument_list|(
literal|"archiva"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCurrentPage
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|selectedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositoryIds
argument_list|(
literal|"user"
argument_list|)
argument_list|,
name|selectedRepos
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|action
operator|.
name|setPrincipal
argument_list|(
literal|"user"
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|quickSearch
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|GlobalResults
operator|.
name|ACCESS_TO_NO_REPOS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testQuickSearchNoSearchHits
parameter_list|()
throws|throws
name|Exception
block|{
name|action
operator|.
name|setQ
argument_list|(
literal|"archiva"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCurrentPage
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|action
operator|.
name|setSearchResultsOnly
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCompleteQueryString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|selectedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"snapshots"
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|action
operator|.
name|getCurrentPage
argument_list|()
argument_list|)
decl_stmt|;
name|limits
operator|.
name|setPageSize
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositoryIds
argument_list|(
literal|"user"
argument_list|)
argument_list|,
name|selectedRepos
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|expectAndReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|"user"
argument_list|,
name|selectedRepos
argument_list|,
literal|"archiva"
argument_list|,
name|limits
argument_list|,
literal|null
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|action
operator|.
name|setPrincipal
argument_list|(
literal|"user"
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|quickSearch
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|INPUT
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
comment|// advanced/filtered search...
annotation|@
name|Test
specifier|public
name|void
name|testAdvancedSearchOneRepository
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|managedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|managedRepos
operator|.
name|add
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|managedRepos
operator|.
name|add
argument_list|(
literal|"snapshots"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRepositoryId
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setManagedRepositoryList
argument_list|(
name|managedRepos
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCurrentPage
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRowCount
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|action
operator|.
name|setGroupId
argument_list|(
literal|"org"
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|action
operator|.
name|getCurrentPage
argument_list|()
argument_list|)
decl_stmt|;
name|limits
operator|.
name|setPageSize
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|SearchResultHit
name|hit
init|=
operator|new
name|SearchResultHit
argument_list|()
decl_stmt|;
name|hit
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.archiva"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-configuration"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|setUrl
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|addVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|addVersion
argument_list|(
literal|"1.1"
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|results
operator|.
name|setLimits
argument_list|(
name|limits
argument_list|)
expr_stmt|;
name|results
operator|.
name|setTotalHits
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|results
operator|.
name|addHit
argument_list|(
name|SearchUtil
operator|.
name|getHitId
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-configuration"
argument_list|,
literal|null
argument_list|,
literal|"jar"
argument_list|)
argument_list|,
name|hit
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|selectedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"snapshots"
argument_list|)
expr_stmt|;
name|SearchFields
name|searchFields
init|=
operator|new
name|SearchFields
argument_list|(
literal|"org"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|selectedRepos
argument_list|)
decl_stmt|;
name|searchControl
operator|.
name|expectAndReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|"user"
argument_list|,
name|searchFields
argument_list|,
name|limits
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|filteredSearch
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getTotalPages
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getResults
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAdvancedSearchAllRepositories
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|managedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|managedRepos
operator|.
name|add
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|managedRepos
operator|.
name|add
argument_list|(
literal|"snapshots"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRepositoryId
argument_list|(
literal|"all"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setManagedRepositoryList
argument_list|(
name|managedRepos
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCurrentPage
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRowCount
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|action
operator|.
name|setGroupId
argument_list|(
literal|"org"
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|action
operator|.
name|getCurrentPage
argument_list|()
argument_list|)
decl_stmt|;
name|limits
operator|.
name|setPageSize
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|SearchResultHit
name|hit
init|=
operator|new
name|SearchResultHit
argument_list|()
decl_stmt|;
name|hit
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.archiva"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-configuration"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|setUrl
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|addVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|hit
operator|.
name|addVersion
argument_list|(
literal|"1.1"
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|results
operator|.
name|setLimits
argument_list|(
name|limits
argument_list|)
expr_stmt|;
name|results
operator|.
name|setTotalHits
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|results
operator|.
name|addHit
argument_list|(
name|SearchUtil
operator|.
name|getHitId
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-configuration"
argument_list|,
literal|null
argument_list|,
literal|"jar"
argument_list|)
argument_list|,
name|hit
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|selectedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|SearchFields
name|searchFields
init|=
operator|new
name|SearchFields
argument_list|(
literal|"org"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|selectedRepos
argument_list|)
decl_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositoryIds
argument_list|(
literal|"user"
argument_list|)
argument_list|,
name|selectedRepos
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|expectAndReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|"user"
argument_list|,
name|searchFields
argument_list|,
name|limits
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|action
operator|.
name|setPrincipal
argument_list|(
literal|"user"
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|filteredSearch
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getTotalPages
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getResults
argument_list|()
operator|.
name|getTotalHits
argument_list|()
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAdvancedSearchNoSearchHits
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|managedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|managedRepos
operator|.
name|add
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|managedRepos
operator|.
name|add
argument_list|(
literal|"snapshots"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRepositoryId
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setManagedRepositoryList
argument_list|(
name|managedRepos
argument_list|)
expr_stmt|;
name|action
operator|.
name|setCurrentPage
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRowCount
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|action
operator|.
name|setGroupId
argument_list|(
literal|"org"
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|action
operator|.
name|getCurrentPage
argument_list|()
argument_list|)
decl_stmt|;
name|limits
operator|.
name|setPageSize
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|selectedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
name|selectedRepos
operator|.
name|add
argument_list|(
literal|"snapshots"
argument_list|)
expr_stmt|;
name|SearchFields
name|searchFields
init|=
operator|new
name|SearchFields
argument_list|(
literal|"org"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|selectedRepos
argument_list|)
decl_stmt|;
name|searchControl
operator|.
name|expectAndReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|"user"
argument_list|,
name|searchFields
argument_list|,
name|limits
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|filteredSearch
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|INPUT
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"No results found"
argument_list|,
operator|(
name|String
operator|)
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAdvancedSearchUserHasNoAccessToAnyRepository
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|managedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|action
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.archiva"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setManagedRepositoryList
argument_list|(
name|managedRepos
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|filteredSearch
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|GlobalResults
operator|.
name|ACCESS_TO_NO_REPOS
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAdvancedSearchNoSpecifiedCriteria
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|managedRepos
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|action
operator|.
name|setManagedRepositoryList
argument_list|(
name|managedRepos
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|filteredSearch
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|INPUT
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Advanced Search - At least one search criteria must be provided."
argument_list|,
operator|(
name|String
operator|)
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// find artifact..
annotation|@
name|Test
specifier|public
name|void
name|testFindArtifactWithOneHit
parameter_list|()
throws|throws
name|Exception
block|{
name|action
operator|.
name|setQ
argument_list|(
name|TEST_CHECKSUM
argument_list|)
expr_stmt|;
name|MockControl
name|control
init|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|MetadataRepository
operator|.
name|class
argument_list|)
decl_stmt|;
name|MetadataRepository
name|metadataRepository
init|=
operator|(
name|MetadataRepository
operator|)
name|control
operator|.
name|getMock
argument_list|()
decl_stmt|;
name|when
argument_list|(
name|session
operator|.
name|getRepository
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|metadataRepository
argument_list|)
expr_stmt|;
name|ArtifactMetadata
name|artifact
init|=
name|createArtifact
argument_list|(
literal|"archiva-configuration"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|control
operator|.
name|expectAndReturn
argument_list|(
name|metadataRepository
operator|.
name|getArtifactsByChecksum
argument_list|(
name|TEST_REPO
argument_list|,
name|TEST_CHECKSUM
argument_list|)
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|artifact
argument_list|)
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositoryIds
argument_list|(
name|GUEST
argument_list|)
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|TEST_REPO
argument_list|)
argument_list|)
expr_stmt|;
name|control
operator|.
name|replay
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|findArtifact
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"artifact"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|action
operator|.
name|getDatabaseResults
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artifact
argument_list|,
name|action
operator|.
name|getDatabaseResults
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|control
operator|.
name|verify
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFindArtifactWithMultipleHits
parameter_list|()
throws|throws
name|Exception
block|{
name|action
operator|.
name|setQ
argument_list|(
name|TEST_CHECKSUM
argument_list|)
expr_stmt|;
name|MockControl
name|control
init|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|MetadataRepository
operator|.
name|class
argument_list|)
decl_stmt|;
name|MetadataRepository
name|metadataRepository
init|=
operator|(
name|MetadataRepository
operator|)
name|control
operator|.
name|getMock
argument_list|()
decl_stmt|;
name|when
argument_list|(
name|session
operator|.
name|getRepository
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|metadataRepository
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|artifacts
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|createArtifact
argument_list|(
literal|"archiva-configuration"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|createArtifact
argument_list|(
literal|"archiva-indexer"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|)
decl_stmt|;
name|control
operator|.
name|expectAndReturn
argument_list|(
name|metadataRepository
operator|.
name|getArtifactsByChecksum
argument_list|(
name|TEST_REPO
argument_list|,
name|TEST_CHECKSUM
argument_list|)
argument_list|,
name|artifacts
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositoryIds
argument_list|(
name|GUEST
argument_list|)
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|TEST_REPO
argument_list|)
argument_list|)
expr_stmt|;
name|control
operator|.
name|replay
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|findArtifact
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"results"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|action
operator|.
name|getDatabaseResults
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|action
operator|.
name|getDatabaseResults
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|control
operator|.
name|verify
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFindArtifactNoChecksumSpecified
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|result
init|=
name|action
operator|.
name|findArtifact
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|INPUT
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Unable to search for a blank checksum"
argument_list|,
operator|(
name|String
operator|)
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFindArtifactNoResults
parameter_list|()
throws|throws
name|Exception
block|{
name|action
operator|.
name|setQ
argument_list|(
name|TEST_CHECKSUM
argument_list|)
expr_stmt|;
name|MockControl
name|control
init|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|MetadataRepository
operator|.
name|class
argument_list|)
decl_stmt|;
name|MetadataRepository
name|metadataRepository
init|=
operator|(
name|MetadataRepository
operator|)
name|control
operator|.
name|getMock
argument_list|()
decl_stmt|;
name|when
argument_list|(
name|session
operator|.
name|getRepository
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|metadataRepository
argument_list|)
expr_stmt|;
name|control
operator|.
name|expectAndReturn
argument_list|(
name|metadataRepository
operator|.
name|getArtifactsByChecksum
argument_list|(
name|TEST_REPO
argument_list|,
name|TEST_CHECKSUM
argument_list|)
argument_list|,
name|Collections
operator|.
expr|<
name|ArtifactMetadata
operator|>
name|emptyList
argument_list|()
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositoryIds
argument_list|(
name|GUEST
argument_list|)
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|TEST_REPO
argument_list|)
argument_list|)
expr_stmt|;
name|control
operator|.
name|replay
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|findArtifact
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|INPUT
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"No results found"
argument_list|,
operator|(
name|String
operator|)
name|action
operator|.
name|getActionErrors
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|control
operator|.
name|verify
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|private
name|ArtifactMetadata
name|createArtifact
parameter_list|(
name|String
name|project
parameter_list|,
name|String
name|version
parameter_list|)
block|{
name|ArtifactMetadata
name|metadata
init|=
operator|new
name|ArtifactMetadata
argument_list|()
decl_stmt|;
name|metadata
operator|.
name|setNamespace
argument_list|(
literal|"org.apache.archiva"
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|setProjectVersion
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|setVersion
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|setRepositoryId
argument_list|(
name|TEST_REPO
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|setId
argument_list|(
name|project
operator|+
literal|"-"
operator|+
name|version
operator|+
literal|".jar"
argument_list|)
expr_stmt|;
return|return
name|metadata
return|;
block|}
block|}
end_class

end_unit

