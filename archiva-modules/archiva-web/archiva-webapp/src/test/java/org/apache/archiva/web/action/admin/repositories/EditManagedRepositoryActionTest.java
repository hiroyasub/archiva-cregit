begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|action
operator|.
name|admin
operator|.
name|repositories
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|com
operator|.
name|opensymphony
operator|.
name|xwork2
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|RepositoryAdminException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|beans
operator|.
name|ManagedRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
operator|.
name|DefaultRepositoryCommonValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
operator|.
name|managed
operator|.
name|DefaultManagedRepositoryAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|audit
operator|.
name|AuditListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ManagedRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|MetadataRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|RepositorySession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|stats
operator|.
name|RepositoryStatisticsManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|scheduler
operator|.
name|repository
operator|.
name|RepositoryArchivaTaskScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|scheduler
operator|.
name|repository
operator|.
name|RepositoryTask
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|security
operator|.
name|common
operator|.
name|ArchivaRoleConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|validator
operator|.
name|utils
operator|.
name|ValidatorUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|webtest
operator|.
name|memory
operator|.
name|TestRepositorySessionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|role
operator|.
name|RoleManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|registry
operator|.
name|Registry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|redback
operator|.
name|integration
operator|.
name|interceptor
operator|.
name|SecureActionBundle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|redback
operator|.
name|integration
operator|.
name|interceptor
operator|.
name|SecureActionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|MockControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|MockClassControl
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_comment
comment|/**  * EditManagedRepositoryActionTest  *  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|EditManagedRepositoryActionTest
extends|extends
name|AbstractManagedRepositoryActionTest
block|{
specifier|private
name|EditManagedRepositoryAction
name|action
decl_stmt|;
specifier|private
name|RoleManager
name|roleManager
decl_stmt|;
specifier|private
name|MockControl
name|roleManagerControl
decl_stmt|;
specifier|private
name|MockControl
name|archivaConfigurationControl
decl_stmt|;
specifier|private
name|ArchivaConfiguration
name|archivaConfiguration
decl_stmt|;
specifier|private
name|Registry
name|registry
decl_stmt|;
specifier|private
name|MockControl
name|registryControl
decl_stmt|;
specifier|private
name|MetadataRepository
name|metadataRepository
decl_stmt|;
specifier|private
name|MockControl
name|repositoryTaskSchedulerControl
decl_stmt|;
specifier|private
name|RepositoryArchivaTaskScheduler
name|repositoryTaskScheduler
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|action
operator|=
operator|new
name|EditManagedRepositoryAction
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|ArchivaConfiguration
operator|.
name|class
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|=
operator|(
name|ArchivaConfiguration
operator|)
name|archivaConfigurationControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|roleManagerControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|RoleManager
operator|.
name|class
argument_list|)
expr_stmt|;
name|roleManager
operator|=
operator|(
name|RoleManager
operator|)
name|roleManagerControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|registryControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|Registry
operator|.
name|class
argument_list|)
expr_stmt|;
name|registry
operator|=
operator|(
name|Registry
operator|)
name|registryControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|repositoryTaskSchedulerControl
operator|=
name|MockClassControl
operator|.
name|createControl
argument_list|(
name|RepositoryArchivaTaskScheduler
operator|.
name|class
argument_list|)
expr_stmt|;
name|repositoryTaskScheduler
operator|=
operator|(
name|RepositoryArchivaTaskScheduler
operator|)
name|repositoryTaskSchedulerControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|location
operator|=
operator|new
name|File
argument_list|(
literal|"target/test/location"
argument_list|)
expr_stmt|;
name|metadataRepository
operator|=
name|mock
argument_list|(
name|MetadataRepository
operator|.
name|class
argument_list|)
expr_stmt|;
name|RepositorySession
name|repositorySession
init|=
name|mock
argument_list|(
name|RepositorySession
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|repositorySession
operator|.
name|getRepository
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|metadataRepository
argument_list|)
expr_stmt|;
name|TestRepositorySessionFactory
name|factory
init|=
name|applicationContext
operator|.
name|getBean
argument_list|(
name|TestRepositorySessionFactory
operator|.
name|class
argument_list|)
decl_stmt|;
name|factory
operator|.
name|setRepositorySession
argument_list|(
name|repositorySession
argument_list|)
expr_stmt|;
operator|(
operator|(
name|DefaultManagedRepositoryAdmin
operator|)
name|getManagedRepositoryAdmin
argument_list|()
operator|)
operator|.
name|setArchivaConfiguration
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
operator|(
operator|(
name|DefaultManagedRepositoryAdmin
operator|)
name|getManagedRepositoryAdmin
argument_list|()
operator|)
operator|.
name|setRoleManager
argument_list|(
name|roleManager
argument_list|)
expr_stmt|;
operator|(
operator|(
name|DefaultManagedRepositoryAdmin
operator|)
name|getManagedRepositoryAdmin
argument_list|()
operator|)
operator|.
name|setRepositoryTaskScheduler
argument_list|(
name|repositoryTaskScheduler
argument_list|)
expr_stmt|;
operator|(
operator|(
name|DefaultManagedRepositoryAdmin
operator|)
name|getManagedRepositoryAdmin
argument_list|()
operator|)
operator|.
name|setRepositorySessionFactory
argument_list|(
name|factory
argument_list|)
expr_stmt|;
operator|(
operator|(
name|DefaultManagedRepositoryAdmin
operator|)
name|getManagedRepositoryAdmin
argument_list|()
operator|)
operator|.
name|setRegistry
argument_list|(
name|registry
argument_list|)
expr_stmt|;
operator|(
operator|(
name|DefaultManagedRepositoryAdmin
operator|)
name|getManagedRepositoryAdmin
argument_list|()
operator|)
operator|.
name|setAuditListeners
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|AuditListener
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|DefaultRepositoryCommonValidator
name|defaultRepositoryCommonValidator
init|=
operator|new
name|DefaultRepositoryCommonValidator
argument_list|()
decl_stmt|;
name|defaultRepositoryCommonValidator
operator|.
name|setArchivaConfiguration
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
name|defaultRepositoryCommonValidator
operator|.
name|setRegistry
argument_list|(
name|registry
argument_list|)
expr_stmt|;
operator|(
operator|(
name|DefaultManagedRepositoryAdmin
operator|)
name|getManagedRepositoryAdmin
argument_list|()
operator|)
operator|.
name|setRepositoryCommonValidator
argument_list|(
name|defaultRepositoryCommonValidator
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRepositoryCommonValidator
argument_list|(
name|defaultRepositoryCommonValidator
argument_list|)
expr_stmt|;
name|action
operator|.
name|setManagedRepositoryAdmin
argument_list|(
name|getManagedRepositoryAdmin
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSecureActionBundle
parameter_list|()
throws|throws
name|SecureActionException
throws|,
name|RepositoryAdminException
block|{
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|action
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|SecureActionBundle
name|bundle
init|=
name|action
operator|.
name|getSecureActionBundle
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|bundle
operator|.
name|requiresAuthentication
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|bundle
operator|.
name|getAuthorizationTuples
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testEditRepositoryInitialPage
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|configuration
init|=
name|createConfigurationForEditing
argument_list|(
name|createRepository
argument_list|()
argument_list|)
decl_stmt|;
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|Configuration
name|stageRepoConfiguration
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|stageRepoConfiguration
operator|.
name|addManagedRepository
argument_list|(
name|createStagingRepository
argument_list|()
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|stageRepoConfiguration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|action
operator|.
name|setRepoid
argument_list|(
name|REPO_ID
argument_list|)
expr_stmt|;
name|action
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|REPO_ID
argument_list|,
name|action
operator|.
name|getRepoid
argument_list|()
argument_list|)
expr_stmt|;
name|ManagedRepository
name|repository
init|=
name|action
operator|.
name|getRepository
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|repository
argument_list|)
expr_stmt|;
name|ManagedRepository
name|newRepository
init|=
name|createRepository
argument_list|()
decl_stmt|;
name|assertRepositoryEquals
argument_list|(
name|repository
argument_list|,
name|newRepository
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|repository
operator|.
name|getLocation
argument_list|()
argument_list|,
name|newRepository
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|status
init|=
name|action
operator|.
name|input
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|INPUT
argument_list|,
name|status
argument_list|)
expr_stmt|;
name|repository
operator|=
name|action
operator|.
name|getRepository
argument_list|()
expr_stmt|;
name|assertRepositoryEquals
argument_list|(
name|repository
argument_list|,
name|createRepository
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testEditRepository
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|stageRepoId
init|=
name|REPO_ID
operator|+
literal|"-stage"
decl_stmt|;
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_OBSERVER
argument_list|,
name|REPO_ID
argument_list|)
expr_stmt|;
name|roleManagerControl
operator|.
name|setReturnValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|roleManager
operator|.
name|createTemplatedRole
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_OBSERVER
argument_list|,
name|REPO_ID
argument_list|)
expr_stmt|;
name|roleManagerControl
operator|.
name|setVoidCallable
argument_list|()
expr_stmt|;
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_MANAGER
argument_list|,
name|REPO_ID
argument_list|)
expr_stmt|;
name|roleManagerControl
operator|.
name|setReturnValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|roleManager
operator|.
name|createTemplatedRole
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_MANAGER
argument_list|,
name|REPO_ID
argument_list|)
expr_stmt|;
name|roleManagerControl
operator|.
name|setVoidCallable
argument_list|()
expr_stmt|;
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_OBSERVER
argument_list|,
name|stageRepoId
argument_list|)
expr_stmt|;
name|roleManagerControl
operator|.
name|setReturnValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|roleManager
operator|.
name|createTemplatedRole
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_OBSERVER
argument_list|,
name|stageRepoId
argument_list|)
expr_stmt|;
name|roleManagerControl
operator|.
name|setVoidCallable
argument_list|()
expr_stmt|;
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_MANAGER
argument_list|,
name|stageRepoId
argument_list|)
expr_stmt|;
name|roleManagerControl
operator|.
name|setReturnValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|roleManager
operator|.
name|createTemplatedRole
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_MANAGER
argument_list|,
name|stageRepoId
argument_list|)
expr_stmt|;
name|roleManagerControl
operator|.
name|setVoidCallable
argument_list|()
expr_stmt|;
name|roleManagerControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|registry
operator|.
name|getString
argument_list|(
literal|"appserver.base"
argument_list|,
literal|"${appserver.base}"
argument_list|)
expr_stmt|;
name|registryControl
operator|.
name|setReturnValue
argument_list|(
literal|"target/test"
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|registry
operator|.
name|getString
argument_list|(
literal|"appserver.home"
argument_list|,
literal|"${appserver.home}"
argument_list|)
expr_stmt|;
name|registryControl
operator|.
name|setReturnValue
argument_list|(
literal|"target/test"
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|registryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|RepositoryTask
name|task
init|=
operator|new
name|RepositoryTask
argument_list|()
decl_stmt|;
name|task
operator|.
name|setRepositoryId
argument_list|(
name|REPO_ID
argument_list|)
expr_stmt|;
name|repositoryTaskScheduler
operator|.
name|isProcessingRepositoryTask
argument_list|(
name|REPO_ID
argument_list|)
expr_stmt|;
name|repositoryTaskSchedulerControl
operator|.
name|setReturnValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|repositoryTaskScheduler
operator|.
name|queueTask
argument_list|(
name|task
argument_list|)
expr_stmt|;
name|repositoryTaskSchedulerControl
operator|.
name|setVoidCallable
argument_list|()
expr_stmt|;
name|RepositoryTask
name|stageTask
init|=
operator|new
name|RepositoryTask
argument_list|()
decl_stmt|;
name|stageTask
operator|.
name|setRepositoryId
argument_list|(
name|stageRepoId
argument_list|)
expr_stmt|;
name|repositoryTaskScheduler
operator|.
name|isProcessingRepositoryTask
argument_list|(
name|stageRepoId
argument_list|)
expr_stmt|;
name|repositoryTaskSchedulerControl
operator|.
name|setReturnValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|repositoryTaskScheduler
operator|.
name|queueTask
argument_list|(
name|stageTask
argument_list|)
expr_stmt|;
name|repositoryTaskSchedulerControl
operator|.
name|setVoidCallable
argument_list|()
expr_stmt|;
name|repositoryTaskSchedulerControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|Configuration
name|configuration
init|=
name|createConfigurationForEditing
argument_list|(
name|createRepository
argument_list|()
argument_list|)
decl_stmt|;
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|Configuration
name|stageRepoConfiguration
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|stageRepoConfiguration
operator|.
name|addManagedRepository
argument_list|(
name|createStagingRepository
argument_list|()
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|stageRepoConfiguration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|.
name|save
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|.
name|save
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|.
name|save
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|action
operator|.
name|setRepoid
argument_list|(
name|REPO_ID
argument_list|)
expr_stmt|;
name|action
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|REPO_ID
argument_list|,
name|action
operator|.
name|getRepoid
argument_list|()
argument_list|)
expr_stmt|;
name|ManagedRepository
name|repository
init|=
name|action
operator|.
name|getRepository
argument_list|()
decl_stmt|;
name|populateRepository
argument_list|(
name|repository
argument_list|)
expr_stmt|;
name|repository
operator|.
name|setName
argument_list|(
literal|"new repo name"
argument_list|)
expr_stmt|;
name|MockControl
name|repositoryStatisticsManagerControl
init|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|RepositoryStatisticsManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|RepositoryStatisticsManager
name|repositoryStatisticsManager
init|=
operator|(
name|RepositoryStatisticsManager
operator|)
name|repositoryStatisticsManagerControl
operator|.
name|getMock
argument_list|()
decl_stmt|;
operator|(
operator|(
name|DefaultManagedRepositoryAdmin
operator|)
name|getManagedRepositoryAdmin
argument_list|()
operator|)
operator|.
name|setRepositoryStatisticsManager
argument_list|(
name|repositoryStatisticsManager
argument_list|)
expr_stmt|;
comment|// no deletion
name|repositoryStatisticsManagerControl
operator|.
name|replay
argument_list|()
expr_stmt|;
operator|new
name|File
argument_list|(
literal|"target/test/"
operator|+
name|REPO_ID
operator|+
literal|"-stage"
argument_list|)
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|action
operator|.
name|setRepository
argument_list|(
name|repository
argument_list|)
expr_stmt|;
name|action
operator|.
name|setStageNeeded
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|String
name|status
init|=
name|action
operator|.
name|commit
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|status
argument_list|)
expr_stmt|;
name|ManagedRepository
name|newRepository
init|=
name|createRepository
argument_list|()
decl_stmt|;
name|newRepository
operator|.
name|setName
argument_list|(
literal|"new repo name"
argument_list|)
expr_stmt|;
name|assertRepositoryEquals
argument_list|(
name|repository
argument_list|,
name|newRepository
argument_list|)
expr_stmt|;
comment|//assertEquals( Collections.singletonList( repository ), configuration.getManagedRepositories() );
comment|//assertEquals( location.getCanonicalPath(), new File( repository.getLocation() ).getCanonicalPath() );
name|roleManagerControl
operator|.
name|verify
argument_list|()
expr_stmt|;
comment|//archivaConfigurationControl.verify();
name|repositoryStatisticsManagerControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|registryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testEditRepositoryLocationChanged
parameter_list|()
throws|throws
name|Exception
block|{
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_OBSERVER
argument_list|,
name|REPO_ID
argument_list|)
expr_stmt|;
name|roleManagerControl
operator|.
name|setReturnValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|roleManager
operator|.
name|createTemplatedRole
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_OBSERVER
argument_list|,
name|REPO_ID
argument_list|)
expr_stmt|;
name|roleManagerControl
operator|.
name|setVoidCallable
argument_list|()
expr_stmt|;
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_MANAGER
argument_list|,
name|REPO_ID
argument_list|)
expr_stmt|;
name|roleManagerControl
operator|.
name|setReturnValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|roleManager
operator|.
name|createTemplatedRole
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_MANAGER
argument_list|,
name|REPO_ID
argument_list|)
expr_stmt|;
name|roleManagerControl
operator|.
name|setVoidCallable
argument_list|()
expr_stmt|;
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_OBSERVER
argument_list|,
name|REPO_ID
operator|+
literal|"-stage"
argument_list|)
expr_stmt|;
name|roleManagerControl
operator|.
name|setReturnValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|roleManager
operator|.
name|createTemplatedRole
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_OBSERVER
argument_list|,
name|REPO_ID
operator|+
literal|"-stage"
argument_list|)
expr_stmt|;
name|roleManagerControl
operator|.
name|setVoidCallable
argument_list|()
expr_stmt|;
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_MANAGER
argument_list|,
name|REPO_ID
operator|+
literal|"-stage"
argument_list|)
expr_stmt|;
name|roleManagerControl
operator|.
name|setReturnValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|roleManager
operator|.
name|createTemplatedRole
argument_list|(
name|ArchivaRoleConstants
operator|.
name|TEMPLATE_REPOSITORY_MANAGER
argument_list|,
name|REPO_ID
operator|+
literal|"-stage"
argument_list|)
expr_stmt|;
name|roleManagerControl
operator|.
name|setVoidCallable
argument_list|()
expr_stmt|;
name|roleManagerControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|registry
operator|.
name|getString
argument_list|(
literal|"appserver.base"
argument_list|,
literal|"${appserver.base}"
argument_list|)
expr_stmt|;
name|registryControl
operator|.
name|setReturnValue
argument_list|(
literal|"target/test"
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|registry
operator|.
name|getString
argument_list|(
literal|"appserver.home"
argument_list|,
literal|"${appserver.home}"
argument_list|)
expr_stmt|;
name|registryControl
operator|.
name|setReturnValue
argument_list|(
literal|"target/test"
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|registryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|RepositoryTask
name|task
init|=
operator|new
name|RepositoryTask
argument_list|()
decl_stmt|;
name|task
operator|.
name|setRepositoryId
argument_list|(
name|REPO_ID
argument_list|)
expr_stmt|;
name|repositoryTaskScheduler
operator|.
name|isProcessingRepositoryTask
argument_list|(
name|REPO_ID
argument_list|)
expr_stmt|;
name|repositoryTaskSchedulerControl
operator|.
name|setReturnValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|repositoryTaskScheduler
operator|.
name|queueTask
argument_list|(
name|task
argument_list|)
expr_stmt|;
name|repositoryTaskSchedulerControl
operator|.
name|setVoidCallable
argument_list|()
expr_stmt|;
name|repositoryTaskSchedulerControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|Configuration
name|configuration
init|=
name|createConfigurationForEditing
argument_list|(
name|createRepository
argument_list|()
argument_list|)
decl_stmt|;
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|buildEasyConfiguration
argument_list|()
argument_list|)
expr_stmt|;
name|Configuration
name|stageRepoConfiguration
init|=
name|buildEasyConfiguration
argument_list|()
decl_stmt|;
name|stageRepoConfiguration
operator|.
name|addManagedRepository
argument_list|(
name|createStagingRepository
argument_list|()
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|stageRepoConfiguration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|.
name|save
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|addManagedRepository
argument_list|(
name|stageRepoConfiguration
operator|.
name|getManagedRepositories
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|.
name|save
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|.
name|save
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|MockControl
name|repositoryStatisticsManagerControl
init|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|RepositoryStatisticsManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|RepositoryStatisticsManager
name|repositoryStatisticsManager
init|=
operator|(
name|RepositoryStatisticsManager
operator|)
name|repositoryStatisticsManagerControl
operator|.
name|getMock
argument_list|()
decl_stmt|;
operator|(
operator|(
name|DefaultManagedRepositoryAdmin
operator|)
name|getManagedRepositoryAdmin
argument_list|()
operator|)
operator|.
name|setRepositoryStatisticsManager
argument_list|(
name|repositoryStatisticsManager
argument_list|)
expr_stmt|;
name|repositoryStatisticsManager
operator|.
name|deleteStatistics
argument_list|(
name|metadataRepository
argument_list|,
name|REPO_ID
argument_list|)
expr_stmt|;
name|repositoryStatisticsManagerControl
operator|.
name|replay
argument_list|()
expr_stmt|;
operator|new
name|File
argument_list|(
literal|"target/test/location/"
operator|+
name|REPO_ID
operator|+
literal|"-stage"
argument_list|)
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|action
operator|.
name|setStageNeeded
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRepoid
argument_list|(
name|REPO_ID
argument_list|)
expr_stmt|;
name|action
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|REPO_ID
argument_list|,
name|action
operator|.
name|getRepoid
argument_list|()
argument_list|)
expr_stmt|;
name|ManagedRepository
name|repository
init|=
operator|new
name|ManagedRepository
argument_list|()
decl_stmt|;
name|populateRepository
argument_list|(
name|repository
argument_list|)
expr_stmt|;
name|File
name|testFile
init|=
operator|new
name|File
argument_list|(
literal|"target/test/location/new"
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|testFile
argument_list|)
expr_stmt|;
name|repository
operator|.
name|setLocation
argument_list|(
literal|"${appserver.base}/location/new"
argument_list|)
expr_stmt|;
name|action
operator|.
name|setRepository
argument_list|(
name|repository
argument_list|)
expr_stmt|;
name|String
name|status
init|=
name|action
operator|.
name|commit
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Action
operator|.
name|SUCCESS
argument_list|,
name|status
argument_list|)
expr_stmt|;
comment|//assertEquals( Collections.singletonList( repository ), configuration.getManagedRepositories() );
comment|//assertEquals( testFile.getCanonicalPath(), new File( repository.getLocation() ).getCanonicalPath() );
name|roleManagerControl
operator|.
name|verify
argument_list|()
expr_stmt|;
comment|//archivaConfigurationControl.verify();
name|repositoryStatisticsManagerControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|registryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testStruts2ValidationFrameworkWithNullInputs
parameter_list|()
throws|throws
name|Exception
block|{
comment|// prep
comment|// 0 is the default value for primitive int; null for objects
name|ManagedRepository
name|managedRepositoryConfiguration
init|=
name|createManagedRepository
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|action
operator|.
name|setRepository
argument_list|(
name|managedRepositoryConfiguration
argument_list|)
expr_stmt|;
comment|// test
name|actionValidatorManager
operator|.
name|validate
argument_list|(
name|action
argument_list|,
name|EMPTY_STRING
argument_list|)
expr_stmt|;
comment|// verify
name|assertTrue
argument_list|(
name|action
operator|.
name|hasFieldErrors
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|fieldErrors
init|=
name|action
operator|.
name|getFieldErrors
argument_list|()
decl_stmt|;
comment|// make an expected field error object
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|expectedFieldErrors
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
comment|// populate
name|List
argument_list|<
name|String
argument_list|>
name|expectedErrorMessages
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|expectedErrorMessages
operator|.
name|add
argument_list|(
literal|"You must enter a repository identifier."
argument_list|)
expr_stmt|;
name|expectedFieldErrors
operator|.
name|put
argument_list|(
literal|"repository.id"
argument_list|,
name|expectedErrorMessages
argument_list|)
expr_stmt|;
name|expectedErrorMessages
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|expectedErrorMessages
operator|.
name|add
argument_list|(
literal|"You must enter a directory."
argument_list|)
expr_stmt|;
name|expectedFieldErrors
operator|.
name|put
argument_list|(
literal|"repository.location"
argument_list|,
name|expectedErrorMessages
argument_list|)
expr_stmt|;
name|expectedErrorMessages
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|expectedErrorMessages
operator|.
name|add
argument_list|(
literal|"You must enter a repository name."
argument_list|)
expr_stmt|;
name|expectedFieldErrors
operator|.
name|put
argument_list|(
literal|"repository.name"
argument_list|,
name|expectedErrorMessages
argument_list|)
expr_stmt|;
name|ValidatorUtil
operator|.
name|assertFieldErrors
argument_list|(
name|expectedFieldErrors
argument_list|,
name|fieldErrors
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testStruts2ValidationFrameworkWithBlankInputs
parameter_list|()
throws|throws
name|Exception
block|{
comment|// prep
comment|// 0 is the default value for primitive int
name|ManagedRepository
name|managedRepositoryConfiguration
init|=
name|createManagedRepository
argument_list|(
name|EMPTY_STRING
argument_list|,
name|EMPTY_STRING
argument_list|,
name|EMPTY_STRING
argument_list|,
name|EMPTY_STRING
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|action
operator|.
name|setRepository
argument_list|(
name|managedRepositoryConfiguration
argument_list|)
expr_stmt|;
comment|// test
name|actionValidatorManager
operator|.
name|validate
argument_list|(
name|action
argument_list|,
name|EMPTY_STRING
argument_list|)
expr_stmt|;
comment|// verify
name|assertTrue
argument_list|(
name|action
operator|.
name|hasFieldErrors
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|fieldErrors
init|=
name|action
operator|.
name|getFieldErrors
argument_list|()
decl_stmt|;
comment|// make an expected field error object
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|expectedFieldErrors
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
comment|// populate
name|List
argument_list|<
name|String
argument_list|>
name|expectedErrorMessages
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|expectedErrorMessages
operator|.
name|add
argument_list|(
literal|"You must enter a repository identifier."
argument_list|)
expr_stmt|;
name|expectedFieldErrors
operator|.
name|put
argument_list|(
literal|"repository.id"
argument_list|,
name|expectedErrorMessages
argument_list|)
expr_stmt|;
name|expectedErrorMessages
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|expectedErrorMessages
operator|.
name|add
argument_list|(
literal|"You must enter a directory."
argument_list|)
expr_stmt|;
name|expectedFieldErrors
operator|.
name|put
argument_list|(
literal|"repository.location"
argument_list|,
name|expectedErrorMessages
argument_list|)
expr_stmt|;
name|expectedErrorMessages
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|expectedErrorMessages
operator|.
name|add
argument_list|(
literal|"You must enter a repository name."
argument_list|)
expr_stmt|;
name|expectedFieldErrors
operator|.
name|put
argument_list|(
literal|"repository.name"
argument_list|,
name|expectedErrorMessages
argument_list|)
expr_stmt|;
name|ValidatorUtil
operator|.
name|assertFieldErrors
argument_list|(
name|expectedFieldErrors
argument_list|,
name|fieldErrors
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testStruts2ValidationFrameworkWithInvalidInputs
parameter_list|()
throws|throws
name|Exception
block|{
comment|// prep
name|ManagedRepository
name|managedRepositoryConfiguration
init|=
name|createManagedRepository
argument_list|(
name|REPOSITORY_ID_INVALID_INPUT
argument_list|,
name|REPOSITORY_NAME_INVALID_INPUT
argument_list|,
name|REPOSITORY_LOCATION_INVALID_INPUT
argument_list|,
name|REPOSITORY_INDEX_DIR_INVALID_INPUT
argument_list|,
name|REPOSITORY_DAYS_OLDER_INVALID_INPUT
argument_list|,
name|REPOSITORY_RETENTION_COUNT_INVALID_INPUT
argument_list|)
decl_stmt|;
name|action
operator|.
name|setRepository
argument_list|(
name|managedRepositoryConfiguration
argument_list|)
expr_stmt|;
comment|// test
name|actionValidatorManager
operator|.
name|validate
argument_list|(
name|action
argument_list|,
name|EMPTY_STRING
argument_list|)
expr_stmt|;
comment|// verify
name|assertTrue
argument_list|(
name|action
operator|.
name|hasFieldErrors
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|fieldErrors
init|=
name|action
operator|.
name|getFieldErrors
argument_list|()
decl_stmt|;
comment|// make an expected field error object
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|expectedFieldErrors
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
comment|// populate
name|List
argument_list|<
name|String
argument_list|>
name|expectedErrorMessages
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|expectedErrorMessages
operator|.
name|add
argument_list|(
literal|"Identifier must only contain alphanumeric characters, underscores(_), dots(.), and dashes(-)."
argument_list|)
expr_stmt|;
name|expectedFieldErrors
operator|.
name|put
argument_list|(
literal|"repository.id"
argument_list|,
name|expectedErrorMessages
argument_list|)
expr_stmt|;
name|expectedErrorMessages
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|expectedErrorMessages
operator|.
name|add
argument_list|(
literal|"Directory must only contain alphanumeric characters, equals(=), question-marks(?), exclamation-points(!), ampersands(&), forward-slashes(/), back-slashes(\\), underscores(_), dots(.), colons(:), tildes(~), and dashes(-)."
argument_list|)
expr_stmt|;
name|expectedFieldErrors
operator|.
name|put
argument_list|(
literal|"repository.location"
argument_list|,
name|expectedErrorMessages
argument_list|)
expr_stmt|;
name|expectedErrorMessages
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|expectedErrorMessages
operator|.
name|add
argument_list|(
literal|"Repository Name must only contain alphanumeric characters, white-spaces(' '), forward-slashes(/), open-parenthesis('('), close-parenthesis(')'),  underscores(_), dots(.), and dashes(-)."
argument_list|)
expr_stmt|;
name|expectedFieldErrors
operator|.
name|put
argument_list|(
literal|"repository.name"
argument_list|,
name|expectedErrorMessages
argument_list|)
expr_stmt|;
name|expectedErrorMessages
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|expectedErrorMessages
operator|.
name|add
argument_list|(
literal|"Index directory must only contain alphanumeric characters, equals(=), question-marks(?), exclamation-points(!), ampersands(&), forward-slashes(/), back-slashes(\\), underscores(_), dots(.), colons(:), tildes(~), and dashes(-)."
argument_list|)
expr_stmt|;
name|expectedFieldErrors
operator|.
name|put
argument_list|(
literal|"repository.indexDirectory"
argument_list|,
name|expectedErrorMessages
argument_list|)
expr_stmt|;
name|expectedErrorMessages
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|expectedErrorMessages
operator|.
name|add
argument_list|(
literal|"Repository Purge By Retention Count needs to be between 1 and 100."
argument_list|)
expr_stmt|;
name|expectedFieldErrors
operator|.
name|put
argument_list|(
literal|"repository.retentionCount"
argument_list|,
name|expectedErrorMessages
argument_list|)
expr_stmt|;
name|expectedErrorMessages
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|expectedErrorMessages
operator|.
name|add
argument_list|(
literal|"Repository Purge By Days Older Than needs to be larger than 0."
argument_list|)
expr_stmt|;
name|expectedFieldErrors
operator|.
name|put
argument_list|(
literal|"repository.daysOlder"
argument_list|,
name|expectedErrorMessages
argument_list|)
expr_stmt|;
name|ValidatorUtil
operator|.
name|assertFieldErrors
argument_list|(
name|expectedFieldErrors
argument_list|,
name|fieldErrors
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testStruts2ValidationFrameworkWithValidInputs
parameter_list|()
throws|throws
name|Exception
block|{
comment|// prep
name|ManagedRepository
name|managedRepositoryConfiguration
init|=
name|createManagedRepository
argument_list|(
name|REPOSITORY_ID_VALID_INPUT
argument_list|,
name|REPOSITORY_NAME_VALID_INPUT
argument_list|,
name|REPOSITORY_LOCATION_VALID_INPUT
argument_list|,
name|REPOSITORY_INDEX_DIR_VALID_INPUT
argument_list|,
name|REPOSITORY_DAYS_OLDER_VALID_INPUT
argument_list|,
name|REPOSITORY_RETENTION_COUNT_VALID_INPUT
argument_list|)
decl_stmt|;
name|action
operator|.
name|setRepository
argument_list|(
name|managedRepositoryConfiguration
argument_list|)
expr_stmt|;
comment|// test
name|actionValidatorManager
operator|.
name|validate
argument_list|(
name|action
argument_list|,
name|EMPTY_STRING
argument_list|)
expr_stmt|;
comment|// verify
name|assertFalse
argument_list|(
name|action
operator|.
name|hasFieldErrors
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertRepositoryEquals
parameter_list|(
name|ManagedRepository
name|expectedRepository
parameter_list|,
name|ManagedRepository
name|actualRepository
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expectedRepository
operator|.
name|getDaysOlder
argument_list|()
argument_list|,
name|actualRepository
operator|.
name|getDaysOlder
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedRepository
operator|.
name|getId
argument_list|()
argument_list|,
name|actualRepository
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedRepository
operator|.
name|getIndexDirectory
argument_list|()
argument_list|,
name|actualRepository
operator|.
name|getIndexDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedRepository
operator|.
name|getLayout
argument_list|()
argument_list|,
name|actualRepository
operator|.
name|getLayout
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedRepository
operator|.
name|getName
argument_list|()
argument_list|,
name|actualRepository
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedRepository
operator|.
name|getCronExpression
argument_list|()
argument_list|,
name|actualRepository
operator|.
name|getCronExpression
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedRepository
operator|.
name|getRetentionCount
argument_list|()
argument_list|,
name|actualRepository
operator|.
name|getRetentionCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedRepository
operator|.
name|isDeleteReleasedSnapshots
argument_list|()
argument_list|,
name|actualRepository
operator|.
name|isDeleteReleasedSnapshots
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedRepository
operator|.
name|isScanned
argument_list|()
argument_list|,
name|actualRepository
operator|.
name|isScanned
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedRepository
operator|.
name|isReleases
argument_list|()
argument_list|,
name|actualRepository
operator|.
name|isReleases
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedRepository
operator|.
name|isSnapshots
argument_list|()
argument_list|,
name|actualRepository
operator|.
name|isSnapshots
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Configuration
name|createConfigurationForEditing
parameter_list|(
name|ManagedRepository
name|repositoryConfiguration
parameter_list|)
throws|throws
name|Exception
block|{
name|Configuration
name|configuration
init|=
name|buildEasyConfiguration
argument_list|()
decl_stmt|;
name|ManagedRepositoryConfiguration
name|managedRepositoryConfiguration
init|=
operator|new
name|ManagedRepositoryConfiguration
argument_list|()
decl_stmt|;
name|managedRepositoryConfiguration
operator|.
name|setDaysOlder
argument_list|(
name|repositoryConfiguration
operator|.
name|getDaysOlder
argument_list|()
argument_list|)
expr_stmt|;
name|managedRepositoryConfiguration
operator|.
name|setIndexDir
argument_list|(
name|repositoryConfiguration
operator|.
name|getIndexDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|managedRepositoryConfiguration
operator|.
name|setRetentionCount
argument_list|(
name|repositoryConfiguration
operator|.
name|getRetentionCount
argument_list|()
argument_list|)
expr_stmt|;
name|managedRepositoryConfiguration
operator|.
name|setBlockRedeployments
argument_list|(
name|repositoryConfiguration
operator|.
name|isBlockRedeployments
argument_list|()
argument_list|)
expr_stmt|;
name|managedRepositoryConfiguration
operator|.
name|setDeleteReleasedSnapshots
argument_list|(
name|repositoryConfiguration
operator|.
name|isDeleteReleasedSnapshots
argument_list|()
argument_list|)
expr_stmt|;
name|managedRepositoryConfiguration
operator|.
name|setLocation
argument_list|(
name|repositoryConfiguration
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
name|managedRepositoryConfiguration
operator|.
name|setRefreshCronExpression
argument_list|(
name|repositoryConfiguration
operator|.
name|getCronExpression
argument_list|()
argument_list|)
expr_stmt|;
name|managedRepositoryConfiguration
operator|.
name|setReleases
argument_list|(
name|repositoryConfiguration
operator|.
name|isReleases
argument_list|()
argument_list|)
expr_stmt|;
name|managedRepositoryConfiguration
operator|.
name|setScanned
argument_list|(
name|repositoryConfiguration
operator|.
name|isScanned
argument_list|()
argument_list|)
expr_stmt|;
name|managedRepositoryConfiguration
operator|.
name|setId
argument_list|(
name|repositoryConfiguration
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|managedRepositoryConfiguration
operator|.
name|setName
argument_list|(
name|repositoryConfiguration
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|managedRepositoryConfiguration
operator|.
name|setLayout
argument_list|(
name|repositoryConfiguration
operator|.
name|getLayout
argument_list|()
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|addManagedRepository
argument_list|(
name|managedRepositoryConfiguration
argument_list|)
expr_stmt|;
return|return
name|configuration
return|;
block|}
comment|// easy configuration for hashCode/equals
specifier|private
name|Configuration
name|buildEasyConfiguration
parameter_list|()
block|{
return|return
operator|new
name|Configuration
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getManagedRepositories
argument_list|()
operator|.
name|size
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|;
block|}
specifier|private
name|ManagedRepository
name|createRepository
parameter_list|()
throws|throws
name|IOException
block|{
name|ManagedRepository
name|r
init|=
operator|new
name|ManagedRepository
argument_list|()
decl_stmt|;
name|r
operator|.
name|setId
argument_list|(
name|REPO_ID
argument_list|)
expr_stmt|;
name|populateRepository
argument_list|(
name|r
argument_list|)
expr_stmt|;
return|return
name|r
return|;
block|}
specifier|private
name|ManagedRepositoryConfiguration
name|createStagingRepository
parameter_list|()
throws|throws
name|IOException
block|{
name|ManagedRepositoryConfiguration
name|r
init|=
operator|new
name|ManagedRepositoryConfiguration
argument_list|()
decl_stmt|;
name|r
operator|.
name|setId
argument_list|(
name|REPO_ID
operator|+
literal|"-stage"
argument_list|)
expr_stmt|;
name|populateStagingRepository
argument_list|(
name|r
argument_list|)
expr_stmt|;
return|return
name|r
return|;
block|}
specifier|private
name|void
name|populateStagingRepository
parameter_list|(
name|ManagedRepositoryConfiguration
name|repository
parameter_list|)
throws|throws
name|IOException
block|{
name|repository
operator|.
name|setId
argument_list|(
name|REPO_ID
operator|+
literal|"-stage"
argument_list|)
expr_stmt|;
name|repository
operator|.
name|setName
argument_list|(
literal|"repo name"
argument_list|)
expr_stmt|;
name|repository
operator|.
name|setLocation
argument_list|(
literal|"${appserver.base}/location"
argument_list|)
expr_stmt|;
name|repository
operator|.
name|setLayout
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
name|repository
operator|.
name|setRefreshCronExpression
argument_list|(
literal|"* 0/5 * * * ?"
argument_list|)
expr_stmt|;
name|repository
operator|.
name|setDaysOlder
argument_list|(
literal|31
argument_list|)
expr_stmt|;
name|repository
operator|.
name|setRetentionCount
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|repository
operator|.
name|setReleases
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|repository
operator|.
name|setSnapshots
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|repository
operator|.
name|setScanned
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|repository
operator|.
name|setDeleteReleasedSnapshots
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

