begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|action
operator|.
name|admin
operator|.
name|appearance
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|com
operator|.
name|opensymphony
operator|.
name|xwork2
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|OrganisationInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|action
operator|.
name|AbstractWebworkTestCase
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
specifier|public
class|class
name|OrganizationInfoActionTest
extends|extends
name|AbstractOrganizationInfoActionTest
block|{
specifier|public
name|void
name|testOrganisationInfoLoads
parameter_list|()
throws|throws
name|Exception
block|{
name|config
operator|.
name|setOrganisationInfo
argument_list|(
operator|new
name|OrganisationInformation
argument_list|()
argument_list|)
expr_stmt|;
name|OrganisationInformation
name|orginfo
init|=
name|config
operator|.
name|getOrganisationInfo
argument_list|()
decl_stmt|;
name|orginfo
operator|.
name|setLogoLocation
argument_list|(
literal|"LOGO"
argument_list|)
expr_stmt|;
name|orginfo
operator|.
name|setName
argument_list|(
literal|"NAME"
argument_list|)
expr_stmt|;
name|orginfo
operator|.
name|setUrl
argument_list|(
literal|"URL"
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|save
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|reloadAction
argument_list|()
expr_stmt|;
name|action
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"URL"
argument_list|,
name|action
operator|.
name|getOrganisationUrl
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"NAME"
argument_list|,
name|action
operator|.
name|getOrganisationName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"LOGO"
argument_list|,
name|action
operator|.
name|getOrganisationLogo
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|AbstractAppearanceAction
name|getAction
parameter_list|()
block|{
return|return
operator|(
name|OrganisationInfoAction
operator|)
name|lookup
argument_list|(
name|Action
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|"organisationInfo"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

