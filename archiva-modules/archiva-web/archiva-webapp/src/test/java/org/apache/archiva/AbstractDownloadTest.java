begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|services
operator|.
name|ManagedRepositoriesService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|services
operator|.
name|ProxyConnectorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|services
operator|.
name|RemoteRepositoriesService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|services
operator|.
name|RepositoriesService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|services
operator|.
name|RepositoryGroupService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|services
operator|.
name|SearchService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|webdav
operator|.
name|RepositoryServlet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|util
operator|.
name|Base64Utility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|JAXRSClientFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|WebClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|servlet
operator|.
name|CXFServlet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|jaxrs
operator|.
name|JacksonJaxbJsonProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|integration
operator|.
name|security
operator|.
name|role
operator|.
name|RedbackRoleConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|rest
operator|.
name|api
operator|.
name|model
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|rest
operator|.
name|api
operator|.
name|services
operator|.
name|RoleManagementService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|rest
operator|.
name|api
operator|.
name|services
operator|.
name|UserService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|rest
operator|.
name|services
operator|.
name|FakeCreateAdminService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Connector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|session
operator|.
name|SessionHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|ServletContextHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|ServletHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|web
operator|.
name|context
operator|.
name|ContextLoaderListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractDownloadTest
extends|extends
name|TestCase
block|{
specifier|protected
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
specifier|static
name|String
name|previousAppServerBase
decl_stmt|;
specifier|public
name|String
name|authorizationHeader
init|=
name|getAdminAuthzHeader
argument_list|()
decl_stmt|;
specifier|public
name|Server
name|server
init|=
literal|null
decl_stmt|;
specifier|public
name|int
name|port
decl_stmt|;
specifier|public
specifier|static
name|String
name|encode
parameter_list|(
name|String
name|uid
parameter_list|,
name|String
name|password
parameter_list|)
block|{
return|return
literal|"Basic "
operator|+
name|Base64Utility
operator|.
name|encode
argument_list|(
operator|(
name|uid
operator|+
literal|":"
operator|+
name|password
operator|)
operator|.
name|getBytes
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|String
name|getAdminAuthzHeader
parameter_list|()
block|{
name|String
name|adminPwdSysProps
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"rest.admin.pwd"
argument_list|)
decl_stmt|;
if|if
condition|(
name|StringUtils
operator|.
name|isBlank
argument_list|(
name|adminPwdSysProps
argument_list|)
condition|)
block|{
return|return
name|encode
argument_list|(
name|RedbackRoleConstants
operator|.
name|ADMINISTRATOR_ACCOUNT_NAME
argument_list|,
name|FakeCreateAdminService
operator|.
name|ADMIN_TEST_PWD
argument_list|)
return|;
block|}
return|return
name|encode
argument_list|(
name|RedbackRoleConstants
operator|.
name|ADMINISTRATOR_ACCOUNT_NAME
argument_list|,
name|adminPwdSysProps
argument_list|)
return|;
block|}
specifier|protected
specifier|abstract
name|String
name|getSpringConfigLocation
parameter_list|()
function_decl|;
specifier|protected
name|String
name|getRestServicesPath
parameter_list|()
block|{
return|return
literal|"restServices"
return|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|startServer
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"redback.admin.creation.file"
argument_list|,
literal|"target/auto-admin-creation.properties"
argument_list|)
expr_stmt|;
name|this
operator|.
name|server
operator|=
operator|new
name|Server
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|ServletContextHandler
name|context
init|=
operator|new
name|ServletContextHandler
argument_list|()
decl_stmt|;
name|context
operator|.
name|setContextPath
argument_list|(
literal|"/"
argument_list|)
expr_stmt|;
name|context
operator|.
name|setInitParameter
argument_list|(
literal|"contextConfigLocation"
argument_list|,
name|getSpringConfigLocation
argument_list|()
argument_list|)
expr_stmt|;
name|ContextLoaderListener
name|contextLoaderListener
init|=
operator|new
name|ContextLoaderListener
argument_list|()
decl_stmt|;
name|context
operator|.
name|addEventListener
argument_list|(
name|contextLoaderListener
argument_list|)
expr_stmt|;
name|ServletHolder
name|sh
init|=
operator|new
name|ServletHolder
argument_list|(
name|CXFServlet
operator|.
name|class
argument_list|)
decl_stmt|;
name|SessionHandler
name|sessionHandler
init|=
operator|new
name|SessionHandler
argument_list|()
decl_stmt|;
name|context
operator|.
name|setSessionHandler
argument_list|(
name|sessionHandler
argument_list|)
expr_stmt|;
name|context
operator|.
name|addServlet
argument_list|(
name|sh
argument_list|,
literal|"/"
operator|+
name|getRestServicesPath
argument_list|()
operator|+
literal|"/*"
argument_list|)
expr_stmt|;
name|ServletHolder
name|repoSh
init|=
operator|new
name|ServletHolder
argument_list|(
name|RepositoryServlet
operator|.
name|class
argument_list|)
decl_stmt|;
name|context
operator|.
name|addServlet
argument_list|(
name|repoSh
argument_list|,
literal|"/repository/*"
argument_list|)
expr_stmt|;
name|server
operator|.
name|setHandler
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|this
operator|.
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
name|Connector
name|connector
init|=
name|this
operator|.
name|server
operator|.
name|getConnectors
argument_list|()
index|[
literal|0
index|]
decl_stmt|;
name|this
operator|.
name|port
operator|=
name|connector
operator|.
name|getLocalPort
argument_list|()
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"start server on port "
operator|+
name|this
operator|.
name|port
argument_list|)
expr_stmt|;
name|User
name|user
init|=
operator|new
name|User
argument_list|()
decl_stmt|;
name|user
operator|.
name|setEmail
argument_list|(
literal|"toto@toto.fr"
argument_list|)
expr_stmt|;
name|user
operator|.
name|setFullName
argument_list|(
literal|"the root user"
argument_list|)
expr_stmt|;
name|user
operator|.
name|setUsername
argument_list|(
name|RedbackRoleConstants
operator|.
name|ADMINISTRATOR_ACCOUNT_NAME
argument_list|)
expr_stmt|;
name|user
operator|.
name|setPassword
argument_list|(
name|FakeCreateAdminService
operator|.
name|ADMIN_TEST_PWD
argument_list|)
expr_stmt|;
name|getUserService
argument_list|(
literal|null
argument_list|)
operator|.
name|createAdminUser
argument_list|(
name|user
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|clearProperty
argument_list|(
literal|"redback.admin.creation.file"
argument_list|)
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|server
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
specifier|protected
name|ProxyConnectorService
name|getProxyConnectorService
parameter_list|()
block|{
name|ProxyConnectorService
name|service
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|getBaseUrl
argument_list|()
operator|+
literal|"/"
operator|+
name|getRestServicesPath
argument_list|()
operator|+
literal|"/archivaServices/"
argument_list|,
name|ProxyConnectorService
operator|.
name|class
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|JacksonJaxbJsonProvider
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|WebClient
operator|.
name|client
argument_list|(
name|service
argument_list|)
operator|.
name|header
argument_list|(
literal|"Authorization"
argument_list|,
name|authorizationHeader
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|service
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|300000L
argument_list|)
expr_stmt|;
return|return
name|service
return|;
block|}
specifier|protected
name|RemoteRepositoriesService
name|getRemoteRepositoriesService
parameter_list|()
block|{
name|RemoteRepositoriesService
name|service
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|getBaseUrl
argument_list|()
operator|+
literal|"/"
operator|+
name|getRestServicesPath
argument_list|()
operator|+
literal|"/archivaServices/"
argument_list|,
name|RemoteRepositoriesService
operator|.
name|class
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|JacksonJaxbJsonProvider
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|WebClient
operator|.
name|client
argument_list|(
name|service
argument_list|)
operator|.
name|header
argument_list|(
literal|"Authorization"
argument_list|,
name|authorizationHeader
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|service
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|300000L
argument_list|)
expr_stmt|;
return|return
name|service
return|;
block|}
specifier|protected
name|ManagedRepositoriesService
name|getManagedRepositoriesService
parameter_list|()
block|{
name|ManagedRepositoriesService
name|service
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|getBaseUrl
argument_list|()
operator|+
literal|"/"
operator|+
name|getRestServicesPath
argument_list|()
operator|+
literal|"/archivaServices/"
argument_list|,
name|ManagedRepositoriesService
operator|.
name|class
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|JacksonJaxbJsonProvider
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|WebClient
operator|.
name|client
argument_list|(
name|service
argument_list|)
operator|.
name|header
argument_list|(
literal|"Authorization"
argument_list|,
name|authorizationHeader
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|service
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|300000L
argument_list|)
expr_stmt|;
return|return
name|service
return|;
block|}
specifier|protected
name|RepositoryGroupService
name|getRepositoryGroupService
parameter_list|()
block|{
name|RepositoryGroupService
name|service
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|getBaseUrl
argument_list|()
operator|+
literal|"/"
operator|+
name|getRestServicesPath
argument_list|()
operator|+
literal|"/archivaServices/"
argument_list|,
name|RepositoryGroupService
operator|.
name|class
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|JacksonJaxbJsonProvider
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|WebClient
operator|.
name|client
argument_list|(
name|service
argument_list|)
operator|.
name|header
argument_list|(
literal|"Authorization"
argument_list|,
name|authorizationHeader
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|service
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|300000L
argument_list|)
expr_stmt|;
return|return
name|service
return|;
block|}
specifier|protected
name|RepositoriesService
name|getRepositoriesService
parameter_list|()
block|{
name|RepositoriesService
name|service
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|getBaseUrl
argument_list|()
operator|+
literal|"/"
operator|+
name|getRestServicesPath
argument_list|()
operator|+
literal|"/archivaServices/"
argument_list|,
name|RepositoriesService
operator|.
name|class
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|JacksonJaxbJsonProvider
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|WebClient
operator|.
name|client
argument_list|(
name|service
argument_list|)
operator|.
name|header
argument_list|(
literal|"Authorization"
argument_list|,
name|authorizationHeader
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|service
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|300000L
argument_list|)
expr_stmt|;
return|return
name|service
return|;
block|}
specifier|protected
name|SearchService
name|getSearchService
parameter_list|()
block|{
name|SearchService
name|service
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|getBaseUrl
argument_list|()
operator|+
literal|"/"
operator|+
name|getRestServicesPath
argument_list|()
operator|+
literal|"/archivaServices/"
argument_list|,
name|SearchService
operator|.
name|class
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|JacksonJaxbJsonProvider
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|WebClient
operator|.
name|client
argument_list|(
name|service
argument_list|)
operator|.
name|header
argument_list|(
literal|"Authorization"
argument_list|,
name|authorizationHeader
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|service
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|300000L
argument_list|)
expr_stmt|;
return|return
name|service
return|;
block|}
specifier|protected
name|String
name|getBaseUrl
parameter_list|()
block|{
name|String
name|baseUrlSysProps
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"archiva.baseRestUrl"
argument_list|)
decl_stmt|;
return|return
name|StringUtils
operator|.
name|isBlank
argument_list|(
name|baseUrlSysProps
argument_list|)
condition|?
literal|"http://localhost:"
operator|+
name|port
else|:
name|baseUrlSysProps
return|;
block|}
specifier|protected
name|RoleManagementService
name|getRoleManagementService
parameter_list|(
name|String
name|authzHeader
parameter_list|)
block|{
name|RoleManagementService
name|service
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|port
operator|+
literal|"/"
operator|+
name|getRestServicesPath
argument_list|()
operator|+
literal|"/redbackServices/"
argument_list|,
name|RoleManagementService
operator|.
name|class
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|JacksonJaxbJsonProvider
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
comment|// for debuging purpose
name|WebClient
operator|.
name|getConfig
argument_list|(
name|service
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|3000000L
argument_list|)
expr_stmt|;
if|if
condition|(
name|authzHeader
operator|!=
literal|null
condition|)
block|{
name|WebClient
operator|.
name|client
argument_list|(
name|service
argument_list|)
operator|.
name|header
argument_list|(
literal|"Authorization"
argument_list|,
name|authzHeader
argument_list|)
expr_stmt|;
block|}
return|return
name|service
return|;
block|}
specifier|protected
name|UserService
name|getUserService
parameter_list|(
name|String
name|authzHeader
parameter_list|)
block|{
name|UserService
name|service
init|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|port
operator|+
literal|"/"
operator|+
name|getRestServicesPath
argument_list|()
operator|+
literal|"/redbackServices/"
argument_list|,
name|UserService
operator|.
name|class
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|JacksonJaxbJsonProvider
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
comment|// for debuging purpose
name|WebClient
operator|.
name|getConfig
argument_list|(
name|service
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
operator|.
name|getClient
argument_list|()
operator|.
name|setReceiveTimeout
argument_list|(
literal|3000000L
argument_list|)
expr_stmt|;
if|if
condition|(
name|authzHeader
operator|!=
literal|null
condition|)
block|{
name|WebClient
operator|.
name|client
argument_list|(
name|service
argument_list|)
operator|.
name|header
argument_list|(
literal|"Authorization"
argument_list|,
name|authzHeader
argument_list|)
expr_stmt|;
block|}
return|return
name|service
return|;
block|}
specifier|protected
name|FakeCreateAdminService
name|getFakeCreateAdminService
parameter_list|()
block|{
return|return
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|port
operator|+
literal|"/"
operator|+
name|getRestServicesPath
argument_list|()
operator|+
literal|"/fakeCreateAdminService/"
argument_list|,
name|FakeCreateAdminService
operator|.
name|class
argument_list|)
return|;
block|}
block|}
end_class

end_unit

