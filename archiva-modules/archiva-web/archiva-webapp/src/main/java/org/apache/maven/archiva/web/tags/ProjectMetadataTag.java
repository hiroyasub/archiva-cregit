begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|tags
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|jsp
operator|.
name|JspException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|jsp
operator|.
name|tagext
operator|.
name|TagSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|Dependency
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|License
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|MailingList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ProjectVersionMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * ProjectMetadataTag   *   * Outputs the project metadata attributes, used in the Metadata tab in artifact browse.  */
end_comment

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"serial"
argument_list|)
specifier|public
class|class
name|ProjectMetadataTag
extends|extends
name|TagSupport
block|{
specifier|private
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ProjectMetadataTag
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|Object
name|object
decl_stmt|;
specifier|private
name|String
name|groupId
decl_stmt|;
specifier|private
name|String
name|artifactId
decl_stmt|;
specifier|private
name|String
name|version
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|release
parameter_list|()
block|{
name|object
operator|=
literal|null
expr_stmt|;
name|super
operator|.
name|release
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|doStartTag
parameter_list|()
throws|throws
name|JspException
block|{
name|StringBuffer
name|buf
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
if|if
condition|(
name|object
operator|==
literal|null
condition|)
block|{
name|buf
operator|.
name|append
argument_list|(
literal|"Error generating project metadata."
argument_list|)
expr_stmt|;
name|log
operator|.
name|error
argument_list|(
literal|"Unable to generate project metadata for null object."
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|object
operator|instanceof
name|ProjectVersionMetadata
condition|)
block|{
name|ProjectVersionMetadata
name|metadata
init|=
operator|(
name|ProjectVersionMetadata
operator|)
name|object
decl_stmt|;
name|buildProjectMetadata
argument_list|(
name|buf
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|buf
operator|.
name|append
argument_list|(
literal|"Unable to generate project metadata for object "
argument_list|)
operator|.
name|append
argument_list|(
name|object
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|out
argument_list|(
name|buf
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|EVAL_BODY_INCLUDE
return|;
block|}
specifier|private
name|void
name|out
parameter_list|(
name|String
name|msg
parameter_list|)
throws|throws
name|JspException
block|{
try|try
block|{
name|pageContext
operator|.
name|getOut
argument_list|()
operator|.
name|print
argument_list|(
name|msg
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|JspException
argument_list|(
literal|"Unable to output to jsp page context."
argument_list|)
throw|;
block|}
block|}
specifier|private
name|void
name|buildProjectMetadata
parameter_list|(
name|StringBuffer
name|metadataEntries
parameter_list|,
name|ProjectVersionMetadata
name|projectMetadata
parameter_list|)
block|{
name|startList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"project.metadata.id="
argument_list|,
name|projectMetadata
operator|.
name|getId
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"project.url="
argument_list|,
name|projectMetadata
operator|.
name|getUrl
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"project.name="
argument_list|,
name|projectMetadata
operator|.
name|getName
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"project.description="
argument_list|,
name|projectMetadata
operator|.
name|getDescription
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
if|if
condition|(
name|projectMetadata
operator|.
name|getOrganization
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|startListItem
argument_list|(
literal|"organization"
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|startList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"organization.name="
argument_list|,
name|projectMetadata
operator|.
name|getOrganization
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"organization.url="
argument_list|,
name|projectMetadata
operator|.
name|getOrganization
argument_list|()
operator|.
name|getUrl
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|endList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|endListItem
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|projectMetadata
operator|.
name|getIssueManagement
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|startListItem
argument_list|(
literal|"issueManagement"
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|startList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"issueManagement.system="
argument_list|,
name|projectMetadata
operator|.
name|getIssueManagement
argument_list|()
operator|.
name|getSystem
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"issueManagement.url="
argument_list|,
name|projectMetadata
operator|.
name|getIssueManagement
argument_list|()
operator|.
name|getUrl
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|endList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|endListItem
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|projectMetadata
operator|.
name|getScm
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|startListItem
argument_list|(
literal|"scm"
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|startList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"scm.url="
argument_list|,
name|projectMetadata
operator|.
name|getScm
argument_list|()
operator|.
name|getUrl
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"scm.connection="
argument_list|,
name|projectMetadata
operator|.
name|getScm
argument_list|()
operator|.
name|getConnection
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"scm.developer.connection="
argument_list|,
name|projectMetadata
operator|.
name|getScm
argument_list|()
operator|.
name|getDeveloperConnection
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|endList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|endListItem
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|projectMetadata
operator|.
name|getCiManagement
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|startListItem
argument_list|(
literal|"ciManagement"
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|startList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"ciManagement.system="
argument_list|,
name|projectMetadata
operator|.
name|getCiManagement
argument_list|()
operator|.
name|getSystem
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"ciManagement.url="
argument_list|,
name|projectMetadata
operator|.
name|getCiManagement
argument_list|()
operator|.
name|getUrl
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|endList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|endListItem
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|projectMetadata
operator|.
name|getLicenses
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|projectMetadata
operator|.
name|getLicenses
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|startListItem
argument_list|(
literal|"licenses"
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|License
argument_list|>
name|licenses
init|=
name|projectMetadata
operator|.
name|getLicenses
argument_list|()
decl_stmt|;
name|int
name|ctr
init|=
literal|0
decl_stmt|;
name|startList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
for|for
control|(
name|License
name|license
range|:
name|licenses
control|)
block|{
name|createDeleteLink
argument_list|(
literal|"license"
argument_list|,
name|license
operator|.
name|getName
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|startList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"licenses."
operator|+
name|ctr
operator|+
literal|".name="
argument_list|,
name|license
operator|.
name|getName
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"licenses."
operator|+
name|ctr
operator|+
literal|".url="
argument_list|,
name|license
operator|.
name|getUrl
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|endList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|endListItem
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|ctr
operator|++
expr_stmt|;
block|}
name|endList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|endListItem
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|projectMetadata
operator|.
name|getMailingLists
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|projectMetadata
operator|.
name|getMailingLists
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|startListItem
argument_list|(
literal|"mailingLists"
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|MailingList
argument_list|>
name|lists
init|=
name|projectMetadata
operator|.
name|getMailingLists
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|otherArchives
decl_stmt|;
name|int
name|ctr
init|=
literal|0
decl_stmt|;
name|int
name|archiveCtr
init|=
literal|0
decl_stmt|;
name|startList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
for|for
control|(
name|MailingList
name|list
range|:
name|lists
control|)
block|{
name|createDeleteLink
argument_list|(
literal|"mailingList"
argument_list|,
name|list
operator|.
name|getName
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|startList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"mailingLists."
operator|+
name|ctr
operator|+
literal|".name="
argument_list|,
name|list
operator|.
name|getName
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"mailingLists."
operator|+
name|ctr
operator|+
literal|".archive.url="
argument_list|,
name|list
operator|.
name|getMainArchiveUrl
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"mailingLists."
operator|+
name|ctr
operator|+
literal|".post="
argument_list|,
name|list
operator|.
name|getPostAddress
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"mailingLists."
operator|+
name|ctr
operator|+
literal|".subscribe="
argument_list|,
name|list
operator|.
name|getSubscribeAddress
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"mailingLists."
operator|+
name|ctr
operator|+
literal|".unsubscribe="
argument_list|,
name|list
operator|.
name|getUnsubscribeAddress
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|startListItem
argument_list|(
literal|"mailingLists."
operator|+
name|ctr
operator|+
literal|".otherArchives"
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
if|if
condition|(
name|list
operator|.
name|getOtherArchives
argument_list|()
operator|!=
literal|null
operator|&&
name|list
operator|.
name|getOtherArchives
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|archiveCtr
operator|=
literal|0
expr_stmt|;
name|otherArchives
operator|=
name|list
operator|.
name|getOtherArchives
argument_list|()
expr_stmt|;
name|startList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|archive
range|:
name|otherArchives
control|)
block|{
name|addListItem
argument_list|(
literal|"mailingLists."
operator|+
name|ctr
operator|+
literal|".otherArchives."
operator|+
name|archiveCtr
operator|+
literal|"="
argument_list|,
name|archive
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|metadataEntries
operator|.
name|append
argument_list|(
name|archive
argument_list|)
expr_stmt|;
name|archiveCtr
operator|++
expr_stmt|;
block|}
name|endList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
block|}
name|endListItem
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|endList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|endListItem
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|ctr
operator|++
expr_stmt|;
block|}
name|endList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|endListItem
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|projectMetadata
operator|.
name|getDependencies
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|projectMetadata
operator|.
name|getDependencies
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|startListItem
argument_list|(
literal|"dependencies"
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Dependency
argument_list|>
name|dependencies
init|=
name|projectMetadata
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|int
name|ctr
init|=
literal|0
decl_stmt|;
name|startList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
for|for
control|(
name|Dependency
name|dependency
range|:
name|dependencies
control|)
block|{
name|createDeleteLink
argument_list|(
literal|"dependency"
argument_list|,
name|dependency
operator|.
name|getArtifactId
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|startList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"dependency."
operator|+
name|ctr
operator|+
literal|".group.id="
argument_list|,
name|dependency
operator|.
name|getGroupId
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"dependency."
operator|+
name|ctr
operator|+
literal|".artifact.id="
argument_list|,
name|dependency
operator|.
name|getArtifactId
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"dependency."
operator|+
name|ctr
operator|+
literal|".version="
argument_list|,
name|dependency
operator|.
name|getVersion
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"dependency."
operator|+
name|ctr
operator|+
literal|".classifier="
argument_list|,
name|dependency
operator|.
name|getClassifier
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"dependency."
operator|+
name|ctr
operator|+
literal|".type="
argument_list|,
name|dependency
operator|.
name|getType
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"dependency."
operator|+
name|ctr
operator|+
literal|".scope="
argument_list|,
name|dependency
operator|.
name|getScope
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|addListItem
argument_list|(
literal|"dependency."
operator|+
name|ctr
operator|+
literal|".system.path="
argument_list|,
name|dependency
operator|.
name|getSystemPath
argument_list|()
argument_list|,
name|metadataEntries
argument_list|)
expr_stmt|;
name|endList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|endListItem
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|ctr
operator|++
expr_stmt|;
block|}
name|endList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
name|endListItem
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
block|}
name|endList
argument_list|(
name|metadataEntries
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|startList
parameter_list|(
name|StringBuffer
name|metadataEntries
parameter_list|)
block|{
name|metadataEntries
operator|.
name|append
argument_list|(
literal|"\n<ul>"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|endList
parameter_list|(
name|StringBuffer
name|metadataEntries
parameter_list|)
block|{
name|metadataEntries
operator|.
name|append
argument_list|(
literal|"\n</ul>"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|addListItem
parameter_list|(
name|String
name|label
parameter_list|,
name|String
name|value
parameter_list|,
name|StringBuffer
name|metadataEntries
parameter_list|)
block|{
name|String
name|newValue
init|=
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|value
argument_list|)
condition|?
literal|""
else|:
name|value
decl_stmt|;
name|metadataEntries
operator|.
name|append
argument_list|(
literal|"\n<li>"
argument_list|)
operator|.
name|append
argument_list|(
name|label
argument_list|)
operator|.
name|append
argument_list|(
name|newValue
argument_list|)
operator|.
name|append
argument_list|(
literal|"</li>"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|startListItem
parameter_list|(
name|String
name|value
parameter_list|,
name|StringBuffer
name|metadataEntries
parameter_list|)
block|{
name|metadataEntries
operator|.
name|append
argument_list|(
literal|"\n<li>"
argument_list|)
operator|.
name|append
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|endListItem
parameter_list|(
name|StringBuffer
name|metadataEntries
parameter_list|)
block|{
name|metadataEntries
operator|.
name|append
argument_list|(
literal|"\n</li>"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createDeleteLink
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|,
name|StringBuffer
name|metadataEntries
parameter_list|)
block|{
name|metadataEntries
operator|.
name|append
argument_list|(
literal|"\n<li>"
argument_list|)
operator|.
name|append
argument_list|(
name|value
argument_list|)
operator|.
name|append
argument_list|(
literal|"\n<a href=\"showProjectMetadata!deleteMetadataEntry.action?"
argument_list|)
operator|.
name|append
argument_list|(
literal|"groupId="
argument_list|)
operator|.
name|append
argument_list|(
name|groupId
argument_list|)
operator|.
name|append
argument_list|(
literal|"&artifactId="
argument_list|)
operator|.
name|append
argument_list|(
name|artifactId
argument_list|)
operator|.
name|append
argument_list|(
literal|"&version="
argument_list|)
operator|.
name|append
argument_list|(
name|version
argument_list|)
operator|.
name|append
argument_list|(
literal|"&deleteItem="
argument_list|)
operator|.
name|append
argument_list|(
name|name
argument_list|)
operator|.
name|append
argument_list|(
literal|"&itemValue="
argument_list|)
operator|.
name|append
argument_list|(
name|value
argument_list|)
operator|.
name|append
argument_list|(
literal|"\">"
argument_list|)
operator|.
name|append
argument_list|(
literal|"<img src=\"images/icons/delete.gif\"/>"
argument_list|)
operator|.
name|append
argument_list|(
literal|"</a>"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setObject
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
name|this
operator|.
name|object
operator|=
name|object
expr_stmt|;
block|}
specifier|public
name|void
name|setGroupId
parameter_list|(
name|String
name|groupId
parameter_list|)
block|{
name|this
operator|.
name|groupId
operator|=
name|groupId
expr_stmt|;
block|}
specifier|public
name|void
name|setArtifactId
parameter_list|(
name|String
name|artifactId
parameter_list|)
block|{
name|this
operator|.
name|artifactId
operator|=
name|artifactId
expr_stmt|;
block|}
specifier|public
name|void
name|setVersion
parameter_list|(
name|String
name|version
parameter_list|)
block|{
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
block|}
block|}
end_class

end_unit

