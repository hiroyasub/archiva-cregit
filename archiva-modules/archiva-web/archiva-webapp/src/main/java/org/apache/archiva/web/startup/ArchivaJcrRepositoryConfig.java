begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|startup
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|config
operator|.
name|ConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|core
operator|.
name|config
operator|.
name|RepositoryConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  * @since 1.4-M1  */
end_comment

begin_class
specifier|public
class|class
name|ArchivaJcrRepositoryConfig
block|{
specifier|public
specifier|static
name|RepositoryConfig
name|create
parameter_list|(
name|String
name|file
parameter_list|,
name|String
name|home
parameter_list|)
throws|throws
name|ConfigurationException
block|{
name|File
name|homeFile
init|=
operator|new
name|File
argument_list|(
name|home
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|homeFile
operator|.
name|exists
argument_list|( )
condition|)
block|{
name|homeFile
operator|.
name|mkdirs
argument_list|( )
expr_stmt|;
block|}
name|File
name|configurationFile
init|=
operator|new
name|File
argument_list|(
name|file
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|configurationFile
operator|.
name|exists
argument_list|( )
condition|)
block|{
name|String
name|resourcePath
init|=
literal|"org/apache/archiva/repository.xml"
decl_stmt|;
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ArchivaJcrRepositoryConfig
operator|.
name|class
argument_list|)
operator|.
name|info
argument_list|(
literal|"no repository.xml file in path {} so use default from resources path {}"
argument_list|,
name|file
argument_list|,
name|resourcePath
argument_list|)
expr_stmt|;
comment|// use bundled repository.xml
return|return
name|RepositoryConfig
operator|.
name|create
argument_list|(
name|Thread
operator|.
name|currentThread
argument_list|( )
operator|.
name|getContextClassLoader
argument_list|( )
operator|.
name|getResourceAsStream
argument_list|(
name|resourcePath
argument_list|)
argument_list|,
name|home
argument_list|)
return|;
block|}
return|return
name|RepositoryConfig
operator|.
name|create
argument_list|(
name|file
argument_list|,
name|home
argument_list|)
return|;
block|}
block|}
end_class

end_unit

