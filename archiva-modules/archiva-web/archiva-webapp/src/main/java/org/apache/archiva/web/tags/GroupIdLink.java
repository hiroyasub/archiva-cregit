begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|tags
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts2
operator|.
name|StrutsException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts2
operator|.
name|components
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|com
operator|.
name|opensymphony
operator|.
name|xwork2
operator|.
name|util
operator|.
name|ValueStack
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|StringTokenizer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_comment
comment|/**  * GroupIdLink   *  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|GroupIdLink
extends|extends
name|Component
block|{
specifier|private
specifier|static
specifier|final
name|String
name|ACTION
init|=
literal|"browseGroup"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|NAMESPACE
init|=
literal|"/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|boolean
name|includeContext
init|=
literal|true
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|boolean
name|encode
init|=
literal|true
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|method
init|=
literal|null
decl_stmt|;
specifier|private
name|HttpServletRequest
name|req
decl_stmt|;
specifier|private
name|HttpServletResponse
name|res
decl_stmt|;
specifier|private
name|String
name|groupId
decl_stmt|;
specifier|private
name|boolean
name|includeTop
init|=
literal|false
decl_stmt|;
specifier|public
name|GroupIdLink
parameter_list|(
name|ValueStack
name|stack
parameter_list|,
name|HttpServletRequest
name|req
parameter_list|,
name|HttpServletResponse
name|res
parameter_list|)
block|{
name|super
argument_list|(
name|stack
argument_list|)
expr_stmt|;
name|this
operator|.
name|req
operator|=
name|req
expr_stmt|;
name|this
operator|.
name|res
operator|=
name|res
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|end
parameter_list|(
name|Writer
name|writer
parameter_list|,
name|String
name|body
parameter_list|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"<span class=\"groupId\">"
argument_list|)
expr_stmt|;
if|if
condition|(
name|includeTop
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|"<a href=\""
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|determineBrowseActionUrl
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\">[top]</a> / "
argument_list|)
expr_stmt|;
comment|// TODO: i18n
block|}
name|StringTokenizer
name|tok
init|=
operator|new
name|StringTokenizer
argument_list|(
name|groupId
argument_list|,
literal|"."
argument_list|)
decl_stmt|;
name|String
name|cumulativeGroup
init|=
literal|null
decl_stmt|;
while|while
condition|(
name|tok
operator|.
name|hasMoreTokens
argument_list|()
condition|)
block|{
name|String
name|token
init|=
name|tok
operator|.
name|nextToken
argument_list|()
decl_stmt|;
if|if
condition|(
name|cumulativeGroup
operator|==
literal|null
condition|)
block|{
name|cumulativeGroup
operator|=
name|token
expr_stmt|;
block|}
else|else
block|{
name|cumulativeGroup
operator|+=
literal|"."
operator|+
name|token
expr_stmt|;
block|}
name|sb
operator|.
name|append
argument_list|(
literal|"<a href=\""
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|determineBrowseGroupActionUrl
argument_list|(
name|cumulativeGroup
argument_list|)
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\">"
argument_list|)
operator|.
name|append
argument_list|(
name|token
argument_list|)
operator|.
name|append
argument_list|(
literal|"</a> / "
argument_list|)
expr_stmt|;
block|}
name|sb
operator|.
name|append
argument_list|(
literal|"</span>"
argument_list|)
expr_stmt|;
try|try
block|{
name|writer
operator|.
name|write
argument_list|(
name|sb
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|StrutsException
argument_list|(
literal|"IOError: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
return|return
name|super
operator|.
name|end
argument_list|(
name|writer
argument_list|,
name|body
argument_list|)
return|;
block|}
specifier|private
name|String
name|determineBrowseActionUrl
parameter_list|()
block|{
return|return
name|determineActionURL
argument_list|(
literal|"browse"
argument_list|,
name|NAMESPACE
argument_list|,
name|method
argument_list|,
name|req
argument_list|,
name|res
argument_list|,
name|parameters
argument_list|,
name|req
operator|.
name|getScheme
argument_list|()
argument_list|,
name|includeContext
argument_list|,
name|encode
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|String
name|determineBrowseGroupActionUrl
parameter_list|(
name|String
name|gid
parameter_list|)
block|{
name|parameters
operator|.
name|put
argument_list|(
literal|"groupId"
argument_list|,
name|gid
argument_list|)
expr_stmt|;
return|return
name|determineActionURL
argument_list|(
name|ACTION
argument_list|,
name|NAMESPACE
argument_list|,
name|method
argument_list|,
name|req
argument_list|,
name|res
argument_list|,
name|parameters
argument_list|,
name|req
operator|.
name|getScheme
argument_list|()
argument_list|,
name|includeContext
argument_list|,
name|encode
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
return|;
block|}
specifier|public
name|String
name|getGroupId
parameter_list|()
block|{
return|return
name|groupId
return|;
block|}
specifier|public
name|void
name|setGroupId
parameter_list|(
name|String
name|groupId
parameter_list|)
block|{
name|this
operator|.
name|groupId
operator|=
name|groupId
expr_stmt|;
block|}
specifier|public
name|boolean
name|isIncludeTop
parameter_list|()
block|{
return|return
name|includeTop
return|;
block|}
specifier|public
name|void
name|setIncludeTop
parameter_list|(
name|boolean
name|includeTop
parameter_list|)
block|{
name|this
operator|.
name|includeTop
operator|=
name|includeTop
expr_stmt|;
block|}
block|}
end_class

end_unit

