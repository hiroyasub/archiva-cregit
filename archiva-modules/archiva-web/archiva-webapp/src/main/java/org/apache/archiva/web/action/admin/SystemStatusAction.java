begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|action
operator|.
name|admin
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|rbac
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|scanner
operator|.
name|RepositoryScanner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|security
operator|.
name|common
operator|.
name|ArchivaRoleConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|action
operator|.
name|AbstractActionSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|cache
operator|.
name|Cache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|taskqueue
operator|.
name|TaskQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|redback
operator|.
name|integration
operator|.
name|interceptor
operator|.
name|SecureAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|redback
operator|.
name|integration
operator|.
name|interceptor
operator|.
name|SecureActionBundle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|redback
operator|.
name|integration
operator|.
name|interceptor
operator|.
name|SecureActionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Scope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Controller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|PostConstruct
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Shows system status information for the administrator.  *  * @version $Id$  */
end_comment

begin_class
annotation|@
name|Controller
argument_list|(
literal|"systemStatus"
argument_list|)
annotation|@
name|Scope
argument_list|(
literal|"prototype"
argument_list|)
specifier|public
class|class
name|SystemStatusAction
extends|extends
name|AbstractActionSupport
implements|implements
name|SecureAction
block|{
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|TaskQueue
argument_list|>
name|queues
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Cache
argument_list|>
name|caches
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|RepositoryScanner
name|scanner
decl_stmt|;
specifier|private
name|String
name|memoryStatus
decl_stmt|;
specifier|private
name|String
name|cacheKey
decl_stmt|;
annotation|@
name|PostConstruct
specifier|public
name|void
name|initialize
parameter_list|()
block|{
name|super
operator|.
name|initialize
argument_list|()
expr_stmt|;
name|queues
operator|=
name|getBeansOfType
argument_list|(
name|TaskQueue
operator|.
name|class
argument_list|)
expr_stmt|;
name|caches
operator|=
name|getBeansOfType
argument_list|(
name|Cache
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
specifier|public
name|SecureActionBundle
name|getSecureActionBundle
parameter_list|()
throws|throws
name|SecureActionException
block|{
name|SecureActionBundle
name|bundle
init|=
operator|new
name|SecureActionBundle
argument_list|()
decl_stmt|;
name|bundle
operator|.
name|setRequiresAuthentication
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|bundle
operator|.
name|addRequiredAuthorization
argument_list|(
name|ArchivaRoleConstants
operator|.
name|OPERATION_MANAGE_CONFIGURATION
argument_list|,
name|Resource
operator|.
name|GLOBAL
argument_list|)
expr_stmt|;
return|return
name|bundle
return|;
block|}
specifier|public
name|String
name|execute
parameter_list|()
block|{
name|Runtime
name|runtime
init|=
name|Runtime
operator|.
name|getRuntime
argument_list|()
decl_stmt|;
name|runtime
operator|.
name|gc
argument_list|()
expr_stmt|;
name|long
name|total
init|=
name|runtime
operator|.
name|totalMemory
argument_list|()
decl_stmt|;
name|long
name|used
init|=
name|total
operator|-
name|runtime
operator|.
name|freeMemory
argument_list|()
decl_stmt|;
name|long
name|max
init|=
name|runtime
operator|.
name|maxMemory
argument_list|()
decl_stmt|;
name|memoryStatus
operator|=
name|formatMemory
argument_list|(
name|used
argument_list|)
operator|+
literal|"/"
operator|+
name|formatMemory
argument_list|(
name|total
argument_list|)
operator|+
literal|" (Max: "
operator|+
name|formatMemory
argument_list|(
name|max
argument_list|)
operator|+
literal|")"
expr_stmt|;
return|return
name|SUCCESS
return|;
block|}
specifier|public
name|String
name|flush
parameter_list|()
block|{
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|cacheKey
argument_list|)
condition|)
block|{
name|Cache
name|cache
init|=
name|caches
operator|.
name|get
argument_list|(
name|cacheKey
argument_list|)
decl_stmt|;
name|cache
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|SUCCESS
return|;
block|}
specifier|private
specifier|static
name|String
name|formatMemory
parameter_list|(
name|long
name|l
parameter_list|)
block|{
return|return
name|l
operator|/
operator|(
literal|1024
operator|*
literal|1024
operator|)
operator|+
literal|"M"
return|;
block|}
specifier|public
name|String
name|getMemoryStatus
parameter_list|()
block|{
return|return
name|memoryStatus
return|;
block|}
specifier|public
name|RepositoryScanner
name|getScanner
parameter_list|()
block|{
return|return
name|scanner
return|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Cache
argument_list|>
name|getCaches
parameter_list|()
block|{
return|return
name|caches
return|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|TaskQueue
argument_list|>
name|getQueues
parameter_list|()
block|{
return|return
name|queues
return|;
block|}
specifier|public
name|String
name|getCacheKey
parameter_list|()
block|{
return|return
name|cacheKey
return|;
block|}
specifier|public
name|void
name|setCacheKey
parameter_list|(
name|String
name|cacheKey
parameter_list|)
block|{
name|this
operator|.
name|cacheKey
operator|=
name|cacheKey
expr_stmt|;
block|}
block|}
end_class

end_unit

