begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|test
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_comment
comment|/**  * Test archiva proxied repositories configuration  *  */
end_comment

begin_class
specifier|public
class|class
name|ProxiedRepositoryTest
extends|extends
name|AbstractArchivaTestCase
block|{
comment|/**      *      */
specifier|protected
name|void
name|initialize
parameter_list|()
block|{
name|super
operator|.
name|initialize
argument_list|()
expr_stmt|;
name|createTestRepo
argument_list|()
expr_stmt|;
block|}
comment|/**      * Create a proxied repo which will be used for testing      */
specifier|private
name|void
name|createTestRepo
parameter_list|()
block|{
name|clickProxiedRepositories
argument_list|()
expr_stmt|;
if|if
condition|(
name|isTextPresent
argument_list|(
literal|"There are no proxied repositories configured yet."
argument_list|)
condition|)
block|{
name|clickLinkWithText
argument_list|(
literal|"Add Repository"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Configuration"
argument_list|)
expr_stmt|;
name|setFieldValue
argument_list|(
literal|"id"
argument_list|,
literal|"test-proxied"
argument_list|)
expr_stmt|;
name|setFieldValue
argument_list|(
literal|"name"
argument_list|,
literal|"Test Proxied Repository"
argument_list|)
expr_stmt|;
name|setFieldValue
argument_list|(
literal|"url"
argument_list|,
literal|"http://test.com/test-proxied"
argument_list|)
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Add Repository"
argument_list|)
expr_stmt|;
name|waitPage
argument_list|()
expr_stmt|;
name|assertPage
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Test Proxied Repository"
argument_list|)
expr_stmt|;
name|assertLinkPresent
argument_list|(
literal|"Edit Repository"
argument_list|)
expr_stmt|;
block|}
name|logout
argument_list|()
expr_stmt|;
block|}
comment|/**      * Test add proxied repo with invalid data      */
specifier|public
name|void
name|testInvalidAddProxiedRepoConfiguration
parameter_list|()
block|{
name|clickProxiedRepositories
argument_list|()
expr_stmt|;
name|clickLinkWithText
argument_list|(
literal|"Add Repository"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Configuration"
argument_list|)
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Add Repository"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Configuration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter the repository identifier."
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter the repository name."
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter the repository URL."
argument_list|)
expr_stmt|;
name|logout
argument_list|()
expr_stmt|;
block|}
comment|/**      * Test edit proxied repo with valid data      */
specifier|public
name|void
name|testValidEditProxiedRepoConfiguration
parameter_list|()
block|{
name|clickProxiedRepositories
argument_list|()
expr_stmt|;
name|clickLinkWithText
argument_list|(
literal|"Edit Repository"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Configuration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Edit Proxied Repository"
argument_list|)
expr_stmt|;
name|setFieldValue
argument_list|(
literal|"name"
argument_list|,
literal|"Test Valid"
argument_list|)
expr_stmt|;
name|setFieldValue
argument_list|(
literal|"url"
argument_list|,
literal|"http://valid.org/test-valid"
argument_list|)
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Update Repository"
argument_list|)
expr_stmt|;
name|waitPage
argument_list|()
expr_stmt|;
name|assertPage
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Test Valid"
argument_list|)
expr_stmt|;
name|assertLinkPresent
argument_list|(
literal|"Edit Repository"
argument_list|)
expr_stmt|;
name|logout
argument_list|()
expr_stmt|;
block|}
comment|/**      * Test edit proxied repo with invalid data      */
specifier|public
name|void
name|testInvalidEditProxiedRepoConfiguration
parameter_list|()
block|{
name|clickProxiedRepositories
argument_list|()
expr_stmt|;
name|clickLinkWithText
argument_list|(
literal|"Edit Repository"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Configuration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Edit Proxied Repository"
argument_list|)
expr_stmt|;
name|setFieldValue
argument_list|(
literal|"name"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|setFieldValue
argument_list|(
literal|"url"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Update Repository"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Configuration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter the repository name."
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter the repository URL."
argument_list|)
expr_stmt|;
name|logout
argument_list|()
expr_stmt|;
block|}
comment|/**      * Test delete repository, unmodified entry and contents      */
specifier|public
name|void
name|testDeleteRepoUnmodified
parameter_list|()
block|{
name|clickProxiedRepositories
argument_list|()
expr_stmt|;
name|clickLinkWithText
argument_list|(
literal|"Delete Repository"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Configuration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Delete Proxied Repository"
argument_list|)
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Go"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Test Proxied Repository"
argument_list|)
expr_stmt|;
name|logout
argument_list|()
expr_stmt|;
block|}
comment|/**      * Test delete repository including contents      */
specifier|public
name|void
name|testDeleteRepoRemoveFromDisk
parameter_list|()
block|{
name|clickProxiedRepositories
argument_list|()
expr_stmt|;
name|clickLinkWithText
argument_list|(
literal|"Delete Repository"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Configuration"
argument_list|)
expr_stmt|;
name|clickLinkWithLocator
argument_list|(
literal|"deleteProxiedRepository_operationdelete-contents"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Go"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
name|assertTextNotPresent
argument_list|(
literal|"Test Proxied Repository"
argument_list|)
expr_stmt|;
name|logout
argument_list|()
expr_stmt|;
block|}
comment|/**      * Test delete repository, unmodified contents/entry deleted      */
specifier|public
name|void
name|testDeleteRepoUnmodifiedContents
parameter_list|()
block|{
name|clickProxiedRepositories
argument_list|()
expr_stmt|;
name|clickLinkWithText
argument_list|(
literal|"Delete Repository"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Configuration"
argument_list|)
expr_stmt|;
name|clickLinkWithLocator
argument_list|(
literal|"deleteProxiedRepository_operationdelete-entry"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Go"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
name|assertTextNotPresent
argument_list|(
literal|"Test Proxied Repository"
argument_list|)
expr_stmt|;
name|logout
argument_list|()
expr_stmt|;
block|}
comment|/**      * Click Settings from the navigation menu      */
specifier|private
name|void
name|clickProxiedRepositories
parameter_list|()
block|{
name|goToLoginPage
argument_list|()
expr_stmt|;
name|submitLoginPage
argument_list|(
name|adminUsername
argument_list|,
name|adminPassword
argument_list|)
expr_stmt|;
name|clickLinkWithText
argument_list|(
literal|"Proxied Repositories"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Proxied Repositories"
argument_list|)
expr_stmt|;
block|}
comment|/**      * Remove the created test repo      */
specifier|protected
name|void
name|removeTestRepo
parameter_list|()
block|{
if|if
condition|(
operator|!
name|isLinkPresent
argument_list|(
literal|"Login"
argument_list|)
condition|)
block|{
name|logout
argument_list|()
expr_stmt|;
block|}
name|clickProxiedRepositories
argument_list|()
expr_stmt|;
if|if
condition|(
name|isTextPresent
argument_list|(
literal|"Delete Repository "
argument_list|)
condition|)
block|{
name|clickLinkWithText
argument_list|(
literal|"Delete Repository"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Configuration"
argument_list|)
expr_stmt|;
name|clickLinkWithLocator
argument_list|(
literal|"deleteProxiedRepository_operationdelete-entry"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Go"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
name|assertTextNotPresent
argument_list|(
literal|"Test Proxied Repository"
argument_list|)
expr_stmt|;
block|}
name|logout
argument_list|()
expr_stmt|;
block|}
comment|/**      * Revert to original value      *      * @throws Exception      */
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|removeTestRepo
argument_list|()
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

