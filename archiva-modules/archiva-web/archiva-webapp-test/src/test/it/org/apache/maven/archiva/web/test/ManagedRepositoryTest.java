begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|test
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_comment
comment|/**  * Archiva's webapp UI test for adding/editing/deleting managed repositories.  *   * @author<a href="mailto:nramirez@exist.com">Napoleon Esmundo C. Ramirez</a>  */
end_comment

begin_class
specifier|public
class|class
name|ManagedRepositoryTest
extends|extends
name|AbstractArchivaTestCase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|TEST_REPOSITORY_ID
init|=
literal|"test-repository-id"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_REPOSITORY_URL
init|=
literal|"test-repository-url"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_REPOSITORY_NAME
init|=
literal|"test-repository-name"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_REPOSITORY_DIRECTORY
init|=
literal|"test-repository-directory"
decl_stmt|;
specifier|private
name|void
name|clickManagedRepositories
parameter_list|()
block|{
name|goToLoginPage
argument_list|()
expr_stmt|;
name|submitLoginPage
argument_list|(
name|adminUsername
argument_list|,
name|adminPassword
argument_list|)
expr_stmt|;
name|clickLinkWithText
argument_list|(
literal|"Managed Repositories"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createManagedRepository
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|url
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|directory
parameter_list|)
block|{
name|clickManagedRepositories
argument_list|()
expr_stmt|;
name|clickLinkWithText
argument_list|(
literal|"Add Repository"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Configuration"
argument_list|)
expr_stmt|;
name|setFieldValue
argument_list|(
literal|"addRepository_id"
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|setFieldValue
argument_list|(
literal|"urlName"
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|setFieldValue
argument_list|(
literal|"addRepository_name"
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|setFieldValue
argument_list|(
literal|"addRepository_directory"
argument_list|,
name|directory
argument_list|)
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Add Repository"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|removeManagedRepository
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|logout
argument_list|()
expr_stmt|;
name|clickManagedRepositories
argument_list|()
expr_stmt|;
name|clickLinkWithLocator
argument_list|(
literal|"//a[contains(@href, '/admin/deleteRepository!input.action?repoId="
operator|+
name|id
operator|+
literal|"')]"
argument_list|)
expr_stmt|;
name|clickLinkWithLocator
argument_list|(
literal|"deleteRepository_operationdelete-contents"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Go"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
name|assertTextNotPresent
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testAddRepositoryWithValidValues
parameter_list|()
block|{
name|createManagedRepository
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|,
name|TEST_REPOSITORY_URL
argument_list|,
name|TEST_REPOSITORY_NAME
argument_list|,
name|TEST_REPOSITORY_DIRECTORY
argument_list|)
expr_stmt|;
name|waitPage
argument_list|()
expr_stmt|;
name|assertPage
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|)
expr_stmt|;
name|removeManagedRepository
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testAddRepositoryWithInvalidValues
parameter_list|()
block|{
name|createManagedRepository
argument_list|(
literal|""
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter the repository identifier."
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter the url name."
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter the repository name."
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter the repository directory."
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testEditRepositoryWithValidValues
parameter_list|()
block|{
name|createManagedRepository
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|,
name|TEST_REPOSITORY_URL
argument_list|,
name|TEST_REPOSITORY_NAME
argument_list|,
name|TEST_REPOSITORY_DIRECTORY
argument_list|)
expr_stmt|;
name|waitPage
argument_list|()
expr_stmt|;
name|assertPage
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
name|TEST_REPOSITORY_NAME
argument_list|)
expr_stmt|;
name|clickLinkWithLocator
argument_list|(
literal|"//a[contains(@href, '/admin/editRepository!input.action?repoId="
operator|+
name|TEST_REPOSITORY_ID
operator|+
literal|"')]"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Configuration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Configuration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Edit Managed Repository"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_REPOSITORY_URL
argument_list|,
name|getFieldValue
argument_list|(
literal|"urlName"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_REPOSITORY_NAME
argument_list|,
name|getFieldValue
argument_list|(
literal|"editRepository_name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|getFieldValue
argument_list|(
literal|"editRepository_directory"
argument_list|)
operator|.
name|endsWith
argument_list|(
name|TEST_REPOSITORY_DIRECTORY
argument_list|)
argument_list|)
expr_stmt|;
name|setFieldValue
argument_list|(
literal|"urlName"
argument_list|,
literal|"edited-"
operator|+
name|TEST_REPOSITORY_URL
argument_list|)
expr_stmt|;
name|setFieldValue
argument_list|(
literal|"editRepository_name"
argument_list|,
literal|"edited-"
operator|+
name|TEST_REPOSITORY_NAME
argument_list|)
expr_stmt|;
name|setFieldValue
argument_list|(
literal|"editRepository_directory"
argument_list|,
literal|"edited-"
operator|+
name|TEST_REPOSITORY_DIRECTORY
argument_list|)
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Update Repository"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"edited-"
operator|+
name|TEST_REPOSITORY_NAME
argument_list|)
expr_stmt|;
name|removeManagedRepository
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testEditRepositoryWithInvalidValues
parameter_list|()
block|{
name|createManagedRepository
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|,
name|TEST_REPOSITORY_URL
argument_list|,
name|TEST_REPOSITORY_NAME
argument_list|,
name|TEST_REPOSITORY_DIRECTORY
argument_list|)
expr_stmt|;
name|waitPage
argument_list|()
expr_stmt|;
name|assertPage
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
name|TEST_REPOSITORY_NAME
argument_list|)
expr_stmt|;
name|clickLinkWithLocator
argument_list|(
literal|"//a[contains(@href, '/admin/editRepository!input.action?repoId="
operator|+
name|TEST_REPOSITORY_ID
operator|+
literal|"')]"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Configuration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Configuration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Edit Managed Repository"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_REPOSITORY_URL
argument_list|,
name|getFieldValue
argument_list|(
literal|"urlName"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_REPOSITORY_NAME
argument_list|,
name|getFieldValue
argument_list|(
literal|"editRepository_name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|getFieldValue
argument_list|(
literal|"editRepository_directory"
argument_list|)
operator|.
name|endsWith
argument_list|(
name|TEST_REPOSITORY_DIRECTORY
argument_list|)
argument_list|)
expr_stmt|;
name|setFieldValue
argument_list|(
literal|"urlName"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|setFieldValue
argument_list|(
literal|"editRepository_name"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|setFieldValue
argument_list|(
literal|"editRepository_directory"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Update Repository"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter the url name."
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter the repository name."
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter the repository directory."
argument_list|)
expr_stmt|;
name|removeManagedRepository
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDeleteRepositoryButLeaveUnmodified
parameter_list|()
block|{
name|createManagedRepository
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|,
name|TEST_REPOSITORY_URL
argument_list|,
name|TEST_REPOSITORY_NAME
argument_list|,
name|TEST_REPOSITORY_DIRECTORY
argument_list|)
expr_stmt|;
name|waitPage
argument_list|()
expr_stmt|;
name|assertPage
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|)
expr_stmt|;
name|clickLinkWithLocator
argument_list|(
literal|"//a[contains(@href, '/admin/deleteRepository!input.action?repoId="
operator|+
name|TEST_REPOSITORY_ID
operator|+
literal|"')]"
argument_list|)
expr_stmt|;
name|clickLinkWithLocator
argument_list|(
literal|"deleteRepository_operationunmodified"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Go"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|)
expr_stmt|;
name|removeManagedRepository
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDeleteRepositoryAndContents
parameter_list|()
block|{
name|createManagedRepository
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|,
name|TEST_REPOSITORY_URL
argument_list|,
name|TEST_REPOSITORY_NAME
argument_list|,
name|TEST_REPOSITORY_DIRECTORY
argument_list|)
expr_stmt|;
name|waitPage
argument_list|()
expr_stmt|;
name|assertPage
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|)
expr_stmt|;
name|removeManagedRepository
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDeleteRepositoryButLeaveContentsUnmodified
parameter_list|()
block|{
name|createManagedRepository
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|,
name|TEST_REPOSITORY_URL
argument_list|,
name|TEST_REPOSITORY_NAME
argument_list|,
name|TEST_REPOSITORY_DIRECTORY
argument_list|)
expr_stmt|;
name|waitPage
argument_list|()
expr_stmt|;
name|assertPage
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|)
expr_stmt|;
name|clickLinkWithLocator
argument_list|(
literal|"//a[contains(@href, '/admin/deleteRepository!input.action?repoId="
operator|+
name|TEST_REPOSITORY_ID
operator|+
literal|"')]"
argument_list|)
expr_stmt|;
name|clickLinkWithLocator
argument_list|(
literal|"deleteRepository_operationdelete-entry"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Go"
argument_list|)
expr_stmt|;
name|assertPage
argument_list|(
literal|"Administration"
argument_list|)
expr_stmt|;
name|assertTextNotPresent
argument_list|(
name|TEST_REPOSITORY_ID
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

