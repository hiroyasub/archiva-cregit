begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|test
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|test
operator|.
name|parent
operator|.
name|AbstractRepositoryTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|Test
import|;
end_import

begin_class
annotation|@
name|Test
argument_list|(
name|groups
operator|=
block|{
literal|"virtualrepository"
block|}
argument_list|,
name|dependsOnMethods
operator|=
block|{
literal|"testWithCorrectUsernamePassword"
block|}
argument_list|)
specifier|public
class|class
name|VirtualRepositoryTest
extends|extends
name|AbstractRepositoryTest
block|{
specifier|public
name|void
name|testAddRepositoryGroupNullValue
parameter_list|()
block|{
name|addRepositoryGroup
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Identifier field is required."
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testWithCorrectUsernamePassword"
block|}
argument_list|)
specifier|public
name|void
name|testAddRepositoryGroupValidValue
parameter_list|()
block|{
name|addRepositoryGroup
argument_list|(
literal|"testing"
argument_list|)
expr_stmt|;
comment|//assertAddedRepositoryLink( "testing" );
name|assertTextPresent
argument_list|(
literal|"testing"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testAddRepositoryGroupValidValue"
block|}
argument_list|)
specifier|public
name|void
name|testAddRepositoryToRepositoryGroup
parameter_list|()
block|{
name|addRepositoryToRepositoryGroup
argument_list|(
literal|"testing"
argument_list|,
literal|"internal"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"internal"
argument_list|)
expr_stmt|;
comment|//clickLinkWithXPath( "/html/body/div[4]/div/div/div[2]/div/div/p[2]/a" );
comment|//getSelenium().goBack();
block|}
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testAddRepositoryToRepositoryGroup"
block|}
argument_list|)
specifier|public
name|void
name|testDeleteRepositoryOfRepositoryGroup
parameter_list|()
block|{
name|deleteRepositoryInRepositoryGroups
argument_list|()
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Repository Groups"
argument_list|)
expr_stmt|;
name|assertTextNotPresent
argument_list|(
literal|"No Repository Groups Defined."
argument_list|)
expr_stmt|;
name|waitPage
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testDeleteRepositoryOfRepositoryGroup"
block|}
argument_list|)
specifier|public
name|void
name|testDeleteRepositoryGroup
parameter_list|()
block|{
name|assertRepositoryGroupsPage
argument_list|()
expr_stmt|;
name|deleteRepositoryGroup
argument_list|(
literal|"testing"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"No Repository Groups Defined."
argument_list|)
expr_stmt|;
block|}
comment|/*@Test(dependsOnMethods = { "testAddRepositoryToRepositoryGroup" } ) 	public void testCheckRepositoryGroup() 	{ 		clickLinkWithXPath( "/html/body/div[4]/div/div/div[2]/div/div/p[2]/a" ); 		getSelenium().goBack(); 	}*/
block|}
end_class

end_unit

