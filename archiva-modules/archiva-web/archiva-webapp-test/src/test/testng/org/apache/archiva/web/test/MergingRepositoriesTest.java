begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|test
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|test
operator|.
name|parent
operator|.
name|AbstractMergingRepositoriesTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|Test
import|;
end_import

begin_class
annotation|@
name|Test
argument_list|(
name|groups
operator|=
block|{
literal|"merging"
block|}
argument_list|,
name|dependsOnMethods
operator|=
block|{
literal|"testWithCorrectUsernamePassword"
block|}
argument_list|,
name|sequential
operator|=
literal|true
argument_list|)
specifier|public
class|class
name|MergingRepositoriesTest
extends|extends
name|AbstractMergingRepositoriesTest
block|{
specifier|public
name|void
name|testAddStagingRepository
parameter_list|()
block|{
name|goToRepositoriesPage
argument_list|()
expr_stmt|;
name|getSelenium
argument_list|()
operator|.
name|open
argument_list|(
literal|"/archiva/admin/addRepository.action"
argument_list|)
expr_stmt|;
name|addStagingRepository
argument_list|(
literal|"merging-repo"
argument_list|,
literal|"merging-repo"
argument_list|,
name|getRepositoryDir
argument_list|()
operator|+
literal|"merging-repo/"
argument_list|,
literal|""
argument_list|,
literal|"Maven 2.x Repository"
argument_list|,
literal|"0 0 * * * ?"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"merging-repo"
argument_list|)
expr_stmt|;
block|}
comment|// here we upload an artifact to the staging repository
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testAddStagingRepository"
block|}
argument_list|,
name|groups
operator|=
literal|"requiresUpload"
argument_list|)
specifier|public
name|void
name|testAddArtifactToStagingRepository
parameter_list|()
block|{
name|addArtifact
argument_list|(
name|getGroupId
argument_list|()
argument_list|,
name|getArtifactId
argument_list|()
argument_list|,
name|getVersion
argument_list|()
argument_list|,
name|getPackaging
argument_list|()
argument_list|,
name|getValidArtifactFilePath
argument_list|()
argument_list|,
literal|"merging-repo-stage"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Artifact '"
operator|+
name|getGroupId
argument_list|()
operator|+
literal|":"
operator|+
name|getArtifactId
argument_list|()
operator|+
literal|":"
operator|+
name|getVersion
argument_list|()
operator|+
literal|"' was successfully deployed to repository 'merging-repo-stage'"
argument_list|)
expr_stmt|;
block|}
comment|// here we test the merging (no conflicts artifacts are available)
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testAddArtifactToStagingRepository"
block|}
argument_list|)
specifier|public
name|void
name|testMerging
parameter_list|()
block|{
name|goToRepositoriesPage
argument_list|()
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Merge"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"No conflicting artifacts"
argument_list|)
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Merge All"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Repository 'merging-repo-stage' successfully merged to 'merging-repo'."
argument_list|)
expr_stmt|;
block|}
comment|// check audit updating is done properly or not
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testMerging"
block|}
argument_list|)
specifier|public
name|void
name|testAuditLogs
parameter_list|()
block|{
name|goToAuditLogReports
argument_list|()
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Merged Artifact"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"merging-repo"
argument_list|)
expr_stmt|;
block|}
comment|// merging is done by skipping conflicts
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testMerging"
block|}
argument_list|)
specifier|public
name|void
name|testMergingWithSkippingConflicts
parameter_list|()
block|{
name|goToRepositoriesPage
argument_list|()
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Merge"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"WARNING: The following are the artifacts in conflict."
argument_list|)
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Merge With Skip"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Repository 'merging-repo-stage' successfully merged to 'merging-repo'."
argument_list|)
expr_stmt|;
block|}
comment|// merging all
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testMerging"
block|}
argument_list|)
specifier|public
name|void
name|testMergingWithOutSkippingConflicts
parameter_list|()
block|{
name|goToRepositoriesPage
argument_list|()
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Merge"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"WARNING: The following are the artifacts in conflict."
argument_list|)
expr_stmt|;
name|clickButtonWithValue
argument_list|(
literal|"Merge All"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Repository 'merging-repo-stage' successfully merged to 'merging-repo'."
argument_list|)
expr_stmt|;
block|}
comment|// change the configuaration first and try to upload existing artifact to the repository
specifier|public
name|void
name|testConfigurationChangesOfStagingRepository
parameter_list|()
block|{
name|editManagedRepository
argument_list|()
expr_stmt|;
name|addArtifact
argument_list|(
name|getGroupId
argument_list|()
argument_list|,
name|getArtifactId
argument_list|()
argument_list|,
name|getVersion
argument_list|()
argument_list|,
name|getPackaging
argument_list|()
argument_list|,
name|getValidArtifactFilePath
argument_list|()
argument_list|,
literal|"merging-repo-stage"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Overwriting released artifacts in repository '"
operator|+
literal|"merging-repo-stage"
operator|+
literal|"' is not allowed."
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

