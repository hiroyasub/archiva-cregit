begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|test
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|test
operator|.
name|parent
operator|.
name|AbstractArtifactManagementTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|Test
import|;
end_import

begin_class
annotation|@
name|Test
argument_list|(
name|groups
operator|=
block|{
literal|"legacysupport"
block|}
argument_list|,
name|dependsOnMethods
operator|=
block|{
literal|"testWithCorrectUsernamePassword"
block|}
argument_list|,
name|sequential
operator|=
literal|true
argument_list|)
specifier|public
class|class
name|LegacySupportTest
extends|extends
name|AbstractArtifactManagementTest
block|{
specifier|public
name|void
name|testAddLegacyArtifact_NullValues
parameter_list|()
block|{
name|goToLegacySupportPage
argument_list|()
expr_stmt|;
name|clickLinkWithText
argument_list|(
literal|"Add"
argument_list|)
expr_stmt|;
name|addLegacyArtifactPath
argument_list|(
literal|""
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter a legacy path."
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter a groupId."
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter an artifactId."
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter a version."
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter a type."
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testAddLegacyArtifact_NullValues"
block|}
argument_list|)
specifier|public
name|void
name|testAddLegacyArtifact_NullLegacyPath
parameter_list|()
block|{
name|addLegacyArtifactPath
argument_list|(
literal|""
argument_list|,
literal|"test"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|,
literal|"testing"
argument_list|,
literal|"jar"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter a legacy path."
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testAddLegacyArtifact_NullLegacyPath"
block|}
argument_list|)
specifier|public
name|void
name|testAddLegacyArtifact_NullGroupId
parameter_list|()
block|{
name|addLegacyArtifactPath
argument_list|(
literal|"test"
argument_list|,
literal|""
argument_list|,
literal|"test"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|,
literal|"testing"
argument_list|,
literal|"jar"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter a groupId."
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testAddLegacyArtifact_NullGroupId"
block|}
argument_list|)
specifier|public
name|void
name|testAddLegacyArtifact_NullArtifactId
parameter_list|()
block|{
name|addLegacyArtifactPath
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|,
literal|""
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|,
literal|"testing"
argument_list|,
literal|"jar"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter an artifactId."
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testAddLegacyArtifact_NullArtifactId"
block|}
argument_list|)
specifier|public
name|void
name|testAddLegacyArtifact_NullVersion
parameter_list|()
block|{
name|addLegacyArtifactPath
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|,
literal|"test"
argument_list|,
literal|""
argument_list|,
literal|"testing"
argument_list|,
literal|"jar"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter a version."
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testAddLegacyArtifact_NullVersion"
block|}
argument_list|)
specifier|public
name|void
name|testAddLegacyArtifact_NullType
parameter_list|()
block|{
name|addLegacyArtifactPath
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|,
literal|"testing"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"You must enter a type."
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testAddLegacyArtifact_NullType"
block|}
argument_list|)
specifier|public
name|void
name|testAddLegacyArtifact_InvalidValues
parameter_list|()
block|{
name|addLegacyArtifactPath
argument_list|(
literal|"<> ~+[ ]'\""
argument_list|,
literal|"<> \\/~+[ ]'\""
argument_list|,
literal|"<> \\/~+[ ]'\""
argument_list|,
literal|"<> \\/~+[ ]'\""
argument_list|,
literal|"<> \\/~+[ ]'\""
argument_list|,
literal|"<> \\/~+[ ]'\""
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Legacy path must only contain alphanumeric characters, forward-slashes(/), back-slashes(\\), underscores(_), dots(.), and dashes(-)."
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Group id must only contain alphanumeric characters, underscores(_), dots(.), and dashes(-)."
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Artifact id must only contain alphanumeric characters, underscores(_), dots(.), and dashes(-)."
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Version must only contain alphanumeric characters, underscores(_), dots(.), and dashes(-)."
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Classifier must only contain alphanumeric characters, underscores(_), dots(.), and dashes(-)."
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Type must only contain alphanumeric characters, underscores(_), dots(.), and dashes(-)."
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testAddLegacyArtifact_InvalidValues"
block|}
argument_list|)
specifier|public
name|void
name|testAddLegacyArtifact_InvalidLegacyPath
parameter_list|()
block|{
name|addLegacyArtifactPath
argument_list|(
literal|"<> ~+[ ]'\""
argument_list|,
literal|"test"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|,
literal|"testing"
argument_list|,
literal|"jar"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Legacy path must only contain alphanumeric characters, forward-slashes(/), back-slashes(\\), underscores(_), dots(.), and dashes(-)."
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testAddLegacyArtifact_InvalidLegacyPath"
block|}
argument_list|)
specifier|public
name|void
name|testAddLegacyArtifact_InvalidGroupId
parameter_list|()
block|{
name|addLegacyArtifactPath
argument_list|(
literal|"test"
argument_list|,
literal|"<> \\/~+[ ]'\""
argument_list|,
literal|"test"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|,
literal|"testing"
argument_list|,
literal|"jar"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Group id must only contain alphanumeric characters, underscores(_), dots(.), and dashes(-)."
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testAddLegacyArtifact_InvalidGroupId"
block|}
argument_list|)
specifier|public
name|void
name|testAddLegacyArtifact_InvalidArtifactId
parameter_list|()
block|{
name|addLegacyArtifactPath
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|,
literal|"<> \\/~+[ ]'\""
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|,
literal|"testing"
argument_list|,
literal|"jar"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Artifact id must only contain alphanumeric characters, underscores(_), dots(.), and dashes(-)."
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testAddLegacyArtifact_InvalidArtifactId"
block|}
argument_list|)
specifier|public
name|void
name|testAddLegacyArtifact_InvalidVersion
parameter_list|()
block|{
name|addLegacyArtifactPath
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|,
literal|"test"
argument_list|,
literal|"<> \\/~+[ ]'\""
argument_list|,
literal|"testing"
argument_list|,
literal|"jar"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Version must only contain alphanumeric characters, underscores(_), dots(.), and dashes(-)."
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testAddLegacyArtifact_InvalidVersion"
block|}
argument_list|)
specifier|public
name|void
name|testAddLegacyArtifact_InvalidType
parameter_list|()
block|{
name|addLegacyArtifactPath
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|,
literal|"testing"
argument_list|,
literal|"<> \\/~+[ ]'\""
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Type must only contain alphanumeric characters, underscores(_), dots(.), and dashes(-)."
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|dependsOnMethods
operator|=
block|{
literal|"testAddLegacyArtifact_InvalidType"
block|}
argument_list|)
specifier|public
name|void
name|testAddLegacyArtifact_InvalidClassifier
parameter_list|()
block|{
name|addLegacyArtifactPath
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|,
literal|"<> \\/~+[ ]'\""
argument_list|,
literal|"jar"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Classifier must only contain alphanumeric characters, underscores(_), dots(.), and dashes(-)."
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

