begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|xmlrpc
operator|.
name|services
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|xmlrpc
operator|.
name|api
operator|.
name|SearchService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|xmlrpc
operator|.
name|api
operator|.
name|beans
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|xmlrpc
operator|.
name|api
operator|.
name|beans
operator|.
name|Dependency
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|xmlrpc
operator|.
name|security
operator|.
name|XmlRpcAuthenticator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|xmlrpc
operator|.
name|security
operator|.
name|XmlRpcUserRepositories
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|FileTypes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ManagedRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ArchivaDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ArtifactDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ObjectNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|browsing
operator|.
name|BrowsingResults
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|browsing
operator|.
name|RepositoryBrowsing
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|constraints
operator|.
name|ArtifactsByChecksumConstraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|filecontent
operator|.
name|FileContentRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|lucene
operator|.
name|LuceneRepositoryContentRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|CrossRepositorySearch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|SearchResultLimits
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|SearchResults
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaArtifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaArtifactModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaProjectModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArtifactReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ManagedRepositoryContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RepositoryContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|ManagedDefaultRepositoryContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|PathParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|security
operator|.
name|ArchivaRoleConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlrpc
operator|.
name|XmlRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlrpc
operator|.
name|common
operator|.
name|XmlRpcHttpRequestConfigImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|role
operator|.
name|RoleManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|system
operator|.
name|SecuritySystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|users
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|users
operator|.
name|UserManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|users
operator|.
name|UserNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|spring
operator|.
name|PlexusInSpringTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|ArgumentsMatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|MockControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|MockClassControl
import|;
end_import

begin_import
import|import
name|sun
operator|.
name|security
operator|.
name|action
operator|.
name|GetLongAction
import|;
end_import

begin_comment
comment|/**  * SearchServiceImplTest  *   * @version $Id: SearchServiceImplTest.java  */
end_comment

begin_class
specifier|public
class|class
name|SearchServiceImplTest
extends|extends
name|PlexusInSpringTestCase
block|{
specifier|private
name|SearchService
name|searchService
decl_stmt|;
specifier|private
name|MockControl
name|userReposControl
decl_stmt|;
specifier|private
name|XmlRpcUserRepositories
name|userRepos
decl_stmt|;
specifier|private
name|MockControl
name|crossRepoSearchControl
decl_stmt|;
specifier|private
name|CrossRepositorySearch
name|crossRepoSearch
decl_stmt|;
specifier|private
name|MockControl
name|archivaDAOControl
decl_stmt|;
specifier|private
name|ArchivaDAO
name|archivaDAO
decl_stmt|;
specifier|private
name|MockControl
name|artifactDAOControl
decl_stmt|;
specifier|private
name|ArtifactDAO
name|artifactDAO
decl_stmt|;
specifier|private
name|MockControl
name|repoBrowsingControl
decl_stmt|;
specifier|private
name|RepositoryBrowsing
name|repoBrowsing
decl_stmt|;
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|userReposControl
operator|=
name|MockClassControl
operator|.
name|createControl
argument_list|(
name|XmlRpcUserRepositories
operator|.
name|class
argument_list|)
expr_stmt|;
name|userRepos
operator|=
operator|(
name|XmlRpcUserRepositories
operator|)
name|userReposControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|crossRepoSearchControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|CrossRepositorySearch
operator|.
name|class
argument_list|)
expr_stmt|;
name|crossRepoSearch
operator|=
operator|(
name|CrossRepositorySearch
operator|)
name|crossRepoSearchControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|archivaDAOControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|ArchivaDAO
operator|.
name|class
argument_list|)
expr_stmt|;
name|archivaDAO
operator|=
operator|(
name|ArchivaDAO
operator|)
name|archivaDAOControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|repoBrowsingControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|RepositoryBrowsing
operator|.
name|class
argument_list|)
expr_stmt|;
name|repoBrowsing
operator|=
operator|(
name|RepositoryBrowsing
operator|)
name|repoBrowsingControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|searchService
operator|=
operator|new
name|SearchServiceImpl
argument_list|(
name|userRepos
argument_list|,
name|crossRepoSearch
argument_list|,
name|archivaDAO
argument_list|,
name|repoBrowsing
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|ArtifactDAO
operator|.
name|class
argument_list|)
expr_stmt|;
name|artifactDAO
operator|=
operator|(
name|ArtifactDAO
operator|)
name|artifactDAOControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
block|}
comment|/*      * quick/general text search which returns a list of artifacts      * query for an artifact based on a checksum      * query for all available versions of an artifact, sorted in version significance order      * query for all available versions of an artifact since a given date      * query for an artifact's direct dependencies      * query for an artifact's dependency tree (as with mvn dependency:tree - no duplicates should be included)      * query for all artifacts that depend on a given artifact      */
comment|/* quick search */
specifier|public
name|void
name|testQuickSearchArtifactBytecodeSearch
parameter_list|()
throws|throws
name|Exception
block|{
comment|// 1. check whether bytecode search or ordinary search
comment|// 2. get observable repos
comment|// 3. convert results to a list of Artifact objects
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|Date
name|whenGathered
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|ArchivaArtifact
name|artifact
init|=
operator|new
name|ArchivaArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
literal|"1.0"
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|)
decl_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setWhenGathered
argument_list|(
name|whenGathered
argument_list|)
expr_stmt|;
name|FileContentRecord
name|record
init|=
operator|new
name|FileContentRecord
argument_list|()
decl_stmt|;
name|record
operator|.
name|setRepositoryId
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|record
operator|.
name|setArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|record
operator|.
name|setContents
argument_list|(
literal|"org.apache.archiva:archiva-test:1.0:jar org.apache.archiva.test.MyClassName"
argument_list|)
expr_stmt|;
name|record
operator|.
name|setFilename
argument_list|(
literal|"archiva-test-1.0.jar"
argument_list|)
expr_stmt|;
name|results
operator|.
name|addHit
argument_list|(
name|record
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|SearchResultLimits
operator|.
name|ALL_PAGES
argument_list|)
decl_stmt|;
name|crossRepoSearchControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|crossRepoSearch
operator|.
name|searchForBytecode
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
literal|"MyClassName"
argument_list|,
name|limits
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|archivaDAOControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaDAO
operator|.
name|getArtifactDAO
argument_list|()
argument_list|,
name|artifactDAO
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|.
name|expectAndReturn
argument_list|(
name|artifactDAO
operator|.
name|getArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
literal|"1.0"
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|)
argument_list|,
name|artifact
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|crossRepoSearchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|archivaDAOControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|artifactDAOControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|artifacts
init|=
name|searchService
operator|.
name|quickSearch
argument_list|(
literal|"bytecode:MyClassName"
argument_list|)
decl_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|crossRepoSearchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|archivaDAOControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|artifactDAOControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testQuickSearchArtifactRegularSearch
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|Date
name|whenGathered
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|ArchivaArtifact
name|artifact
init|=
operator|new
name|ArchivaArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
literal|"1.0"
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|)
decl_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setWhenGathered
argument_list|(
name|whenGathered
argument_list|)
expr_stmt|;
name|FileContentRecord
name|record
init|=
operator|new
name|FileContentRecord
argument_list|()
decl_stmt|;
name|record
operator|.
name|setRepositoryId
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|record
operator|.
name|setArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|record
operator|.
name|setContents
argument_list|(
literal|"org.apache.archiva:archiva-test:1.0:jar"
argument_list|)
expr_stmt|;
name|record
operator|.
name|setFilename
argument_list|(
literal|"archiva-test-1.0.jar"
argument_list|)
expr_stmt|;
name|results
operator|.
name|addHit
argument_list|(
name|record
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|SearchResultLimits
operator|.
name|ALL_PAGES
argument_list|)
decl_stmt|;
name|crossRepoSearchControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|crossRepoSearch
operator|.
name|searchForTerm
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
literal|"archiva"
argument_list|,
name|limits
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|archivaDAOControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaDAO
operator|.
name|getArtifactDAO
argument_list|()
argument_list|,
name|artifactDAO
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|.
name|expectAndReturn
argument_list|(
name|artifactDAO
operator|.
name|getArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
literal|"1.0"
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|)
argument_list|,
name|artifact
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|crossRepoSearchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|archivaDAOControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|artifactDAOControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|artifacts
init|=
name|searchService
operator|.
name|quickSearch
argument_list|(
literal|"archiva"
argument_list|)
decl_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|crossRepoSearchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|archivaDAOControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|artifactDAOControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/* query artifact by checksum */
specifier|public
name|void
name|testGetArtifactByChecksum
parameter_list|()
throws|throws
name|Exception
block|{
name|Date
name|whenGathered
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|ArtifactsByChecksumConstraint
name|constraint
init|=
operator|new
name|ArtifactsByChecksumConstraint
argument_list|(
literal|"a1b2c3aksjhdasfkdasasd"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ArchivaArtifact
argument_list|>
name|artifacts
init|=
operator|new
name|ArrayList
argument_list|<
name|ArchivaArtifact
argument_list|>
argument_list|()
decl_stmt|;
name|ArchivaArtifact
name|artifact
init|=
operator|new
name|ArchivaArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
literal|"1.0"
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|)
decl_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setWhenGathered
argument_list|(
name|whenGathered
argument_list|)
expr_stmt|;
name|artifacts
operator|.
name|add
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|archivaDAOControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaDAO
operator|.
name|getArtifactDAO
argument_list|()
argument_list|,
name|artifactDAO
argument_list|)
expr_stmt|;
name|artifactDAO
operator|.
name|queryArtifacts
argument_list|(
name|constraint
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|.
name|setMatcher
argument_list|(
name|MockControl
operator|.
name|ALWAYS_MATCHER
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|.
name|setReturnValue
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|archivaDAOControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|artifactDAOControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|results
init|=
name|searchService
operator|.
name|getArtifactByChecksum
argument_list|(
literal|"a1b2c3aksjhdasfkdasasd"
argument_list|)
decl_stmt|;
name|archivaDAOControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|artifactDAOControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|results
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/* query artifact versions */
specifier|public
name|void
name|testGetArtifactVersionsArtifactExists
parameter_list|()
throws|throws
name|Exception
block|{
name|Date
name|whenGathered
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|versions
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.1-beta-1"
argument_list|)
expr_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.1-beta-2"
argument_list|)
expr_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.1"
argument_list|)
expr_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.2.1-SNAPSHOT"
argument_list|)
expr_stmt|;
name|BrowsingResults
name|results
init|=
operator|new
name|BrowsingResults
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|)
decl_stmt|;
name|results
operator|.
name|setSelectedRepositoryIds
argument_list|(
name|observableRepoIds
argument_list|)
expr_stmt|;
name|results
operator|.
name|setVersions
argument_list|(
name|versions
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ArchivaArtifact
argument_list|>
name|archivaArtifacts
init|=
operator|new
name|ArrayList
argument_list|<
name|ArchivaArtifact
argument_list|>
argument_list|()
decl_stmt|;
name|ArchivaArtifact
name|archivaArtifact
init|=
operator|new
name|ArchivaArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|)
decl_stmt|;
name|archivaArtifact
operator|.
name|getModel
argument_list|()
operator|.
name|setWhenGathered
argument_list|(
name|whenGathered
argument_list|)
expr_stmt|;
name|archivaArtifacts
operator|.
name|add
argument_list|(
name|archivaArtifact
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|=
operator|new
name|ArchivaArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|.
name|getModel
argument_list|()
operator|.
name|setWhenGathered
argument_list|(
name|whenGathered
argument_list|)
expr_stmt|;
name|archivaArtifacts
operator|.
name|add
argument_list|(
name|archivaArtifact
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|=
operator|new
name|ArchivaArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|.
name|getModel
argument_list|()
operator|.
name|setWhenGathered
argument_list|(
name|whenGathered
argument_list|)
expr_stmt|;
name|archivaArtifacts
operator|.
name|add
argument_list|(
name|archivaArtifact
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|=
operator|new
name|ArchivaArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|.
name|getModel
argument_list|()
operator|.
name|setWhenGathered
argument_list|(
name|whenGathered
argument_list|)
expr_stmt|;
name|archivaArtifacts
operator|.
name|add
argument_list|(
name|archivaArtifact
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|=
operator|new
name|ArchivaArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|.
name|getModel
argument_list|()
operator|.
name|setWhenGathered
argument_list|(
name|whenGathered
argument_list|)
expr_stmt|;
name|archivaArtifacts
operator|.
name|add
argument_list|(
name|archivaArtifact
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|=
operator|new
name|ArchivaArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|.
name|getModel
argument_list|()
operator|.
name|setWhenGathered
argument_list|(
name|whenGathered
argument_list|)
expr_stmt|;
name|archivaArtifacts
operator|.
name|add
argument_list|(
name|archivaArtifact
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|expectAndReturn
argument_list|(
name|repoBrowsing
operator|.
name|selectArtifactId
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|archivaDAOControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaDAO
operator|.
name|getArtifactDAO
argument_list|()
argument_list|,
name|artifactDAO
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|artifactDAO
operator|.
name|getArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|)
argument_list|,
name|archivaArtifacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|artifactDAO
operator|.
name|getArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|)
argument_list|,
name|archivaArtifacts
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|artifactDAO
operator|.
name|getArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|)
argument_list|,
name|archivaArtifacts
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|artifactDAO
operator|.
name|getArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|)
argument_list|,
name|archivaArtifacts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|artifactDAO
operator|.
name|getArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|)
argument_list|,
name|archivaArtifacts
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|artifactDAO
operator|.
name|getArtifact
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|)
argument_list|,
name|archivaArtifacts
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoBrowsingControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|archivaDAOControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|artifactDAOControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|artifacts
init|=
name|searchService
operator|.
name|getArtifactVersions
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|)
decl_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoBrowsingControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|archivaDAOControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|artifactDAOControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/* query artifact versions since a given date */
specifier|public
name|void
name|testGetArtifactVersionsByDateArtifactExists
parameter_list|()
throws|throws
name|Exception
block|{
block|}
specifier|public
name|void
name|testGetArtifactVersionsByDateArtifactDoesNotExist
parameter_list|()
throws|throws
name|Exception
block|{
block|}
comment|/* query artifact dependencies */
specifier|public
name|void
name|testGetDependenciesArtifactExists
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|ArchivaProjectModel
name|model
init|=
operator|new
name|ArchivaProjectModel
argument_list|()
decl_stmt|;
name|model
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.archiva"
argument_list|)
expr_stmt|;
name|model
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-test"
argument_list|)
expr_stmt|;
name|model
operator|.
name|setVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|Dependency
name|dependency
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|Dependency
argument_list|()
decl_stmt|;
name|dependency
operator|.
name|setGroupId
argument_list|(
literal|"commons-logging"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setArtifactId
argument_list|(
literal|"commons-logging"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setVersion
argument_list|(
literal|"2.0"
argument_list|)
expr_stmt|;
name|model
operator|.
name|addDependency
argument_list|(
name|dependency
argument_list|)
expr_stmt|;
name|dependency
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|Dependency
argument_list|()
expr_stmt|;
name|dependency
operator|.
name|setGroupId
argument_list|(
literal|"junit"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setArtifactId
argument_list|(
literal|"junit"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setVersion
argument_list|(
literal|"2.4"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setScope
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|model
operator|.
name|addDependency
argument_list|(
name|dependency
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|expectAndReturn
argument_list|(
name|repoBrowsing
operator|.
name|selectVersion
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|model
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Dependency
argument_list|>
name|dependencies
init|=
name|searchService
operator|.
name|getDependencies
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|repoBrowsingControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|dependencies
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|dependencies
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetDependenciesArtifactDoesNotExist
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|expectAndThrow
argument_list|(
name|repoBrowsing
operator|.
name|selectVersion
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
operator|new
name|ObjectNotFoundException
argument_list|(
literal|"Artifact does not exist."
argument_list|)
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoBrowsingControl
operator|.
name|replay
argument_list|()
expr_stmt|;
try|try
block|{
name|List
argument_list|<
name|Dependency
argument_list|>
name|dependencies
init|=
name|searchService
operator|.
name|getDependencies
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|fail
argument_list|(
literal|"An exception should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Artifact does not exist."
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoBrowsingControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
comment|/* get dependency tree */
specifier|public
name|void
name|testGetDependencyTreeArtifactExists
parameter_list|()
throws|throws
name|Exception
block|{
block|}
specifier|public
name|void
name|testGetDependencyTreeArtifactDoesNotExist
parameter_list|()
throws|throws
name|Exception
block|{
block|}
comment|/* get dependees */
specifier|public
name|void
name|testGetDependees
parameter_list|()
throws|throws
name|Exception
block|{
name|Date
name|date
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|List
name|dependeeModels
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|ArchivaProjectModel
name|dependeeModel
init|=
operator|new
name|ArchivaProjectModel
argument_list|()
decl_stmt|;
name|dependeeModel
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.archiva"
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-dependee-one"
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setWhenIndexed
argument_list|(
name|date
argument_list|)
expr_stmt|;
name|dependeeModels
operator|.
name|add
argument_list|(
name|dependeeModel
argument_list|)
expr_stmt|;
name|dependeeModel
operator|=
operator|new
name|ArchivaProjectModel
argument_list|()
expr_stmt|;
name|dependeeModel
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.archiva"
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-dependee-two"
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setWhenIndexed
argument_list|(
name|date
argument_list|)
expr_stmt|;
name|dependeeModels
operator|.
name|add
argument_list|(
name|dependeeModel
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|expectAndReturn
argument_list|(
name|repoBrowsing
operator|.
name|getUsedBy
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|dependeeModels
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|dependees
init|=
name|searchService
operator|.
name|getDependees
argument_list|(
literal|"org.apache.archiva"
argument_list|,
literal|"archiva-test"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|repoBrowsingControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|dependees
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|dependees
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*public void testGetDependeesArtifactDoesNotExist()         throws Exception     {         Date date = new Date();         List<String> observableRepoIds = new ArrayList<String>();         observableRepoIds.add( "repo1.mirror" );         observableRepoIds.add( "public.releases" );                  List dependeeModels = new ArrayList();         ArchivaProjectModel dependeeModel = new ArchivaProjectModel();         dependeeModel.setGroupId( "org.apache.archiva" );         dependeeModel.setArtifactId( "archiva-dependee-one" );         dependeeModel.setVersion( "1.0" );         dependeeModel.setWhenIndexed( date );         dependeeModels.add( dependeeModel );                  dependeeModel = new ArchivaProjectModel();         dependeeModel.setGroupId( "org.apache.archiva" );         dependeeModel.setArtifactId( "archiva-dependee-two" );         dependeeModel.setVersion( "1.0" );         dependeeModel.setWhenIndexed( date );         dependeeModels.add( dependeeModel );                  userReposControl.expectAndReturn( userRepos.getObservableRepositories(), observableRepoIds );         repoBrowsingControl.expectAndReturn( repoBrowsing.getUsedBy( "", observableRepoIds, "org.apache.archiva", "archiva-test", "1.0" ), dependeeModels );                  repoBrowsingControl.replay();          userReposControl.replay();          try         {             List<Artifact> dependees = searchService.getDependees( "org.apache.archiva", "archiva-test", "1.0" );             fail( "An exception should have been thrown." );         }         catch ( Exception e )         {             assertEquals( "Artifact does not exist." )         }                  repoBrowsingControl.verify();         userReposControl.verify();                  assertNotNull( dependees );         assertEquals( 2, dependees.size() );     }*/
block|}
end_class

end_unit

