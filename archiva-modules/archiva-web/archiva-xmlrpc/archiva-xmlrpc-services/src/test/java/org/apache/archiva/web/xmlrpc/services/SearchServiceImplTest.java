begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|xmlrpc
operator|.
name|services
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|RepositorySearch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|SearchResultHit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|SearchResultLimits
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|SearchResults
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|util
operator|.
name|SearchUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ArtifactMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ProjectVersionMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ProjectVersionReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|MetadataRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|MetadataResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|storage
operator|.
name|maven2
operator|.
name|MavenArtifactFacet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|storage
operator|.
name|maven2
operator|.
name|MavenProjectFacet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|xmlrpc
operator|.
name|api
operator|.
name|SearchService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|xmlrpc
operator|.
name|api
operator|.
name|beans
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|xmlrpc
operator|.
name|api
operator|.
name|beans
operator|.
name|Dependency
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|xmlrpc
operator|.
name|security
operator|.
name|XmlRpcUserRepositories
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|spring
operator|.
name|PlexusInSpringTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|MockControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|MockClassControl
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * SearchServiceImplTest  *  * @version $Id: SearchServiceImplTest.java  */
end_comment

begin_class
specifier|public
class|class
name|SearchServiceImplTest
extends|extends
name|PlexusInSpringTestCase
block|{
specifier|private
name|SearchService
name|searchService
decl_stmt|;
specifier|private
name|MockControl
name|userReposControl
decl_stmt|;
specifier|private
name|XmlRpcUserRepositories
name|userRepos
decl_stmt|;
specifier|private
name|MockControl
name|searchControl
decl_stmt|;
specifier|private
name|RepositorySearch
name|search
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ARCHIVA_TEST_ARTIFACT_ID
init|=
literal|"archiva-xmlrpc-test"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ARCHIVA_TEST_GROUP_ID
init|=
literal|"org.apache.archiva"
decl_stmt|;
specifier|private
name|MockControl
name|metadataResolverControl
decl_stmt|;
specifier|private
name|MetadataResolver
name|metadataResolver
decl_stmt|;
specifier|private
name|MockControl
name|metadataRepositoryControl
decl_stmt|;
specifier|private
name|MetadataRepository
name|metadataRepository
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CHECKSUM
init|=
literal|"a1b2c3aksjhdasfkdasasd"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_REPO
init|=
literal|"test-repo"
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|userReposControl
operator|=
name|MockClassControl
operator|.
name|createControl
argument_list|(
name|XmlRpcUserRepositories
operator|.
name|class
argument_list|)
expr_stmt|;
name|userRepos
operator|=
operator|(
name|XmlRpcUserRepositories
operator|)
name|userReposControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|searchControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|RepositorySearch
operator|.
name|class
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|setDefaultMatcher
argument_list|(
name|MockControl
operator|.
name|ALWAYS_MATCHER
argument_list|)
expr_stmt|;
name|search
operator|=
operator|(
name|RepositorySearch
operator|)
name|searchControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|metadataResolverControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|MetadataResolver
operator|.
name|class
argument_list|)
expr_stmt|;
name|metadataResolver
operator|=
operator|(
name|MetadataResolver
operator|)
name|metadataResolverControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|metadataRepositoryControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|MetadataRepository
operator|.
name|class
argument_list|)
expr_stmt|;
name|metadataRepository
operator|=
operator|(
name|MetadataRepository
operator|)
name|metadataRepositoryControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|searchService
operator|=
operator|new
name|SearchServiceImpl
argument_list|(
name|userRepos
argument_list|,
name|metadataResolver
argument_list|,
name|metadataRepository
argument_list|,
name|search
argument_list|)
expr_stmt|;
block|}
comment|// MRM-1230
specifier|public
name|void
name|testQuickSearchModelPackagingIsUsed
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|versions
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|SearchResultHit
name|resultHit
init|=
operator|new
name|SearchResultHit
argument_list|()
decl_stmt|;
name|resultHit
operator|.
name|setGroupId
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|resultHit
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-webapp"
argument_list|)
expr_stmt|;
name|resultHit
operator|.
name|setVersions
argument_list|(
name|versions
argument_list|)
expr_stmt|;
name|resultHit
operator|.
name|setRepositoryId
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|results
operator|.
name|addHit
argument_list|(
name|SearchUtil
operator|.
name|getHitId
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
literal|"archiva-webapp"
argument_list|)
argument_list|,
name|resultHit
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|SearchResultLimits
operator|.
name|ALL_PAGES
argument_list|)
decl_stmt|;
name|searchControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
literal|"archiva"
argument_list|,
name|limits
argument_list|,
literal|null
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|ProjectVersionMetadata
name|model
init|=
operator|new
name|ProjectVersionMetadata
argument_list|()
decl_stmt|;
name|model
operator|.
name|setId
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|MavenProjectFacet
name|facet
init|=
operator|new
name|MavenProjectFacet
argument_list|()
decl_stmt|;
name|facet
operator|.
name|setPackaging
argument_list|(
literal|"war"
argument_list|)
expr_stmt|;
name|model
operator|.
name|addFacet
argument_list|(
name|facet
argument_list|)
expr_stmt|;
name|metadataResolverControl
operator|.
name|expectAndReturn
argument_list|(
name|metadataResolver
operator|.
name|getProjectVersion
argument_list|(
literal|"repo1.mirror"
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
literal|"archiva-webapp"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|model
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|metadataResolverControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|metadataRepositoryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|artifacts
init|=
name|searchService
operator|.
name|quickSearch
argument_list|(
literal|"archiva"
argument_list|)
decl_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|metadataResolverControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|metadataRepositoryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|artifacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|artifact
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"archiva-webapp"
argument_list|,
name|artifact
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.0"
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"war"
argument_list|,
name|artifact
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Repository should not be null!"
argument_list|,
name|artifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"repo1.mirror"
argument_list|,
name|artifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testQuickSearchDefaultPackagingIsUsed
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|versions
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|SearchResultHit
name|resultHit
init|=
operator|new
name|SearchResultHit
argument_list|()
decl_stmt|;
name|resultHit
operator|.
name|setRepositoryId
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|resultHit
operator|.
name|setGroupId
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|resultHit
operator|.
name|setArtifactId
argument_list|(
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|)
expr_stmt|;
name|resultHit
operator|.
name|setVersions
argument_list|(
name|versions
argument_list|)
expr_stmt|;
name|results
operator|.
name|addHit
argument_list|(
name|SearchUtil
operator|.
name|getHitId
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|)
argument_list|,
name|resultHit
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|SearchResultLimits
operator|.
name|ALL_PAGES
argument_list|)
decl_stmt|;
name|searchControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
literal|"archiva"
argument_list|,
name|limits
argument_list|,
literal|null
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|metadataResolverControl
operator|.
name|expectAndReturn
argument_list|(
name|metadataResolver
operator|.
name|getProjectVersion
argument_list|(
literal|"repo1.mirror"
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|ProjectVersionMetadata
name|model
init|=
operator|new
name|ProjectVersionMetadata
argument_list|()
decl_stmt|;
name|model
operator|.
name|setId
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|metadataResolverControl
operator|.
name|expectAndReturn
argument_list|(
name|metadataResolver
operator|.
name|getProjectVersion
argument_list|(
literal|"public.releases"
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|model
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|metadataResolverControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|metadataRepositoryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|artifacts
init|=
name|searchService
operator|.
name|quickSearch
argument_list|(
literal|"archiva"
argument_list|)
decl_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|metadataResolverControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|metadataRepositoryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|artifacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|artifact
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
name|artifact
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.0"
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|artifact
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"public.releases"
argument_list|,
name|artifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testQuickSearchArtifactRegularSearch
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|versions
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|SearchResultHit
name|resultHit
init|=
operator|new
name|SearchResultHit
argument_list|()
decl_stmt|;
name|resultHit
operator|.
name|setGroupId
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|resultHit
operator|.
name|setArtifactId
argument_list|(
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|)
expr_stmt|;
name|resultHit
operator|.
name|setVersions
argument_list|(
name|versions
argument_list|)
expr_stmt|;
name|resultHit
operator|.
name|setRepositoryId
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|results
operator|.
name|addHit
argument_list|(
name|SearchUtil
operator|.
name|getHitId
argument_list|(
name|resultHit
operator|.
name|getGroupId
argument_list|()
argument_list|,
name|resultHit
operator|.
name|getArtifactId
argument_list|()
argument_list|)
argument_list|,
name|resultHit
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|SearchResultLimits
operator|.
name|ALL_PAGES
argument_list|)
decl_stmt|;
name|searchControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
literal|"archiva"
argument_list|,
name|limits
argument_list|,
literal|null
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|ProjectVersionMetadata
name|model
init|=
operator|new
name|ProjectVersionMetadata
argument_list|()
decl_stmt|;
name|model
operator|.
name|setId
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|MavenProjectFacet
name|facet
init|=
operator|new
name|MavenProjectFacet
argument_list|()
decl_stmt|;
name|facet
operator|.
name|setPackaging
argument_list|(
literal|"jar"
argument_list|)
expr_stmt|;
name|model
operator|.
name|addFacet
argument_list|(
name|facet
argument_list|)
expr_stmt|;
name|metadataResolverControl
operator|.
name|expectAndReturn
argument_list|(
name|metadataResolver
operator|.
name|getProjectVersion
argument_list|(
literal|"repo1.mirror"
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|model
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|metadataRepositoryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|metadataResolverControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|artifacts
init|=
name|searchService
operator|.
name|quickSearch
argument_list|(
literal|"archiva"
argument_list|)
decl_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|metadataRepositoryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|metadataResolverControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|artifacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|artifact
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
name|artifact
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.0"
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|artifact
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Repository should not be null!"
argument_list|,
name|artifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"repo1.mirror"
argument_list|,
name|artifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testQuickSearchNoResults
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|SearchResultLimits
operator|.
name|ALL_PAGES
argument_list|)
decl_stmt|;
name|searchControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
literal|"non-existent"
argument_list|,
name|limits
argument_list|,
literal|null
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|artifacts
init|=
name|searchService
operator|.
name|quickSearch
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetArtifactByChecksum
parameter_list|()
throws|throws
name|Exception
block|{
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|TEST_REPO
argument_list|)
argument_list|)
expr_stmt|;
name|Date
name|whenGathered
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|ArtifactMetadata
name|artifact
init|=
name|createArtifact
argument_list|(
name|whenGathered
argument_list|)
decl_stmt|;
name|metadataRepositoryControl
operator|.
name|expectAndReturn
argument_list|(
name|metadataRepository
operator|.
name|getArtifactsByChecksum
argument_list|(
name|TEST_REPO
argument_list|,
name|CHECKSUM
argument_list|)
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|artifact
argument_list|)
argument_list|)
expr_stmt|;
name|metadataRepositoryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|results
init|=
name|searchService
operator|.
name|getArtifactByChecksum
argument_list|(
name|CHECKSUM
argument_list|)
decl_stmt|;
name|metadataRepositoryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|results
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Artifact
name|result
init|=
name|results
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|result
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
name|result
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.0"
argument_list|,
name|result
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|result
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_REPO
argument_list|,
name|result
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetArtifactVersionsArtifactExists
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|metadataResolverControl
operator|.
name|expectAndReturn
argument_list|(
name|metadataResolver
operator|.
name|getProjectVersions
argument_list|(
literal|"repo1.mirror"
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1.0"
argument_list|,
literal|"1.1-beta-2"
argument_list|,
literal|"1.2"
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolverControl
operator|.
name|expectAndReturn
argument_list|(
name|metadataResolver
operator|.
name|getProjectVersions
argument_list|(
literal|"public.releases"
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"1.1-beta-1"
argument_list|,
literal|"1.1"
argument_list|,
literal|"1.2.1-SNAPSHOT"
argument_list|)
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|metadataResolverControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|artifacts
init|=
name|searchService
operator|.
name|getArtifactVersions
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|)
decl_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|metadataResolverControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Artifact
argument_list|(
literal|"repo1.mirror"
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|,
literal|"pom"
argument_list|)
argument_list|,
name|artifacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Artifact
argument_list|(
literal|"public.releases"
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.1-beta-1"
argument_list|,
literal|"pom"
argument_list|)
argument_list|,
name|artifacts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Artifact
argument_list|(
literal|"repo1.mirror"
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.1-beta-2"
argument_list|,
literal|"pom"
argument_list|)
argument_list|,
name|artifacts
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Artifact
argument_list|(
literal|"public.releases"
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.1"
argument_list|,
literal|"pom"
argument_list|)
argument_list|,
name|artifacts
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Artifact
argument_list|(
literal|"repo1.mirror"
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.2"
argument_list|,
literal|"pom"
argument_list|)
argument_list|,
name|artifacts
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Artifact
argument_list|(
literal|"public.releases"
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.2.1-SNAPSHOT"
argument_list|,
literal|"pom"
argument_list|)
argument_list|,
name|artifacts
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetArtifactVersionsByDateArtifactExists
parameter_list|()
throws|throws
name|Exception
block|{
comment|// TODO
block|}
specifier|public
name|void
name|testGetArtifactVersionsByDateArtifactDoesNotExist
parameter_list|()
throws|throws
name|Exception
block|{
comment|// TODO
block|}
specifier|public
name|void
name|testGetDependenciesArtifactExists
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|repoId
init|=
literal|"repo1.mirror"
decl_stmt|;
name|ProjectVersionMetadata
name|model
init|=
operator|new
name|ProjectVersionMetadata
argument_list|()
decl_stmt|;
name|model
operator|.
name|setId
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|Dependency
name|dependency
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|Dependency
argument_list|()
decl_stmt|;
name|dependency
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.commons"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setArtifactId
argument_list|(
literal|"commons-logging"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setVersion
argument_list|(
literal|"2.0"
argument_list|)
expr_stmt|;
name|model
operator|.
name|addDependency
argument_list|(
name|dependency
argument_list|)
expr_stmt|;
name|dependency
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|Dependency
argument_list|()
expr_stmt|;
name|dependency
operator|.
name|setGroupId
argument_list|(
literal|"junit"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setArtifactId
argument_list|(
literal|"junit"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setVersion
argument_list|(
literal|"2.4"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setScope
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|model
operator|.
name|addDependency
argument_list|(
name|dependency
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|repoId
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolverControl
operator|.
name|expectAndReturn
argument_list|(
name|metadataResolver
operator|.
name|getProjectVersion
argument_list|(
name|repoId
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|model
argument_list|)
expr_stmt|;
name|metadataResolverControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Dependency
argument_list|>
name|dependencies
init|=
name|searchService
operator|.
name|getDependencies
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|metadataResolverControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|dependencies
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|dependencies
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Dependency
argument_list|(
literal|"org.apache.commons"
argument_list|,
literal|"commons-logging"
argument_list|,
literal|"2.0"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|dependencies
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Dependency
argument_list|(
literal|"junit"
argument_list|,
literal|"junit"
argument_list|,
literal|"2.4"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|"test"
argument_list|)
argument_list|,
name|dependencies
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetDependenciesArtifactDoesNotExist
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|repoId
init|=
literal|"repo1.mirror"
decl_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|repoId
argument_list|)
argument_list|)
expr_stmt|;
name|metadataResolverControl
operator|.
name|expectAndReturn
argument_list|(
name|metadataResolver
operator|.
name|getProjectVersion
argument_list|(
name|repoId
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|metadataResolverControl
operator|.
name|replay
argument_list|()
expr_stmt|;
try|try
block|{
name|searchService
operator|.
name|getDependencies
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"An exception should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Artifact does not exist."
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|metadataResolverControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testGetDependencyTreeArtifactExists
parameter_list|()
throws|throws
name|Exception
block|{
comment|// TODO
block|}
specifier|public
name|void
name|testGetDependencyTreeArtifactDoesNotExist
parameter_list|()
throws|throws
name|Exception
block|{
comment|// TODO
block|}
specifier|public
name|void
name|testGetDependees
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|String
name|repoId
init|=
literal|"repo1.mirror"
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
name|repoId
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ProjectVersionReference
argument_list|>
name|dependeeModels
init|=
operator|new
name|ArrayList
argument_list|<
name|ProjectVersionReference
argument_list|>
argument_list|()
decl_stmt|;
name|ProjectVersionReference
name|dependeeModel
init|=
operator|new
name|ProjectVersionReference
argument_list|()
decl_stmt|;
name|dependeeModel
operator|.
name|setNamespace
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setProjectId
argument_list|(
literal|"archiva-dependee-one"
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setProjectVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|dependeeModels
operator|.
name|add
argument_list|(
name|dependeeModel
argument_list|)
expr_stmt|;
name|dependeeModel
operator|=
operator|new
name|ProjectVersionReference
argument_list|()
expr_stmt|;
name|dependeeModel
operator|.
name|setNamespace
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setProjectId
argument_list|(
literal|"archiva-dependee-two"
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setProjectVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|dependeeModels
operator|.
name|add
argument_list|(
name|dependeeModel
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|metadataResolverControl
operator|.
name|expectAndReturn
argument_list|(
name|metadataResolver
operator|.
name|getProjectReferences
argument_list|(
name|repoId
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|dependeeModels
argument_list|)
expr_stmt|;
name|metadataResolverControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|dependees
init|=
name|searchService
operator|.
name|getDependees
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|metadataResolverControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|dependees
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|dependees
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Artifact
argument_list|(
name|repoId
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
literal|"archiva-dependee-one"
argument_list|,
literal|"1.0"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|dependees
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Artifact
argument_list|(
name|repoId
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
literal|"archiva-dependee-two"
argument_list|,
literal|"1.0"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|dependees
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetDependeesArtifactDoesNotExist
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
comment|// no longer differentiating between a project not being present and a project that is present but with
comment|// no references. If it is later determined to be needed, we will need to modify the metadata content repository
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|metadataResolverControl
operator|.
name|expectAndReturn
argument_list|(
name|metadataResolver
operator|.
name|getProjectReferences
argument_list|(
literal|"repo1.mirror"
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|Collections
operator|.
expr|<
name|ProjectVersionReference
operator|>
name|emptyList
argument_list|()
argument_list|)
expr_stmt|;
name|metadataResolverControl
operator|.
name|expectAndReturn
argument_list|(
name|metadataResolver
operator|.
name|getProjectReferences
argument_list|(
literal|"public.releases"
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|Collections
operator|.
expr|<
name|ProjectVersionReference
operator|>
name|emptyList
argument_list|()
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|metadataResolverControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|searchService
operator|.
name|getDependees
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ArtifactMetadata
name|createArtifact
parameter_list|(
name|Date
name|whenGathered
parameter_list|)
block|{
name|String
name|version
init|=
literal|"1.0"
decl_stmt|;
name|ArtifactMetadata
name|artifactMetadata
init|=
operator|new
name|ArtifactMetadata
argument_list|()
decl_stmt|;
name|artifactMetadata
operator|.
name|setVersion
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|artifactMetadata
operator|.
name|setId
argument_list|(
name|ARCHIVA_TEST_ARTIFACT_ID
operator|+
literal|"-"
operator|+
name|version
operator|+
literal|".jar"
argument_list|)
expr_stmt|;
name|artifactMetadata
operator|.
name|setProject
argument_list|(
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|)
expr_stmt|;
name|artifactMetadata
operator|.
name|setNamespace
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|artifactMetadata
operator|.
name|setMd5
argument_list|(
name|CHECKSUM
argument_list|)
expr_stmt|;
name|artifactMetadata
operator|.
name|setWhenGathered
argument_list|(
name|whenGathered
argument_list|)
expr_stmt|;
name|artifactMetadata
operator|.
name|setRepositoryId
argument_list|(
name|TEST_REPO
argument_list|)
expr_stmt|;
name|MavenArtifactFacet
name|facet
init|=
operator|new
name|MavenArtifactFacet
argument_list|()
decl_stmt|;
name|facet
operator|.
name|setType
argument_list|(
literal|"jar"
argument_list|)
expr_stmt|;
name|artifactMetadata
operator|.
name|addFacet
argument_list|(
name|facet
argument_list|)
expr_stmt|;
return|return
name|artifactMetadata
return|;
block|}
block|}
end_class

end_unit

