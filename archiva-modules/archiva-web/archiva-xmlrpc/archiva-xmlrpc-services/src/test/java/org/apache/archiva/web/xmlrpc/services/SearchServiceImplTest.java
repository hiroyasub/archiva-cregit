begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|xmlrpc
operator|.
name|services
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|RepositorySearch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|SearchResultHit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|SearchResultLimits
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
operator|.
name|SearchResults
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|util
operator|.
name|SearchUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|xmlrpc
operator|.
name|api
operator|.
name|SearchService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|xmlrpc
operator|.
name|api
operator|.
name|beans
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|xmlrpc
operator|.
name|api
operator|.
name|beans
operator|.
name|Dependency
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|web
operator|.
name|xmlrpc
operator|.
name|security
operator|.
name|XmlRpcUserRepositories
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ArchivaDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ArtifactDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ObjectNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|browsing
operator|.
name|BrowsingResults
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|browsing
operator|.
name|RepositoryBrowsing
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|constraints
operator|.
name|ArtifactsByChecksumConstraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|constraints
operator|.
name|UniqueVersionConstraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaArtifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaProjectModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|spring
operator|.
name|PlexusInSpringTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|MockControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|MockClassControl
import|;
end_import

begin_comment
comment|/**  * SearchServiceImplTest  *  * @version $Id: SearchServiceImplTest.java  */
end_comment

begin_class
specifier|public
class|class
name|SearchServiceImplTest
extends|extends
name|PlexusInSpringTestCase
block|{
specifier|private
name|SearchService
name|searchService
decl_stmt|;
specifier|private
name|MockControl
name|userReposControl
decl_stmt|;
specifier|private
name|XmlRpcUserRepositories
name|userRepos
decl_stmt|;
specifier|private
name|MockControl
name|searchControl
decl_stmt|;
specifier|private
name|RepositorySearch
name|search
decl_stmt|;
specifier|private
name|MockControl
name|archivaDAOControl
decl_stmt|;
specifier|private
name|ArchivaDAO
name|archivaDAO
decl_stmt|;
specifier|private
name|MockControl
name|artifactDAOControl
decl_stmt|;
specifier|private
name|ArtifactDAO
name|artifactDAO
decl_stmt|;
specifier|private
name|MockControl
name|repoBrowsingControl
decl_stmt|;
specifier|private
name|RepositoryBrowsing
name|repoBrowsing
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ARCHIVA_TEST_ARTIFACT_ID
init|=
literal|"archiva-xmlrpc-test"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ARCHIVA_TEST_GROUP_ID
init|=
literal|"org.apache.archiva"
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|userReposControl
operator|=
name|MockClassControl
operator|.
name|createControl
argument_list|(
name|XmlRpcUserRepositories
operator|.
name|class
argument_list|)
expr_stmt|;
name|userRepos
operator|=
operator|(
name|XmlRpcUserRepositories
operator|)
name|userReposControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|archivaDAOControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|ArchivaDAO
operator|.
name|class
argument_list|)
expr_stmt|;
name|archivaDAOControl
operator|.
name|setDefaultMatcher
argument_list|(
name|MockControl
operator|.
name|ALWAYS_MATCHER
argument_list|)
expr_stmt|;
name|archivaDAO
operator|=
operator|(
name|ArchivaDAO
operator|)
name|archivaDAOControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|repoBrowsingControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|RepositoryBrowsing
operator|.
name|class
argument_list|)
expr_stmt|;
name|repoBrowsing
operator|=
operator|(
name|RepositoryBrowsing
operator|)
name|repoBrowsingControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|searchControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|RepositorySearch
operator|.
name|class
argument_list|)
expr_stmt|;
name|searchControl
operator|.
name|setDefaultMatcher
argument_list|(
name|MockControl
operator|.
name|ALWAYS_MATCHER
argument_list|)
expr_stmt|;
name|search
operator|=
operator|(
name|RepositorySearch
operator|)
name|searchControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|searchService
operator|=
operator|new
name|SearchServiceImpl
argument_list|(
name|userRepos
argument_list|,
name|archivaDAO
argument_list|,
name|repoBrowsing
argument_list|,
name|search
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|ArtifactDAO
operator|.
name|class
argument_list|)
expr_stmt|;
name|artifactDAO
operator|=
operator|(
name|ArtifactDAO
operator|)
name|artifactDAOControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
block|}
comment|// MRM-1230
specifier|public
name|void
name|testQuickSearchModelPackagingIsUsed
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|versions
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|SearchResultHit
name|resultHit
init|=
operator|new
name|SearchResultHit
argument_list|()
decl_stmt|;
name|resultHit
operator|.
name|setGroupId
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|resultHit
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-webapp"
argument_list|)
expr_stmt|;
name|resultHit
operator|.
name|setVersions
argument_list|(
name|versions
argument_list|)
expr_stmt|;
name|resultHit
operator|.
name|setRepositoryId
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|results
operator|.
name|addHit
argument_list|(
name|SearchUtil
operator|.
name|getHitId
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
literal|"archiva-webapp"
argument_list|)
argument_list|,
name|resultHit
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|SearchResultLimits
operator|.
name|ALL_PAGES
argument_list|)
decl_stmt|;
name|searchControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
literal|"archiva"
argument_list|,
name|limits
argument_list|,
literal|null
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|archivaDAOControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaDAO
operator|.
name|query
argument_list|(
operator|new
name|UniqueVersionConstraint
argument_list|(
name|observableRepoIds
argument_list|,
name|resultHit
operator|.
name|getGroupId
argument_list|()
argument_list|,
name|resultHit
operator|.
name|getArtifactId
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|ArchivaProjectModel
name|model
init|=
operator|new
name|ArchivaProjectModel
argument_list|()
decl_stmt|;
name|model
operator|.
name|setGroupId
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|model
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-webapp"
argument_list|)
expr_stmt|;
name|model
operator|.
name|setVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|model
operator|.
name|setPackaging
argument_list|(
literal|"war"
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|expectAndReturn
argument_list|(
name|repoBrowsing
operator|.
name|selectVersion
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
literal|"archiva-webapp"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|model
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|expectAndReturn
argument_list|(
name|repoBrowsing
operator|.
name|getRepositoryId
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
literal|"archiva-webapp"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoBrowsingControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|archivaDAOControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|artifacts
init|=
name|searchService
operator|.
name|quickSearch
argument_list|(
literal|"archiva"
argument_list|)
decl_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoBrowsingControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|archivaDAOControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|artifacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|artifact
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"archiva-webapp"
argument_list|,
name|artifact
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.0"
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"war"
argument_list|,
name|artifact
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Repository should not be null!"
argument_list|,
name|artifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"repo1.mirror"
argument_list|,
name|artifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// returned model is null!
specifier|public
name|void
name|testQuickSearchDefaultPackagingIsUsed
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|versions
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|SearchResultHit
name|resultHit
init|=
operator|new
name|SearchResultHit
argument_list|()
decl_stmt|;
name|resultHit
operator|.
name|setRepositoryId
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|resultHit
operator|.
name|setGroupId
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|resultHit
operator|.
name|setArtifactId
argument_list|(
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|)
expr_stmt|;
name|resultHit
operator|.
name|setVersions
argument_list|(
name|versions
argument_list|)
expr_stmt|;
name|results
operator|.
name|addHit
argument_list|(
name|SearchUtil
operator|.
name|getHitId
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|)
argument_list|,
name|resultHit
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|SearchResultLimits
operator|.
name|ALL_PAGES
argument_list|)
decl_stmt|;
name|searchControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
literal|"archiva"
argument_list|,
name|limits
argument_list|,
literal|null
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|archivaDAOControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaDAO
operator|.
name|query
argument_list|(
operator|new
name|UniqueVersionConstraint
argument_list|(
name|observableRepoIds
argument_list|,
name|resultHit
operator|.
name|getGroupId
argument_list|()
argument_list|,
name|resultHit
operator|.
name|getArtifactId
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|expectAndReturn
argument_list|(
name|repoBrowsing
operator|.
name|selectVersion
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|expectAndReturn
argument_list|(
name|repoBrowsing
operator|.
name|getRepositoryId
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoBrowsingControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|archivaDAOControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|artifacts
init|=
name|searchService
operator|.
name|quickSearch
argument_list|(
literal|"archiva"
argument_list|)
decl_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoBrowsingControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|archivaDAOControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|artifacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|artifact
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
name|artifact
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.0"
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|artifact
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"Repository should be null since the model was not found in the database!"
argument_list|,
name|artifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*     * quick/general text search which returns a list of artifacts     * query for an artifact based on a checksum     * query for all available versions of an artifact, sorted in version significance order     * query for all available versions of an artifact since a given date     * query for an artifact's direct dependencies     * query for an artifact's dependency tree (as with mvn dependency:tree - no duplicates should be included)     * query for all artifacts that depend on a given artifact     */
comment|/* quick search */
comment|//    public void testQuickSearchArtifactBytecodeSearch()
comment|//        throws Exception
comment|//    {
comment|//        // 1. check whether bytecode search or ordinary search
comment|//        // 2. get observable repos
comment|//        // 3. convert results to a list of Artifact objects
comment|//
comment|//        List<String> observableRepoIds = new ArrayList<String>();
comment|//        observableRepoIds.add( "repo1.mirror" );
comment|//        observableRepoIds.add( "public.releases" );
comment|//
comment|//        userReposControl.expectAndReturn( userRepos.getObservableRepositories(), observableRepoIds );
comment|//
comment|//        Date whenGathered = new Date();
comment|//        SearchResults results = new SearchResults();
comment|//        ArchivaArtifact artifact = new ArchivaArtifact( "org.apache.archiva", "archiva-test", "1.0", "", "jar", "public.releases" );
comment|//        artifact.getModel().setWhenGathered( whenGathered );
comment|//
comment|//        SearchResultHit resultHit = new SearchResultHit();
comment|//        resultHit.setArtifact(artifact);
comment|//        resultHit.setRepositoryId("repo1.mirror");
comment|//
comment|//        results.addHit(SearchUtil.getHitId(artifact.getGroupId(), artifact.getArtifactId()), resultHit);
comment|//
comment|//        SearchResultLimits limits = new SearchResultLimits( SearchResultLimits.ALL_PAGES );
comment|//
comment|//        searchControl.expectAndDefaultReturn( search.search( "", observableRepoIds, "MyClassName", limits, null ), results );
comment|//
comment|//        archivaDAOControl.expectAndReturn( archivaDAO.getArtifactDAO(), artifactDAO );
comment|//        artifactDAOControl.expectAndReturn( artifactDAO.getArtifact( "org.apache.archiva", "archiva-test", "1.0", "", "pom", "public.releases" ), artifact );
comment|//
comment|//        userReposControl.replay();
comment|//        searchControl.replay();
comment|//        archivaDAOControl.replay();
comment|//        artifactDAOControl.replay();
comment|//
comment|//        List<Artifact> artifacts = searchService.quickSearch( "bytecode:MyClassName" );
comment|//
comment|//        userReposControl.verify();
comment|//        searchControl.verify();
comment|//        archivaDAOControl.verify();
comment|//        artifactDAOControl.verify();
comment|//
comment|//        assertNotNull( artifacts );
comment|//        assertEquals( 1, artifacts.size() );
comment|//    }
specifier|public
name|void
name|testQuickSearchArtifactRegularSearch
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|versions
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|SearchResultHit
name|resultHit
init|=
operator|new
name|SearchResultHit
argument_list|()
decl_stmt|;
name|resultHit
operator|.
name|setGroupId
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|resultHit
operator|.
name|setArtifactId
argument_list|(
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|)
expr_stmt|;
name|resultHit
operator|.
name|setVersions
argument_list|(
name|versions
argument_list|)
expr_stmt|;
name|resultHit
operator|.
name|setRepositoryId
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|results
operator|.
name|addHit
argument_list|(
name|SearchUtil
operator|.
name|getHitId
argument_list|(
name|resultHit
operator|.
name|getGroupId
argument_list|()
argument_list|,
name|resultHit
operator|.
name|getArtifactId
argument_list|()
argument_list|)
argument_list|,
name|resultHit
argument_list|)
expr_stmt|;
name|archivaDAOControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaDAO
operator|.
name|query
argument_list|(
operator|new
name|UniqueVersionConstraint
argument_list|(
name|observableRepoIds
argument_list|,
name|resultHit
operator|.
name|getGroupId
argument_list|()
argument_list|,
name|resultHit
operator|.
name|getArtifactId
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|SearchResultLimits
operator|.
name|ALL_PAGES
argument_list|)
decl_stmt|;
name|searchControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
literal|"archiva"
argument_list|,
name|limits
argument_list|,
literal|null
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|ArchivaProjectModel
name|model
init|=
operator|new
name|ArchivaProjectModel
argument_list|()
decl_stmt|;
name|model
operator|.
name|setGroupId
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|model
operator|.
name|setArtifactId
argument_list|(
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|)
expr_stmt|;
name|model
operator|.
name|setVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|model
operator|.
name|setPackaging
argument_list|(
literal|"jar"
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|expectAndReturn
argument_list|(
name|repoBrowsing
operator|.
name|selectVersion
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|model
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|expectAndReturn
argument_list|(
name|repoBrowsing
operator|.
name|getRepositoryId
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|archivaDAOControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoBrowsingControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|artifacts
init|=
name|searchService
operator|.
name|quickSearch
argument_list|(
literal|"archiva"
argument_list|)
decl_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|archivaDAOControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoBrowsingControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|artifacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|artifact
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
name|artifact
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.0"
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|artifact
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Repository should not be null!"
argument_list|,
name|artifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"repo1.mirror"
argument_list|,
name|artifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testQuickSearchNoResults
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|SearchResults
name|results
init|=
operator|new
name|SearchResults
argument_list|()
decl_stmt|;
name|SearchResultLimits
name|limits
init|=
operator|new
name|SearchResultLimits
argument_list|(
name|SearchResultLimits
operator|.
name|ALL_PAGES
argument_list|)
decl_stmt|;
name|searchControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|search
operator|.
name|search
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
literal|"non-existent"
argument_list|,
name|limits
argument_list|,
literal|null
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|artifacts
init|=
name|searchService
operator|.
name|quickSearch
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|searchControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/* query artifact by checksum */
specifier|public
name|void
name|testGetArtifactByChecksum
parameter_list|()
throws|throws
name|Exception
block|{
name|Date
name|whenGathered
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|ArtifactsByChecksumConstraint
name|constraint
init|=
operator|new
name|ArtifactsByChecksumConstraint
argument_list|(
literal|"a1b2c3aksjhdasfkdasasd"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ArchivaArtifact
argument_list|>
name|artifacts
init|=
operator|new
name|ArrayList
argument_list|<
name|ArchivaArtifact
argument_list|>
argument_list|()
decl_stmt|;
name|ArchivaArtifact
name|artifact
init|=
operator|new
name|ArchivaArtifact
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|,
literal|"test-repo"
argument_list|)
decl_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setWhenGathered
argument_list|(
name|whenGathered
argument_list|)
expr_stmt|;
name|artifacts
operator|.
name|add
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|archivaDAOControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaDAO
operator|.
name|getArtifactDAO
argument_list|()
argument_list|,
name|artifactDAO
argument_list|)
expr_stmt|;
name|artifactDAO
operator|.
name|queryArtifacts
argument_list|(
name|constraint
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|.
name|setMatcher
argument_list|(
name|MockControl
operator|.
name|ALWAYS_MATCHER
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|.
name|setReturnValue
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|archivaDAOControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|artifactDAOControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|results
init|=
name|searchService
operator|.
name|getArtifactByChecksum
argument_list|(
literal|"a1b2c3aksjhdasfkdasasd"
argument_list|)
decl_stmt|;
name|archivaDAOControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|artifactDAOControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|results
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/* query artifact versions */
specifier|public
name|void
name|testGetArtifactVersionsArtifactExists
parameter_list|()
throws|throws
name|Exception
block|{
name|Date
name|whenGathered
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|versions
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.1-beta-1"
argument_list|)
expr_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.1-beta-2"
argument_list|)
expr_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.1"
argument_list|)
expr_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|versions
operator|.
name|add
argument_list|(
literal|"1.2.1-SNAPSHOT"
argument_list|)
expr_stmt|;
name|BrowsingResults
name|results
init|=
operator|new
name|BrowsingResults
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|)
decl_stmt|;
name|results
operator|.
name|setSelectedRepositoryIds
argument_list|(
name|observableRepoIds
argument_list|)
expr_stmt|;
name|results
operator|.
name|setVersions
argument_list|(
name|versions
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ArchivaArtifact
argument_list|>
name|archivaArtifacts
init|=
operator|new
name|ArrayList
argument_list|<
name|ArchivaArtifact
argument_list|>
argument_list|()
decl_stmt|;
name|ArchivaArtifact
name|archivaArtifact
init|=
operator|new
name|ArchivaArtifact
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|,
literal|"repo1.mirror"
argument_list|)
decl_stmt|;
name|archivaArtifact
operator|.
name|getModel
argument_list|()
operator|.
name|setWhenGathered
argument_list|(
name|whenGathered
argument_list|)
expr_stmt|;
name|archivaArtifacts
operator|.
name|add
argument_list|(
name|archivaArtifact
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|=
operator|new
name|ArchivaArtifact
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|,
literal|"public.releases"
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|.
name|getModel
argument_list|()
operator|.
name|setWhenGathered
argument_list|(
name|whenGathered
argument_list|)
expr_stmt|;
name|archivaArtifacts
operator|.
name|add
argument_list|(
name|archivaArtifact
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|=
operator|new
name|ArchivaArtifact
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|,
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|.
name|getModel
argument_list|()
operator|.
name|setWhenGathered
argument_list|(
name|whenGathered
argument_list|)
expr_stmt|;
name|archivaArtifacts
operator|.
name|add
argument_list|(
name|archivaArtifact
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|=
operator|new
name|ArchivaArtifact
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|,
literal|"public.releases"
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|.
name|getModel
argument_list|()
operator|.
name|setWhenGathered
argument_list|(
name|whenGathered
argument_list|)
expr_stmt|;
name|archivaArtifacts
operator|.
name|add
argument_list|(
name|archivaArtifact
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|=
operator|new
name|ArchivaArtifact
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|,
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|.
name|getModel
argument_list|()
operator|.
name|setWhenGathered
argument_list|(
name|whenGathered
argument_list|)
expr_stmt|;
name|archivaArtifacts
operator|.
name|add
argument_list|(
name|archivaArtifact
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|=
operator|new
name|ArchivaArtifact
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|,
literal|"public.releases"
argument_list|)
expr_stmt|;
name|archivaArtifact
operator|.
name|getModel
argument_list|()
operator|.
name|setWhenGathered
argument_list|(
name|whenGathered
argument_list|)
expr_stmt|;
name|archivaArtifacts
operator|.
name|add
argument_list|(
name|archivaArtifact
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|expectAndReturn
argument_list|(
name|repoBrowsing
operator|.
name|selectArtifactId
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|)
argument_list|,
name|results
argument_list|)
expr_stmt|;
name|archivaDAOControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaDAO
operator|.
name|getArtifactDAO
argument_list|()
argument_list|,
name|artifactDAO
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|artifactDAO
operator|.
name|getArtifact
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|,
literal|"repo1.mirror"
argument_list|)
argument_list|,
name|archivaArtifacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|artifactDAO
operator|.
name|getArtifact
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|,
literal|"public.releases"
argument_list|)
argument_list|,
name|archivaArtifacts
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|artifactDAO
operator|.
name|getArtifact
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|,
literal|"repo1.mirror"
argument_list|)
argument_list|,
name|archivaArtifacts
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|artifactDAO
operator|.
name|getArtifact
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|,
literal|"public.releases"
argument_list|)
argument_list|,
name|archivaArtifacts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|artifactDAO
operator|.
name|getArtifact
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|,
literal|"repo1.mirror"
argument_list|)
argument_list|,
name|archivaArtifacts
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|artifactDAOControl
operator|.
name|expectAndDefaultReturn
argument_list|(
name|artifactDAO
operator|.
name|getArtifact
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
name|versions
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|,
literal|"public.releases"
argument_list|)
argument_list|,
name|archivaArtifacts
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoBrowsingControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|artifactDAOControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|artifacts
init|=
name|searchService
operator|.
name|getArtifactVersions
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|)
decl_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoBrowsingControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|artifactDAOControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|artifacts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|artifacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/* query artifact versions since a given date */
specifier|public
name|void
name|testGetArtifactVersionsByDateArtifactExists
parameter_list|()
throws|throws
name|Exception
block|{
block|}
specifier|public
name|void
name|testGetArtifactVersionsByDateArtifactDoesNotExist
parameter_list|()
throws|throws
name|Exception
block|{
block|}
comment|/* query artifact dependencies */
specifier|public
name|void
name|testGetDependenciesArtifactExists
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|ArchivaProjectModel
name|model
init|=
operator|new
name|ArchivaProjectModel
argument_list|()
decl_stmt|;
name|model
operator|.
name|setGroupId
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|model
operator|.
name|setArtifactId
argument_list|(
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|)
expr_stmt|;
name|model
operator|.
name|setVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|Dependency
name|dependency
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|Dependency
argument_list|()
decl_stmt|;
name|dependency
operator|.
name|setGroupId
argument_list|(
literal|"commons-logging"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setArtifactId
argument_list|(
literal|"commons-logging"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setVersion
argument_list|(
literal|"2.0"
argument_list|)
expr_stmt|;
name|model
operator|.
name|addDependency
argument_list|(
name|dependency
argument_list|)
expr_stmt|;
name|dependency
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|Dependency
argument_list|()
expr_stmt|;
name|dependency
operator|.
name|setGroupId
argument_list|(
literal|"junit"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setArtifactId
argument_list|(
literal|"junit"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setVersion
argument_list|(
literal|"2.4"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setScope
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|model
operator|.
name|addDependency
argument_list|(
name|dependency
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|expectAndReturn
argument_list|(
name|repoBrowsing
operator|.
name|selectVersion
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|model
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Dependency
argument_list|>
name|dependencies
init|=
name|searchService
operator|.
name|getDependencies
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|repoBrowsingControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|dependencies
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|dependencies
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetDependenciesArtifactDoesNotExist
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|expectAndThrow
argument_list|(
name|repoBrowsing
operator|.
name|selectVersion
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
operator|new
name|ObjectNotFoundException
argument_list|(
literal|"Artifact does not exist."
argument_list|)
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoBrowsingControl
operator|.
name|replay
argument_list|()
expr_stmt|;
try|try
block|{
name|searchService
operator|.
name|getDependencies
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"An exception should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Artifact does not exist."
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoBrowsingControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testGetDependencyTreeArtifactExists
parameter_list|()
throws|throws
name|Exception
block|{
comment|// TODO
block|}
specifier|public
name|void
name|testGetDependencyTreeArtifactDoesNotExist
parameter_list|()
throws|throws
name|Exception
block|{
comment|// TODO
block|}
specifier|public
name|void
name|testGetDependees
parameter_list|()
throws|throws
name|Exception
block|{
name|Date
name|date
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ArchivaProjectModel
argument_list|>
name|dependeeModels
init|=
operator|new
name|ArrayList
argument_list|<
name|ArchivaProjectModel
argument_list|>
argument_list|()
decl_stmt|;
name|ArchivaProjectModel
name|dependeeModel
init|=
operator|new
name|ArchivaProjectModel
argument_list|()
decl_stmt|;
name|dependeeModel
operator|.
name|setGroupId
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-dependee-one"
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setWhenIndexed
argument_list|(
name|date
argument_list|)
expr_stmt|;
name|dependeeModels
operator|.
name|add
argument_list|(
name|dependeeModel
argument_list|)
expr_stmt|;
name|dependeeModel
operator|=
operator|new
name|ArchivaProjectModel
argument_list|()
expr_stmt|;
name|dependeeModel
operator|.
name|setGroupId
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-dependee-two"
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setWhenIndexed
argument_list|(
name|date
argument_list|)
expr_stmt|;
name|dependeeModels
operator|.
name|add
argument_list|(
name|dependeeModel
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|expectAndReturn
argument_list|(
name|repoBrowsing
operator|.
name|getUsedBy
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|dependeeModels
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|dependees
init|=
name|searchService
operator|.
name|getDependees
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|repoBrowsingControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|dependees
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|dependees
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetDependeesArtifactDoesNotExist
parameter_list|()
throws|throws
name|Exception
block|{
name|Date
name|date
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|observableRepoIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"repo1.mirror"
argument_list|)
expr_stmt|;
name|observableRepoIds
operator|.
name|add
argument_list|(
literal|"public.releases"
argument_list|)
expr_stmt|;
name|List
name|dependeeModels
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|ArchivaProjectModel
name|dependeeModel
init|=
operator|new
name|ArchivaProjectModel
argument_list|()
decl_stmt|;
name|dependeeModel
operator|.
name|setGroupId
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-dependee-one"
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setWhenIndexed
argument_list|(
name|date
argument_list|)
expr_stmt|;
name|dependeeModels
operator|.
name|add
argument_list|(
name|dependeeModel
argument_list|)
expr_stmt|;
name|dependeeModel
operator|=
operator|new
name|ArchivaProjectModel
argument_list|()
expr_stmt|;
name|dependeeModel
operator|.
name|setGroupId
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-dependee-two"
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setVersion
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|dependeeModel
operator|.
name|setWhenIndexed
argument_list|(
name|date
argument_list|)
expr_stmt|;
name|dependeeModels
operator|.
name|add
argument_list|(
name|dependeeModel
argument_list|)
expr_stmt|;
name|userReposControl
operator|.
name|expectAndReturn
argument_list|(
name|userRepos
operator|.
name|getObservableRepositories
argument_list|()
argument_list|,
name|observableRepoIds
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|expectAndReturn
argument_list|(
name|repoBrowsing
operator|.
name|getUsedBy
argument_list|(
literal|""
argument_list|,
name|observableRepoIds
argument_list|,
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|repoBrowsingControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|replay
argument_list|()
expr_stmt|;
try|try
block|{
name|List
argument_list|<
name|Artifact
argument_list|>
name|dependees
init|=
name|searchService
operator|.
name|getDependees
argument_list|(
name|ARCHIVA_TEST_GROUP_ID
argument_list|,
name|ARCHIVA_TEST_ARTIFACT_ID
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|fail
argument_list|(
literal|"An exception should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|repoBrowsingControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|userReposControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

