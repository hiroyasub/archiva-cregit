begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rss
operator|.
name|processor
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rss
operator|.
name|RssFeedEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ArchivaDatabaseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaArtifact
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|syndication
operator|.
name|feed
operator|.
name|synd
operator|.
name|SyndFeed
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:oching@apache.org">Maria Odea Ching</a>  * @version  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractArtifactsRssFeedProcessor
implements|implements
name|RssFeedProcessor
block|{
specifier|public
specifier|abstract
name|SyndFeed
name|process
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|reqParams
parameter_list|)
throws|throws
name|ArchivaDatabaseException
function_decl|;
specifier|protected
name|List
argument_list|<
name|RssFeedEntry
argument_list|>
name|processData
parameter_list|(
name|List
argument_list|<
name|ArchivaArtifact
argument_list|>
name|artifacts
parameter_list|,
name|boolean
name|isRepoLevel
parameter_list|)
block|{
name|long
name|tmp
init|=
literal|0
decl_stmt|;
name|RssFeedEntry
name|entry
init|=
literal|null
decl_stmt|;
name|List
argument_list|<
name|RssFeedEntry
argument_list|>
name|entries
init|=
operator|new
name|ArrayList
argument_list|<
name|RssFeedEntry
argument_list|>
argument_list|()
decl_stmt|;
name|String
name|description
init|=
literal|""
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
for|for
control|(
name|ArchivaArtifact
name|artifact
range|:
name|artifacts
control|)
block|{
name|long
name|whenGathered
init|=
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|getWhenGathered
argument_list|()
operator|.
name|getTime
argument_list|()
decl_stmt|;
if|if
condition|(
name|tmp
operator|!=
name|whenGathered
condition|)
block|{
if|if
condition|(
name|entry
operator|!=
literal|null
condition|)
block|{
name|entry
operator|.
name|setDescription
argument_list|(
name|description
argument_list|)
expr_stmt|;
name|entries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|entry
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|isRepoLevel
condition|)
block|{
name|entry
operator|=
operator|new
name|RssFeedEntry
argument_list|(
name|getTitle
argument_list|()
operator|+
literal|"\'"
operator|+
name|artifact
operator|.
name|getGroupId
argument_list|()
operator|+
literal|":"
operator|+
name|artifact
operator|.
name|getArtifactId
argument_list|()
operator|+
literal|"\'"
operator|+
literal|" as of "
operator|+
operator|new
name|Date
argument_list|(
name|whenGathered
argument_list|)
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setPublishedDate
argument_list|(
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|getWhenGathered
argument_list|()
argument_list|)
expr_stmt|;
name|description
operator|=
name|getDescription
argument_list|()
operator|+
literal|"\'"
operator|+
name|artifact
operator|.
name|getGroupId
argument_list|()
operator|+
literal|":"
operator|+
name|artifact
operator|.
name|getArtifactId
argument_list|()
operator|+
literal|"\'"
operator|+
literal|": \n"
operator|+
name|artifact
operator|.
name|toString
argument_list|()
operator|+
literal|" | "
expr_stmt|;
block|}
else|else
block|{
name|String
name|repoId
init|=
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|getRepositoryId
argument_list|()
decl_stmt|;
name|entry
operator|=
operator|new
name|RssFeedEntry
argument_list|(
name|getTitle
argument_list|()
operator|+
literal|"\'"
operator|+
name|repoId
operator|+
literal|"\'"
operator|+
literal|" as of "
operator|+
operator|new
name|Date
argument_list|(
name|whenGathered
argument_list|)
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setPublishedDate
argument_list|(
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|getWhenGathered
argument_list|()
argument_list|)
expr_stmt|;
name|description
operator|=
name|getDescription
argument_list|()
operator|+
literal|"\'"
operator|+
name|repoId
operator|+
literal|"\'"
operator|+
literal|": \n"
operator|+
name|artifact
operator|.
name|toString
argument_list|()
operator|+
literal|" | "
expr_stmt|;
block|}
block|}
else|else
block|{
name|description
operator|=
name|description
operator|+
name|artifact
operator|.
name|toString
argument_list|()
operator|+
literal|" | "
expr_stmt|;
block|}
if|if
condition|(
name|idx
operator|==
operator|(
name|artifacts
operator|.
name|size
argument_list|()
operator|-
literal|1
operator|)
condition|)
block|{
name|entry
operator|.
name|setDescription
argument_list|(
name|description
argument_list|)
expr_stmt|;
name|entries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
name|tmp
operator|=
name|whenGathered
expr_stmt|;
name|idx
operator|++
expr_stmt|;
block|}
return|return
name|entries
return|;
block|}
specifier|protected
specifier|abstract
name|String
name|getTitle
parameter_list|()
function_decl|;
specifier|protected
specifier|abstract
name|String
name|getDescription
parameter_list|()
function_decl|;
block|}
end_class

end_unit

