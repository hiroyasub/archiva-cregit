begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rss
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|syndication
operator|.
name|feed
operator|.
name|synd
operator|.
name|SyndContent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|syndication
operator|.
name|feed
operator|.
name|synd
operator|.
name|SyndContentImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|syndication
operator|.
name|feed
operator|.
name|synd
operator|.
name|SyndEntry
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|syndication
operator|.
name|feed
operator|.
name|synd
operator|.
name|SyndEntryImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|syndication
operator|.
name|feed
operator|.
name|synd
operator|.
name|SyndFeed
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|syndication
operator|.
name|feed
operator|.
name|synd
operator|.
name|SyndFeedImpl
import|;
end_import

begin_comment
comment|/**  * Generates RSS feeds.  *   * @plexus.component role="org.apache.archiva.rss.RssFeedGenerator"   *      instantiation-strategy="per-lookup"  *   * @author<a href="mailto:oching@apache.org">Maria Odea Ching</a>  * @version  */
end_comment

begin_class
specifier|public
class|class
name|RssFeedGenerator
block|{
specifier|private
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|RssFeedGenerator
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// TODO: make configurable
specifier|public
specifier|static
name|String
name|DEFAULT_FEEDTYPE
init|=
literal|"rss_2.0"
decl_stmt|;
specifier|public
specifier|static
name|String
name|DEFAULT_LANGUAGE
init|=
literal|"en-us"
decl_stmt|;
specifier|private
name|String
name|DEFAULT_LINK
init|=
literal|"http://localhost:8080/archiva/rss/"
decl_stmt|;
specifier|public
name|SyndFeed
name|generateFeed
parameter_list|(
name|String
name|title
parameter_list|,
name|String
name|description
parameter_list|,
name|List
argument_list|<
name|RssFeedEntry
argument_list|>
name|dataEntries
parameter_list|,
name|String
name|queryString
parameter_list|)
block|{
name|SyndFeed
name|feed
init|=
operator|new
name|SyndFeedImpl
argument_list|()
decl_stmt|;
name|feed
operator|.
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|feed
operator|.
name|setLink
argument_list|(
name|DEFAULT_LINK
operator|+
name|queryString
argument_list|)
expr_stmt|;
name|feed
operator|.
name|setDescription
argument_list|(
name|description
argument_list|)
expr_stmt|;
name|feed
operator|.
name|setLanguage
argument_list|(
name|DEFAULT_LANGUAGE
argument_list|)
expr_stmt|;
name|feed
operator|.
name|setPublishedDate
argument_list|(
name|dataEntries
operator|.
name|get
argument_list|(
name|dataEntries
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
operator|.
name|getPublishedDate
argument_list|()
argument_list|)
expr_stmt|;
name|feed
operator|.
name|setFeedType
argument_list|(
name|DEFAULT_FEEDTYPE
argument_list|)
expr_stmt|;
name|feed
operator|.
name|setEntries
argument_list|(
name|getEntries
argument_list|(
name|dataEntries
argument_list|)
argument_list|)
expr_stmt|;
name|log
operator|.
name|debug
argument_list|(
literal|"Finished generating the feed \'"
operator|+
name|title
operator|+
literal|"\'."
argument_list|)
expr_stmt|;
return|return
name|feed
return|;
block|}
specifier|private
name|List
argument_list|<
name|SyndEntry
argument_list|>
name|getEntries
parameter_list|(
name|List
argument_list|<
name|RssFeedEntry
argument_list|>
name|dataEntries
parameter_list|)
block|{
name|List
argument_list|<
name|SyndEntry
argument_list|>
name|entries
init|=
operator|new
name|ArrayList
argument_list|<
name|SyndEntry
argument_list|>
argument_list|()
decl_stmt|;
name|SyndEntry
name|entry
decl_stmt|;
name|SyndContent
name|description
decl_stmt|;
for|for
control|(
name|RssFeedEntry
name|dataEntry
range|:
name|dataEntries
control|)
block|{
name|entry
operator|=
operator|new
name|SyndEntryImpl
argument_list|()
expr_stmt|;
name|entry
operator|.
name|setTitle
argument_list|(
name|dataEntry
operator|.
name|getTitle
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setPublishedDate
argument_list|(
name|dataEntry
operator|.
name|getPublishedDate
argument_list|()
argument_list|)
expr_stmt|;
name|description
operator|=
operator|new
name|SyndContentImpl
argument_list|()
expr_stmt|;
name|description
operator|.
name|setType
argument_list|(
literal|"text/plain"
argument_list|)
expr_stmt|;
name|description
operator|.
name|setValue
argument_list|(
name|dataEntry
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setDescription
argument_list|(
name|description
argument_list|)
expr_stmt|;
name|entries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
return|return
name|entries
return|;
block|}
block|}
end_class

end_unit

