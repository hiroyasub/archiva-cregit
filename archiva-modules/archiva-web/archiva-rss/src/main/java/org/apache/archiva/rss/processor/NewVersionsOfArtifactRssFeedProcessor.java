begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rss
operator|.
name|processor
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|syndication
operator|.
name|feed
operator|.
name|synd
operator|.
name|SyndFeed
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|syndication
operator|.
name|io
operator|.
name|FeedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|model
operator|.
name|ArtifactMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|metadata
operator|.
name|repository
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RepositoryRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rss
operator|.
name|RssFeedEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rss
operator|.
name|RssFeedGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Retrieve and process new versions of an artifact from the database and  * generate a rss feed. The versions will be grouped by the date when the artifact  * was gathered. Each group will appear as one entry in the feed.  *  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"rssFeedProcessor#new-versions"
argument_list|)
specifier|public
class|class
name|NewVersionsOfArtifactRssFeedProcessor
extends|extends
name|AbstractArtifactsRssFeedProcessor
block|{
specifier|private
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|NewVersionsOfArtifactRssFeedProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|title
init|=
literal|"New Versions of Artifact "
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|desc
init|=
literal|"These are the new versions of artifact "
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|RssFeedGenerator
name|generator
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|RepositoryRegistry
name|repositoryRegistry
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|RepositorySessionFactory
name|repositorySessionFactory
decl_stmt|;
comment|/**      * Process all versions of the artifact which had a rss feed request.      */
annotation|@
name|Override
specifier|public
name|SyndFeed
name|process
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|reqParams
parameter_list|,
name|MetadataRepository
name|metadataRepository
parameter_list|)
throws|throws
name|FeedException
block|{
name|String
name|groupId
init|=
name|reqParams
operator|.
name|get
argument_list|(
name|RssFeedProcessor
operator|.
name|KEY_GROUP_ID
argument_list|)
decl_stmt|;
name|String
name|artifactId
init|=
name|reqParams
operator|.
name|get
argument_list|(
name|RssFeedProcessor
operator|.
name|KEY_ARTIFACT_ID
argument_list|)
decl_stmt|;
if|if
condition|(
name|groupId
operator|!=
literal|null
operator|&&
name|artifactId
operator|!=
literal|null
condition|)
block|{
return|return
name|processNewVersionsOfArtifact
argument_list|(
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|metadataRepository
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|SyndFeed
name|processNewVersionsOfArtifact
parameter_list|(
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|MetadataRepository
name|metadataRepository
parameter_list|)
throws|throws
name|FeedException
block|{
name|List
argument_list|<
name|ArtifactMetadata
argument_list|>
name|artifacts
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
try|try
init|(
name|RepositorySession
name|session
init|=
name|repositorySessionFactory
operator|.
name|createSession
argument_list|()
init|)
block|{
for|for
control|(
name|Repository
name|repo
range|:
name|repositoryRegistry
operator|.
name|getRepositories
argument_list|()
control|)
block|{
specifier|final
name|String
name|repoId
init|=
name|repo
operator|.
name|getId
argument_list|()
decl_stmt|;
name|Collection
argument_list|<
name|String
argument_list|>
name|versions
init|=
name|metadataRepository
operator|.
name|getProjectVersions
argument_list|(
name|session
argument_list|,
name|repoId
argument_list|,
name|groupId
argument_list|,
name|artifactId
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|version
range|:
name|versions
control|)
block|{
name|artifacts
operator|.
name|addAll
argument_list|(
name|metadataRepository
operator|.
name|getArtifacts
argument_list|(
name|session
argument_list|,
name|repoId
argument_list|,
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|MetadataRepositoryException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|FeedException
argument_list|(
literal|"Unable to construct feed, metadata could not be retrieved: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|MetadataResolutionException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|FeedException
argument_list|(
literal|"Unable to construct feed, metadata could not be retrieved: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|long
name|tmp
init|=
literal|0
decl_stmt|;
name|RssFeedEntry
name|entry
init|=
literal|null
decl_stmt|;
name|List
argument_list|<
name|RssFeedEntry
argument_list|>
name|entries
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|String
name|description
init|=
literal|""
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
for|for
control|(
name|ArtifactMetadata
name|artifact
range|:
name|artifacts
control|)
block|{
name|long
name|whenGathered
init|=
name|artifact
operator|.
name|getWhenGathered
argument_list|()
operator|.
name|getTime
argument_list|()
decl_stmt|;
if|if
condition|(
name|tmp
operator|!=
name|whenGathered
condition|)
block|{
if|if
condition|(
name|entry
operator|!=
literal|null
condition|)
block|{
name|entry
operator|.
name|setDescription
argument_list|(
name|description
argument_list|)
expr_stmt|;
name|entries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|entry
operator|=
literal|null
expr_stmt|;
block|}
name|entry
operator|=
operator|new
name|RssFeedEntry
argument_list|(
name|this
operator|.
name|getTitle
argument_list|()
operator|+
literal|"\'"
operator|+
name|groupId
operator|+
literal|":"
operator|+
name|artifactId
operator|+
literal|"\'"
operator|+
literal|" as of "
operator|+
operator|new
name|Date
argument_list|(
name|whenGathered
argument_list|)
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setPublishedDate
argument_list|(
name|artifact
operator|.
name|getWhenGathered
argument_list|()
argument_list|)
expr_stmt|;
name|description
operator|=
name|this
operator|.
name|getDescription
argument_list|()
operator|+
literal|"\'"
operator|+
name|groupId
operator|+
literal|":"
operator|+
name|artifactId
operator|+
literal|"\'"
operator|+
literal|": \n"
operator|+
name|artifact
operator|.
name|getId
argument_list|()
operator|+
literal|" | "
expr_stmt|;
block|}
else|else
block|{
name|description
operator|=
name|description
operator|+
name|artifact
operator|.
name|getId
argument_list|()
operator|+
literal|" | "
expr_stmt|;
block|}
if|if
condition|(
name|idx
operator|==
operator|(
name|artifacts
operator|.
name|size
argument_list|()
operator|-
literal|1
operator|)
condition|)
block|{
name|entry
operator|.
name|setDescription
argument_list|(
name|description
argument_list|)
expr_stmt|;
name|entries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
name|tmp
operator|=
name|whenGathered
expr_stmt|;
name|idx
operator|++
expr_stmt|;
block|}
name|String
name|key
init|=
name|groupId
operator|+
literal|":"
operator|+
name|artifactId
decl_stmt|;
return|return
name|generator
operator|.
name|generateFeed
argument_list|(
name|getTitle
argument_list|()
operator|+
literal|"\'"
operator|+
name|key
operator|+
literal|"\'"
argument_list|,
literal|"New versions of artifact "
operator|+
literal|"\'"
operator|+
name|key
operator|+
literal|"\' found during repository scan."
argument_list|,
name|entries
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getTitle
parameter_list|()
block|{
return|return
name|title
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
name|desc
return|;
block|}
specifier|public
name|RssFeedGenerator
name|getGenerator
parameter_list|()
block|{
return|return
name|generator
return|;
block|}
specifier|public
name|void
name|setGenerator
parameter_list|(
name|RssFeedGenerator
name|generator
parameter_list|)
block|{
name|this
operator|.
name|generator
operator|=
name|generator
expr_stmt|;
block|}
block|}
end_class

end_unit

