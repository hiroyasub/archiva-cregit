begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|webdav
operator|.
name|util
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|merger
operator|.
name|IndexMerger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|merger
operator|.
name|TemporaryGroupIndex
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|web
operator|.
name|context
operator|.
name|WebApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|web
operator|.
name|context
operator|.
name|support
operator|.
name|WebApplicationContextUtils
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSessionEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSessionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * this http session listener will delete repository group index requested by a user  * at this end of the http session  *  * @author Olivier Lamy  * @since 1.4-M2  */
end_comment

begin_class
specifier|public
class|class
name|TemporaryGroupIndexSessionCleaner
implements|implements
name|HttpSessionListener
block|{
specifier|private
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|IndexMerger
name|indexMerger
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|TEMPORARY_INDEX_SESSION_KEY
init|=
name|TemporaryGroupIndexSessionCleaner
operator|.
name|class
operator|.
name|getName
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|sessionCreated
parameter_list|(
name|HttpSessionEvent
name|httpSessionEvent
parameter_list|)
block|{
comment|// ensure the map is here to avoid NPE
if|if
condition|(
name|httpSessionEvent
operator|.
name|getSession
argument_list|()
operator|.
name|getAttribute
argument_list|(
name|TEMPORARY_INDEX_SESSION_KEY
argument_list|)
operator|==
literal|null
condition|)
block|{
name|httpSessionEvent
operator|.
name|getSession
argument_list|()
operator|.
name|setAttribute
argument_list|(
name|TEMPORARY_INDEX_SESSION_KEY
argument_list|,
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|indexMerger
operator|==
literal|null
condition|)
block|{
name|WebApplicationContext
name|webApplicationContext
init|=
name|WebApplicationContextUtils
operator|.
name|getRequiredWebApplicationContext
argument_list|(
name|httpSessionEvent
operator|.
name|getSession
argument_list|()
operator|.
name|getServletContext
argument_list|()
argument_list|)
decl_stmt|;
name|indexMerger
operator|=
name|webApplicationContext
operator|.
name|getBean
argument_list|(
name|IndexMerger
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|sessionDestroyed
parameter_list|(
name|HttpSessionEvent
name|httpSessionEvent
parameter_list|)
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|Map
argument_list|<
name|String
argument_list|,
name|TemporaryGroupIndex
argument_list|>
name|tempFilesPerKey
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|TemporaryGroupIndex
argument_list|>
operator|)
name|httpSessionEvent
operator|.
name|getSession
argument_list|()
operator|.
name|getAttribute
argument_list|(
name|TEMPORARY_INDEX_SESSION_KEY
argument_list|)
decl_stmt|;
for|for
control|(
name|TemporaryGroupIndex
name|temporaryGroupIndex
range|:
name|tempFilesPerKey
operator|.
name|values
argument_list|()
control|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"cleanup temporaryGroupIndex {} directory {}"
argument_list|,
name|temporaryGroupIndex
operator|.
name|getIndexId
argument_list|()
argument_list|,
name|temporaryGroupIndex
operator|.
name|getDirectory
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|getIndexMerger
argument_list|(
name|httpSessionEvent
argument_list|)
operator|.
name|cleanTemporaryGroupIndex
argument_list|(
name|temporaryGroupIndex
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|IndexMerger
name|getIndexMerger
parameter_list|(
name|HttpSessionEvent
name|httpSessionEvent
parameter_list|)
block|{
if|if
condition|(
name|indexMerger
operator|==
literal|null
condition|)
block|{
name|WebApplicationContext
name|webApplicationContext
init|=
name|WebApplicationContextUtils
operator|.
name|getRequiredWebApplicationContext
argument_list|(
name|httpSessionEvent
operator|.
name|getSession
argument_list|()
operator|.
name|getServletContext
argument_list|()
argument_list|)
decl_stmt|;
name|indexMerger
operator|=
name|webApplicationContext
operator|.
name|getBean
argument_list|(
name|IndexMerger
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
return|return
name|indexMerger
return|;
block|}
block|}
end_class

end_unit

