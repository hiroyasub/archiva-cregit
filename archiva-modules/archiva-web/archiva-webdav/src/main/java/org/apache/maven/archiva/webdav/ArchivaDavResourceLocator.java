begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|webdav
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|DavResourceLocator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|DavLocatorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|util
operator|.
name|Text
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:james@atlassian.com">James William Dumay</a>  */
end_comment

begin_class
specifier|public
class|class
name|ArchivaDavResourceLocator
implements|implements
name|DavResourceLocator
block|{
specifier|private
name|String
name|prefix
decl_stmt|;
specifier|private
name|String
name|resourcePath
decl_stmt|;
specifier|private
name|String
name|href
decl_stmt|;
specifier|private
name|String
name|workspaceName
decl_stmt|;
specifier|private
name|DavLocatorFactory
name|davLocatorFactory
decl_stmt|;
specifier|public
name|ArchivaDavResourceLocator
parameter_list|(
name|String
name|prefix
parameter_list|,
name|String
name|resourcePath
parameter_list|,
name|String
name|workspaceName
parameter_list|,
name|DavLocatorFactory
name|davLocatorFactory
parameter_list|)
block|{
name|this
operator|.
name|prefix
operator|=
name|prefix
expr_stmt|;
name|this
operator|.
name|workspaceName
operator|=
name|workspaceName
expr_stmt|;
name|this
operator|.
name|davLocatorFactory
operator|=
name|davLocatorFactory
expr_stmt|;
comment|// remove trailing '/' that is not part of the resourcePath except for the root item.
if|if
condition|(
name|resourcePath
operator|.
name|endsWith
argument_list|(
literal|"/"
argument_list|)
operator|&&
operator|!
literal|"/"
operator|.
name|equals
argument_list|(
name|resourcePath
argument_list|)
condition|)
block|{
name|resourcePath
operator|=
name|resourcePath
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|resourcePath
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|resourcePath
operator|=
name|resourcePath
expr_stmt|;
name|href
operator|=
name|prefix
operator|+
name|Text
operator|.
name|escapePath
argument_list|(
name|resourcePath
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getPrefix
parameter_list|()
block|{
return|return
name|prefix
return|;
block|}
specifier|public
name|String
name|getResourcePath
parameter_list|()
block|{
return|return
name|resourcePath
return|;
block|}
specifier|public
name|String
name|getWorkspacePath
parameter_list|()
block|{
return|return
literal|""
return|;
block|}
specifier|public
name|String
name|getWorkspaceName
parameter_list|()
block|{
return|return
name|workspaceName
return|;
block|}
specifier|public
name|boolean
name|isSameWorkspace
parameter_list|(
name|DavResourceLocator
name|locator
parameter_list|)
block|{
return|return
name|isSameWorkspace
argument_list|(
name|locator
operator|.
name|getWorkspaceName
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isSameWorkspace
parameter_list|(
name|String
name|workspaceName
parameter_list|)
block|{
return|return
name|getWorkspaceName
argument_list|()
operator|.
name|equals
argument_list|(
name|workspaceName
argument_list|)
return|;
block|}
specifier|public
name|String
name|getHref
parameter_list|(
name|boolean
name|isCollection
parameter_list|)
block|{
comment|// avoid doubled trailing '/' for the root item
name|String
name|suffix
init|=
operator|(
name|isCollection
operator|&&
operator|!
name|isRootLocation
argument_list|()
operator|)
condition|?
literal|"/"
else|:
literal|""
decl_stmt|;
return|return
name|href
operator|+
name|suffix
return|;
block|}
specifier|public
name|boolean
name|isRootLocation
parameter_list|()
block|{
return|return
literal|"/"
operator|.
name|equals
argument_list|(
name|resourcePath
argument_list|)
return|;
block|}
specifier|public
name|DavLocatorFactory
name|getFactory
parameter_list|()
block|{
return|return
name|davLocatorFactory
return|;
block|}
specifier|public
name|String
name|getRepositoryPath
parameter_list|()
block|{
return|return
name|getResourcePath
argument_list|()
return|;
block|}
comment|/**      * Computes the hash code from the href, which is built using the final      * fields prefix and resourcePath.      *      * @return the hash code      */
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|href
operator|.
name|hashCode
argument_list|()
return|;
block|}
comment|/**      * Equality of path is achieved if the specified object is a<code>DavResourceLocator</code>      * object with the same hash code.      *      * @param obj the object to compare to      * @return<code>true</code> if the 2 objects are equal;      *<code>false</code> otherwise      */
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|instanceof
name|DavResourceLocator
condition|)
block|{
name|DavResourceLocator
name|other
init|=
operator|(
name|DavResourceLocator
operator|)
name|obj
decl_stmt|;
return|return
name|hashCode
argument_list|()
operator|==
name|other
operator|.
name|hashCode
argument_list|()
return|;
block|}
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

