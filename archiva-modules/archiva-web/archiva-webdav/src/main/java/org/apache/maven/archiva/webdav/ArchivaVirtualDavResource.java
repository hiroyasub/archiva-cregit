begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|webdav
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|util
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|DavException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|DavResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|DavResourceFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|DavResourceIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|DavResourceLocator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|DavSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|MultiStatusResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|io
operator|.
name|InputContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|io
operator|.
name|OutputContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|lock
operator|.
name|ActiveLock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|lock
operator|.
name|LockInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|lock
operator|.
name|LockManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|lock
operator|.
name|Scope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|lock
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|property
operator|.
name|DavProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|property
operator|.
name|DavPropertyName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|property
operator|.
name|DavPropertyNameSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|property
operator|.
name|DavPropertySet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|property
operator|.
name|DefaultDavProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|property
operator|.
name|ResourceType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|webdav
operator|.
name|util
operator|.
name|IndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|webdav
operator|.
name|util
operator|.
name|MimeTypes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|format
operator|.
name|DateTimeFormatter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|format
operator|.
name|ISODateTimeFormat
import|;
end_import

begin_comment
comment|/**  * DavResource for virtual repositories  *   * @author<a href="mailto:oching@apache.org">Maria Odea Ching</a>  */
end_comment

begin_class
specifier|public
class|class
name|ArchivaVirtualDavResource
implements|implements
name|DavResource
block|{
specifier|public
specifier|static
specifier|final
name|String
name|HIDDEN_PATH_PREFIX
init|=
literal|"."
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|COMPLIANCE_CLASS
init|=
literal|"1"
decl_stmt|;
specifier|private
name|MimeTypes
name|mimeTypes
decl_stmt|;
specifier|private
name|ArchivaDavResourceLocator
name|locator
decl_stmt|;
specifier|private
name|DavResourceFactory
name|factory
decl_stmt|;
specifier|private
name|String
name|logicalResource
decl_stmt|;
specifier|private
name|DavPropertySet
name|properties
decl_stmt|;
specifier|private
name|boolean
name|propsInitialized
init|=
literal|false
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|METHODS
init|=
literal|"OPTIONS, GET, HEAD, POST, TRACE, PROPFIND, PROPPATCH, MKCOL"
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|File
argument_list|>
name|localResources
decl_stmt|;
specifier|public
name|ArchivaVirtualDavResource
parameter_list|(
name|List
argument_list|<
name|File
argument_list|>
name|localResources
parameter_list|,
name|String
name|logicalResource
parameter_list|,
name|MimeTypes
name|mimeTypes
parameter_list|,
name|ArchivaDavResourceLocator
name|locator
parameter_list|,
name|DavResourceFactory
name|factory
parameter_list|)
block|{
name|this
operator|.
name|localResources
operator|=
name|localResources
expr_stmt|;
name|this
operator|.
name|logicalResource
operator|=
name|logicalResource
expr_stmt|;
name|this
operator|.
name|mimeTypes
operator|=
name|mimeTypes
expr_stmt|;
name|this
operator|.
name|locator
operator|=
name|locator
expr_stmt|;
name|this
operator|.
name|factory
operator|=
name|factory
expr_stmt|;
name|this
operator|.
name|properties
operator|=
operator|new
name|DavPropertySet
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|spool
parameter_list|(
name|OutputContext
name|outputContext
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|outputContext
operator|.
name|hasStream
argument_list|()
condition|)
block|{
name|Collections
operator|.
name|sort
argument_list|(
name|localResources
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|localResourceFiles
init|=
operator|new
name|ArrayList
argument_list|<
name|File
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|File
name|resourceFile
range|:
name|localResources
control|)
block|{
if|if
condition|(
name|resourceFile
operator|.
name|exists
argument_list|()
condition|)
block|{
name|localResourceFiles
operator|.
name|add
argument_list|(
name|resourceFile
argument_list|)
expr_stmt|;
block|}
block|}
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|this
argument_list|,
name|localResourceFiles
argument_list|,
name|logicalResource
argument_list|)
decl_stmt|;
name|writer
operator|.
name|write
argument_list|(
name|outputContext
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|addLockManager
parameter_list|(
name|LockManager
name|arg0
parameter_list|)
block|{
block|}
specifier|public
name|void
name|addMember
parameter_list|(
name|DavResource
name|arg0
parameter_list|,
name|InputContext
name|arg1
parameter_list|)
throws|throws
name|DavException
block|{
block|}
specifier|public
name|MultiStatusResponse
name|alterProperties
parameter_list|(
name|List
name|arg0
parameter_list|)
throws|throws
name|DavException
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|MultiStatusResponse
name|alterProperties
parameter_list|(
name|DavPropertySet
name|arg0
parameter_list|,
name|DavPropertyNameSet
name|arg1
parameter_list|)
throws|throws
name|DavException
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|copy
parameter_list|(
name|DavResource
name|arg0
parameter_list|,
name|boolean
name|arg1
parameter_list|)
throws|throws
name|DavException
block|{
block|}
specifier|public
name|boolean
name|exists
parameter_list|()
block|{
comment|// localResources are already filtered (all files in the list are already existing)
return|return
literal|true
return|;
block|}
specifier|public
name|ActiveLock
name|getLock
parameter_list|(
name|Type
name|arg0
parameter_list|,
name|Scope
name|arg1
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|ActiveLock
index|[]
name|getLocks
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|DavResourceIterator
name|getMembers
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getSupportedMethods
parameter_list|()
block|{
return|return
name|METHODS
return|;
block|}
specifier|public
name|long
name|getModificationTime
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|boolean
name|hasLock
parameter_list|(
name|Type
name|arg0
parameter_list|,
name|Scope
name|arg1
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isCollection
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|isLockable
parameter_list|(
name|Type
name|arg0
parameter_list|,
name|Scope
name|arg1
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|ActiveLock
name|lock
parameter_list|(
name|LockInfo
name|arg0
parameter_list|)
throws|throws
name|DavException
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|move
parameter_list|(
name|DavResource
name|arg0
parameter_list|)
throws|throws
name|DavException
block|{
block|}
specifier|public
name|ActiveLock
name|refreshLock
parameter_list|(
name|LockInfo
name|arg0
parameter_list|,
name|String
name|arg1
parameter_list|)
throws|throws
name|DavException
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|removeMember
parameter_list|(
name|DavResource
name|arg0
parameter_list|)
throws|throws
name|DavException
block|{
block|}
specifier|public
name|void
name|unlock
parameter_list|(
name|String
name|arg0
parameter_list|)
throws|throws
name|DavException
block|{
block|}
specifier|public
name|String
name|getComplianceClass
parameter_list|()
block|{
return|return
name|COMPLIANCE_CLASS
return|;
block|}
specifier|public
name|DavResourceLocator
name|getLocator
parameter_list|()
block|{
return|return
name|locator
return|;
block|}
specifier|public
name|String
name|getResourcePath
parameter_list|()
block|{
return|return
name|locator
operator|.
name|getResourcePath
argument_list|()
return|;
block|}
specifier|public
name|String
name|getHref
parameter_list|()
block|{
return|return
name|locator
operator|.
name|getHref
argument_list|(
name|isCollection
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|DavResourceFactory
name|getFactory
parameter_list|()
block|{
return|return
name|factory
return|;
block|}
specifier|public
name|String
name|getDisplayName
parameter_list|()
block|{
name|String
name|resPath
init|=
name|getResourcePath
argument_list|()
decl_stmt|;
return|return
operator|(
name|resPath
operator|!=
literal|null
operator|)
condition|?
name|Text
operator|.
name|getName
argument_list|(
name|resPath
argument_list|)
else|:
name|resPath
return|;
block|}
specifier|public
name|DavSession
name|getSession
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|DavPropertyName
index|[]
name|getPropertyNames
parameter_list|()
block|{
return|return
name|getProperties
argument_list|()
operator|.
name|getPropertyNames
argument_list|()
return|;
block|}
specifier|public
name|DavProperty
name|getProperty
parameter_list|(
name|DavPropertyName
name|name
parameter_list|)
block|{
name|initProperties
argument_list|()
expr_stmt|;
return|return
name|properties
operator|.
name|get
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|public
name|DavPropertySet
name|getProperties
parameter_list|()
block|{
name|initProperties
argument_list|()
expr_stmt|;
return|return
name|properties
return|;
block|}
specifier|public
name|void
name|setProperty
parameter_list|(
name|DavProperty
name|property
parameter_list|)
throws|throws
name|DavException
block|{
block|}
specifier|public
name|void
name|removeProperty
parameter_list|(
name|DavPropertyName
name|propertyName
parameter_list|)
throws|throws
name|DavException
block|{
block|}
specifier|public
name|DavResource
name|getCollection
parameter_list|()
block|{
name|DavResource
name|parent
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|getResourcePath
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|getResourcePath
argument_list|()
operator|.
name|equals
argument_list|(
literal|"/"
argument_list|)
condition|)
block|{
name|String
name|parentPath
init|=
name|Text
operator|.
name|getRelativeParent
argument_list|(
name|getResourcePath
argument_list|()
argument_list|,
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
name|parentPath
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|parentPath
operator|=
literal|"/"
expr_stmt|;
block|}
name|DavResourceLocator
name|parentloc
init|=
name|locator
operator|.
name|getFactory
argument_list|()
operator|.
name|createResourceLocator
argument_list|(
name|locator
operator|.
name|getPrefix
argument_list|()
argument_list|,
name|parentPath
argument_list|)
decl_stmt|;
try|try
block|{
comment|// go back to ArchivaDavResourceFactory!
name|parent
operator|=
name|factory
operator|.
name|createResource
argument_list|(
name|parentloc
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|DavException
name|e
parameter_list|)
block|{
comment|// should not occur
block|}
block|}
return|return
name|parent
return|;
block|}
comment|/**      * Fill the set of properties      */
specifier|protected
name|void
name|initProperties
parameter_list|()
block|{
if|if
condition|(
operator|!
name|exists
argument_list|()
operator|||
name|propsInitialized
condition|)
block|{
return|return;
block|}
comment|// set (or reset) fundamental properties
if|if
condition|(
name|getDisplayName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|properties
operator|.
name|add
argument_list|(
operator|new
name|DefaultDavProperty
argument_list|(
name|DavPropertyName
operator|.
name|DISPLAYNAME
argument_list|,
name|getDisplayName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isCollection
argument_list|()
condition|)
block|{
name|properties
operator|.
name|add
argument_list|(
operator|new
name|ResourceType
argument_list|(
name|ResourceType
operator|.
name|COLLECTION
argument_list|)
argument_list|)
expr_stmt|;
comment|// Windows XP support
name|properties
operator|.
name|add
argument_list|(
operator|new
name|DefaultDavProperty
argument_list|(
name|DavPropertyName
operator|.
name|ISCOLLECTION
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|properties
operator|.
name|add
argument_list|(
operator|new
name|ResourceType
argument_list|(
name|ResourceType
operator|.
name|DEFAULT_RESOURCE
argument_list|)
argument_list|)
expr_stmt|;
comment|// Windows XP support
name|properties
operator|.
name|add
argument_list|(
operator|new
name|DefaultDavProperty
argument_list|(
name|DavPropertyName
operator|.
name|ISCOLLECTION
argument_list|,
literal|"0"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Need to get the ISO8601 date for properties
name|DateTime
name|dt
init|=
operator|new
name|DateTime
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|DateTimeFormatter
name|fmt
init|=
name|ISODateTimeFormat
operator|.
name|dateTime
argument_list|()
decl_stmt|;
name|String
name|modifiedDate
init|=
name|fmt
operator|.
name|print
argument_list|(
name|dt
argument_list|)
decl_stmt|;
name|properties
operator|.
name|add
argument_list|(
operator|new
name|DefaultDavProperty
argument_list|(
name|DavPropertyName
operator|.
name|GETLASTMODIFIED
argument_list|,
name|modifiedDate
argument_list|)
argument_list|)
expr_stmt|;
name|properties
operator|.
name|add
argument_list|(
operator|new
name|DefaultDavProperty
argument_list|(
name|DavPropertyName
operator|.
name|CREATIONDATE
argument_list|,
name|modifiedDate
argument_list|)
argument_list|)
expr_stmt|;
name|properties
operator|.
name|add
argument_list|(
operator|new
name|DefaultDavProperty
argument_list|(
name|DavPropertyName
operator|.
name|GETCONTENTLENGTH
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|propsInitialized
operator|=
literal|true
expr_stmt|;
block|}
block|}
end_class

end_unit

