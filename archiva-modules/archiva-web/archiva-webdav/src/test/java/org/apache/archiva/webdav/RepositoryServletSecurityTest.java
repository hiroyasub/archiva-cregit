begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|webdav
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|com
operator|.
name|gargoylesoftware
operator|.
name|htmlunit
operator|.
name|WebRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|gargoylesoftware
operator|.
name|htmlunit
operator|.
name|WebResponse
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|CacheManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ManagedRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|authentication
operator|.
name|AuthenticationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|authentication
operator|.
name|AuthenticationResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|authorization
operator|.
name|UnauthorizedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|integration
operator|.
name|filter
operator|.
name|authentication
operator|.
name|HttpAuthenticator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|system
operator|.
name|DefaultSecuritySession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|system
operator|.
name|SecuritySession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|users
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|users
operator|.
name|memory
operator|.
name|SimpleUser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|audit
operator|.
name|TestAuditListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|security
operator|.
name|ServletAuthenticator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|security
operator|.
name|common
operator|.
name|ArchivaRoleConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|test
operator|.
name|utils
operator|.
name|ArchivaSpringJUnit4ClassRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|webdav
operator|.
name|util
operator|.
name|MavenIndexerCleaner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|catalina
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|catalina
operator|.
name|deploy
operator|.
name|ApplicationParameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|catalina
operator|.
name|startup
operator|.
name|Tomcat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|DavSessionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|IMocksControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|web
operator|.
name|context
operator|.
name|ContextLoaderListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSession
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_comment
comment|/**  * RepositoryServletSecurityTest Test the flow of the authentication and authorization checks. This does not necessarily  * perform redback security checking.  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|ArchivaSpringJUnit4ClassRunner
operator|.
name|class
argument_list|)
annotation|@
name|ContextConfiguration
argument_list|(
name|locations
operator|=
block|{
literal|"classpath*:/META-INF/spring-context.xml"
block|,
literal|"classpath*:/spring-context.xml"
block|}
argument_list|)
specifier|public
class|class
name|RepositoryServletSecurityTest
extends|extends
name|TestCase
block|{
specifier|protected
specifier|static
specifier|final
name|String
name|REPOID_INTERNAL
init|=
literal|"internal"
decl_stmt|;
specifier|protected
name|File
name|repoRootInternal
decl_stmt|;
specifier|protected
name|ArchivaConfiguration
name|archivaConfiguration
decl_stmt|;
specifier|private
name|DavSessionProvider
name|davSessionProvider
decl_stmt|;
specifier|private
name|IMocksControl
name|servletAuthControl
decl_stmt|;
specifier|private
name|ServletAuthenticator
name|servletAuth
decl_stmt|;
specifier|private
name|IMocksControl
name|httpAuthControl
decl_stmt|;
specifier|private
name|HttpAuthenticator
name|httpAuth
decl_stmt|;
specifier|private
name|RepositoryServlet
name|servlet
decl_stmt|;
specifier|protected
name|Tomcat
name|tomcat
decl_stmt|;
specifier|protected
specifier|static
name|int
name|port
decl_stmt|;
annotation|@
name|Inject
name|ApplicationContext
name|applicationContext
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|String
name|appserverBase
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"appserver.base"
argument_list|,
operator|new
name|File
argument_list|(
literal|"target/appserver-base"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|testConf
init|=
operator|new
name|File
argument_list|(
literal|"src/test/resources/repository-archiva.xml"
argument_list|)
decl_stmt|;
name|File
name|testConfDest
init|=
operator|new
name|File
argument_list|(
name|appserverBase
argument_list|,
literal|"conf/archiva.xml"
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|copyFile
argument_list|(
name|testConf
argument_list|,
name|testConfDest
argument_list|)
expr_stmt|;
name|repoRootInternal
operator|=
operator|new
name|File
argument_list|(
name|appserverBase
argument_list|,
literal|"data/repositories/internal"
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|=
name|applicationContext
operator|.
name|getBean
argument_list|(
name|ArchivaConfiguration
operator|.
name|class
argument_list|)
expr_stmt|;
name|Configuration
name|config
init|=
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|config
operator|.
name|getManagedRepositoriesAsMap
argument_list|()
operator|.
name|containsKey
argument_list|(
name|REPOID_INTERNAL
argument_list|)
condition|)
block|{
name|config
operator|.
name|addManagedRepository
argument_list|(
name|createManagedRepository
argument_list|(
name|REPOID_INTERNAL
argument_list|,
literal|"Internal Test Repo"
argument_list|,
name|repoRootInternal
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|saveConfiguration
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
name|CacheManager
operator|.
name|getInstance
argument_list|()
operator|.
name|clearAll
argument_list|()
expr_stmt|;
comment|/*         sr = new ServletRunner( new File( "src/test/resources/WEB-INF/repository-servlet-security-test/web.xml" ) );         sr.registerServlet( "/repository/*", RepositoryServlet.class.getName() );         sc = sr.newClient();         */
name|tomcat
operator|=
operator|new
name|Tomcat
argument_list|()
expr_stmt|;
name|tomcat
operator|.
name|setBaseDir
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
argument_list|)
expr_stmt|;
name|tomcat
operator|.
name|setPort
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|Context
name|context
init|=
name|tomcat
operator|.
name|addContext
argument_list|(
literal|""
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
argument_list|)
decl_stmt|;
name|ApplicationParameter
name|applicationParameter
init|=
operator|new
name|ApplicationParameter
argument_list|()
decl_stmt|;
name|applicationParameter
operator|.
name|setName
argument_list|(
literal|"contextConfigLocation"
argument_list|)
expr_stmt|;
name|applicationParameter
operator|.
name|setValue
argument_list|(
name|getSpringConfigLocation
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|addApplicationParameter
argument_list|(
name|applicationParameter
argument_list|)
expr_stmt|;
name|context
operator|.
name|addApplicationListener
argument_list|(
name|ContextLoaderListener
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|addApplicationListener
argument_list|(
name|MavenIndexerCleaner
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Tomcat
operator|.
name|addServlet
argument_list|(
name|context
argument_list|,
literal|"repository"
argument_list|,
operator|new
name|UnauthenticatedRepositoryServlet
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|addServletMapping
argument_list|(
literal|"/repository/*"
argument_list|,
literal|"repository"
argument_list|)
expr_stmt|;
name|tomcat
operator|.
name|start
argument_list|()
expr_stmt|;
name|this
operator|.
name|port
operator|=
name|tomcat
operator|.
name|getConnector
argument_list|()
operator|.
name|getLocalPort
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|=
name|EasyMock
operator|.
name|createControl
argument_list|()
expr_stmt|;
name|servletAuth
operator|=
name|servletAuthControl
operator|.
name|createMock
argument_list|(
name|ServletAuthenticator
operator|.
name|class
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|=
name|EasyMock
operator|.
name|createControl
argument_list|()
expr_stmt|;
name|httpAuth
operator|=
name|httpAuthControl
operator|.
name|createMock
argument_list|(
name|HttpAuthenticator
operator|.
name|class
argument_list|)
expr_stmt|;
name|davSessionProvider
operator|=
operator|new
name|ArchivaDavSessionProvider
argument_list|(
name|servletAuth
argument_list|,
name|httpAuth
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|String
name|getSpringConfigLocation
parameter_list|()
block|{
return|return
literal|"classpath*:/META-INF/spring-context.xml,classpath*:/spring-context-servlet-security-test.xml"
return|;
block|}
specifier|protected
name|ManagedRepositoryConfiguration
name|createManagedRepository
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|,
name|File
name|location
parameter_list|)
block|{
name|ManagedRepositoryConfiguration
name|repo
init|=
operator|new
name|ManagedRepositoryConfiguration
argument_list|()
decl_stmt|;
name|repo
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setLocation
argument_list|(
name|location
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|repo
return|;
block|}
specifier|protected
name|void
name|saveConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|saveConfiguration
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|saveConfiguration
parameter_list|(
name|ArchivaConfiguration
name|archivaConfiguration
parameter_list|)
throws|throws
name|Exception
block|{
name|archivaConfiguration
operator|.
name|save
argument_list|(
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|setupCleanRepo
parameter_list|(
name|File
name|repoRootDir
parameter_list|)
throws|throws
name|IOException
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|repoRootDir
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|repoRootDir
operator|.
name|exists
argument_list|()
condition|)
block|{
name|repoRootDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|repoRootInternal
operator|.
name|exists
argument_list|()
condition|)
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|repoRootInternal
argument_list|)
expr_stmt|;
block|}
name|servlet
operator|=
literal|null
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|tomcat
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|tomcat
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
comment|// test deploy with invalid user, and guest has no write access to repo
comment|// 401 must be returned
annotation|@
name|Ignore
argument_list|(
literal|"rewrite"
argument_list|)
specifier|public
name|void
name|testPutWithInvalidUserAndGuestHasNoWriteAccess
parameter_list|()
throws|throws
name|Exception
block|{
name|setupCleanRepo
argument_list|(
name|repoRootInternal
argument_list|)
expr_stmt|;
name|String
name|putUrl
init|=
literal|"http://machine.com/repository/internal/path/to/artifact.jar"
decl_stmt|;
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/artifact.jar"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"artifact.jar inputstream"
argument_list|,
name|is
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|AbstractRepositoryServletTestCase
operator|.
name|PutMethodWebRequest
argument_list|(
name|putUrl
argument_list|,
name|is
argument_list|,
literal|"application/octet-stream"
argument_list|)
decl_stmt|;
comment|//InvocationContext ic = sc.newInvocation( request );
comment|//servlet = (RepositoryServlet) ic.getServlet();
name|servlet
operator|.
name|setDavSessionProvider
argument_list|(
name|davSessionProvider
argument_list|)
expr_stmt|;
name|AuthenticationResult
name|result
init|=
operator|new
name|AuthenticationResult
argument_list|()
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
name|EasyMock
operator|.
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|EasyMock
operator|.
name|anyObject
argument_list|(
name|AuthenticationResult
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andThrow
argument_list|(
operator|new
name|AuthenticationException
argument_list|(
literal|"Authentication error"
argument_list|)
argument_list|)
expr_stmt|;
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
literal|"guest"
argument_list|,
literal|"internal"
argument_list|,
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_UPLOAD
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andThrow
argument_list|(
operator|new
name|UnauthorizedException
argument_list|(
literal|"'guest' has no write access to repository"
argument_list|)
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
comment|//servlet.service( ic.getRequest(), ic.getResponse() );
name|httpAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
comment|//assertEquals(HttpServletResponse.SC_UNAUTHORIZED, response.getResponseCode());
block|}
comment|// test deploy with invalid user, but guest has write access to repo
annotation|@
name|Ignore
argument_list|(
literal|"rewrite"
argument_list|)
specifier|public
name|void
name|testPutWithInvalidUserAndGuestHasWriteAccess
parameter_list|()
throws|throws
name|Exception
block|{
name|setupCleanRepo
argument_list|(
name|repoRootInternal
argument_list|)
expr_stmt|;
name|String
name|putUrl
init|=
literal|"http://machine.com/repository/internal/path/to/artifact.jar"
decl_stmt|;
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/artifact.jar"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"artifact.jar inputstream"
argument_list|,
name|is
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|AbstractRepositoryServletTestCase
operator|.
name|PutMethodWebRequest
argument_list|(
name|putUrl
argument_list|,
name|is
argument_list|,
literal|"application/octet-stream"
argument_list|)
decl_stmt|;
comment|//InvocationContext ic = sc.newInvocation( request );
comment|//servlet = (RepositoryServlet) ic.getServlet();
name|servlet
operator|.
name|setDavSessionProvider
argument_list|(
name|davSessionProvider
argument_list|)
expr_stmt|;
name|ArchivaDavResourceFactory
name|archivaDavResourceFactory
init|=
operator|(
name|ArchivaDavResourceFactory
operator|)
name|servlet
operator|.
name|getResourceFactory
argument_list|()
decl_stmt|;
name|archivaDavResourceFactory
operator|.
name|setHttpAuth
argument_list|(
name|httpAuth
argument_list|)
expr_stmt|;
name|archivaDavResourceFactory
operator|.
name|setServletAuth
argument_list|(
name|servletAuth
argument_list|)
expr_stmt|;
name|servlet
operator|.
name|setResourceFactory
argument_list|(
name|archivaDavResourceFactory
argument_list|)
expr_stmt|;
name|AuthenticationResult
name|result
init|=
operator|new
name|AuthenticationResult
argument_list|()
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|AuthenticationResult
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andThrow
argument_list|(
operator|new
name|AuthenticationException
argument_list|(
literal|"Authentication error"
argument_list|)
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
literal|"guest"
argument_list|,
literal|"internal"
argument_list|,
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_UPLOAD
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// ArchivaDavResourceFactory#isAuthorized()
name|SecuritySession
name|session
init|=
operator|new
name|DefaultSecuritySession
argument_list|()
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getSecuritySession
argument_list|(
name|anyObject
argument_list|(
name|HttpSession
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|result
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andThrow
argument_list|(
operator|new
name|AuthenticationException
argument_list|(
literal|"Authentication error"
argument_list|)
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getSessionUser
argument_list|(
name|anyObject
argument_list|(
name|HttpSession
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
comment|// check if guest has write access
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
literal|"guest"
argument_list|,
literal|"internal"
argument_list|,
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_UPLOAD
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
comment|//servlet.service( ic.getRequest(), ic.getResponse() );
name|httpAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
comment|// assertEquals( HttpServletResponse.SC_CREATED, response.getResponseCode() );
block|}
comment|// test deploy with a valid user with no write access
annotation|@
name|Ignore
argument_list|(
literal|"rewrite"
argument_list|)
specifier|public
name|void
name|testPutWithValidUserWithNoWriteAccess
parameter_list|()
throws|throws
name|Exception
block|{
name|setupCleanRepo
argument_list|(
name|repoRootInternal
argument_list|)
expr_stmt|;
name|String
name|putUrl
init|=
literal|"http://machine.com/repository/internal/path/to/artifact.jar"
decl_stmt|;
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/artifact.jar"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"artifact.jar inputstream"
argument_list|,
name|is
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|AbstractRepositoryServletTestCase
operator|.
name|PutMethodWebRequest
argument_list|(
name|putUrl
argument_list|,
name|is
argument_list|,
literal|"application/octet-stream"
argument_list|)
decl_stmt|;
comment|//InvocationContext ic = sc.newInvocation( request );
comment|//servlet = (RepositoryServlet) ic.getServlet();
name|servlet
operator|.
name|setDavSessionProvider
argument_list|(
name|davSessionProvider
argument_list|)
expr_stmt|;
name|ArchivaDavResourceFactory
name|archivaDavResourceFactory
init|=
operator|(
name|ArchivaDavResourceFactory
operator|)
name|servlet
operator|.
name|getResourceFactory
argument_list|()
decl_stmt|;
name|archivaDavResourceFactory
operator|.
name|setHttpAuth
argument_list|(
name|httpAuth
argument_list|)
expr_stmt|;
name|archivaDavResourceFactory
operator|.
name|setServletAuth
argument_list|(
name|servletAuth
argument_list|)
expr_stmt|;
name|servlet
operator|.
name|setResourceFactory
argument_list|(
name|archivaDavResourceFactory
argument_list|)
expr_stmt|;
name|AuthenticationResult
name|result
init|=
operator|new
name|AuthenticationResult
argument_list|()
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|AuthenticationResult
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// ArchivaDavResourceFactory#isAuthorized()
name|SecuritySession
name|session
init|=
operator|new
name|DefaultSecuritySession
argument_list|()
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|result
argument_list|)
expr_stmt|;
comment|//EasyMock.expect( httpAuth.getSecuritySession( ic.getRequest().getSession( true ) ) ).andReturn( session );
comment|//EasyMock.expect( httpAuth.getSessionUser( ic.getRequest().getSession() ) ).andReturn( new SimpleUser() );
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|result
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|session
argument_list|)
argument_list|,
name|eq
argument_list|(
literal|"internal"
argument_list|)
argument_list|,
name|eq
argument_list|(
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_UPLOAD
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andThrow
argument_list|(
operator|new
name|UnauthorizedException
argument_list|(
literal|"User not authorized"
argument_list|)
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
comment|//servlet.service( ic.getRequest(), ic.getResponse() );
name|httpAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
comment|// assertEquals(HttpServletResponse.SC_UNAUTHORIZED, response.getResponseCode());
block|}
comment|// test deploy with a valid user with write access
annotation|@
name|Ignore
argument_list|(
literal|"rewrite"
argument_list|)
specifier|public
name|void
name|testPutWithValidUserWithWriteAccess
parameter_list|()
throws|throws
name|Exception
block|{
name|setupCleanRepo
argument_list|(
name|repoRootInternal
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|repoRootInternal
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|putUrl
init|=
literal|"http://machine.com/repository/internal/path/to/artifact.jar"
decl_stmt|;
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/artifact.jar"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"artifact.jar inputstream"
argument_list|,
name|is
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|AbstractRepositoryServletTestCase
operator|.
name|PutMethodWebRequest
argument_list|(
name|putUrl
argument_list|,
name|is
argument_list|,
literal|"application/octet-stream"
argument_list|)
decl_stmt|;
comment|//InvocationContext ic = sc.newInvocation( request );
comment|//servlet = (RepositoryServlet) ic.getServlet();
name|servlet
operator|.
name|setDavSessionProvider
argument_list|(
name|davSessionProvider
argument_list|)
expr_stmt|;
name|ArchivaDavResourceFactory
name|archivaDavResourceFactory
init|=
operator|(
name|ArchivaDavResourceFactory
operator|)
name|servlet
operator|.
name|getResourceFactory
argument_list|()
decl_stmt|;
name|archivaDavResourceFactory
operator|.
name|setHttpAuth
argument_list|(
name|httpAuth
argument_list|)
expr_stmt|;
name|archivaDavResourceFactory
operator|.
name|setServletAuth
argument_list|(
name|servletAuth
argument_list|)
expr_stmt|;
name|TestAuditListener
name|listener
init|=
operator|new
name|TestAuditListener
argument_list|()
decl_stmt|;
name|archivaDavResourceFactory
operator|.
name|addAuditListener
argument_list|(
name|listener
argument_list|)
expr_stmt|;
name|servlet
operator|.
name|setResourceFactory
argument_list|(
name|archivaDavResourceFactory
argument_list|)
expr_stmt|;
name|AuthenticationResult
name|result
init|=
operator|new
name|AuthenticationResult
argument_list|()
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|AuthenticationResult
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|User
name|user
init|=
operator|new
name|SimpleUser
argument_list|()
decl_stmt|;
name|user
operator|.
name|setUsername
argument_list|(
literal|"admin"
argument_list|)
expr_stmt|;
comment|// ArchivaDavResourceFactory#isAuthorized()
name|SecuritySession
name|session
init|=
operator|new
name|DefaultSecuritySession
argument_list|()
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|result
argument_list|)
expr_stmt|;
comment|//EasyMock.expect( httpAuth.getSecuritySession( ic.getRequest().getSession( true ) ) ).andReturn( session );
comment|//EasyMock.expect( httpAuth.getSessionUser( ic.getRequest().getSession() ) ).andReturn( user );
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|result
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|session
argument_list|)
argument_list|,
name|eq
argument_list|(
literal|"internal"
argument_list|)
argument_list|,
name|eq
argument_list|(
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_UPLOAD
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
comment|//servlet.service( ic.getRequest(), ic.getResponse() );
name|httpAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
comment|// assertEquals(HttpServletResponse.SC_CREATED, response.getResponseCode());
name|assertEquals
argument_list|(
literal|"admin"
argument_list|,
name|listener
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getUserId
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// test get with invalid user, and guest has read access to repo
annotation|@
name|Ignore
argument_list|(
literal|"rewrite"
argument_list|)
specifier|public
name|void
name|testGetWithInvalidUserAndGuestHasReadAccess
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|commonsLangJar
init|=
literal|"commons-lang/commons-lang/2.1/commons-lang-2.1.jar"
decl_stmt|;
name|String
name|expectedArtifactContents
init|=
literal|"dummy-commons-lang-artifact"
decl_stmt|;
name|File
name|artifactFile
init|=
operator|new
name|File
argument_list|(
name|repoRootInternal
argument_list|,
name|commonsLangJar
argument_list|)
decl_stmt|;
name|artifactFile
operator|.
name|getParentFile
argument_list|()
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|artifactFile
argument_list|,
name|expectedArtifactContents
argument_list|,
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|AbstractRepositoryServletTestCase
operator|.
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/internal/"
operator|+
name|commonsLangJar
argument_list|)
decl_stmt|;
comment|//InvocationContext ic = sc.newInvocation( request );
comment|//servlet = (RepositoryServlet) ic.getServlet();
name|servlet
operator|.
name|setDavSessionProvider
argument_list|(
name|davSessionProvider
argument_list|)
expr_stmt|;
name|ArchivaDavResourceFactory
name|archivaDavResourceFactory
init|=
operator|(
name|ArchivaDavResourceFactory
operator|)
name|servlet
operator|.
name|getResourceFactory
argument_list|()
decl_stmt|;
name|archivaDavResourceFactory
operator|.
name|setHttpAuth
argument_list|(
name|httpAuth
argument_list|)
expr_stmt|;
name|archivaDavResourceFactory
operator|.
name|setServletAuth
argument_list|(
name|servletAuth
argument_list|)
expr_stmt|;
name|servlet
operator|.
name|setResourceFactory
argument_list|(
name|archivaDavResourceFactory
argument_list|)
expr_stmt|;
name|AuthenticationResult
name|result
init|=
operator|new
name|AuthenticationResult
argument_list|()
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|AuthenticationResult
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andThrow
argument_list|(
operator|new
name|AuthenticationException
argument_list|(
literal|"Authentication error"
argument_list|)
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
literal|"guest"
argument_list|,
literal|"internal"
argument_list|,
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_ACCESS
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// ArchivaDavResourceFactory#isAuthorized()
name|SecuritySession
name|session
init|=
operator|new
name|DefaultSecuritySession
argument_list|()
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getSecuritySession
argument_list|(
name|anyObject
argument_list|(
name|HttpSession
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getSessionUser
argument_list|(
name|anyObject
argument_list|(
name|HttpSession
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|result
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|session
argument_list|)
argument_list|,
name|eq
argument_list|(
literal|"internal"
argument_list|)
argument_list|,
name|eq
argument_list|(
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_ACCESS
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|WebResponse
name|response
init|=
literal|null
decl_stmt|;
comment|// sc.getResponse( request );
name|httpAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|,
name|response
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Expected file contents"
argument_list|,
name|expectedArtifactContents
argument_list|,
name|response
operator|.
name|getContentAsString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// test get with invalid user, and guest has no read access to repo
annotation|@
name|Ignore
argument_list|(
literal|"rewrite"
argument_list|)
specifier|public
name|void
name|testGetWithInvalidUserAndGuestHasNoReadAccess
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|commonsLangJar
init|=
literal|"commons-lang/commons-lang/2.1/commons-lang-2.1.jar"
decl_stmt|;
name|String
name|expectedArtifactContents
init|=
literal|"dummy-commons-lang-artifact"
decl_stmt|;
name|File
name|artifactFile
init|=
operator|new
name|File
argument_list|(
name|repoRootInternal
argument_list|,
name|commonsLangJar
argument_list|)
decl_stmt|;
name|artifactFile
operator|.
name|getParentFile
argument_list|()
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|artifactFile
argument_list|,
name|expectedArtifactContents
argument_list|,
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|AbstractRepositoryServletTestCase
operator|.
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/internal/"
operator|+
name|commonsLangJar
argument_list|)
decl_stmt|;
comment|//InvocationContext ic = sc.newInvocation( request );
comment|//servlet = (RepositoryServlet) ic.getServlet();
name|servlet
operator|.
name|setDavSessionProvider
argument_list|(
name|davSessionProvider
argument_list|)
expr_stmt|;
name|AuthenticationResult
name|result
init|=
operator|new
name|AuthenticationResult
argument_list|()
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|AuthenticationResult
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andThrow
argument_list|(
operator|new
name|AuthenticationException
argument_list|(
literal|"Authentication error"
argument_list|)
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
literal|"guest"
argument_list|,
literal|"internal"
argument_list|,
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_ACCESS
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|WebResponse
name|response
init|=
literal|null
decl_stmt|;
comment|//sc.getResponse( request );
name|httpAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|HttpServletResponse
operator|.
name|SC_UNAUTHORIZED
argument_list|,
name|response
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// test get with valid user with read access to repo
annotation|@
name|Ignore
argument_list|(
literal|"rewrite"
argument_list|)
specifier|public
name|void
name|testGetWithAValidUserWithReadAccess
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|commonsLangJar
init|=
literal|"commons-lang/commons-lang/2.1/commons-lang-2.1.jar"
decl_stmt|;
name|String
name|expectedArtifactContents
init|=
literal|"dummy-commons-lang-artifact"
decl_stmt|;
name|File
name|artifactFile
init|=
operator|new
name|File
argument_list|(
name|repoRootInternal
argument_list|,
name|commonsLangJar
argument_list|)
decl_stmt|;
name|artifactFile
operator|.
name|getParentFile
argument_list|()
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|artifactFile
argument_list|,
name|expectedArtifactContents
argument_list|,
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|AbstractRepositoryServletTestCase
operator|.
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/internal/"
operator|+
name|commonsLangJar
argument_list|)
decl_stmt|;
comment|//InvocationContext ic = sc.newInvocation( request );
comment|//servlet = (RepositoryServlet) ic.getServlet();
name|servlet
operator|.
name|setDavSessionProvider
argument_list|(
name|davSessionProvider
argument_list|)
expr_stmt|;
name|ArchivaDavResourceFactory
name|archivaDavResourceFactory
init|=
operator|(
name|ArchivaDavResourceFactory
operator|)
name|servlet
operator|.
name|getResourceFactory
argument_list|()
decl_stmt|;
name|archivaDavResourceFactory
operator|.
name|setHttpAuth
argument_list|(
name|httpAuth
argument_list|)
expr_stmt|;
name|archivaDavResourceFactory
operator|.
name|setServletAuth
argument_list|(
name|servletAuth
argument_list|)
expr_stmt|;
name|servlet
operator|.
name|setResourceFactory
argument_list|(
name|archivaDavResourceFactory
argument_list|)
expr_stmt|;
name|AuthenticationResult
name|result
init|=
operator|new
name|AuthenticationResult
argument_list|()
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|AuthenticationResult
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// ArchivaDavResourceFactory#isAuthorized()
name|SecuritySession
name|session
init|=
operator|new
name|DefaultSecuritySession
argument_list|()
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getSecuritySession
argument_list|(
name|anyObject
argument_list|(
name|HttpSession
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getSessionUser
argument_list|(
name|anyObject
argument_list|(
name|HttpSession
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|new
name|SimpleUser
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|result
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|session
argument_list|)
argument_list|,
name|eq
argument_list|(
literal|"internal"
argument_list|)
argument_list|,
name|eq
argument_list|(
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_ACCESS
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|WebResponse
name|response
init|=
literal|null
decl_stmt|;
comment|// sc.getResponse( request );
name|httpAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|,
name|response
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Expected file contents"
argument_list|,
name|expectedArtifactContents
argument_list|,
name|response
operator|.
name|getContentAsString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// test get with valid user with no read access to repo
annotation|@
name|Ignore
argument_list|(
literal|"rewrite"
argument_list|)
specifier|public
name|void
name|testGetWithAValidUserWithNoReadAccess
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|commonsLangJar
init|=
literal|"commons-lang/commons-lang/2.1/commons-lang-2.1.jar"
decl_stmt|;
name|String
name|expectedArtifactContents
init|=
literal|"dummy-commons-lang-artifact"
decl_stmt|;
name|File
name|artifactFile
init|=
operator|new
name|File
argument_list|(
name|repoRootInternal
argument_list|,
name|commonsLangJar
argument_list|)
decl_stmt|;
name|artifactFile
operator|.
name|getParentFile
argument_list|()
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|artifactFile
argument_list|,
name|expectedArtifactContents
argument_list|,
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|AbstractRepositoryServletTestCase
operator|.
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/internal/"
operator|+
name|commonsLangJar
argument_list|)
decl_stmt|;
comment|//InvocationContext ic = sc.newInvocation( request );
comment|//servlet = (RepositoryServlet) ic.getServlet();
name|servlet
operator|.
name|setDavSessionProvider
argument_list|(
name|davSessionProvider
argument_list|)
expr_stmt|;
name|ArchivaDavResourceFactory
name|archivaDavResourceFactory
init|=
operator|(
name|ArchivaDavResourceFactory
operator|)
name|servlet
operator|.
name|getResourceFactory
argument_list|()
decl_stmt|;
name|archivaDavResourceFactory
operator|.
name|setHttpAuth
argument_list|(
name|httpAuth
argument_list|)
expr_stmt|;
name|archivaDavResourceFactory
operator|.
name|setServletAuth
argument_list|(
name|servletAuth
argument_list|)
expr_stmt|;
name|servlet
operator|.
name|setResourceFactory
argument_list|(
name|archivaDavResourceFactory
argument_list|)
expr_stmt|;
name|AuthenticationResult
name|result
init|=
operator|new
name|AuthenticationResult
argument_list|()
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|AuthenticationResult
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// ArchivaDavResourceFactory#isAuthorized()
name|SecuritySession
name|session
init|=
operator|new
name|DefaultSecuritySession
argument_list|()
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|anyObject
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getSecuritySession
argument_list|(
name|anyObject
argument_list|(
name|HttpSession
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|httpAuth
operator|.
name|getSessionUser
argument_list|(
name|anyObject
argument_list|(
name|HttpSession
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|new
name|SimpleUser
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|result
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
name|anyObject
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|session
argument_list|)
argument_list|,
name|eq
argument_list|(
literal|"internal"
argument_list|)
argument_list|,
name|eq
argument_list|(
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_ACCESS
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andThrow
argument_list|(
operator|new
name|UnauthorizedException
argument_list|(
literal|"User not authorized to read repository."
argument_list|)
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|WebResponse
name|response
init|=
literal|null
decl_stmt|;
comment|//sc.getResponse( request );
name|httpAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|HttpServletResponse
operator|.
name|SC_UNAUTHORIZED
argument_list|,
name|response
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

