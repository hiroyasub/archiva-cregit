begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|webdav
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|com
operator|.
name|gargoylesoftware
operator|.
name|htmlunit
operator|.
name|WebRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|gargoylesoftware
operator|.
name|htmlunit
operator|.
name|WebResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsoup
operator|.
name|Jsoup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsoup
operator|.
name|nodes
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsoup
operator|.
name|nodes
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsoup
operator|.
name|select
operator|.
name|Elements
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertThat
import|;
end_import

begin_comment
comment|/**  * RepositoryServletBrowseTest  */
end_comment

begin_class
specifier|public
class|class
name|RepositoryServletBrowseTest
extends|extends
name|AbstractRepositoryServletTestCase
block|{
annotation|@
name|Override
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|Files
operator|.
name|createDirectories
argument_list|(
name|repoRootInternal
operator|.
name|resolve
argument_list|(
literal|"org/apache/archiva"
argument_list|)
argument_list|)
expr_stmt|;
name|Files
operator|.
name|createDirectories
argument_list|(
name|repoRootInternal
operator|.
name|resolve
argument_list|(
literal|"org/codehaus/mojo/"
argument_list|)
argument_list|)
expr_stmt|;
name|Files
operator|.
name|createDirectories
argument_list|(
name|repoRootInternal
operator|.
name|resolve
argument_list|(
literal|"net/sourceforge"
argument_list|)
argument_list|)
expr_stmt|;
name|Files
operator|.
name|createDirectories
argument_list|(
name|repoRootInternal
operator|.
name|resolve
argument_list|(
literal|"commons-lang"
argument_list|)
argument_list|)
expr_stmt|;
name|startRepository
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBrowse
parameter_list|()
throws|throws
name|Exception
block|{
name|WebRequest
name|request
init|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/internal/"
argument_list|)
decl_stmt|;
name|WebResponse
name|response
init|=
name|getServletUnitClient
argument_list|()
operator|.
name|getResponse
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Response"
argument_list|,
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|,
name|response
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
comment|// dumpResponse( response );
name|List
argument_list|<
name|String
argument_list|>
name|expectedLinks
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|".index/"
argument_list|,
literal|".indexer/"
argument_list|,
literal|"commons-lang/"
argument_list|,
literal|"net/"
argument_list|,
literal|"org/"
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
name|Jsoup
operator|.
name|parse
argument_list|(
name|response
operator|.
name|getContentAsString
argument_list|()
argument_list|)
decl_stmt|;
name|Elements
name|elements
init|=
name|document
operator|.
name|getElementsByTag
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|assertLinks
argument_list|(
name|expectedLinks
argument_list|,
name|elements
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBrowseSubdirectory
parameter_list|()
throws|throws
name|Exception
block|{
name|WebRequest
name|request
init|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/internal/org"
argument_list|)
decl_stmt|;
name|WebResponse
name|response
init|=
name|getServletUnitClient
argument_list|()
operator|.
name|getResponse
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Response"
argument_list|,
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|,
name|response
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedLinks
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"../"
argument_list|,
literal|"apache/"
argument_list|,
literal|"codehaus/"
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
name|Jsoup
operator|.
name|parse
argument_list|(
name|response
operator|.
name|getContentAsString
argument_list|()
argument_list|)
decl_stmt|;
name|Elements
name|elements
init|=
name|document
operator|.
name|getElementsByTag
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|assertLinks
argument_list|(
name|expectedLinks
argument_list|,
name|elements
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetDirectoryWhichHasMatchingFile
parameter_list|()
comment|//MRM-893
throws|throws
name|Exception
block|{
name|Files
operator|.
name|createDirectories
argument_list|(
name|repoRootInternal
operator|.
name|resolve
argument_list|(
literal|"org/apache/archiva/artifactId/1.0"
argument_list|)
argument_list|)
expr_stmt|;
name|Files
operator|.
name|createFile
argument_list|(
name|repoRootInternal
operator|.
name|resolve
argument_list|(
literal|"org/apache/archiva/artifactId/1.0/artifactId-1.0.jar"
argument_list|)
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/internal/org/apache/archiva/artifactId"
argument_list|)
decl_stmt|;
name|WebResponse
name|response
init|=
name|getServletUnitClient
argument_list|()
operator|.
name|getResponse
argument_list|(
name|request
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"1st Response"
argument_list|,
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|,
name|response
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/internal/org/apache/archiva/artifactId/"
argument_list|)
expr_stmt|;
name|response
operator|=
name|getServletUnitClient
argument_list|()
operator|.
name|getResponse
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2nd Response"
argument_list|,
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|,
name|response
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/internal/org/apache/archiva/artifactId/1.0/artifactId-1.0.jar"
argument_list|)
expr_stmt|;
name|response
operator|=
name|getServletUnitClient
argument_list|()
operator|.
name|getResponse
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"3rd Response"
argument_list|,
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|,
name|response
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/internal/org/apache/archiva/artifactId/1.0/artifactId-1.0.jar/"
argument_list|)
expr_stmt|;
name|response
operator|=
name|getServletUnitClient
argument_list|()
operator|.
name|getResponse
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"4th Response"
argument_list|,
name|HttpServletResponse
operator|.
name|SC_NOT_FOUND
argument_list|,
name|response
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertLinks
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|expectedLinks
parameter_list|,
name|Elements
name|actualLinks
parameter_list|)
block|{
name|assertThat
argument_list|(
name|actualLinks
argument_list|)
operator|.
name|hasSize
argument_list|(
name|expectedLinks
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|actualLinks
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Element
name|element
init|=
name|actualLinks
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Link["
operator|+
name|i
operator|+
literal|"]"
argument_list|,
name|expectedLinks
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|element
operator|.
name|attr
argument_list|(
literal|"href"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

