begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|webdav
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|CacheManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|DavSessionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ManagedRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|security
operator|.
name|ArchivaRoleConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|security
operator|.
name|ArchivaXworkUser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|security
operator|.
name|ServletAuthenticator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|authentication
operator|.
name|AuthenticationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|authentication
operator|.
name|AuthenticationResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|authorization
operator|.
name|UnauthorizedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|system
operator|.
name|DefaultSecuritySession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|system
operator|.
name|SecuritySession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|users
operator|.
name|memory
operator|.
name|SimpleUser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|spring
operator|.
name|PlexusInSpringTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|redback
operator|.
name|integration
operator|.
name|filter
operator|.
name|authentication
operator|.
name|HttpAuthenticator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|redback
operator|.
name|integration
operator|.
name|filter
operator|.
name|authentication
operator|.
name|basic
operator|.
name|HttpBasicAuthentication
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|MockControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|MockClassControl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|httpunit
operator|.
name|GetMethodWebRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|httpunit
operator|.
name|HttpUnitOptions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|httpunit
operator|.
name|PutMethodWebRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|httpunit
operator|.
name|WebRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|httpunit
operator|.
name|WebResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|servletunit
operator|.
name|InvocationContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|servletunit
operator|.
name|ServletRunner
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|servletunit
operator|.
name|ServletUnitClient
import|;
end_import

begin_comment
comment|/**  * RepositoryServletSecurityTest Test the flow of the authentication and authorization checks. This does not necessarily  * perform redback security checking.  *   * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|RepositoryServletSecurityTest
extends|extends
name|PlexusInSpringTestCase
block|{
specifier|protected
specifier|static
specifier|final
name|String
name|REPOID_INTERNAL
init|=
literal|"internal"
decl_stmt|;
specifier|protected
name|ServletUnitClient
name|sc
decl_stmt|;
specifier|protected
name|File
name|repoRootInternal
decl_stmt|;
specifier|private
name|ServletRunner
name|sr
decl_stmt|;
specifier|protected
name|ArchivaConfiguration
name|archivaConfiguration
decl_stmt|;
specifier|private
name|DavSessionProvider
name|davSessionProvider
decl_stmt|;
specifier|private
name|MockControl
name|servletAuthControl
decl_stmt|;
specifier|private
name|ServletAuthenticator
name|servletAuth
decl_stmt|;
specifier|private
name|MockClassControl
name|httpAuthControl
decl_stmt|;
specifier|private
name|HttpAuthenticator
name|httpAuth
decl_stmt|;
specifier|private
name|RepositoryServlet
name|servlet
decl_stmt|;
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|String
name|appserverBase
init|=
name|getTestFile
argument_list|(
literal|"target/appserver-base"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"appserver.base"
argument_list|,
name|appserverBase
argument_list|)
expr_stmt|;
name|File
name|testConf
init|=
name|getTestFile
argument_list|(
literal|"src/test/resources/repository-archiva.xml"
argument_list|)
decl_stmt|;
name|File
name|testConfDest
init|=
operator|new
name|File
argument_list|(
name|appserverBase
argument_list|,
literal|"conf/archiva.xml"
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|copyFile
argument_list|(
name|testConf
argument_list|,
name|testConfDest
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|=
operator|(
name|ArchivaConfiguration
operator|)
name|lookup
argument_list|(
name|ArchivaConfiguration
operator|.
name|class
argument_list|)
expr_stmt|;
name|repoRootInternal
operator|=
operator|new
name|File
argument_list|(
name|appserverBase
argument_list|,
literal|"data/repositories/internal"
argument_list|)
expr_stmt|;
name|Configuration
name|config
init|=
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|config
operator|.
name|addManagedRepository
argument_list|(
name|createManagedRepository
argument_list|(
name|REPOID_INTERNAL
argument_list|,
literal|"Internal Test Repo"
argument_list|,
name|repoRootInternal
argument_list|)
argument_list|)
expr_stmt|;
name|saveConfiguration
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
name|CacheManager
operator|.
name|getInstance
argument_list|()
operator|.
name|removeCache
argument_list|(
literal|"url-failures-cache"
argument_list|)
expr_stmt|;
name|HttpUnitOptions
operator|.
name|setExceptionsThrownOnErrorStatus
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|sr
operator|=
operator|new
name|ServletRunner
argument_list|(
name|getTestFile
argument_list|(
literal|"src/test/resources/WEB-INF/repository-servlet-security-test/web.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|sr
operator|.
name|registerServlet
argument_list|(
literal|"/repository/*"
argument_list|,
name|RepositoryServlet
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|sc
operator|=
name|sr
operator|.
name|newClient
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|ServletAuthenticator
operator|.
name|class
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|setDefaultMatcher
argument_list|(
name|MockControl
operator|.
name|ALWAYS_MATCHER
argument_list|)
expr_stmt|;
name|servletAuth
operator|=
operator|(
name|ServletAuthenticator
operator|)
name|servletAuthControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|httpAuthControl
operator|=
name|MockClassControl
operator|.
name|createControl
argument_list|(
name|HttpBasicAuthentication
operator|.
name|class
argument_list|,
name|HttpBasicAuthentication
operator|.
name|class
operator|.
name|getMethods
argument_list|()
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|setDefaultMatcher
argument_list|(
name|MockControl
operator|.
name|ALWAYS_MATCHER
argument_list|)
expr_stmt|;
name|httpAuth
operator|=
operator|(
name|HttpAuthenticator
operator|)
name|httpAuthControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|ArchivaXworkUser
name|archivaXworkUser
init|=
operator|(
name|ArchivaXworkUser
operator|)
name|lookup
argument_list|(
name|ArchivaXworkUser
operator|.
name|class
argument_list|)
decl_stmt|;
name|davSessionProvider
operator|=
operator|new
name|ArchivaDavSessionProvider
argument_list|(
name|servletAuth
argument_list|,
name|httpAuth
argument_list|,
name|archivaXworkUser
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|ManagedRepositoryConfiguration
name|createManagedRepository
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|,
name|File
name|location
parameter_list|)
block|{
name|ManagedRepositoryConfiguration
name|repo
init|=
operator|new
name|ManagedRepositoryConfiguration
argument_list|()
decl_stmt|;
name|repo
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|repo
operator|.
name|setLocation
argument_list|(
name|location
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|repo
return|;
block|}
specifier|protected
name|void
name|saveConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|saveConfiguration
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|saveConfiguration
parameter_list|(
name|ArchivaConfiguration
name|archivaConfiguration
parameter_list|)
throws|throws
name|Exception
block|{
name|archivaConfiguration
operator|.
name|save
argument_list|(
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|setupCleanRepo
parameter_list|(
name|File
name|repoRootDir
parameter_list|)
throws|throws
name|IOException
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|repoRootDir
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|repoRootDir
operator|.
name|exists
argument_list|()
condition|)
block|{
name|repoRootDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|String
name|getPlexusConfigLocation
parameter_list|()
block|{
return|return
literal|"org/apache/maven/archiva/webdav/RepositoryServletSecurityTest.xml"
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|sc
operator|!=
literal|null
condition|)
block|{
name|sc
operator|.
name|clearContents
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|sr
operator|!=
literal|null
condition|)
block|{
name|sr
operator|.
name|shutDown
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|repoRootInternal
operator|.
name|exists
argument_list|()
condition|)
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|repoRootInternal
argument_list|)
expr_stmt|;
block|}
name|servlet
operator|=
literal|null
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
comment|// test deploy with invalid user, and guest has no write access to repo
comment|// 401 must be returned
specifier|public
name|void
name|testPutWithInvalidUserAndGuestHasNoWriteAccess
parameter_list|()
throws|throws
name|Exception
block|{
name|setupCleanRepo
argument_list|(
name|repoRootInternal
argument_list|)
expr_stmt|;
name|String
name|putUrl
init|=
literal|"http://machine.com/repository/internal/path/to/artifact.jar"
decl_stmt|;
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/artifact.jar"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"artifact.jar inputstream"
argument_list|,
name|is
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|PutMethodWebRequest
argument_list|(
name|putUrl
argument_list|,
name|is
argument_list|,
literal|"application/octet-stream"
argument_list|)
decl_stmt|;
name|InvocationContext
name|ic
init|=
name|sc
operator|.
name|newInvocation
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|servlet
operator|=
operator|(
name|RepositoryServlet
operator|)
name|ic
operator|.
name|getServlet
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|setDavSessionProvider
argument_list|(
name|davSessionProvider
argument_list|)
expr_stmt|;
name|AuthenticationResult
name|result
init|=
operator|new
name|AuthenticationResult
argument_list|()
decl_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndThrow
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|AuthenticationException
argument_list|(
literal|"Authentication error"
argument_list|)
argument_list|)
expr_stmt|;
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
literal|"guest"
argument_list|,
literal|"internal"
argument_list|,
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_UPLOAD
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|setMatcher
argument_list|(
name|MockControl
operator|.
name|EQUALS_MATCHER
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|setThrowable
argument_list|(
operator|new
name|UnauthorizedException
argument_list|(
literal|"'guest' has no write access to repository"
argument_list|)
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|service
argument_list|(
name|ic
operator|.
name|getRequest
argument_list|()
argument_list|,
name|ic
operator|.
name|getResponse
argument_list|()
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
comment|// assertEquals(HttpServletResponse.SC_UNAUTHORIZED, response.getResponseCode());
block|}
comment|// test deploy with invalid user, but guest has write access to repo
specifier|public
name|void
name|testPutWithInvalidUserAndGuestHasWriteAccess
parameter_list|()
throws|throws
name|Exception
block|{
name|setupCleanRepo
argument_list|(
name|repoRootInternal
argument_list|)
expr_stmt|;
name|String
name|putUrl
init|=
literal|"http://machine.com/repository/internal/path/to/artifact.jar"
decl_stmt|;
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/artifact.jar"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"artifact.jar inputstream"
argument_list|,
name|is
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|PutMethodWebRequest
argument_list|(
name|putUrl
argument_list|,
name|is
argument_list|,
literal|"application/octet-stream"
argument_list|)
decl_stmt|;
name|InvocationContext
name|ic
init|=
name|sc
operator|.
name|newInvocation
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|servlet
operator|=
operator|(
name|RepositoryServlet
operator|)
name|ic
operator|.
name|getServlet
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|setDavSessionProvider
argument_list|(
name|davSessionProvider
argument_list|)
expr_stmt|;
name|ArchivaDavResourceFactory
name|archivaDavResourceFactory
init|=
operator|(
name|ArchivaDavResourceFactory
operator|)
name|servlet
operator|.
name|getResourceFactory
argument_list|()
decl_stmt|;
name|archivaDavResourceFactory
operator|.
name|setHttpAuth
argument_list|(
name|httpAuth
argument_list|)
expr_stmt|;
name|archivaDavResourceFactory
operator|.
name|setServletAuth
argument_list|(
name|servletAuth
argument_list|)
expr_stmt|;
name|servlet
operator|.
name|setResourceFactory
argument_list|(
name|archivaDavResourceFactory
argument_list|)
expr_stmt|;
name|AuthenticationResult
name|result
init|=
operator|new
name|AuthenticationResult
argument_list|()
decl_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndThrow
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|AuthenticationException
argument_list|(
literal|"Authentication error"
argument_list|)
argument_list|)
expr_stmt|;
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
literal|"guest"
argument_list|,
literal|"internal"
argument_list|,
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_UPLOAD
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|setMatcher
argument_list|(
name|MockControl
operator|.
name|EQUALS_MATCHER
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|setReturnValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// ArchivaDavResourceFactory#isAuthorized()
name|SecuritySession
name|session
init|=
operator|new
name|DefaultSecuritySession
argument_list|()
decl_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getSecuritySession
argument_list|(
name|ic
operator|.
name|getRequest
argument_list|()
operator|.
name|getSession
argument_list|(
literal|true
argument_list|)
argument_list|)
argument_list|,
name|session
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndThrow
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
literal|null
argument_list|,
name|result
argument_list|)
argument_list|,
operator|new
name|AuthenticationException
argument_list|(
literal|"Authentication error"
argument_list|)
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getSessionUser
argument_list|(
name|ic
operator|.
name|getRequest
argument_list|()
operator|.
name|getSession
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// check if guest has write access
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
literal|"guest"
argument_list|,
literal|"internal"
argument_list|,
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_UPLOAD
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|setMatcher
argument_list|(
name|MockControl
operator|.
name|EQUALS_MATCHER
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|setReturnValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|service
argument_list|(
name|ic
operator|.
name|getRequest
argument_list|()
argument_list|,
name|ic
operator|.
name|getResponse
argument_list|()
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
comment|// assertEquals( HttpServletResponse.SC_CREATED, response.getResponseCode() );
block|}
comment|// test deploy with a valid user with no write access
specifier|public
name|void
name|testPutWithValidUserWithNoWriteAccess
parameter_list|()
throws|throws
name|Exception
block|{
name|setupCleanRepo
argument_list|(
name|repoRootInternal
argument_list|)
expr_stmt|;
name|String
name|putUrl
init|=
literal|"http://machine.com/repository/internal/path/to/artifact.jar"
decl_stmt|;
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/artifact.jar"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"artifact.jar inputstream"
argument_list|,
name|is
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|PutMethodWebRequest
argument_list|(
name|putUrl
argument_list|,
name|is
argument_list|,
literal|"application/octet-stream"
argument_list|)
decl_stmt|;
name|InvocationContext
name|ic
init|=
name|sc
operator|.
name|newInvocation
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|servlet
operator|=
operator|(
name|RepositoryServlet
operator|)
name|ic
operator|.
name|getServlet
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|setDavSessionProvider
argument_list|(
name|davSessionProvider
argument_list|)
expr_stmt|;
name|ArchivaDavResourceFactory
name|archivaDavResourceFactory
init|=
operator|(
name|ArchivaDavResourceFactory
operator|)
name|servlet
operator|.
name|getResourceFactory
argument_list|()
decl_stmt|;
name|archivaDavResourceFactory
operator|.
name|setHttpAuth
argument_list|(
name|httpAuth
argument_list|)
expr_stmt|;
name|archivaDavResourceFactory
operator|.
name|setServletAuth
argument_list|(
name|servletAuth
argument_list|)
expr_stmt|;
name|servlet
operator|.
name|setResourceFactory
argument_list|(
name|archivaDavResourceFactory
argument_list|)
expr_stmt|;
name|AuthenticationResult
name|result
init|=
operator|new
name|AuthenticationResult
argument_list|()
decl_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// ArchivaDavResourceFactory#isAuthorized()
name|SecuritySession
name|session
init|=
operator|new
name|DefaultSecuritySession
argument_list|()
decl_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getSecuritySession
argument_list|(
name|ic
operator|.
name|getRequest
argument_list|()
operator|.
name|getSession
argument_list|(
literal|true
argument_list|)
argument_list|)
argument_list|,
name|session
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getSessionUser
argument_list|(
name|ic
operator|.
name|getRequest
argument_list|()
operator|.
name|getSession
argument_list|()
argument_list|)
argument_list|,
operator|new
name|SimpleUser
argument_list|()
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
literal|null
argument_list|,
name|result
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndThrow
argument_list|(
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
literal|null
argument_list|,
name|session
argument_list|,
literal|"internal"
argument_list|,
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_UPLOAD
argument_list|)
argument_list|,
operator|new
name|UnauthorizedException
argument_list|(
literal|"User not authorized"
argument_list|)
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|service
argument_list|(
name|ic
operator|.
name|getRequest
argument_list|()
argument_list|,
name|ic
operator|.
name|getResponse
argument_list|()
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
comment|// assertEquals(HttpServletResponse.SC_UNAUTHORIZED, response.getResponseCode());
block|}
comment|// test deploy with a valid user with write access
specifier|public
name|void
name|testPutWithValidUserWithWriteAccess
parameter_list|()
throws|throws
name|Exception
block|{
name|setupCleanRepo
argument_list|(
name|repoRootInternal
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|repoRootInternal
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|putUrl
init|=
literal|"http://machine.com/repository/internal/path/to/artifact.jar"
decl_stmt|;
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/artifact.jar"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"artifact.jar inputstream"
argument_list|,
name|is
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|PutMethodWebRequest
argument_list|(
name|putUrl
argument_list|,
name|is
argument_list|,
literal|"application/octet-stream"
argument_list|)
decl_stmt|;
name|InvocationContext
name|ic
init|=
name|sc
operator|.
name|newInvocation
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|servlet
operator|=
operator|(
name|RepositoryServlet
operator|)
name|ic
operator|.
name|getServlet
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|setDavSessionProvider
argument_list|(
name|davSessionProvider
argument_list|)
expr_stmt|;
name|ArchivaDavResourceFactory
name|archivaDavResourceFactory
init|=
operator|(
name|ArchivaDavResourceFactory
operator|)
name|servlet
operator|.
name|getResourceFactory
argument_list|()
decl_stmt|;
name|archivaDavResourceFactory
operator|.
name|setHttpAuth
argument_list|(
name|httpAuth
argument_list|)
expr_stmt|;
name|archivaDavResourceFactory
operator|.
name|setServletAuth
argument_list|(
name|servletAuth
argument_list|)
expr_stmt|;
name|servlet
operator|.
name|setResourceFactory
argument_list|(
name|archivaDavResourceFactory
argument_list|)
expr_stmt|;
name|AuthenticationResult
name|result
init|=
operator|new
name|AuthenticationResult
argument_list|()
decl_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// ArchivaDavResourceFactory#isAuthorized()
name|SecuritySession
name|session
init|=
operator|new
name|DefaultSecuritySession
argument_list|()
decl_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getSecuritySession
argument_list|(
name|ic
operator|.
name|getRequest
argument_list|()
operator|.
name|getSession
argument_list|(
literal|true
argument_list|)
argument_list|)
argument_list|,
name|session
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getSessionUser
argument_list|(
name|ic
operator|.
name|getRequest
argument_list|()
operator|.
name|getSession
argument_list|()
argument_list|)
argument_list|,
operator|new
name|SimpleUser
argument_list|()
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
literal|null
argument_list|,
name|result
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
literal|null
argument_list|,
name|session
argument_list|,
literal|"internal"
argument_list|,
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_UPLOAD
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|service
argument_list|(
name|ic
operator|.
name|getRequest
argument_list|()
argument_list|,
name|ic
operator|.
name|getResponse
argument_list|()
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
comment|// assertEquals(HttpServletResponse.SC_CREATED, response.getResponseCode());
block|}
comment|// test get with invalid user, and guest has read access to repo
specifier|public
name|void
name|testGetWithInvalidUserAndGuestHasReadAccess
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|commonsLangJar
init|=
literal|"commons-lang/commons-lang/2.1/commons-lang-2.1.jar"
decl_stmt|;
name|String
name|expectedArtifactContents
init|=
literal|"dummy-commons-lang-artifact"
decl_stmt|;
name|File
name|artifactFile
init|=
operator|new
name|File
argument_list|(
name|repoRootInternal
argument_list|,
name|commonsLangJar
argument_list|)
decl_stmt|;
name|artifactFile
operator|.
name|getParentFile
argument_list|()
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|artifactFile
argument_list|,
name|expectedArtifactContents
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/internal/"
operator|+
name|commonsLangJar
argument_list|)
decl_stmt|;
name|InvocationContext
name|ic
init|=
name|sc
operator|.
name|newInvocation
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|servlet
operator|=
operator|(
name|RepositoryServlet
operator|)
name|ic
operator|.
name|getServlet
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|setDavSessionProvider
argument_list|(
name|davSessionProvider
argument_list|)
expr_stmt|;
name|ArchivaDavResourceFactory
name|archivaDavResourceFactory
init|=
operator|(
name|ArchivaDavResourceFactory
operator|)
name|servlet
operator|.
name|getResourceFactory
argument_list|()
decl_stmt|;
name|archivaDavResourceFactory
operator|.
name|setHttpAuth
argument_list|(
name|httpAuth
argument_list|)
expr_stmt|;
name|archivaDavResourceFactory
operator|.
name|setServletAuth
argument_list|(
name|servletAuth
argument_list|)
expr_stmt|;
name|servlet
operator|.
name|setResourceFactory
argument_list|(
name|archivaDavResourceFactory
argument_list|)
expr_stmt|;
name|AuthenticationResult
name|result
init|=
operator|new
name|AuthenticationResult
argument_list|()
decl_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndThrow
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|AuthenticationException
argument_list|(
literal|"Authentication error"
argument_list|)
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
literal|"guest"
argument_list|,
literal|"internal"
argument_list|,
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_ACCESS
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// ArchivaDavResourceFactory#isAuthorized()
name|SecuritySession
name|session
init|=
operator|new
name|DefaultSecuritySession
argument_list|()
decl_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getSecuritySession
argument_list|(
name|ic
operator|.
name|getRequest
argument_list|()
operator|.
name|getSession
argument_list|(
literal|true
argument_list|)
argument_list|)
argument_list|,
name|session
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getSessionUser
argument_list|(
name|ic
operator|.
name|getRequest
argument_list|()
operator|.
name|getSession
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
literal|null
argument_list|,
name|result
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
literal|null
argument_list|,
name|session
argument_list|,
literal|"internal"
argument_list|,
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_UPLOAD
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|WebResponse
name|response
init|=
name|sc
operator|.
name|getResponse
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|httpAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|,
name|response
operator|.
name|getResponseCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Expected file contents"
argument_list|,
name|expectedArtifactContents
argument_list|,
name|response
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// test get with invalid user, and guest has no read access to repo
specifier|public
name|void
name|testGetWithInvalidUserAndGuestHasNoReadAccess
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|commonsLangJar
init|=
literal|"commons-lang/commons-lang/2.1/commons-lang-2.1.jar"
decl_stmt|;
name|String
name|expectedArtifactContents
init|=
literal|"dummy-commons-lang-artifact"
decl_stmt|;
name|File
name|artifactFile
init|=
operator|new
name|File
argument_list|(
name|repoRootInternal
argument_list|,
name|commonsLangJar
argument_list|)
decl_stmt|;
name|artifactFile
operator|.
name|getParentFile
argument_list|()
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|artifactFile
argument_list|,
name|expectedArtifactContents
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/internal/"
operator|+
name|commonsLangJar
argument_list|)
decl_stmt|;
name|InvocationContext
name|ic
init|=
name|sc
operator|.
name|newInvocation
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|servlet
operator|=
operator|(
name|RepositoryServlet
operator|)
name|ic
operator|.
name|getServlet
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|setDavSessionProvider
argument_list|(
name|davSessionProvider
argument_list|)
expr_stmt|;
name|AuthenticationResult
name|result
init|=
operator|new
name|AuthenticationResult
argument_list|()
decl_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndThrow
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|AuthenticationException
argument_list|(
literal|"Authentication error"
argument_list|)
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
literal|"guest"
argument_list|,
literal|"internal"
argument_list|,
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_ACCESS
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|WebResponse
name|response
init|=
name|sc
operator|.
name|getResponse
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|httpAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|HttpServletResponse
operator|.
name|SC_UNAUTHORIZED
argument_list|,
name|response
operator|.
name|getResponseCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// test get with valid user with read access to repo
specifier|public
name|void
name|testGetWithAValidUserWithReadAccess
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|commonsLangJar
init|=
literal|"commons-lang/commons-lang/2.1/commons-lang-2.1.jar"
decl_stmt|;
name|String
name|expectedArtifactContents
init|=
literal|"dummy-commons-lang-artifact"
decl_stmt|;
name|File
name|artifactFile
init|=
operator|new
name|File
argument_list|(
name|repoRootInternal
argument_list|,
name|commonsLangJar
argument_list|)
decl_stmt|;
name|artifactFile
operator|.
name|getParentFile
argument_list|()
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|artifactFile
argument_list|,
name|expectedArtifactContents
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/internal/"
operator|+
name|commonsLangJar
argument_list|)
decl_stmt|;
name|InvocationContext
name|ic
init|=
name|sc
operator|.
name|newInvocation
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|servlet
operator|=
operator|(
name|RepositoryServlet
operator|)
name|ic
operator|.
name|getServlet
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|setDavSessionProvider
argument_list|(
name|davSessionProvider
argument_list|)
expr_stmt|;
name|ArchivaDavResourceFactory
name|archivaDavResourceFactory
init|=
operator|(
name|ArchivaDavResourceFactory
operator|)
name|servlet
operator|.
name|getResourceFactory
argument_list|()
decl_stmt|;
name|archivaDavResourceFactory
operator|.
name|setHttpAuth
argument_list|(
name|httpAuth
argument_list|)
expr_stmt|;
name|archivaDavResourceFactory
operator|.
name|setServletAuth
argument_list|(
name|servletAuth
argument_list|)
expr_stmt|;
name|servlet
operator|.
name|setResourceFactory
argument_list|(
name|archivaDavResourceFactory
argument_list|)
expr_stmt|;
name|AuthenticationResult
name|result
init|=
operator|new
name|AuthenticationResult
argument_list|()
decl_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// ArchivaDavResourceFactory#isAuthorized()
name|SecuritySession
name|session
init|=
operator|new
name|DefaultSecuritySession
argument_list|()
decl_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getSecuritySession
argument_list|(
name|ic
operator|.
name|getRequest
argument_list|()
operator|.
name|getSession
argument_list|(
literal|true
argument_list|)
argument_list|)
argument_list|,
name|session
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getSessionUser
argument_list|(
name|ic
operator|.
name|getRequest
argument_list|()
operator|.
name|getSession
argument_list|()
argument_list|)
argument_list|,
operator|new
name|SimpleUser
argument_list|()
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
literal|null
argument_list|,
name|result
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
literal|null
argument_list|,
name|session
argument_list|,
literal|"internal"
argument_list|,
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_UPLOAD
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|WebResponse
name|response
init|=
name|sc
operator|.
name|getResponse
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|httpAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|,
name|response
operator|.
name|getResponseCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Expected file contents"
argument_list|,
name|expectedArtifactContents
argument_list|,
name|response
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// test get with valid user with no read access to repo
specifier|public
name|void
name|testGetWithAValidUserWithNoReadAccess
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|commonsLangJar
init|=
literal|"commons-lang/commons-lang/2.1/commons-lang-2.1.jar"
decl_stmt|;
name|String
name|expectedArtifactContents
init|=
literal|"dummy-commons-lang-artifact"
decl_stmt|;
name|File
name|artifactFile
init|=
operator|new
name|File
argument_list|(
name|repoRootInternal
argument_list|,
name|commonsLangJar
argument_list|)
decl_stmt|;
name|artifactFile
operator|.
name|getParentFile
argument_list|()
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|artifactFile
argument_list|,
name|expectedArtifactContents
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/internal/"
operator|+
name|commonsLangJar
argument_list|)
decl_stmt|;
name|InvocationContext
name|ic
init|=
name|sc
operator|.
name|newInvocation
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|servlet
operator|=
operator|(
name|RepositoryServlet
operator|)
name|ic
operator|.
name|getServlet
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|setDavSessionProvider
argument_list|(
name|davSessionProvider
argument_list|)
expr_stmt|;
name|ArchivaDavResourceFactory
name|archivaDavResourceFactory
init|=
operator|(
name|ArchivaDavResourceFactory
operator|)
name|servlet
operator|.
name|getResourceFactory
argument_list|()
decl_stmt|;
name|archivaDavResourceFactory
operator|.
name|setHttpAuth
argument_list|(
name|httpAuth
argument_list|)
expr_stmt|;
name|archivaDavResourceFactory
operator|.
name|setServletAuth
argument_list|(
name|servletAuth
argument_list|)
expr_stmt|;
name|servlet
operator|.
name|setResourceFactory
argument_list|(
name|archivaDavResourceFactory
argument_list|)
expr_stmt|;
name|AuthenticationResult
name|result
init|=
operator|new
name|AuthenticationResult
argument_list|()
decl_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// ArchivaDavResourceFactory#isAuthorized()
name|SecuritySession
name|session
init|=
operator|new
name|DefaultSecuritySession
argument_list|()
decl_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getAuthenticationResult
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getSecuritySession
argument_list|(
name|ic
operator|.
name|getRequest
argument_list|()
operator|.
name|getSession
argument_list|(
literal|true
argument_list|)
argument_list|)
argument_list|,
name|session
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|httpAuth
operator|.
name|getSessionUser
argument_list|(
name|ic
operator|.
name|getRequest
argument_list|()
operator|.
name|getSession
argument_list|()
argument_list|)
argument_list|,
operator|new
name|SimpleUser
argument_list|()
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndReturn
argument_list|(
name|servletAuth
operator|.
name|isAuthenticated
argument_list|(
literal|null
argument_list|,
name|result
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|servletAuthControl
operator|.
name|expectAndThrow
argument_list|(
name|servletAuth
operator|.
name|isAuthorized
argument_list|(
literal|null
argument_list|,
name|session
argument_list|,
literal|"internal"
argument_list|,
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_UPLOAD
argument_list|)
argument_list|,
operator|new
name|UnauthorizedException
argument_list|(
literal|"User not authorized to read repository."
argument_list|)
argument_list|)
expr_stmt|;
name|httpAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|WebResponse
name|response
init|=
name|sc
operator|.
name|getResponse
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|httpAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|servletAuthControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|HttpServletResponse
operator|.
name|SC_UNAUTHORIZED
argument_list|,
name|response
operator|.
name|getResponseCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

