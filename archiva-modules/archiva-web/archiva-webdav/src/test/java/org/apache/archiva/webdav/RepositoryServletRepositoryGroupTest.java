begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|webdav
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|com
operator|.
name|gargoylesoftware
operator|.
name|htmlunit
operator|.
name|WebRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|gargoylesoftware
operator|.
name|htmlunit
operator|.
name|WebResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ManagedRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|RepositoryGroupConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|maven2
operator|.
name|metadata
operator|.
name|MavenMetadataReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaRepositoryMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertThat
import|;
end_import

begin_comment
comment|/**  * RepositoryServletRepositoryGroupTest  *<p/>  * Test Case 1.  Accessing a valid repository group root url (e.g. http://machine.com/repository/repository-group/) returns a Bad Request (HTTP 400)  * Test Case 2.  Accessing an invalid repository group root url is forwarded to managed repository checking (this is not covered here)  * Test Case 3.  Accessing an artifact in a valid repository group will iterate over the managed repositories in the repository group  * Test Case 3.a.  If an invalid managed repository is encountered (managed repository doesn't exist),  * a Not Found (HTTP 404) is returned and the iteration is broken  * Test Case 3.b.  If an artifact is not found in a valid managed repository (after proxying, etc.),  * a Not Found (HTTP 404) is set but not returned yet, the iteration continues to the next managed repository.  * The Not Found (HTTP 404) is returned after exhausting all valid managed repositories  * Test Case 3.c.  If an artifact is found in a valid managed repository,  * the artifact is returned, the iteration is broken and any Not Found (HTTP 404) is disregarded  * Test Case 4.  Accessing a valid repository group with any http write method returns a Bad Request (HTTP 400)  */
end_comment

begin_class
specifier|public
class|class
name|RepositoryServletRepositoryGroupTest
extends|extends
name|AbstractRepositoryServletTestCase
block|{
specifier|protected
name|Path
name|repoRootFirst
decl_stmt|;
specifier|protected
name|Path
name|repoRootLast
decl_stmt|;
specifier|protected
name|Path
name|repoRootInvalid
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|MANAGED_REPO_FIRST
init|=
literal|"first"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|MANAGED_REPO_LAST
init|=
literal|"last"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|MANAGED_REPO_INVALID
init|=
literal|"invalid"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|REPO_GROUP_WITH_VALID_REPOS
init|=
literal|"group-with-valid-repos"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|REPO_GROUP_WITH_INVALID_REPOS
init|=
literal|"group-with-invalid-repos"
decl_stmt|;
annotation|@
name|Override
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|String
name|appserverBase
init|=
name|getAppserverBase
argument_list|()
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|log
operator|.
name|debug
argument_list|(
literal|"Appserver Base {}"
argument_list|,
name|appserverBase
argument_list|)
expr_stmt|;
name|Configuration
name|configuration
init|=
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|repoRootFirst
operator|=
name|Paths
operator|.
name|get
argument_list|(
name|appserverBase
argument_list|,
literal|"data/repositories/"
operator|+
name|MANAGED_REPO_FIRST
argument_list|)
expr_stmt|;
name|repoRootLast
operator|=
name|Paths
operator|.
name|get
argument_list|(
name|appserverBase
argument_list|,
literal|"data/repositories/"
operator|+
name|MANAGED_REPO_LAST
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|addManagedRepository
argument_list|(
name|createManagedRepository
argument_list|(
name|MANAGED_REPO_FIRST
argument_list|,
literal|"First Test Repo"
argument_list|,
name|repoRootFirst
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|addManagedRepository
argument_list|(
name|createManagedRepository
argument_list|(
name|MANAGED_REPO_LAST
argument_list|,
literal|"Last Test Repo"
argument_list|,
name|repoRootLast
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|managedRepoIds
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|managedRepoIds
operator|.
name|add
argument_list|(
name|MANAGED_REPO_FIRST
argument_list|)
expr_stmt|;
name|managedRepoIds
operator|.
name|add
argument_list|(
name|MANAGED_REPO_LAST
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|addRepositoryGroup
argument_list|(
name|createRepositoryGroup
argument_list|(
name|REPO_GROUP_WITH_VALID_REPOS
argument_list|,
name|managedRepoIds
argument_list|)
argument_list|)
expr_stmt|;
comment|// Create the repository group with an invalid managed repository
name|repoRootInvalid
operator|=
name|Paths
operator|.
name|get
argument_list|(
name|appserverBase
argument_list|,
literal|"data/repositories/"
operator|+
name|MANAGED_REPO_INVALID
argument_list|)
expr_stmt|;
name|ManagedRepositoryConfiguration
name|managedRepositoryConfiguration
init|=
name|createManagedRepository
argument_list|(
name|MANAGED_REPO_INVALID
argument_list|,
literal|"Invalid Test Repo"
argument_list|,
name|repoRootInvalid
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|configuration
operator|.
name|addManagedRepository
argument_list|(
name|managedRepositoryConfiguration
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|invalidManagedRepoIds
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|invalidManagedRepoIds
operator|.
name|add
argument_list|(
name|MANAGED_REPO_FIRST
argument_list|)
expr_stmt|;
name|invalidManagedRepoIds
operator|.
name|add
argument_list|(
name|MANAGED_REPO_INVALID
argument_list|)
expr_stmt|;
name|invalidManagedRepoIds
operator|.
name|add
argument_list|(
name|MANAGED_REPO_LAST
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|addRepositoryGroup
argument_list|(
name|createRepositoryGroup
argument_list|(
name|REPO_GROUP_WITH_INVALID_REPOS
argument_list|,
name|invalidManagedRepoIds
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|removeManagedRepository
argument_list|(
name|managedRepositoryConfiguration
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|repoRootInvalid
argument_list|)
expr_stmt|;
name|repositoryRegistry
operator|.
name|reload
argument_list|()
expr_stmt|;
name|saveConfiguration
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
name|startRepository
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|setupCleanRepo
argument_list|(
name|repoRootFirst
argument_list|)
expr_stmt|;
name|setupCleanRepo
argument_list|(
name|repoRootLast
argument_list|)
expr_stmt|;
name|repositoryRegistry
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|String
name|appserverBase
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"appserver.base"
argument_list|)
decl_stmt|;
if|if
condition|(
name|StringUtils
operator|.
name|isNotEmpty
argument_list|(
name|appserverBase
argument_list|)
condition|)
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|Paths
operator|.
name|get
argument_list|(
name|appserverBase
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*     * Test Case 3.c     */
annotation|@
name|Test
specifier|public
name|void
name|testGetFromFirstManagedRepositoryReturnOk
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|resourceName
init|=
literal|"dummy/dummy-first-resource/1.0/dummy-first-resource-1.0.txt"
decl_stmt|;
name|Path
name|dummyInternalResourceFile
init|=
name|repoRootFirst
operator|.
name|resolve
argument_list|(
name|resourceName
argument_list|)
decl_stmt|;
name|Files
operator|.
name|createDirectories
argument_list|(
name|dummyInternalResourceFile
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|dummyInternalResourceFile
argument_list|,
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|,
literal|"first"
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/"
operator|+
name|REPO_GROUP_WITH_VALID_REPOS
operator|+
literal|"/"
operator|+
name|resourceName
argument_list|)
decl_stmt|;
name|WebResponse
name|response
init|=
name|getServletUnitClient
argument_list|()
operator|.
name|getResponse
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|assertResponseOK
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getContentAsString
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"first"
argument_list|)
expr_stmt|;
block|}
comment|/*     * Test Case 3.c     */
annotation|@
name|Test
specifier|public
name|void
name|testGetFromLastManagedRepositoryReturnOk
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|resourceName
init|=
literal|"dummy/dummy-last-resource/1.0/dummy-last-resource-1.0.txt"
decl_stmt|;
name|Path
name|dummyReleasesResourceFile
init|=
name|repoRootLast
operator|.
name|resolve
argument_list|(
name|resourceName
argument_list|)
decl_stmt|;
name|Files
operator|.
name|createDirectories
argument_list|(
name|dummyReleasesResourceFile
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|dummyReleasesResourceFile
argument_list|,
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|,
literal|"last"
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/"
operator|+
name|REPO_GROUP_WITH_VALID_REPOS
operator|+
literal|"/"
operator|+
name|resourceName
argument_list|)
decl_stmt|;
name|WebResponse
name|response
init|=
name|getServletUnitClient
argument_list|()
operator|.
name|getResponse
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|assertResponseOK
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getContentAsString
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"last"
argument_list|)
expr_stmt|;
block|}
comment|/*     * Test Case 3.b     */
annotation|@
name|Test
specifier|public
name|void
name|testGetFromValidRepositoryGroupReturnNotFound
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|resourceName
init|=
literal|"dummy/dummy-no-resource/1.0/dummy-no-resource-1.0.txt"
decl_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/"
operator|+
name|REPO_GROUP_WITH_VALID_REPOS
operator|+
literal|"/"
operator|+
name|resourceName
argument_list|)
decl_stmt|;
name|WebResponse
name|response
init|=
name|getServletUnitClient
argument_list|()
operator|.
name|getResponse
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|assertResponseNotFound
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
comment|/*     * Test Case 4     */
annotation|@
name|Test
specifier|public
name|void
name|testPutValidRepositoryGroupReturnBadRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|resourceName
init|=
literal|"dummy/dummy-put-resource/1.0/dummy-put-resource-1.0.txt"
decl_stmt|;
name|String
name|putUrl
init|=
literal|"http://machine.com/repository/"
operator|+
name|REPO_GROUP_WITH_VALID_REPOS
operator|+
literal|"/"
operator|+
name|resourceName
decl_stmt|;
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/artifact.jar"
argument_list|)
decl_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|PutMethodWebRequest
argument_list|(
name|putUrl
argument_list|,
name|is
argument_list|,
literal|"text/plain"
argument_list|)
decl_stmt|;
name|WebResponse
name|response
init|=
name|getServletUnitClient
argument_list|()
operator|.
name|getResponse
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|assertResponseMethodNotAllowed
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
comment|// MRM-872
annotation|@
name|Test
specifier|public
name|void
name|testGetMergedMetadata
parameter_list|()
throws|throws
name|Exception
block|{
comment|// first metadata file
name|String
name|resourceName
init|=
literal|"dummy/dummy-merged-metadata-resource/maven-metadata.xml"
decl_stmt|;
name|Path
name|dummyInternalResourceFile
init|=
name|repoRootFirst
operator|.
name|resolve
argument_list|(
name|resourceName
argument_list|)
decl_stmt|;
name|Files
operator|.
name|createDirectories
argument_list|(
name|dummyInternalResourceFile
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|dummyInternalResourceFile
argument_list|,
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|,
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
operator|+
literal|"<metadata>\n<groupId>dummy</groupId>\n<artifactId>dummy-merged-metadata-resource</artifactId>\n"
operator|+
literal|"<versioning>\n<latest>1.0</latest>\n<release>1.0</release>\n<versions>\n<version>1.0</version>\n"
operator|+
literal|"<version>2.5</version>\n</versions>\n<lastUpdated>20080708095554</lastUpdated>\n</versioning>\n</metadata>"
argument_list|)
expr_stmt|;
comment|//second metadata file
name|resourceName
operator|=
literal|"dummy/dummy-merged-metadata-resource/maven-metadata.xml"
expr_stmt|;
name|dummyInternalResourceFile
operator|=
name|repoRootLast
operator|.
name|resolve
argument_list|(
name|resourceName
argument_list|)
expr_stmt|;
name|Files
operator|.
name|createDirectories
argument_list|(
name|dummyInternalResourceFile
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|dummyInternalResourceFile
argument_list|,
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|,
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<metadata><groupId>dummy</groupId><artifactId>dummy-merged-metadata-resource</artifactId>"
operator|+
literal|"<versioning><latest>2.0</latest><release>2.0</release><versions><version>1.0</version>"
operator|+
literal|"<version>1.5</version><version>2.0</version></versions><lastUpdated>20080709095554</lastUpdated>"
operator|+
literal|"</versioning></metadata>"
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/"
operator|+
name|REPO_GROUP_WITH_VALID_REPOS
operator|+
literal|"/dummy/"
operator|+
literal|"dummy-merged-metadata-resource/maven-metadata.xml"
argument_list|)
decl_stmt|;
name|WebResponse
name|response
init|=
name|getServletUnitClient
argument_list|()
operator|.
name|getResource
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|Path
name|returnedMetadata
init|=
name|getProjectBase
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"target/test-classes/retrievedMetadataFile.xml"
argument_list|)
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|returnedMetadata
argument_list|,
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|,
name|response
operator|.
name|getContentAsString
argument_list|()
argument_list|)
expr_stmt|;
name|MavenMetadataReader
name|metadataReader
init|=
operator|new
name|MavenMetadataReader
argument_list|( )
decl_stmt|;
name|ArchivaRepositoryMetadata
name|metadata
init|=
name|metadataReader
operator|.
name|read
argument_list|(
name|returnedMetadata
argument_list|)
decl_stmt|;
name|assertResponseOK
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|metadata
operator|.
name|getAvailableVersions
argument_list|()
argument_list|)
operator|.
name|isNotNull
argument_list|()
operator|.
name|hasSize
argument_list|(
literal|4
argument_list|)
operator|.
name|contains
argument_list|(
literal|"1.0"
argument_list|,
literal|"1.5"
argument_list|,
literal|"2.0"
argument_list|,
literal|"2.5"
argument_list|)
expr_stmt|;
comment|//check if the checksum files were generated
name|Path
name|checksumFileSha1
init|=
name|repoRootFirst
operator|.
name|resolve
argument_list|(
name|resourceName
operator|+
literal|".sha1"
argument_list|)
decl_stmt|;
name|Files
operator|.
name|createDirectories
argument_list|(
name|checksumFileSha1
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|checksumFileSha1
argument_list|,
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|,
literal|"3290853214d3687134"
argument_list|)
expr_stmt|;
name|Path
name|checksumFileMd5
init|=
name|repoRootFirst
operator|.
name|resolve
argument_list|(
name|resourceName
operator|+
literal|".md5"
argument_list|)
decl_stmt|;
name|Files
operator|.
name|createDirectories
argument_list|(
name|checksumFileMd5
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|checksumFileMd5
argument_list|,
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|,
literal|"98745897234eda12836423"
argument_list|)
expr_stmt|;
comment|// request the sha1 checksum of the metadata
name|request
operator|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/"
operator|+
name|REPO_GROUP_WITH_VALID_REPOS
operator|+
literal|"/dummy/"
operator|+
literal|"dummy-merged-metadata-resource/maven-metadata.xml.sha1"
argument_list|)
expr_stmt|;
name|response
operator|=
name|getServletUnitClient
argument_list|()
operator|.
name|getResource
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|assertResponseOK
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getContentAsString
argument_list|()
argument_list|)
operator|.
name|startsWith
argument_list|(
literal|"f8a7a858a46887368adf0b30874de1f807d91453"
argument_list|)
expr_stmt|;
comment|// request the md5 checksum of the metadata
name|request
operator|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/"
operator|+
name|REPO_GROUP_WITH_VALID_REPOS
operator|+
literal|"/dummy/"
operator|+
literal|"dummy-merged-metadata-resource/maven-metadata.xml.md5"
argument_list|)
expr_stmt|;
name|response
operator|=
name|getServletUnitClient
argument_list|()
operator|.
name|getResource
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|assertResponseOK
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getContentAsString
argument_list|()
argument_list|)
operator|.
name|startsWith
argument_list|(
literal|"cec864b66849153dd45fddb7cdde12b2"
argument_list|)
expr_stmt|;
block|}
comment|// MRM-901
annotation|@
name|Test
specifier|public
name|void
name|testBrowseWithTwoArtifactsWithSameGroupIdInRepos
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|resourceName
init|=
literal|"dummy/dummy-artifact/1.0/dummy-artifact-1.0.txt"
decl_stmt|;
name|Path
name|dummyInternalResourceFile
init|=
name|repoRootFirst
operator|.
name|resolve
argument_list|(
name|resourceName
argument_list|)
decl_stmt|;
name|Files
operator|.
name|createDirectories
argument_list|(
name|dummyInternalResourceFile
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|dummyInternalResourceFile
argument_list|,
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|,
literal|"first"
argument_list|)
expr_stmt|;
name|resourceName
operator|=
literal|"dummy/dummy-artifact/2.0/dummy-artifact-2.0.txt"
expr_stmt|;
name|Path
name|dummyReleasesResourceFile
init|=
name|repoRootLast
operator|.
name|resolve
argument_list|(
name|resourceName
argument_list|)
decl_stmt|;
name|Files
operator|.
name|createDirectories
argument_list|(
name|dummyReleasesResourceFile
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|dummyReleasesResourceFile
argument_list|,
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|,
literal|"last"
argument_list|)
expr_stmt|;
name|WebRequest
name|request
init|=
operator|new
name|GetMethodWebRequest
argument_list|(
literal|"http://machine.com/repository/"
operator|+
name|REPO_GROUP_WITH_VALID_REPOS
operator|+
literal|"/dummy/dummy-artifact/"
argument_list|)
decl_stmt|;
name|WebResponse
name|response
init|=
name|getServletUnitClient
argument_list|()
operator|.
name|getResource
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|assertResponseOK
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getContentAsString
argument_list|()
argument_list|)
operator|.
name|contains
argument_list|(
literal|"Collection"
argument_list|)
operator|.
name|contains
argument_list|(
literal|"dummy/dummy-artifact"
argument_list|)
operator|.
name|contains
argument_list|(
literal|"1.0"
argument_list|)
operator|.
name|contains
argument_list|(
literal|"2.0"
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertResponseMethodNotAllowed
parameter_list|(
name|WebResponse
name|response
parameter_list|)
block|{
name|assertThat
argument_list|(
name|response
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getStatusCode
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|HttpServletResponse
operator|.
name|SC_METHOD_NOT_ALLOWED
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|RepositoryGroupConfiguration
name|createRepositoryGroup
parameter_list|(
name|String
name|id
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|repositories
parameter_list|)
block|{
name|RepositoryGroupConfiguration
name|repoGroupConfiguration
init|=
operator|new
name|RepositoryGroupConfiguration
argument_list|()
decl_stmt|;
name|repoGroupConfiguration
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|repoGroupConfiguration
operator|.
name|setRepositories
argument_list|(
name|repositories
argument_list|)
expr_stmt|;
return|return
name|repoGroupConfiguration
return|;
block|}
block|}
end_class

end_unit

