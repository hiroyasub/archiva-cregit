begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|webdav
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|RepositoryAdminException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|beans
operator|.
name|ManagedRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|beans
operator|.
name|RepositoryGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
operator|.
name|DefaultRepositoryCommonValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
operator|.
name|group
operator|.
name|DefaultRepositoryGroupAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|repository
operator|.
name|managed
operator|.
name|DefaultManagedRepositoryAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|plexusbridge
operator|.
name|PlexusSisuBridge
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|plexusbridge
operator|.
name|PlexusSisuBridgeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|RepositoryGroupConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|proxy
operator|.
name|DefaultRepositoryProxyConnectors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ManagedRepositoryContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RepositoryContentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|LegacyPathParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|ManagedDefaultRepositoryContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
operator|.
name|RepositoryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|DavException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|DavResourceLocator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|DavServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|webdav
operator|.
name|DavServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|MockControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|MockClassControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|test
operator|.
name|utils
operator|.
name|ArchivaSpringJUnit4ClassRunner
import|;
end_import

begin_comment
comment|/**  * ArchivaDavResourceFactoryTest  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|ArchivaSpringJUnit4ClassRunner
operator|.
name|class
argument_list|)
annotation|@
name|ContextConfiguration
argument_list|(
name|locations
operator|=
block|{
literal|"classpath*:/META-INF/spring-context.xml"
block|,
literal|"classpath*:/spring-context.xml"
block|}
argument_list|)
specifier|public
class|class
name|ArchivaDavResourceFactoryTest
extends|extends
name|TestCase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|RELEASES_REPO
init|=
literal|"releases"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|INTERNAL_REPO
init|=
literal|"internal"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|LOCAL_MIRROR_REPO
init|=
literal|"local-mirror"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|LEGACY_REPO
init|=
literal|"legacy-repo"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|LOCAL_REPO_GROUP
init|=
literal|"local"
decl_stmt|;
specifier|private
name|OverridingArchivaDavResourceFactory
name|resourceFactory
decl_stmt|;
specifier|private
name|MockControl
name|requestControl
decl_stmt|;
specifier|private
name|DavServletRequest
name|request
decl_stmt|;
specifier|private
name|MockControl
name|repoRequestControl
decl_stmt|;
specifier|private
name|RepositoryRequest
name|repoRequest
decl_stmt|;
specifier|private
name|MockControl
name|responseControl
decl_stmt|;
specifier|private
name|DavServletResponse
name|response
decl_stmt|;
specifier|private
name|MockControl
name|archivaConfigurationControl
decl_stmt|;
specifier|private
name|ArchivaConfiguration
name|archivaConfiguration
decl_stmt|;
specifier|private
name|Configuration
name|config
decl_stmt|;
specifier|private
name|MockControl
name|repoContentFactoryControl
decl_stmt|;
specifier|private
name|RepositoryContentFactory
name|repoFactory
decl_stmt|;
annotation|@
name|Inject
name|ApplicationContext
name|applicationContext
decl_stmt|;
annotation|@
name|Inject
name|PlexusSisuBridge
name|plexusSisuBridge
decl_stmt|;
annotation|@
name|Inject
name|DefaultManagedRepositoryAdmin
name|defaultManagedRepositoryAdmin
decl_stmt|;
annotation|@
name|Inject
name|DefaultRepositoryGroupAdmin
name|defaultRepositoryGroupAdmin
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|requestControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|DavServletRequest
operator|.
name|class
argument_list|)
expr_stmt|;
name|request
operator|=
operator|(
name|DavServletRequest
operator|)
name|requestControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|responseControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|DavServletResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|response
operator|=
operator|(
name|DavServletResponse
operator|)
name|responseControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|responseControl
operator|.
name|setDefaultMatcher
argument_list|(
name|MockControl
operator|.
name|ALWAYS_MATCHER
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|=
name|MockControl
operator|.
name|createControl
argument_list|(
name|ArchivaConfiguration
operator|.
name|class
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|=
operator|(
name|ArchivaConfiguration
operator|)
name|archivaConfigurationControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|config
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setReturnValue
argument_list|(
name|config
argument_list|,
literal|5
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|archivaConfiguration
operator|.
name|save
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|setVoidCallable
argument_list|(
literal|1
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|defaultManagedRepositoryAdmin
operator|.
name|setArchivaConfiguration
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
operator|(
operator|(
name|DefaultRepositoryCommonValidator
operator|)
name|defaultManagedRepositoryAdmin
operator|.
name|getRepositoryCommonValidator
argument_list|()
operator|)
operator|.
name|setArchivaConfiguration
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
if|if
condition|(
name|defaultManagedRepositoryAdmin
operator|.
name|getManagedRepository
argument_list|(
name|RELEASES_REPO
argument_list|)
operator|==
literal|null
condition|)
block|{
name|defaultManagedRepositoryAdmin
operator|.
name|addManagedRepository
argument_list|(
name|createManagedRepository
argument_list|(
name|RELEASES_REPO
argument_list|,
operator|new
name|File
argument_list|(
literal|"target/test-classes/"
operator|+
name|RELEASES_REPO
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|,
literal|"default"
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|defaultManagedRepositoryAdmin
operator|.
name|getManagedRepository
argument_list|(
name|INTERNAL_REPO
argument_list|)
operator|==
literal|null
condition|)
block|{
name|defaultManagedRepositoryAdmin
operator|.
name|addManagedRepository
argument_list|(
name|createManagedRepository
argument_list|(
name|INTERNAL_REPO
argument_list|,
operator|new
name|File
argument_list|(
literal|"target/test-classes/"
operator|+
name|INTERNAL_REPO
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|,
literal|"default"
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
name|RepositoryGroup
name|repoGroupConfig
init|=
operator|new
name|RepositoryGroup
argument_list|()
decl_stmt|;
name|repoGroupConfig
operator|.
name|setId
argument_list|(
name|LOCAL_REPO_GROUP
argument_list|)
expr_stmt|;
name|repoGroupConfig
operator|.
name|addRepository
argument_list|(
name|RELEASES_REPO
argument_list|)
expr_stmt|;
name|repoGroupConfig
operator|.
name|addRepository
argument_list|(
name|INTERNAL_REPO
argument_list|)
expr_stmt|;
name|defaultRepositoryGroupAdmin
operator|.
name|setArchivaConfiguration
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
if|if
condition|(
name|defaultManagedRepositoryAdmin
operator|.
name|getManagedRepository
argument_list|(
name|LOCAL_REPO_GROUP
argument_list|)
operator|==
literal|null
condition|)
block|{
name|defaultRepositoryGroupAdmin
operator|.
name|addRepositoryGroup
argument_list|(
name|repoGroupConfig
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
name|repoContentFactoryControl
operator|=
name|MockClassControl
operator|.
name|createControl
argument_list|(
name|RepositoryContentFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|repoFactory
operator|=
operator|(
name|RepositoryContentFactory
operator|)
name|repoContentFactoryControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|repoRequestControl
operator|=
name|MockClassControl
operator|.
name|createControl
argument_list|(
name|RepositoryRequest
operator|.
name|class
argument_list|)
expr_stmt|;
name|repoRequest
operator|=
operator|(
name|RepositoryRequest
operator|)
name|repoRequestControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|resourceFactory
operator|=
operator|new
name|OverridingArchivaDavResourceFactory
argument_list|(
name|applicationContext
argument_list|,
name|plexusSisuBridge
argument_list|,
name|archivaConfiguration
argument_list|)
expr_stmt|;
name|resourceFactory
operator|.
name|setArchivaConfiguration
argument_list|(
name|archivaConfiguration
argument_list|)
expr_stmt|;
name|resourceFactory
operator|.
name|setRepositoryFactory
argument_list|(
name|repoFactory
argument_list|)
expr_stmt|;
name|resourceFactory
operator|.
name|setRepositoryRequest
argument_list|(
name|repoRequest
argument_list|)
expr_stmt|;
name|resourceFactory
operator|.
name|setConnectors
argument_list|(
operator|new
name|OverridingRepositoryProxyConnectors
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ManagedRepository
name|createManagedRepository
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|location
parameter_list|,
name|String
name|layout
parameter_list|)
block|{
name|ManagedRepository
name|repoConfig
init|=
operator|new
name|ManagedRepository
argument_list|()
decl_stmt|;
name|repoConfig
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setName
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setLocation
argument_list|(
name|location
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
return|return
name|repoConfig
return|;
block|}
specifier|private
name|ManagedRepositoryContent
name|createManagedRepositoryContent
parameter_list|(
name|String
name|repoId
parameter_list|)
throws|throws
name|RepositoryAdminException
block|{
name|ManagedRepositoryContent
name|repoContent
init|=
operator|new
name|ManagedDefaultRepositoryContent
argument_list|()
decl_stmt|;
name|repoContent
operator|.
name|setRepository
argument_list|(
name|defaultManagedRepositoryAdmin
operator|.
name|getManagedRepository
argument_list|(
name|repoId
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|repoContent
return|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
comment|// MRM-1232 - Unable to get artifacts from repositories which requires Repository Manager role using repository group
annotation|@
name|Test
specifier|public
name|void
name|testRepositoryGroupFirstRepositoryRequiresAuthentication
parameter_list|()
throws|throws
name|Exception
block|{
name|DavResourceLocator
name|locator
init|=
operator|new
name|ArchivaDavResourceLocator
argument_list|(
literal|""
argument_list|,
literal|"/repository/"
operator|+
name|LOCAL_REPO_GROUP
operator|+
literal|"/org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|,
name|LOCAL_REPO_GROUP
argument_list|,
operator|new
name|ArchivaDavLocatorFactory
argument_list|()
argument_list|)
decl_stmt|;
name|ManagedRepositoryContent
name|internalRepo
init|=
name|createManagedRepositoryContent
argument_list|(
name|INTERNAL_REPO
argument_list|)
decl_stmt|;
name|ManagedRepositoryContent
name|releasesRepo
init|=
name|createManagedRepositoryContent
argument_list|(
name|RELEASES_REPO
argument_list|)
decl_stmt|;
try|try
block|{
name|archivaConfigurationControl
operator|.
name|reset
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getMethod
argument_list|()
argument_list|,
literal|"GET"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getPathInfo
argument_list|()
argument_list|,
literal|"org/apache/archiva"
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|expectAndReturn
argument_list|(
name|repoFactory
operator|.
name|getManagedRepositoryContent
argument_list|(
name|RELEASES_REPO
argument_list|)
argument_list|,
name|releasesRepo
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getRemoteAddr
argument_list|()
argument_list|,
literal|"http://localhost:8080"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getDavSession
argument_list|()
argument_list|,
operator|new
name|ArchivaDavSession
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|repoRequestControl
operator|.
name|expectAndReturn
argument_list|(
name|repoRequest
operator|.
name|isSupportFile
argument_list|(
literal|"org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|repoRequestControl
operator|.
name|expectAndReturn
argument_list|(
name|repoRequest
operator|.
name|isDefault
argument_list|(
literal|"org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|repoRequestControl
operator|.
name|expectAndReturn
argument_list|(
name|repoRequest
operator|.
name|toArtifactReference
argument_list|(
literal|"org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|repoRequestControl
operator|.
name|expectAndReturn
argument_list|(
name|repoRequest
operator|.
name|toNativePath
argument_list|(
literal|"org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|,
name|internalRepo
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|config
operator|.
name|findManagedRepositoryById
argument_list|(
name|INTERNAL_REPO
argument_list|)
operator|.
name|getLocation
argument_list|()
argument_list|,
literal|"target/test-classes/internal/org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|expectAndReturn
argument_list|(
name|repoFactory
operator|.
name|getManagedRepositoryContent
argument_list|(
name|INTERNAL_REPO
argument_list|)
argument_list|,
name|internalRepo
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|requestControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoRequestControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|resourceFactory
operator|.
name|createResource
argument_list|(
name|locator
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|requestControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoRequestControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"A DavException with 401 error code should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|DavException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|401
argument_list|,
name|e
operator|.
name|getErrorCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRepositoryGroupLastRepositoryRequiresAuthentication
parameter_list|()
throws|throws
name|Exception
block|{
name|DavResourceLocator
name|locator
init|=
operator|new
name|ArchivaDavResourceLocator
argument_list|(
literal|""
argument_list|,
literal|"/repository/"
operator|+
name|LOCAL_REPO_GROUP
operator|+
literal|"/org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|,
name|LOCAL_REPO_GROUP
argument_list|,
operator|new
name|ArchivaDavLocatorFactory
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|RepositoryGroupConfiguration
argument_list|>
name|repoGroups
init|=
operator|new
name|ArrayList
argument_list|<
name|RepositoryGroupConfiguration
argument_list|>
argument_list|()
decl_stmt|;
name|RepositoryGroupConfiguration
name|repoGroup
init|=
operator|new
name|RepositoryGroupConfiguration
argument_list|()
decl_stmt|;
name|repoGroup
operator|.
name|setId
argument_list|(
name|LOCAL_REPO_GROUP
argument_list|)
expr_stmt|;
name|repoGroup
operator|.
name|addRepository
argument_list|(
name|INTERNAL_REPO
argument_list|)
expr_stmt|;
name|repoGroup
operator|.
name|addRepository
argument_list|(
name|RELEASES_REPO
argument_list|)
expr_stmt|;
name|repoGroups
operator|.
name|add
argument_list|(
name|repoGroup
argument_list|)
expr_stmt|;
name|config
operator|.
name|setRepositoryGroups
argument_list|(
name|repoGroups
argument_list|)
expr_stmt|;
name|ManagedRepositoryContent
name|internalRepo
init|=
name|createManagedRepositoryContent
argument_list|(
name|INTERNAL_REPO
argument_list|)
decl_stmt|;
name|ManagedRepositoryContent
name|releasesRepo
init|=
name|createManagedRepositoryContent
argument_list|(
name|RELEASES_REPO
argument_list|)
decl_stmt|;
try|try
block|{
name|archivaConfigurationControl
operator|.
name|reset
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getMethod
argument_list|()
argument_list|,
literal|"GET"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getPathInfo
argument_list|()
argument_list|,
literal|"org/apache/archiva"
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|expectAndReturn
argument_list|(
name|repoFactory
operator|.
name|getManagedRepositoryContent
argument_list|(
name|INTERNAL_REPO
argument_list|)
argument_list|,
name|internalRepo
argument_list|)
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|expectAndReturn
argument_list|(
name|repoFactory
operator|.
name|getManagedRepositoryContent
argument_list|(
name|RELEASES_REPO
argument_list|)
argument_list|,
name|releasesRepo
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getRemoteAddr
argument_list|()
argument_list|,
literal|"http://localhost:8080"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getDavSession
argument_list|()
argument_list|,
operator|new
name|ArchivaDavSession
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|repoRequestControl
operator|.
name|expectAndReturn
argument_list|(
name|repoRequest
operator|.
name|isSupportFile
argument_list|(
literal|"org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|repoRequestControl
operator|.
name|expectAndReturn
argument_list|(
name|repoRequest
operator|.
name|isDefault
argument_list|(
literal|"org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|repoRequestControl
operator|.
name|expectAndReturn
argument_list|(
name|repoRequest
operator|.
name|toArtifactReference
argument_list|(
literal|"org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|repoRequestControl
operator|.
name|expectAndReturn
argument_list|(
name|repoRequest
operator|.
name|toNativePath
argument_list|(
literal|"org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|,
name|internalRepo
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|config
operator|.
name|findManagedRepositoryById
argument_list|(
name|INTERNAL_REPO
argument_list|)
operator|.
name|getLocation
argument_list|()
argument_list|,
literal|"target/test-classes/internal/org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|requestControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoRequestControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|resourceFactory
operator|.
name|createResource
argument_list|(
name|locator
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|requestControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoRequestControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"A DavException with 401 error code should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|DavException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|401
argument_list|,
name|e
operator|.
name|getErrorCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRepositoryGroupArtifactDoesNotExistInAnyOfTheReposAuthenticationDisabled
parameter_list|()
throws|throws
name|Exception
block|{
name|DavResourceLocator
name|locator
init|=
operator|new
name|ArchivaDavResourceLocator
argument_list|(
literal|""
argument_list|,
literal|"/repository/"
operator|+
name|LOCAL_REPO_GROUP
operator|+
literal|"/org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|,
name|LOCAL_REPO_GROUP
argument_list|,
operator|new
name|ArchivaDavLocatorFactory
argument_list|()
argument_list|)
decl_stmt|;
name|defaultManagedRepositoryAdmin
operator|.
name|addManagedRepository
argument_list|(
name|createManagedRepository
argument_list|(
name|LOCAL_MIRROR_REPO
argument_list|,
operator|new
name|File
argument_list|(
literal|"target/test-classes/local-mirror"
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|,
literal|"default"
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|RepositoryGroupConfiguration
argument_list|>
name|repoGroups
init|=
operator|new
name|ArrayList
argument_list|<
name|RepositoryGroupConfiguration
argument_list|>
argument_list|()
decl_stmt|;
name|RepositoryGroupConfiguration
name|repoGroup
init|=
operator|new
name|RepositoryGroupConfiguration
argument_list|()
decl_stmt|;
name|repoGroup
operator|.
name|setId
argument_list|(
name|LOCAL_REPO_GROUP
argument_list|)
expr_stmt|;
name|repoGroup
operator|.
name|addRepository
argument_list|(
name|INTERNAL_REPO
argument_list|)
expr_stmt|;
name|repoGroup
operator|.
name|addRepository
argument_list|(
name|LOCAL_MIRROR_REPO
argument_list|)
expr_stmt|;
name|repoGroups
operator|.
name|add
argument_list|(
name|repoGroup
argument_list|)
expr_stmt|;
name|config
operator|.
name|setRepositoryGroups
argument_list|(
name|repoGroups
argument_list|)
expr_stmt|;
name|ManagedRepositoryContent
name|internalRepo
init|=
name|createManagedRepositoryContent
argument_list|(
name|INTERNAL_REPO
argument_list|)
decl_stmt|;
name|ManagedRepositoryContent
name|localMirrorRepo
init|=
name|createManagedRepositoryContent
argument_list|(
name|LOCAL_MIRROR_REPO
argument_list|)
decl_stmt|;
try|try
block|{
name|archivaConfigurationControl
operator|.
name|reset
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getMethod
argument_list|()
argument_list|,
literal|"GET"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getPathInfo
argument_list|()
argument_list|,
literal|"org/apache/archiva"
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|expectAndReturn
argument_list|(
name|repoFactory
operator|.
name|getManagedRepositoryContent
argument_list|(
name|INTERNAL_REPO
argument_list|)
argument_list|,
name|internalRepo
argument_list|)
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|expectAndReturn
argument_list|(
name|repoFactory
operator|.
name|getManagedRepositoryContent
argument_list|(
name|LOCAL_MIRROR_REPO
argument_list|)
argument_list|,
name|localMirrorRepo
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getRemoteAddr
argument_list|()
argument_list|,
literal|"http://localhost:8080"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getDavSession
argument_list|()
argument_list|,
operator|new
name|ArchivaDavSession
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|repoRequestControl
operator|.
name|expectAndReturn
argument_list|(
name|repoRequest
operator|.
name|isSupportFile
argument_list|(
literal|"org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|repoRequestControl
operator|.
name|expectAndReturn
argument_list|(
name|repoRequest
operator|.
name|isDefault
argument_list|(
literal|"org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|repoRequestControl
operator|.
name|expectAndReturn
argument_list|(
name|repoRequest
operator|.
name|toArtifactReference
argument_list|(
literal|"org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|repoRequestControl
operator|.
name|expectAndReturn
argument_list|(
name|repoRequest
operator|.
name|toNativePath
argument_list|(
literal|"org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|,
name|internalRepo
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|config
operator|.
name|findManagedRepositoryById
argument_list|(
name|INTERNAL_REPO
argument_list|)
operator|.
name|getLocation
argument_list|()
argument_list|,
literal|"target/test-classes/internal/org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|repoRequestControl
operator|.
name|expectAndReturn
argument_list|(
name|repoRequest
operator|.
name|toNativePath
argument_list|(
literal|"org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|,
name|localMirrorRepo
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|config
operator|.
name|findManagedRepositoryById
argument_list|(
name|LOCAL_MIRROR_REPO
argument_list|)
operator|.
name|getLocation
argument_list|()
argument_list|,
literal|"target/test-classes/internal/org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|requestControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoRequestControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|resourceFactory
operator|.
name|createResource
argument_list|(
name|locator
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|requestControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoRequestControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"A DavException with 404 error code should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|DavException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|404
argument_list|,
name|e
operator|.
name|getErrorCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|// MRM-1239
annotation|@
name|Test
specifier|public
name|void
name|testRequestArtifactMetadataThreePartsRepoHasDefaultLayout
parameter_list|()
throws|throws
name|Exception
block|{
comment|// should fetch metadata
name|DavResourceLocator
name|locator
init|=
operator|new
name|ArchivaDavResourceLocator
argument_list|(
literal|""
argument_list|,
literal|"/repository/"
operator|+
name|INTERNAL_REPO
operator|+
literal|"/eclipse/jdtcore/maven-metadata.xml"
argument_list|,
name|INTERNAL_REPO
argument_list|,
operator|new
name|ArchivaDavLocatorFactory
argument_list|()
argument_list|)
decl_stmt|;
name|ManagedRepositoryContent
name|internalRepo
init|=
name|createManagedRepositoryContent
argument_list|(
name|INTERNAL_REPO
argument_list|)
decl_stmt|;
comment|// use actual object (this performs the isMetadata, isDefault and isSupportFile check!)
name|RepositoryRequest
name|repoRequest
init|=
operator|new
name|RepositoryRequest
argument_list|(
operator|new
name|LegacyPathParser
argument_list|(
name|this
operator|.
name|archivaConfiguration
argument_list|)
argument_list|)
decl_stmt|;
name|resourceFactory
operator|.
name|setRepositoryRequest
argument_list|(
name|repoRequest
argument_list|)
expr_stmt|;
try|try
block|{
name|archivaConfigurationControl
operator|.
name|reset
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|expectAndReturn
argument_list|(
name|repoFactory
operator|.
name|getManagedRepositoryContent
argument_list|(
name|INTERNAL_REPO
argument_list|)
argument_list|,
name|internalRepo
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getMethod
argument_list|()
argument_list|,
literal|"GET"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getRemoteAddr
argument_list|()
argument_list|,
literal|"http://localhost:8080"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getDavSession
argument_list|()
argument_list|,
operator|new
name|ArchivaDavSession
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getRequestURI
argument_list|()
argument_list|,
literal|"http://localhost:8080/archiva/repository/"
operator|+
name|INTERNAL_REPO
operator|+
literal|"/eclipse/jdtcore/maven-metadata.xml"
argument_list|)
expr_stmt|;
name|response
operator|.
name|addHeader
argument_list|(
literal|"Pragma"
argument_list|,
literal|"no-cache"
argument_list|)
expr_stmt|;
name|responseControl
operator|.
name|setVoidCallable
argument_list|()
expr_stmt|;
name|response
operator|.
name|addHeader
argument_list|(
literal|"Cache-Control"
argument_list|,
literal|"no-cache"
argument_list|)
expr_stmt|;
name|responseControl
operator|.
name|setVoidCallable
argument_list|()
expr_stmt|;
name|long
name|date
init|=
literal|2039842134
decl_stmt|;
name|response
operator|.
name|addDateHeader
argument_list|(
literal|"last-modified"
argument_list|,
name|date
argument_list|)
expr_stmt|;
name|responseControl
operator|.
name|setVoidCallable
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|requestControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|responseControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|resourceFactory
operator|.
name|createResource
argument_list|(
name|locator
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|requestControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|responseControl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|DavException
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"A DavException should not have been thrown!"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRequestArtifactMetadataTwoPartsRepoHasDefaultLayout
parameter_list|()
throws|throws
name|Exception
block|{
comment|// should not fetch metadata
name|DavResourceLocator
name|locator
init|=
operator|new
name|ArchivaDavResourceLocator
argument_list|(
literal|""
argument_list|,
literal|"/repository/"
operator|+
name|INTERNAL_REPO
operator|+
literal|"/eclipse/maven-metadata.xml"
argument_list|,
name|INTERNAL_REPO
argument_list|,
operator|new
name|ArchivaDavLocatorFactory
argument_list|()
argument_list|)
decl_stmt|;
name|ManagedRepositoryContent
name|internalRepo
init|=
name|createManagedRepositoryContent
argument_list|(
name|INTERNAL_REPO
argument_list|)
decl_stmt|;
comment|// use actual object (this performs the isMetadata, isDefault and isSupportFile check!)
name|RepositoryRequest
name|repoRequest
init|=
operator|new
name|RepositoryRequest
argument_list|(
operator|new
name|LegacyPathParser
argument_list|(
name|this
operator|.
name|archivaConfiguration
argument_list|)
argument_list|)
decl_stmt|;
name|resourceFactory
operator|.
name|setRepositoryRequest
argument_list|(
name|repoRequest
argument_list|)
expr_stmt|;
try|try
block|{
name|archivaConfigurationControl
operator|.
name|reset
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|expectAndReturn
argument_list|(
name|repoFactory
operator|.
name|getManagedRepositoryContent
argument_list|(
name|INTERNAL_REPO
argument_list|)
argument_list|,
name|internalRepo
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getMethod
argument_list|()
argument_list|,
literal|"GET"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getRemoteAddr
argument_list|()
argument_list|,
literal|"http://localhost:8080"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getDavSession
argument_list|()
argument_list|,
operator|new
name|ArchivaDavSession
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|requestControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|resourceFactory
operator|.
name|createResource
argument_list|(
name|locator
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|requestControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"A 404 error should have been thrown!"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|DavException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|404
argument_list|,
name|e
operator|.
name|getErrorCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRequestMetadataRepoIsLegacy
parameter_list|()
throws|throws
name|Exception
block|{
name|defaultManagedRepositoryAdmin
operator|.
name|addManagedRepository
argument_list|(
name|createManagedRepository
argument_list|(
name|LEGACY_REPO
argument_list|,
operator|new
name|File
argument_list|(
literal|"target/test-classes/"
operator|+
name|LEGACY_REPO
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|,
literal|"legacy"
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|DavResourceLocator
name|locator
init|=
operator|new
name|ArchivaDavResourceLocator
argument_list|(
literal|""
argument_list|,
literal|"/repository/"
operator|+
name|LEGACY_REPO
operator|+
literal|"/eclipse/maven-metadata.xml"
argument_list|,
name|LEGACY_REPO
argument_list|,
operator|new
name|ArchivaDavLocatorFactory
argument_list|()
argument_list|)
decl_stmt|;
name|ManagedRepositoryContent
name|legacyRepo
init|=
name|createManagedRepositoryContent
argument_list|(
name|LEGACY_REPO
argument_list|)
decl_stmt|;
comment|// use actual object (this performs the isMetadata, isDefault and isSupportFile check!)
name|RepositoryRequest
name|repoRequest
init|=
operator|new
name|RepositoryRequest
argument_list|(
operator|new
name|LegacyPathParser
argument_list|(
name|this
operator|.
name|archivaConfiguration
argument_list|)
argument_list|)
decl_stmt|;
name|resourceFactory
operator|.
name|setRepositoryRequest
argument_list|(
name|repoRequest
argument_list|)
expr_stmt|;
try|try
block|{
name|archivaConfigurationControl
operator|.
name|reset
argument_list|()
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|expectAndReturn
argument_list|(
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|expectAndReturn
argument_list|(
name|repoFactory
operator|.
name|getManagedRepositoryContent
argument_list|(
name|LEGACY_REPO
argument_list|)
argument_list|,
name|legacyRepo
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getMethod
argument_list|()
argument_list|,
literal|"GET"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getRemoteAddr
argument_list|()
argument_list|,
literal|"http://localhost:8080"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|requestControl
operator|.
name|expectAndReturn
argument_list|(
name|request
operator|.
name|getDavSession
argument_list|()
argument_list|,
operator|new
name|ArchivaDavSession
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|requestControl
operator|.
name|replay
argument_list|()
expr_stmt|;
name|resourceFactory
operator|.
name|createResource
argument_list|(
name|locator
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|archivaConfigurationControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|repoContentFactoryControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|requestControl
operator|.
name|verify
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"A 404 error should have been thrown!"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|DavException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|404
argument_list|,
name|e
operator|.
name|getErrorCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
class|class
name|OverridingArchivaDavResourceFactory
extends|extends
name|ArchivaDavResourceFactory
block|{
name|OverridingArchivaDavResourceFactory
parameter_list|(
name|ApplicationContext
name|applicationContext
parameter_list|,
name|PlexusSisuBridge
name|plexusSisuBridge
parameter_list|,
name|ArchivaConfiguration
name|archivaConfiguration
parameter_list|)
throws|throws
name|PlexusSisuBridgeException
block|{
name|super
argument_list|(
name|applicationContext
argument_list|,
name|plexusSisuBridge
argument_list|,
name|archivaConfiguration
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|boolean
name|isAuthorized
parameter_list|(
name|DavServletRequest
name|request
parameter_list|,
name|String
name|repositoryId
parameter_list|)
throws|throws
name|DavException
block|{
if|if
condition|(
name|RELEASES_REPO
operator|.
name|equals
argument_list|(
name|repositoryId
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|UnauthorizedDavException
argument_list|(
name|repositoryId
argument_list|,
literal|"You are not authenticated and authorized to access any repository."
argument_list|)
throw|;
block|}
else|else
block|{
return|return
literal|true
return|;
block|}
block|}
specifier|protected
name|String
name|getActivePrincipal
parameter_list|(
name|DavServletRequest
name|request
parameter_list|)
block|{
return|return
literal|"guest"
return|;
block|}
block|}
class|class
name|OverridingRepositoryProxyConnectors
extends|extends
name|DefaultRepositoryProxyConnectors
block|{
specifier|public
name|File
name|fetchMetatadaFromProxies
parameter_list|(
name|ManagedRepositoryContent
name|repository
parameter_list|,
name|String
name|logicalPath
parameter_list|)
block|{
name|File
name|target
init|=
operator|new
name|File
argument_list|(
name|repository
operator|.
name|getRepoRoot
argument_list|()
argument_list|,
name|logicalPath
argument_list|)
decl_stmt|;
try|try
block|{
name|FileUtils
operator|.
name|copyFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"target/test-classes/maven-metadata.xml"
argument_list|)
argument_list|,
name|target
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
block|}
return|return
name|target
return|;
block|}
block|}
block|}
end_class

end_unit

