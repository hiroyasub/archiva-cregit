begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|v2
operator|.
name|interceptor
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|AuditInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|event
operator|.
name|AbstractEventManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|event
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|event
operator|.
name|EventContextBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|event
operator|.
name|EventHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|event
operator|.
name|EventSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|event
operator|.
name|EventType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|event
operator|.
name|context
operator|.
name|RestContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|rest
operator|.
name|services
operator|.
name|RedbackAuthenticationThreadLocal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|rest
operator|.
name|services
operator|.
name|RedbackRequestInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|users
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|v2
operator|.
name|event
operator|.
name|RestRequestEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|v2
operator|.
name|event
operator|.
name|RestResponseEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|ContainerRequestContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|ContainerRequestFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|ContainerResponseContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|ContainerResponseFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|container
operator|.
name|ResourceInfo
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Priority
import|;
end_import

begin_comment
comment|/**  * @author Martin Schreier<martin_s@apache.org>  */
end_comment

begin_class
annotation|@
name|Provider
annotation|@
name|Service
argument_list|(
literal|"restInterceptor#audit"
argument_list|)
annotation|@
name|Priority
argument_list|(
name|Priorities
operator|.
name|AUDIT
argument_list|)
specifier|public
class|class
name|AuditInterceptor
extends|extends
name|AbstractEventManager
implements|implements
name|ContainerRequestFilter
implements|,
name|ContainerResponseFilter
implements|,
name|EventSource
block|{
annotation|@
name|Context
name|ResourceInfo
name|resourceInfo
decl_stmt|;
specifier|protected
name|void
name|addAuditInformation
parameter_list|(
name|Event
argument_list|<
name|RestContext
argument_list|>
name|evt
parameter_list|)
block|{
name|RedbackRequestInformation
name|redbackRequestInformation
init|=
name|RedbackAuthenticationThreadLocal
operator|.
name|get
argument_list|()
decl_stmt|;
name|String
name|user
init|=
name|redbackRequestInformation
operator|==
literal|null
condition|?
literal|""
else|:
name|redbackRequestInformation
operator|.
name|getUser
argument_list|()
operator|.
name|getUsername
argument_list|()
decl_stmt|;
name|String
name|remoteAddr
init|=
name|redbackRequestInformation
operator|==
literal|null
condition|?
literal|""
else|:
name|redbackRequestInformation
operator|.
name|getRemoteAddr
argument_list|()
decl_stmt|;
name|EventContextBuilder
operator|.
name|withEvent
argument_list|(
name|evt
argument_list|)
operator|.
name|withUser
argument_list|(
name|user
argument_list|,
name|remoteAddr
argument_list|)
operator|.
name|apply
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ContainerRequestContext
name|requestContext
parameter_list|,
name|ContainerResponseContext
name|responseContext
parameter_list|)
throws|throws
name|IOException
block|{
name|RestResponseEvent
name|evt
init|=
operator|new
name|RestResponseEvent
argument_list|(
name|RestResponseEvent
operator|.
name|AFTER
argument_list|,
name|this
argument_list|,
name|requestContext
operator|.
name|getUriInfo
argument_list|( )
operator|.
name|getPath
argument_list|( )
argument_list|,
name|resourceInfo
operator|.
name|getResourceClass
argument_list|( )
operator|.
name|getName
argument_list|( )
argument_list|,
name|resourceInfo
operator|.
name|getResourceMethod
argument_list|( )
operator|.
name|getName
argument_list|( )
argument_list|,
name|requestContext
operator|.
name|getMethod
argument_list|( )
argument_list|,
name|responseContext
operator|.
name|getStatus
argument_list|( )
argument_list|,
name|requestContext
operator|.
name|getUriInfo
argument_list|( )
operator|.
name|getPathParameters
argument_list|( )
argument_list|)
decl_stmt|;
name|addAuditInformation
argument_list|(
name|evt
argument_list|)
expr_stmt|;
name|fireEvent
argument_list|(
name|evt
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|filter
parameter_list|(
name|ContainerRequestContext
name|requestContext
parameter_list|)
throws|throws
name|IOException
block|{
name|RestRequestEvent
name|evt
init|=
operator|new
name|RestRequestEvent
argument_list|(
name|RestRequestEvent
operator|.
name|BEFORE
argument_list|,
name|this
argument_list|,
name|requestContext
operator|.
name|getUriInfo
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|,
name|resourceInfo
operator|.
name|getResourceClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|resourceInfo
operator|.
name|getResourceMethod
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|requestContext
operator|.
name|getMethod
argument_list|()
argument_list|,
name|requestContext
operator|.
name|getUriInfo
argument_list|()
operator|.
name|getPathParameters
argument_list|()
argument_list|)
decl_stmt|;
name|addAuditInformation
argument_list|(
name|evt
argument_list|)
expr_stmt|;
name|fireEvent
argument_list|(
name|evt
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

