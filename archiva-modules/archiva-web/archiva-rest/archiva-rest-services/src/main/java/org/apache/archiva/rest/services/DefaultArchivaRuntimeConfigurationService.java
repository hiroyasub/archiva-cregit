begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|services
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|RepositoryAdminException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|beans
operator|.
name|ArchivaRuntimeConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|beans
operator|.
name|CacheConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|beans
operator|.
name|FileLockConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|runtime
operator|.
name|ArchivaRuntimeConfigurationAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|filelock
operator|.
name|FileLockManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|components
operator|.
name|cache
operator|.
name|Cache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|services
operator|.
name|ArchivaRestServiceException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|services
operator|.
name|ArchivaRuntimeConfigurationService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Named
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  * @since 1.4-M4  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"archivaRuntimeConfigurationService#rest"
argument_list|)
specifier|public
class|class
name|DefaultArchivaRuntimeConfigurationService
extends|extends
name|AbstractRestService
implements|implements
name|ArchivaRuntimeConfigurationService
block|{
annotation|@
name|Inject
specifier|private
name|ArchivaRuntimeConfigurationAdmin
name|archivaRuntimeConfigurationAdmin
decl_stmt|;
annotation|@
name|Inject
annotation|@
name|Named
argument_list|(
name|value
operator|=
literal|"cache#url-failures-cache"
argument_list|)
specifier|private
name|Cache
name|usersCache
decl_stmt|;
annotation|@
name|Inject
annotation|@
name|Named
argument_list|(
name|value
operator|=
literal|"fileLockManager#default"
argument_list|)
specifier|private
name|FileLockManager
name|fileLockManager
decl_stmt|;
annotation|@
name|Override
specifier|public
name|ArchivaRuntimeConfiguration
name|getArchivaRuntimeConfiguration
parameter_list|()
throws|throws
name|ArchivaRestServiceException
block|{
try|try
block|{
return|return
name|archivaRuntimeConfigurationAdmin
operator|.
name|getArchivaRuntimeConfiguration
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|RepositoryAdminException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ArchivaRestServiceException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Boolean
name|updateArchivaRuntimeConfiguration
parameter_list|(
name|ArchivaRuntimeConfiguration
name|archivaRuntimeConfiguration
parameter_list|)
throws|throws
name|ArchivaRestServiceException
block|{
try|try
block|{
name|archivaRuntimeConfigurationAdmin
operator|.
name|updateArchivaRuntimeConfiguration
argument_list|(
name|archivaRuntimeConfiguration
argument_list|)
expr_stmt|;
name|CacheConfiguration
name|cacheConfiguration
init|=
name|archivaRuntimeConfiguration
operator|.
name|getUrlFailureCacheConfiguration
argument_list|()
decl_stmt|;
if|if
condition|(
name|cacheConfiguration
operator|!=
literal|null
condition|)
block|{
name|usersCache
operator|.
name|setTimeToLiveSeconds
argument_list|(
name|cacheConfiguration
operator|.
name|getTimeToLiveSeconds
argument_list|()
argument_list|)
expr_stmt|;
name|usersCache
operator|.
name|setTimeToIdleSeconds
argument_list|(
name|cacheConfiguration
operator|.
name|getTimeToIdleSeconds
argument_list|()
argument_list|)
expr_stmt|;
name|usersCache
operator|.
name|setMaxElementsOnDisk
argument_list|(
name|cacheConfiguration
operator|.
name|getMaxElementsOnDisk
argument_list|()
argument_list|)
expr_stmt|;
name|usersCache
operator|.
name|setMaxElementsInMemory
argument_list|(
name|cacheConfiguration
operator|.
name|getMaxElementsInMemory
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|FileLockConfiguration
name|fileLockConfiguration
init|=
name|archivaRuntimeConfiguration
operator|.
name|getFileLockConfiguration
argument_list|()
decl_stmt|;
if|if
condition|(
name|fileLockConfiguration
operator|!=
literal|null
condition|)
block|{
name|fileLockManager
operator|.
name|setTimeout
argument_list|(
name|fileLockConfiguration
operator|.
name|getLockingTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|fileLockManager
operator|.
name|setSkipLocking
argument_list|(
name|fileLockConfiguration
operator|.
name|isSkipLocking
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|RepositoryAdminException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ArchivaRestServiceException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
return|return
name|Boolean
operator|.
name|TRUE
return|;
block|}
block|}
end_class

end_unit

