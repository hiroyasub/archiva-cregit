begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|services
operator|.
name|v2
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|RepositoryAdminException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|beans
operator|.
name|RedbackRuntimeConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|runtime
operator|.
name|RedbackRuntimeConfigurationAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|components
operator|.
name|rest
operator|.
name|model
operator|.
name|PagedResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|components
operator|.
name|rest
operator|.
name|model
operator|.
name|PropertyEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|components
operator|.
name|rest
operator|.
name|util
operator|.
name|PagingHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|components
operator|.
name|rest
operator|.
name|util
operator|.
name|QueryHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|rbac
operator|.
name|RBACManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|users
operator|.
name|UserManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|model
operator|.
name|UserManagerImplementationInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|model
operator|.
name|v2
operator|.
name|BeanInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|model
operator|.
name|v2
operator|.
name|CacheConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|model
operator|.
name|v2
operator|.
name|LdapConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|model
operator|.
name|v2
operator|.
name|SecurityConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|services
operator|.
name|v2
operator|.
name|ArchivaRestServiceException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|services
operator|.
name|v2
operator|.
name|ErrorMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|services
operator|.
name|v2
operator|.
name|SecurityConfigurationService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|PostConstruct
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ResourceBundle
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Predicate
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|services
operator|.
name|v2
operator|.
name|ErrorKeys
operator|.
name|REPOSITORY_ADMIN_ERROR
import|;
end_import

begin_comment
comment|/**  * @author Martin Stockhammer<martin_s@apache.org>  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"v2.defaultSecurityConfigurationService"
argument_list|)
specifier|public
class|class
name|DefaultSecurityConfigurationService
implements|implements
name|SecurityConfigurationService
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|DefaultSecurityConfigurationService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|QueryHelper
argument_list|<
name|PropertyEntry
argument_list|>
name|PROP_QUERY_HELPER
init|=
operator|new
name|QueryHelper
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"key"
block|}
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|PagingHelper
name|PROP_PAGING_HELPER
init|=
operator|new
name|PagingHelper
argument_list|( )
decl_stmt|;
static|static
block|{
name|PROP_QUERY_HELPER
operator|.
name|addStringFilter
argument_list|(
literal|"key"
argument_list|,
name|PropertyEntry
operator|::
name|getKey
argument_list|)
expr_stmt|;
name|PROP_QUERY_HELPER
operator|.
name|addStringFilter
argument_list|(
literal|"value"
argument_list|,
name|PropertyEntry
operator|::
name|getValue
argument_list|)
expr_stmt|;
name|PROP_QUERY_HELPER
operator|.
name|addNullsafeFieldComparator
argument_list|(
literal|"key"
argument_list|,
name|PropertyEntry
operator|::
name|getKey
argument_list|)
expr_stmt|;
name|PROP_QUERY_HELPER
operator|.
name|addNullsafeFieldComparator
argument_list|(
literal|"value"
argument_list|,
name|PropertyEntry
operator|::
name|getValue
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ResourceBundle
name|bundle
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|RedbackRuntimeConfigurationAdmin
name|redbackRuntimeConfigurationAdmin
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|ApplicationContext
name|applicationContext
decl_stmt|;
annotation|@
name|PostConstruct
name|void
name|init
parameter_list|()
block|{
name|bundle
operator|=
name|ResourceBundle
operator|.
name|getBundle
argument_list|(
literal|"org.apache.archiva.rest.RestBundle"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|SecurityConfiguration
name|getConfiguration
parameter_list|( )
throws|throws
name|ArchivaRestServiceException
block|{
try|try
block|{
name|RedbackRuntimeConfiguration
name|redbackRuntimeConfiguration
init|=
name|redbackRuntimeConfigurationAdmin
operator|.
name|getRedbackRuntimeConfiguration
argument_list|( )
decl_stmt|;
name|log
operator|.
name|debug
argument_list|(
literal|"getRedbackRuntimeConfiguration -> {}"
argument_list|,
name|redbackRuntimeConfiguration
argument_list|)
expr_stmt|;
return|return
name|SecurityConfiguration
operator|.
name|ofRedbackConfiguration
argument_list|(
name|redbackRuntimeConfiguration
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RepositoryAdminException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ArchivaRestServiceException
argument_list|(
name|ErrorMessage
operator|.
name|of
argument_list|(
name|REPOSITORY_ADMIN_ERROR
argument_list|)
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|PagedResult
argument_list|<
name|PropertyEntry
argument_list|>
name|getConfigurationProperties
parameter_list|(
name|String
name|searchTerm
parameter_list|,
name|Integer
name|offset
parameter_list|,
name|Integer
name|limit
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|orderBy
parameter_list|,
name|String
name|order
parameter_list|)
throws|throws
name|ArchivaRestServiceException
block|{
try|try
block|{
name|RedbackRuntimeConfiguration
name|redbackRuntimeConfiguration
init|=
name|redbackRuntimeConfigurationAdmin
operator|.
name|getRedbackRuntimeConfiguration
argument_list|( )
decl_stmt|;
name|log
operator|.
name|debug
argument_list|(
literal|"getRedbackRuntimeConfiguration -> {}"
argument_list|,
name|redbackRuntimeConfiguration
argument_list|)
expr_stmt|;
name|boolean
name|ascending
init|=
name|PROP_QUERY_HELPER
operator|.
name|isAscending
argument_list|(
name|order
argument_list|)
decl_stmt|;
name|Predicate
argument_list|<
name|PropertyEntry
argument_list|>
name|filter
init|=
name|PROP_QUERY_HELPER
operator|.
name|getQueryFilter
argument_list|(
name|searchTerm
argument_list|)
decl_stmt|;
name|Comparator
argument_list|<
name|PropertyEntry
argument_list|>
name|comparator
init|=
name|PROP_QUERY_HELPER
operator|.
name|getComparator
argument_list|(
name|orderBy
argument_list|,
name|ascending
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|props
init|=
name|redbackRuntimeConfiguration
operator|.
name|getConfigurationProperties
argument_list|( )
decl_stmt|;
name|int
name|totalCount
init|=
name|props
operator|.
name|size
argument_list|( )
decl_stmt|;
name|List
argument_list|<
name|PropertyEntry
argument_list|>
name|result
init|=
name|props
operator|.
name|entrySet
argument_list|( )
operator|.
name|stream
argument_list|( )
operator|.
name|map
argument_list|(
name|entry
lambda|->
operator|new
name|PropertyEntry
argument_list|(
name|entry
operator|.
name|getKey
argument_list|( )
argument_list|,
name|entry
operator|.
name|getValue
argument_list|( )
argument_list|)
argument_list|)
operator|.
name|filter
argument_list|(
name|filter
argument_list|)
operator|.
name|sorted
argument_list|(
name|comparator
argument_list|)
operator|.
name|skip
argument_list|(
name|offset
argument_list|)
operator|.
name|limit
argument_list|(
name|limit
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|( )
argument_list|)
decl_stmt|;
return|return
operator|new
name|PagedResult
argument_list|<>
argument_list|(
name|totalCount
argument_list|,
name|offset
argument_list|,
name|limit
argument_list|,
name|result
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RepositoryAdminException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ArchivaRestServiceException
argument_list|(
name|ErrorMessage
operator|.
name|of
argument_list|(
name|REPOSITORY_ADMIN_ERROR
argument_list|)
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|LdapConfiguration
name|getLdapConfiguration
parameter_list|( )
throws|throws
name|ArchivaRestServiceException
block|{
try|try
block|{
name|RedbackRuntimeConfiguration
name|redbackRuntimeConfiguration
init|=
name|redbackRuntimeConfigurationAdmin
operator|.
name|getRedbackRuntimeConfiguration
argument_list|( )
decl_stmt|;
name|log
operator|.
name|debug
argument_list|(
literal|"getRedbackRuntimeConfiguration -> {}"
argument_list|,
name|redbackRuntimeConfiguration
argument_list|)
expr_stmt|;
return|return
name|LdapConfiguration
operator|.
name|of
argument_list|(
name|redbackRuntimeConfiguration
operator|.
name|getLdapConfiguration
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RepositoryAdminException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ArchivaRestServiceException
argument_list|(
name|ErrorMessage
operator|.
name|of
argument_list|(
name|REPOSITORY_ADMIN_ERROR
argument_list|)
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|CacheConfiguration
name|getCacheConfiguration
parameter_list|( )
throws|throws
name|ArchivaRestServiceException
block|{
try|try
block|{
name|RedbackRuntimeConfiguration
name|redbackRuntimeConfiguration
init|=
name|redbackRuntimeConfigurationAdmin
operator|.
name|getRedbackRuntimeConfiguration
argument_list|( )
decl_stmt|;
name|log
operator|.
name|debug
argument_list|(
literal|"getRedbackRuntimeConfiguration -> {}"
argument_list|,
name|redbackRuntimeConfiguration
argument_list|)
expr_stmt|;
return|return
name|CacheConfiguration
operator|.
name|of
argument_list|(
name|redbackRuntimeConfiguration
operator|.
name|getUsersCacheConfiguration
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RepositoryAdminException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ArchivaRestServiceException
argument_list|(
name|ErrorMessage
operator|.
name|of
argument_list|(
name|REPOSITORY_ADMIN_ERROR
argument_list|)
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|BeanInformation
argument_list|>
name|getAvailableUserManagers
parameter_list|( )
throws|throws
name|ArchivaRestServiceException
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|UserManager
argument_list|>
name|beans
init|=
name|applicationContext
operator|.
name|getBeansOfType
argument_list|(
name|UserManager
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|beans
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
return|return
name|beans
operator|.
name|entrySet
argument_list|( )
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|entry
lambda|->
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|isFinalImplementation
argument_list|()
argument_list|)
operator|.
name|map
argument_list|(
parameter_list|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|UserManager
argument_list|>
name|entry
parameter_list|)
lambda|->
block|{
name|UserManager
name|um
operator|=
name|entry
operator|.
name|getValue
argument_list|( )
argument_list|;
name|String
name|id
operator|=
name|StringUtils
operator|.
name|substringAfter
argument_list|(
name|entry
operator|.
name|getKey
argument_list|( )
argument_list|,
literal|"#"
argument_list|)
argument_list|;
name|String
name|displayName
operator|=
name|bundle
operator|.
name|getString
argument_list|(
literal|"user_manager."
operator|+
name|id
operator|+
literal|".display_name"
argument_list|)
argument_list|;
name|String
name|description
operator|=
name|bundle
operator|.
name|getString
argument_list|(
literal|"user_manager."
operator|+
name|id
operator|+
literal|".description"
argument_list|)
argument_list|;                 return
operator|new
name|BeanInformation
argument_list|(
name|StringUtils
operator|.
name|substringAfter
argument_list|(
name|entry
operator|.
name|getKey
argument_list|( )
argument_list|,
literal|"#"
argument_list|)
argument_list|,
name|displayName
argument_list|,
name|um
operator|.
name|getDescriptionKey
argument_list|( )
argument_list|,
name|description
argument_list|,
name|um
operator|.
name|isReadOnly
argument_list|( )
argument_list|)
argument_list|;
block|}
block|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
expr_stmt|;
end_class

begin_function
unit|}      @
name|Override
specifier|public
name|List
argument_list|<
name|BeanInformation
argument_list|>
name|getAvailableRbacManagers
parameter_list|( )
throws|throws
name|ArchivaRestServiceException
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|RBACManager
argument_list|>
name|beans
init|=
name|applicationContext
operator|.
name|getBeansOfType
argument_list|(
name|RBACManager
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|beans
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
return|return
name|beans
operator|.
name|entrySet
argument_list|( )
operator|.
name|stream
argument_list|( )
operator|.
name|filter
argument_list|(
name|entry
lambda|->
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|isFinalImplementation
argument_list|()
argument_list|)
operator|.
name|map
argument_list|(
parameter_list|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|RBACManager
argument_list|>
name|entry
parameter_list|)
lambda|->
block|{
name|RBACManager
name|rm
operator|=
name|entry
operator|.
name|getValue
argument_list|( )
argument_list|;
name|String
name|id
operator|=
name|StringUtils
operator|.
name|substringAfter
argument_list|(
name|entry
operator|.
name|getKey
argument_list|( )
argument_list|,
literal|"#"
argument_list|)
argument_list|;
name|String
name|displayName
operator|=
name|bundle
operator|.
name|getString
argument_list|(
literal|"rbac_manager."
operator|+
name|id
operator|+
literal|".display_name"
argument_list|)
argument_list|;
name|String
name|description
operator|=
name|bundle
operator|.
name|getString
argument_list|(
literal|"rbac_manager."
operator|+
name|id
operator|+
literal|".description"
argument_list|)
argument_list|;                 return
operator|new
name|BeanInformation
argument_list|(
name|StringUtils
operator|.
name|substringAfter
argument_list|(
name|entry
operator|.
name|getKey
argument_list|( )
argument_list|,
literal|"#"
argument_list|)
argument_list|,
name|displayName
argument_list|,
name|rm
operator|.
name|getDescriptionKey
argument_list|( )
argument_list|,
name|description
argument_list|,
name|rm
operator|.
name|isReadOnly
argument_list|( )
argument_list|)
argument_list|;
block|}
end_function

begin_expr_stmt
unit|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt

unit|} }
end_unit

