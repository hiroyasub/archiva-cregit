begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|services
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|maven2
operator|.
name|model
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|services
operator|.
name|MergeRepositoriesService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertThat
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  */
end_comment

begin_class
specifier|public
class|class
name|MergeRepositoriesServiceTest
extends|extends
name|AbstractArchivaRestTest
block|{
specifier|private
specifier|static
specifier|final
name|String
name|TEST_REPOSITORY
init|=
literal|"test-repository"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_REPOSITORY_STAGE
init|=
name|TEST_REPOSITORY
operator|+
literal|"-stage"
decl_stmt|;
specifier|private
name|Path
name|repo
init|=
name|getAppserverBase
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"data/repositories"
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"test-repository"
argument_list|)
decl_stmt|;
specifier|private
name|Path
name|repoStage
init|=
name|getAppserverBase
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"data/repositories"
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"test-repository-stage"
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|getMergeConflictedArtifacts
parameter_list|()
throws|throws
name|Exception
block|{
name|MergeRepositoriesService
name|service
init|=
name|getMergeRepositoriesService
argument_list|(
name|authorizationHeader
argument_list|)
decl_stmt|;
name|waitForScanToComplete
argument_list|(
name|TEST_REPOSITORY
argument_list|)
expr_stmt|;
name|waitForScanToComplete
argument_list|(
name|TEST_REPOSITORY_STAGE
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|artifactMetadatas
init|=
name|service
operator|.
name|getMergeConflictedArtifacts
argument_list|(
name|TEST_REPOSITORY_STAGE
argument_list|,
name|TEST_REPOSITORY
argument_list|)
decl_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"conflicts: {}"
argument_list|,
name|artifactMetadatas
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|artifactMetadatas
argument_list|)
operator|.
name|isNotNull
argument_list|()
operator|.
name|isNotEmpty
argument_list|()
operator|.
name|hasSize
argument_list|(
literal|8
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|merge
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|mergedArtifactPath
init|=
literal|"org/apache/felix/org.apache.felix.bundlerepository/1.6.4/org.apache.felix.bundlerepository-1.6.4.jar"
decl_stmt|;
name|String
name|mergedArtifactPomPath
init|=
literal|"org/apache/felix/org.apache.felix.bundlerepository/1.6.4/org.apache.felix.bundlerepository-1.6.4.pom"
decl_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoStage
operator|.
name|resolve
argument_list|(
name|mergedArtifactPath
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repoStage
operator|.
name|resolve
argument_list|(
name|mergedArtifactPomPath
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|waitForScanToComplete
argument_list|(
name|TEST_REPOSITORY
argument_list|)
expr_stmt|;
name|waitForScanToComplete
argument_list|(
name|TEST_REPOSITORY_STAGE
argument_list|)
expr_stmt|;
name|MergeRepositoriesService
name|service
init|=
name|getMergeRepositoriesService
argument_list|(
name|authorizationHeader
argument_list|)
decl_stmt|;
name|service
operator|.
name|mergeRepositories
argument_list|(
name|TEST_REPOSITORY_STAGE
argument_list|,
name|TEST_REPOSITORY
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repo
operator|.
name|resolve
argument_list|(
name|mergedArtifactPath
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|repo
operator|.
name|resolve
argument_list|(
name|mergedArtifactPomPath
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|deleteStageRepo
parameter_list|()
throws|throws
name|Exception
block|{
name|waitForScanToComplete
argument_list|(
name|TEST_REPOSITORY
argument_list|)
expr_stmt|;
name|waitForScanToComplete
argument_list|(
name|TEST_REPOSITORY_STAGE
argument_list|)
expr_stmt|;
name|deleteTestRepo
argument_list|(
name|TEST_REPOSITORY
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|repo
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|repoStage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|createStageRepo
parameter_list|()
throws|throws
name|Exception
block|{
comment|// FileUtils.copyDirectory( Paths.get( System.getProperty( "basedir" ), "src/test/repo-with-osgi" ).toFile(), repo.toFile() );
name|Path
name|srcRepo
init|=
name|getProjectDirectory
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"src/test/repo-with-osgi"
argument_list|)
decl_stmt|;
name|createStagedNeededRepo
argument_list|(
name|TEST_REPOSITORY
argument_list|,
name|srcRepo
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|copyDirectory
argument_list|(
name|getProjectDirectory
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"src/test/repo-with-osgi-stage"
argument_list|)
operator|.
name|toFile
argument_list|()
argument_list|,
name|repoStage
operator|.
name|toFile
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

