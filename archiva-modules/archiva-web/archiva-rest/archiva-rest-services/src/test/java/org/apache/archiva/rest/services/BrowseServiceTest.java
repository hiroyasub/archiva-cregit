begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|services
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|services
operator|.
name|BrowseService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fest
operator|.
name|assertions
operator|.
name|MapAssert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|fest
operator|.
name|assertions
operator|.
name|Assertions
operator|.
name|assertThat
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  */
end_comment

begin_class
specifier|public
class|class
name|BrowseServiceTest
extends|extends
name|AbstractArchivaRestTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|metadatagetthenadd
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|testRepoId
init|=
literal|"test-repo"
decl_stmt|;
comment|// force guest user creation if not exists
if|if
condition|(
name|getUserService
argument_list|(
name|authorizationHeader
argument_list|)
operator|.
name|getGuestUser
argument_list|()
operator|==
literal|null
condition|)
block|{
name|assertNotNull
argument_list|(
name|getUserService
argument_list|(
name|authorizationHeader
argument_list|)
operator|.
name|createGuestUser
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|createAndIndexRepo
argument_list|(
name|testRepoId
argument_list|,
literal|"src/test/repo-with-osgi"
argument_list|)
expr_stmt|;
name|BrowseService
name|browseService
init|=
name|getBrowseService
argument_list|(
name|authorizationHeader
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|metadatas
init|=
name|browseService
operator|.
name|getMetadatas
argument_list|(
literal|"commons-cli"
argument_list|,
literal|"commons-cli"
argument_list|,
literal|"1.0"
argument_list|,
name|testRepoId
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|metadatas
argument_list|)
operator|.
name|isNotNull
argument_list|()
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|browseService
operator|.
name|addMetadata
argument_list|(
literal|"commons-cli"
argument_list|,
literal|"commons-cli"
argument_list|,
literal|"1.0"
argument_list|,
literal|"wine"
argument_list|,
literal|"bordeaux"
argument_list|,
name|testRepoId
argument_list|)
expr_stmt|;
name|metadatas
operator|=
name|browseService
operator|.
name|getMetadatas
argument_list|(
literal|"commons-cli"
argument_list|,
literal|"commons-cli"
argument_list|,
literal|"1.0"
argument_list|,
name|testRepoId
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|metadatas
argument_list|)
operator|.
name|isNotNull
argument_list|()
operator|.
name|isNotEmpty
argument_list|()
operator|.
name|includes
argument_list|(
name|MapAssert
operator|.
name|entry
argument_list|(
literal|"wine"
argument_list|,
literal|"bordeaux"
argument_list|)
argument_list|)
expr_stmt|;
name|deleteTestRepo
argument_list|(
name|testRepoId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|metadatagetthenaddthendelete
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|testRepoId
init|=
literal|"test-repo"
decl_stmt|;
comment|// force guest user creation if not exists
if|if
condition|(
name|getUserService
argument_list|(
name|authorizationHeader
argument_list|)
operator|.
name|getGuestUser
argument_list|()
operator|==
literal|null
condition|)
block|{
name|assertNotNull
argument_list|(
name|getUserService
argument_list|(
name|authorizationHeader
argument_list|)
operator|.
name|createGuestUser
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|createAndIndexRepo
argument_list|(
name|testRepoId
argument_list|,
literal|"src/test/repo-with-osgi"
argument_list|)
expr_stmt|;
name|BrowseService
name|browseService
init|=
name|getBrowseService
argument_list|(
name|authorizationHeader
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|metadatas
init|=
name|browseService
operator|.
name|getMetadatas
argument_list|(
literal|"commons-cli"
argument_list|,
literal|"commons-cli"
argument_list|,
literal|"1.0"
argument_list|,
name|testRepoId
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|metadatas
argument_list|)
operator|.
name|isNotNull
argument_list|()
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|browseService
operator|.
name|addMetadata
argument_list|(
literal|"commons-cli"
argument_list|,
literal|"commons-cli"
argument_list|,
literal|"1.0"
argument_list|,
literal|"wine"
argument_list|,
literal|"bordeaux"
argument_list|,
name|testRepoId
argument_list|)
expr_stmt|;
name|metadatas
operator|=
name|browseService
operator|.
name|getMetadatas
argument_list|(
literal|"commons-cli"
argument_list|,
literal|"commons-cli"
argument_list|,
literal|"1.0"
argument_list|,
name|testRepoId
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|metadatas
argument_list|)
operator|.
name|isNotNull
argument_list|()
operator|.
name|isNotEmpty
argument_list|()
operator|.
name|includes
argument_list|(
name|MapAssert
operator|.
name|entry
argument_list|(
literal|"wine"
argument_list|,
literal|"bordeaux"
argument_list|)
argument_list|)
expr_stmt|;
name|browseService
operator|.
name|deleteMetadata
argument_list|(
literal|"commons-cli"
argument_list|,
literal|"commons-cli"
argument_list|,
literal|"1.0"
argument_list|,
literal|"wine"
argument_list|,
name|testRepoId
argument_list|)
expr_stmt|;
name|metadatas
operator|=
name|browseService
operator|.
name|getMetadatas
argument_list|(
literal|"commons-cli"
argument_list|,
literal|"commons-cli"
argument_list|,
literal|"1.0"
argument_list|,
name|testRepoId
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|metadatas
argument_list|)
operator|.
name|isNotNull
argument_list|()
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|deleteTestRepo
argument_list|(
name|testRepoId
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

