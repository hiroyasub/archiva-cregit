begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|v2
operator|.
name|svc
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Generic REST Service Exception that contains error information.  *  * @author Martin Stockhammer<martin_s@apache.org>  * @since 3.0  */
end_comment

begin_class
specifier|public
class|class
name|ArchivaRestServiceException
extends|extends
name|Exception
block|{
specifier|private
name|int
name|httpErrorCode
init|=
literal|500
decl_stmt|;
specifier|private
name|List
argument_list|<
name|ErrorMessage
argument_list|>
name|errorMessages
init|=
operator|new
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
argument_list|(
literal|0
argument_list|)
decl_stmt|;
specifier|public
name|ArchivaRestServiceException
parameter_list|(
name|String
name|s
parameter_list|)
block|{
name|super
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ArchivaRestServiceException
parameter_list|(
name|String
name|s
parameter_list|,
name|int
name|httpErrorCode
parameter_list|)
block|{
name|super
argument_list|(
name|s
argument_list|)
expr_stmt|;
name|this
operator|.
name|httpErrorCode
operator|=
name|httpErrorCode
expr_stmt|;
block|}
specifier|public
name|ArchivaRestServiceException
parameter_list|(
name|ErrorMessage
name|errorMessage
parameter_list|)
block|{
name|errorMessages
operator|.
name|add
argument_list|(
name|errorMessage
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ArchivaRestServiceException
parameter_list|(
name|ErrorMessage
name|errorMessage
parameter_list|,
name|int
name|httpResponseCode
parameter_list|)
block|{
name|this
operator|.
name|httpErrorCode
operator|=
name|httpResponseCode
expr_stmt|;
name|errorMessages
operator|.
name|add
argument_list|(
name|errorMessage
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ArchivaRestServiceException
parameter_list|(
name|List
argument_list|<
name|ErrorMessage
argument_list|>
name|errorMessage
parameter_list|)
block|{
name|errorMessages
operator|.
name|addAll
argument_list|(
name|errorMessage
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ArchivaRestServiceException
parameter_list|(
name|List
argument_list|<
name|ErrorMessage
argument_list|>
name|errorMessage
parameter_list|,
name|int
name|httpResponseCode
parameter_list|)
block|{
name|this
operator|.
name|httpErrorCode
operator|=
name|httpResponseCode
expr_stmt|;
name|errorMessages
operator|.
name|addAll
argument_list|(
name|errorMessage
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getHttpErrorCode
parameter_list|()
block|{
return|return
name|httpErrorCode
return|;
block|}
specifier|public
name|void
name|setHttpErrorCode
parameter_list|(
name|int
name|httpErrorCode
parameter_list|)
block|{
name|this
operator|.
name|httpErrorCode
operator|=
name|httpErrorCode
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|ErrorMessage
argument_list|>
name|getErrorMessages
parameter_list|()
block|{
if|if
condition|(
name|errorMessages
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|errorMessages
operator|=
operator|new
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
argument_list|()
expr_stmt|;
block|}
return|return
name|errorMessages
return|;
block|}
specifier|public
name|void
name|setErrorMessages
parameter_list|(
name|List
argument_list|<
name|ErrorMessage
argument_list|>
name|errorMessages
parameter_list|)
block|{
name|this
operator|.
name|errorMessages
operator|=
name|errorMessages
expr_stmt|;
block|}
specifier|public
name|void
name|addErrorMessage
parameter_list|(
name|ErrorMessage
name|errorMessage
parameter_list|)
block|{
name|this
operator|.
name|errorMessages
operator|.
name|add
argument_list|(
name|errorMessage
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

