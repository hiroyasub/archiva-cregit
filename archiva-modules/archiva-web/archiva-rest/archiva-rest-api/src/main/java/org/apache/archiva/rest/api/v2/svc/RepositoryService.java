begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|v2
operator|.
name|svc
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|v3
operator|.
name|oas
operator|.
name|annotations
operator|.
name|Operation
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|v3
operator|.
name|oas
operator|.
name|annotations
operator|.
name|Parameter
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|v3
operator|.
name|oas
operator|.
name|annotations
operator|.
name|media
operator|.
name|Content
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|v3
operator|.
name|oas
operator|.
name|annotations
operator|.
name|media
operator|.
name|Schema
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|v3
operator|.
name|oas
operator|.
name|annotations
operator|.
name|responses
operator|.
name|ApiResponse
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|v3
operator|.
name|oas
operator|.
name|annotations
operator|.
name|security
operator|.
name|SecurityRequirement
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|v3
operator|.
name|oas
operator|.
name|annotations
operator|.
name|tags
operator|.
name|Tag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|components
operator|.
name|rest
operator|.
name|model
operator|.
name|PagedResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|redback
operator|.
name|authorization
operator|.
name|RedbackAuthorization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|v2
operator|.
name|model
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|v2
operator|.
name|model
operator|.
name|RepositoryStatistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|v2
operator|.
name|model
operator|.
name|ScanStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|security
operator|.
name|common
operator|.
name|ArchivaRoleConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Consumes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|DELETE
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|DefaultValue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|POST
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|QueryParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriInfo
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
operator|.
name|APPLICATION_JSON
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|v2
operator|.
name|svc
operator|.
name|RestConfiguration
operator|.
name|DEFAULT_PAGE_LIMIT
import|;
end_import

begin_comment
comment|/**  * @author Martin Stockhammer<martin_s@apache.org>  * @since 3.0  */
end_comment

begin_interface
annotation|@
name|Path
argument_list|(
literal|"repositories"
argument_list|)
annotation|@
name|Tag
argument_list|(
name|name
operator|=
literal|"v2"
argument_list|)
annotation|@
name|Tag
argument_list|(
name|name
operator|=
literal|"v2/Repositories"
argument_list|)
annotation|@
name|Schema
argument_list|(
name|name
operator|=
literal|"RepositoryService"
argument_list|,
name|description
operator|=
literal|"Manage repositories of all types"
argument_list|)
specifier|public
interface|interface
name|RepositoryService
block|{
annotation|@
name|Path
argument_list|(
literal|""
argument_list|)
annotation|@
name|GET
annotation|@
name|Produces
argument_list|(
block|{
name|APPLICATION_JSON
block|}
argument_list|)
annotation|@
name|RedbackAuthorization
argument_list|(
name|permissions
operator|=
name|ArchivaRoleConstants
operator|.
name|OPERATION_MANAGE_CONFIGURATION
argument_list|)
annotation|@
name|Operation
argument_list|(
name|summary
operator|=
literal|"Returns all managed repositories."
argument_list|,
name|parameters
operator|=
block|{
annotation|@
name|Parameter
argument_list|(
name|name
operator|=
literal|"q"
argument_list|,
name|description
operator|=
literal|"Search term"
argument_list|)
block|,
annotation|@
name|Parameter
argument_list|(
name|name
operator|=
literal|"offset"
argument_list|,
name|description
operator|=
literal|"The offset of the first element returned"
argument_list|)
block|,
annotation|@
name|Parameter
argument_list|(
name|name
operator|=
literal|"limit"
argument_list|,
name|description
operator|=
literal|"Maximum number of items to return in the response"
argument_list|)
block|,
annotation|@
name|Parameter
argument_list|(
name|name
operator|=
literal|"orderBy"
argument_list|,
name|description
operator|=
literal|"List of attribute used for sorting (key, value)"
argument_list|)
block|,
annotation|@
name|Parameter
argument_list|(
name|name
operator|=
literal|"order"
argument_list|,
name|description
operator|=
literal|"The sort order. Either ascending (asc) or descending (desc)"
argument_list|)
block|,
annotation|@
name|Parameter
argument_list|(
name|name
operator|=
literal|"locale"
argument_list|,
name|description
operator|=
literal|"The locale for name and description"
argument_list|)
block|}
argument_list|,
name|security
operator|=
block|{
annotation|@
name|SecurityRequirement
argument_list|(
name|name
operator|=
name|ArchivaRoleConstants
operator|.
name|OPERATION_MANAGE_CONFIGURATION
argument_list|)
block|}
argument_list|,
name|responses
operator|=
block|{
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"200"
argument_list|,
name|description
operator|=
literal|"If the list could be returned"
argument_list|,
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|mediaType
operator|=
name|APPLICATION_JSON
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|PagedResult
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
block|,
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"403"
argument_list|,
name|description
operator|=
literal|"Authenticated user is not permitted to gather the information"
argument_list|,
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|mediaType
operator|=
name|APPLICATION_JSON
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|ArchivaRestError
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
block|}
argument_list|)
name|PagedResult
argument_list|<
name|Repository
argument_list|>
name|getRepositories
parameter_list|(
annotation|@
name|QueryParam
argument_list|(
literal|"q"
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
literal|""
argument_list|)
name|String
name|searchTerm
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"offset"
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
literal|"0"
argument_list|)
name|Integer
name|offset
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"limit"
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|value
operator|=
name|DEFAULT_PAGE_LIMIT
argument_list|)
name|Integer
name|limit
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"orderBy"
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
literal|"id"
argument_list|)
name|List
argument_list|<
name|String
argument_list|>
name|orderBy
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"order"
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
literal|"asc"
argument_list|)
name|String
name|order
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"locale"
argument_list|)
name|String
name|localeString
parameter_list|)
throws|throws
name|ArchivaRestServiceException
function_decl|;
annotation|@
name|Path
argument_list|(
literal|"managed/{id}/statistics"
argument_list|)
annotation|@
name|GET
annotation|@
name|Produces
argument_list|(
block|{
name|APPLICATION_JSON
block|}
argument_list|)
annotation|@
name|RedbackAuthorization
argument_list|(
name|permissions
operator|=
name|ArchivaRoleConstants
operator|.
name|OPERATION_MANAGE_CONFIGURATION
argument_list|)
annotation|@
name|Operation
argument_list|(
name|summary
operator|=
literal|"Returns repository statistic data."
argument_list|,
name|security
operator|=
block|{
annotation|@
name|SecurityRequirement
argument_list|(
name|name
operator|=
name|ArchivaRoleConstants
operator|.
name|OPERATION_MANAGE_CONFIGURATION
argument_list|)
block|}
argument_list|,
name|responses
operator|=
block|{
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"200"
argument_list|,
name|description
operator|=
literal|"If the statistics could be returned"
argument_list|,
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|mediaType
operator|=
name|APPLICATION_JSON
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|RepositoryStatistics
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
block|,
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"403"
argument_list|,
name|description
operator|=
literal|"Authenticated user is not permitted to gather the information"
argument_list|,
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|mediaType
operator|=
name|APPLICATION_JSON
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|ArchivaRestError
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
block|,
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"404"
argument_list|,
name|description
operator|=
literal|"The repository does not exist"
argument_list|,
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|mediaType
operator|=
name|APPLICATION_JSON
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|ArchivaRestError
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
block|}
argument_list|)
name|RepositoryStatistics
name|getManagedRepositoryStatistics
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"id"
argument_list|)
name|String
name|repositoryId
parameter_list|)
throws|throws
name|ArchivaRestServiceException
function_decl|;
annotation|@
name|Path
argument_list|(
literal|"managed/{id}/scan/schedule"
argument_list|)
annotation|@
name|POST
annotation|@
name|Produces
argument_list|(
block|{
name|APPLICATION_JSON
block|}
argument_list|)
annotation|@
name|Consumes
argument_list|(
block|{
name|APPLICATION_JSON
block|}
argument_list|)
annotation|@
name|RedbackAuthorization
argument_list|(
name|permissions
operator|=
name|ArchivaRoleConstants
operator|.
name|OPERATION_RUN_INDEXER
argument_list|)
annotation|@
name|Operation
argument_list|(
name|summary
operator|=
literal|"Returns repository statistic data."
argument_list|,
name|security
operator|=
block|{
annotation|@
name|SecurityRequirement
argument_list|(
name|name
operator|=
name|ArchivaRoleConstants
operator|.
name|OPERATION_RUN_INDEXER
argument_list|)
block|}
argument_list|,
name|responses
operator|=
block|{
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"200"
argument_list|,
name|description
operator|=
literal|"If the statistics could be returned"
argument_list|)
block|,
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"403"
argument_list|,
name|description
operator|=
literal|"Authenticated user is not permitted to gather the information"
argument_list|,
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|mediaType
operator|=
name|APPLICATION_JSON
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|ArchivaRestError
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
block|,
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"404"
argument_list|,
name|description
operator|=
literal|"The repository does not exist"
argument_list|,
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|mediaType
operator|=
name|APPLICATION_JSON
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|ArchivaRestError
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
block|}
argument_list|)
name|Response
name|scheduleRepositoryScan
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"id"
argument_list|)
name|String
name|repositoryId
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"fullScan"
argument_list|)
name|boolean
name|fullScan
parameter_list|)
throws|throws
name|ArchivaRestServiceException
function_decl|;
annotation|@
name|Path
argument_list|(
literal|"managed/{id}/scan/now"
argument_list|)
annotation|@
name|POST
annotation|@
name|Produces
argument_list|(
block|{
name|APPLICATION_JSON
block|}
argument_list|)
annotation|@
name|Consumes
argument_list|(
block|{
name|APPLICATION_JSON
block|}
argument_list|)
annotation|@
name|RedbackAuthorization
argument_list|(
name|permissions
operator|=
name|ArchivaRoleConstants
operator|.
name|OPERATION_RUN_INDEXER
argument_list|)
annotation|@
name|Operation
argument_list|(
name|summary
operator|=
literal|"Runs a repository scan instantly and waits for the response."
argument_list|,
name|security
operator|=
block|{
annotation|@
name|SecurityRequirement
argument_list|(
name|name
operator|=
name|ArchivaRoleConstants
operator|.
name|OPERATION_RUN_INDEXER
argument_list|)
block|}
argument_list|,
name|responses
operator|=
block|{
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"200"
argument_list|,
name|description
operator|=
literal|"If the statistics could be returned"
argument_list|,
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|mediaType
operator|=
name|APPLICATION_JSON
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|RepositoryStatistics
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
block|,
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"403"
argument_list|,
name|description
operator|=
literal|"Authenticated user is not permitted to gather the information"
argument_list|,
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|mediaType
operator|=
name|APPLICATION_JSON
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|ArchivaRestError
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
block|,
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"404"
argument_list|,
name|description
operator|=
literal|"The repository does not exist"
argument_list|,
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|mediaType
operator|=
name|APPLICATION_JSON
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|ArchivaRestError
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
block|}
argument_list|)
name|RepositoryStatistics
name|scanRepositoryImmediately
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"id"
argument_list|)
name|String
name|repositoryId
parameter_list|)
throws|throws
name|ArchivaRestServiceException
function_decl|;
annotation|@
name|Path
argument_list|(
literal|"managed/{id}/scan/status"
argument_list|)
annotation|@
name|GET
annotation|@
name|Produces
argument_list|(
block|{
name|APPLICATION_JSON
block|}
argument_list|)
annotation|@
name|RedbackAuthorization
argument_list|(
name|permissions
operator|=
name|ArchivaRoleConstants
operator|.
name|OPERATION_RUN_INDEXER
argument_list|)
annotation|@
name|Operation
argument_list|(
name|summary
operator|=
literal|"Returns status of running and scheduled scans."
argument_list|,
name|security
operator|=
block|{
annotation|@
name|SecurityRequirement
argument_list|(
name|name
operator|=
name|ArchivaRoleConstants
operator|.
name|OPERATION_RUN_INDEXER
argument_list|)
block|}
argument_list|,
name|responses
operator|=
block|{
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"200"
argument_list|,
name|description
operator|=
literal|"If the status could be returned"
argument_list|,
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|mediaType
operator|=
name|APPLICATION_JSON
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|ScanStatus
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
block|,
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"403"
argument_list|,
name|description
operator|=
literal|"Authenticated user is not permitted to gather the information"
argument_list|,
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|mediaType
operator|=
name|APPLICATION_JSON
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|ArchivaRestError
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
block|,
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"404"
argument_list|,
name|description
operator|=
literal|"The repository does not exist"
argument_list|,
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|mediaType
operator|=
name|APPLICATION_JSON
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|ArchivaRestError
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
block|}
argument_list|)
name|ScanStatus
name|getScanStatus
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"id"
argument_list|)
name|String
name|repositoryId
parameter_list|)
throws|throws
name|ArchivaRestServiceException
function_decl|;
annotation|@
name|Path
argument_list|(
literal|"managed/{id}/scan"
argument_list|)
annotation|@
name|DELETE
annotation|@
name|Produces
argument_list|(
block|{
name|APPLICATION_JSON
block|}
argument_list|)
annotation|@
name|RedbackAuthorization
argument_list|(
name|permissions
operator|=
name|ArchivaRoleConstants
operator|.
name|OPERATION_RUN_INDEXER
argument_list|)
annotation|@
name|Operation
argument_list|(
name|summary
operator|=
literal|"Cancels and removes all tasks for the given repository."
argument_list|,
name|security
operator|=
block|{
annotation|@
name|SecurityRequirement
argument_list|(
name|name
operator|=
name|ArchivaRoleConstants
operator|.
name|OPERATION_RUN_INDEXER
argument_list|)
block|}
argument_list|,
name|responses
operator|=
block|{
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"200"
argument_list|,
name|description
operator|=
literal|"If the task was removed successfully"
argument_list|)
block|,
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"403"
argument_list|,
name|description
operator|=
literal|"Authenticated user is not permitted to gather the information"
argument_list|,
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|mediaType
operator|=
name|APPLICATION_JSON
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|ArchivaRestError
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
block|,
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"404"
argument_list|,
name|description
operator|=
literal|"The repository does not exist"
argument_list|,
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|mediaType
operator|=
name|APPLICATION_JSON
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|ArchivaRestError
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
block|}
argument_list|)
name|Response
name|removeScanningTaskFromQueue
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"id"
argument_list|)
name|String
name|repositoryId
parameter_list|)
throws|throws
name|ArchivaRestServiceException
function_decl|;
annotation|@
name|Path
argument_list|(
literal|"remote/{id}/index/download/start"
argument_list|)
annotation|@
name|POST
annotation|@
name|Produces
argument_list|(
block|{
name|APPLICATION_JSON
block|}
argument_list|)
annotation|@
name|Consumes
argument_list|(
block|{
name|APPLICATION_JSON
block|}
argument_list|)
annotation|@
name|RedbackAuthorization
argument_list|(
name|permissions
operator|=
name|ArchivaRoleConstants
operator|.
name|OPERATION_RUN_INDEXER
argument_list|)
annotation|@
name|Operation
argument_list|(
name|summary
operator|=
literal|"Schedules a task for remote index download."
argument_list|,
name|parameters
operator|=
block|{
annotation|@
name|Parameter
argument_list|(
name|name
operator|=
literal|"full"
argument_list|,
name|description
operator|=
literal|"If true, download the full index, otherwise try a update download."
argument_list|)
block|}
argument_list|,
name|security
operator|=
block|{
annotation|@
name|SecurityRequirement
argument_list|(
name|name
operator|=
name|ArchivaRoleConstants
operator|.
name|OPERATION_RUN_INDEXER
argument_list|)
block|}
argument_list|,
name|responses
operator|=
block|{
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"200"
argument_list|,
name|description
operator|=
literal|"If the task was scheduled"
argument_list|)
block|,
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"403"
argument_list|,
name|description
operator|=
literal|"Authenticated user is not permitted to gather the information"
argument_list|,
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|mediaType
operator|=
name|APPLICATION_JSON
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|ArchivaRestError
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
block|,
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"404"
argument_list|,
name|description
operator|=
literal|"The repository does not exist"
argument_list|,
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|mediaType
operator|=
name|APPLICATION_JSON
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|ArchivaRestError
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
block|}
argument_list|)
name|Response
name|scheduleDownloadRemoteIndex
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"id"
argument_list|)
name|String
name|repositoryId
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"immediate"
argument_list|)
name|boolean
name|immediately
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"full"
argument_list|)
name|boolean
name|full
parameter_list|,
annotation|@
name|Context
name|UriInfo
name|uriInfo
parameter_list|)
throws|throws
name|ArchivaRestServiceException
function_decl|;
annotation|@
name|Path
argument_list|(
literal|"remote/index/downloads"
argument_list|)
annotation|@
name|GET
annotation|@
name|Produces
argument_list|(
block|{
name|APPLICATION_JSON
block|}
argument_list|)
annotation|@
name|RedbackAuthorization
argument_list|(
name|permissions
operator|=
name|ArchivaRoleConstants
operator|.
name|OPERATION_RUN_INDEXER
argument_list|)
annotation|@
name|Operation
argument_list|(
name|summary
operator|=
literal|"Returns a list of running downloads from the remote repository."
argument_list|,
name|security
operator|=
block|{
annotation|@
name|SecurityRequirement
argument_list|(
name|name
operator|=
name|ArchivaRoleConstants
operator|.
name|OPERATION_RUN_INDEXER
argument_list|)
block|}
argument_list|,
name|responses
operator|=
block|{
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"200"
argument_list|,
name|description
operator|=
literal|"If the artifact was deleted"
argument_list|)
block|,
annotation|@
name|ApiResponse
argument_list|(
name|responseCode
operator|=
literal|"403"
argument_list|,
name|description
operator|=
literal|"Authenticated user is not permitted to gather the information"
argument_list|,
name|content
operator|=
annotation|@
name|Content
argument_list|(
name|mediaType
operator|=
name|APPLICATION_JSON
argument_list|,
name|schema
operator|=
annotation|@
name|Schema
argument_list|(
name|implementation
operator|=
name|ArchivaRestError
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
block|}
argument_list|)
name|List
argument_list|<
name|String
argument_list|>
name|getRunningRemoteDownloads
parameter_list|()
function_decl|;
block|}
end_interface

end_unit

