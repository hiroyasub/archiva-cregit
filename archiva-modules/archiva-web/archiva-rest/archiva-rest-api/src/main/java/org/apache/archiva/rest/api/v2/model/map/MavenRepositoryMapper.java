begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|v2
operator|.
name|model
operator|.
name|map
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|model
operator|.
name|ManagedRepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ManagedRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ReleaseScheme
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RepositoryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|features
operator|.
name|ArtifactCleanupFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|repository
operator|.
name|features
operator|.
name|StagingRepositoryFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|v2
operator|.
name|model
operator|.
name|MavenManagedRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_comment
comment|/**  * Mapping implementation for Maven managed repository to managed repository configuration  *  * @author Martin Schreier<martin_s@apache.org>  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"mapper#managed_repository#maven"
argument_list|)
specifier|public
class|class
name|MavenRepositoryMapper
extends|extends
name|RestServiceMapper
argument_list|<
name|MavenManagedRepository
argument_list|,
name|ManagedRepositoryConfiguration
argument_list|,
name|ManagedRepository
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|String
name|TYPE
init|=
name|RepositoryType
operator|.
name|MAVEN
operator|.
name|name
argument_list|( )
decl_stmt|;
annotation|@
name|Override
specifier|public
name|ManagedRepositoryConfiguration
name|map
parameter_list|(
name|MavenManagedRepository
name|source
parameter_list|)
block|{
name|ManagedRepositoryConfiguration
name|target
init|=
operator|new
name|ManagedRepositoryConfiguration
argument_list|( )
decl_stmt|;
name|update
argument_list|(
name|source
argument_list|,
name|target
argument_list|)
expr_stmt|;
return|return
name|target
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|update
parameter_list|(
name|MavenManagedRepository
name|source
parameter_list|,
name|ManagedRepositoryConfiguration
name|target
parameter_list|)
block|{
name|target
operator|.
name|setId
argument_list|(
name|source
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|target
operator|.
name|setName
argument_list|(
name|source
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|target
operator|.
name|setDescription
argument_list|(
name|source
operator|.
name|getDescription
argument_list|( )
argument_list|)
expr_stmt|;
name|target
operator|.
name|setType
argument_list|(
name|TYPE
argument_list|)
expr_stmt|;
name|target
operator|.
name|setBlockRedeployments
argument_list|(
name|source
operator|.
name|isBlocksRedeployments
argument_list|()
argument_list|)
expr_stmt|;
name|target
operator|.
name|setDeleteReleasedSnapshots
argument_list|(
name|source
operator|.
name|isDeleteSnapshotsOfRelease
argument_list|()
argument_list|)
expr_stmt|;
name|target
operator|.
name|setIndexDir
argument_list|(
name|source
operator|.
name|getIndexPath
argument_list|()
argument_list|)
expr_stmt|;
name|target
operator|.
name|setLayout
argument_list|(
name|source
operator|.
name|getLayout
argument_list|()
argument_list|)
expr_stmt|;
name|target
operator|.
name|setLocation
argument_list|(
name|source
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
name|target
operator|.
name|setPackedIndexDir
argument_list|(
name|source
operator|.
name|getPackedIndexPath
argument_list|()
argument_list|)
expr_stmt|;
name|target
operator|.
name|setRefreshCronExpression
argument_list|(
name|source
operator|.
name|getSchedulingDefinition
argument_list|()
argument_list|)
expr_stmt|;
name|target
operator|.
name|setReleases
argument_list|(
name|source
operator|.
name|getReleaseSchemes
argument_list|( )
operator|.
name|contains
argument_list|(
name|ReleaseScheme
operator|.
name|RELEASE
argument_list|)
argument_list|)
expr_stmt|;
name|target
operator|.
name|setRetentionCount
argument_list|(
name|source
operator|.
name|getRetentionCount
argument_list|()
argument_list|)
expr_stmt|;
name|target
operator|.
name|setRetentionPeriod
argument_list|(
name|source
operator|.
name|getRetentionPeriod
argument_list|()
operator|.
name|getDays
argument_list|()
argument_list|)
expr_stmt|;
name|target
operator|.
name|setScanned
argument_list|(
name|source
operator|.
name|isScanned
argument_list|()
argument_list|)
expr_stmt|;
name|target
operator|.
name|setSkipPackedIndexCreation
argument_list|(
name|source
operator|.
name|isSkipPackedIndexCreation
argument_list|()
argument_list|)
expr_stmt|;
name|target
operator|.
name|setSnapshots
argument_list|(
name|source
operator|.
name|getReleaseSchemes
argument_list|( )
operator|.
name|contains
argument_list|(
name|ReleaseScheme
operator|.
name|SNAPSHOT
argument_list|)
argument_list|)
expr_stmt|;
name|target
operator|.
name|setStageRepoNeeded
argument_list|(
name|source
operator|.
name|hasStagingRepository
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|MavenManagedRepository
name|reverseMap
parameter_list|(
name|ManagedRepository
name|source
parameter_list|)
block|{
name|MavenManagedRepository
name|result
init|=
operator|new
name|MavenManagedRepository
argument_list|( )
decl_stmt|;
name|StagingRepositoryFeature
name|srf
init|=
name|source
operator|.
name|getFeature
argument_list|(
name|StagingRepositoryFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|( )
decl_stmt|;
name|ArtifactCleanupFeature
name|acf
init|=
name|source
operator|.
name|getFeature
argument_list|(
name|ArtifactCleanupFeature
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|( )
decl_stmt|;
name|result
operator|.
name|setHasStagingRepository
argument_list|(
name|srf
operator|.
name|isStageRepoNeeded
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|setBlocksRedeployments
argument_list|(
name|source
operator|.
name|blocksRedeployments
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|setIndex
argument_list|(
name|source
operator|.
name|hasIndex
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|setStagingRepository
argument_list|(
name|srf
operator|.
name|getStagingRepository
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|reverseUpdate
parameter_list|(
name|ManagedRepository
name|source
parameter_list|,
name|MavenManagedRepository
name|target
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|Class
argument_list|<
name|MavenManagedRepository
argument_list|>
name|getBaseType
parameter_list|( )
block|{
return|return
name|MavenManagedRepository
operator|.
name|class
return|;
block|}
annotation|@
name|Override
specifier|public
name|Class
argument_list|<
name|ManagedRepositoryConfiguration
argument_list|>
name|getDestinationType
parameter_list|( )
block|{
return|return
name|ManagedRepositoryConfiguration
operator|.
name|class
return|;
block|}
annotation|@
name|Override
specifier|public
name|Class
argument_list|<
name|ManagedRepository
argument_list|>
name|getReverseSourceType
parameter_list|( )
block|{
return|return
name|ManagedRepository
operator|.
name|class
return|;
block|}
block|}
end_class

end_unit

