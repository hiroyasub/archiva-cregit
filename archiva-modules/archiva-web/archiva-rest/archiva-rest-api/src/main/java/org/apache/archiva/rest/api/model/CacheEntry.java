begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|model
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_comment
comment|/**  * @author Olivier Lamy  * @since 1.4-M3  */
end_comment

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"cacheEntry"
argument_list|)
specifier|public
class|class
name|CacheEntry
implements|implements
name|Serializable
implements|,
name|Comparable
block|{
specifier|private
name|String
name|key
decl_stmt|;
specifier|private
name|long
name|size
decl_stmt|;
specifier|private
name|long
name|cacheHits
decl_stmt|;
specifier|private
name|long
name|cacheMiss
decl_stmt|;
specifier|private
name|String
name|cacheHitRate
decl_stmt|;
specifier|private
name|long
name|inMemorySize
decl_stmt|;
specifier|public
name|CacheEntry
parameter_list|()
block|{
comment|// no op
block|}
specifier|public
name|CacheEntry
parameter_list|(
name|String
name|key
parameter_list|,
name|long
name|size
parameter_list|,
name|long
name|cacheHits
parameter_list|,
name|long
name|cacheMiss
parameter_list|,
name|String
name|cacheHitRate
parameter_list|,
name|long
name|inMemorySize
parameter_list|)
block|{
name|this
operator|.
name|key
operator|=
name|key
expr_stmt|;
name|this
operator|.
name|size
operator|=
name|size
expr_stmt|;
name|this
operator|.
name|cacheHits
operator|=
name|cacheHits
expr_stmt|;
name|this
operator|.
name|cacheMiss
operator|=
name|cacheMiss
expr_stmt|;
name|this
operator|.
name|cacheHitRate
operator|=
name|cacheHitRate
expr_stmt|;
comment|// size is in bytes so use kb
name|this
operator|.
name|inMemorySize
operator|=
name|inMemorySize
operator|/
literal|1024
expr_stmt|;
block|}
specifier|public
name|String
name|getKey
parameter_list|()
block|{
return|return
name|key
return|;
block|}
specifier|public
name|void
name|setKey
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|this
operator|.
name|key
operator|=
name|key
expr_stmt|;
block|}
specifier|public
name|long
name|getSize
parameter_list|()
block|{
return|return
name|size
return|;
block|}
specifier|public
name|void
name|setSize
parameter_list|(
name|long
name|size
parameter_list|)
block|{
name|this
operator|.
name|size
operator|=
name|size
expr_stmt|;
block|}
specifier|public
name|long
name|getCacheHits
parameter_list|()
block|{
return|return
name|cacheHits
return|;
block|}
specifier|public
name|void
name|setCacheHits
parameter_list|(
name|long
name|cacheHits
parameter_list|)
block|{
name|this
operator|.
name|cacheHits
operator|=
name|cacheHits
expr_stmt|;
block|}
specifier|public
name|long
name|getCacheMiss
parameter_list|()
block|{
return|return
name|cacheMiss
return|;
block|}
specifier|public
name|void
name|setCacheMiss
parameter_list|(
name|long
name|cacheMiss
parameter_list|)
block|{
name|this
operator|.
name|cacheMiss
operator|=
name|cacheMiss
expr_stmt|;
block|}
specifier|public
name|String
name|getCacheHitRate
parameter_list|()
block|{
return|return
name|cacheHitRate
return|;
block|}
specifier|public
name|void
name|setCacheHitRate
parameter_list|(
name|String
name|cacheHitRate
parameter_list|)
block|{
name|this
operator|.
name|cacheHitRate
operator|=
name|cacheHitRate
expr_stmt|;
block|}
comment|/**      * @return cache size in kb      */
specifier|public
name|long
name|getInMemorySize
parameter_list|()
block|{
return|return
name|inMemorySize
return|;
block|}
specifier|public
name|void
name|setInMemorySize
parameter_list|(
name|long
name|inMemorySize
parameter_list|)
block|{
name|this
operator|.
name|inMemorySize
operator|=
name|inMemorySize
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
name|this
operator|.
name|key
operator|.
name|compareTo
argument_list|(
operator|(
operator|(
name|CacheEntry
operator|)
name|o
operator|)
operator|.
name|key
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|CacheEntry
name|that
init|=
operator|(
name|CacheEntry
operator|)
name|o
decl_stmt|;
if|if
condition|(
operator|!
name|key
operator|.
name|equals
argument_list|(
name|that
operator|.
name|key
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|key
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
specifier|final
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"CacheEntry"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"{key='"
argument_list|)
operator|.
name|append
argument_list|(
name|key
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", size="
argument_list|)
operator|.
name|append
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", cacheHits="
argument_list|)
operator|.
name|append
argument_list|(
name|cacheHits
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", cacheMiss="
argument_list|)
operator|.
name|append
argument_list|(
name|cacheMiss
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", cacheHitRate='"
argument_list|)
operator|.
name|append
argument_list|(
name|cacheHitRate
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", inMemorySize="
argument_list|)
operator|.
name|append
argument_list|(
name|inMemorySize
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'}'
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

