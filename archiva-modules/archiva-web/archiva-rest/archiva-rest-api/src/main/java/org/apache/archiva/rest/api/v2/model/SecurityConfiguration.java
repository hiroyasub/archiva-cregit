begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|rest
operator|.
name|api
operator|.
name|v2
operator|.
name|model
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|v3
operator|.
name|oas
operator|.
name|annotations
operator|.
name|media
operator|.
name|Schema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|archiva
operator|.
name|admin
operator|.
name|model
operator|.
name|beans
operator|.
name|RedbackRuntimeConfiguration
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_comment
comment|/**  * @author Martin Stockhammer<martin_s@apache.org>  */
end_comment

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"securityConfiguration"
argument_list|)
annotation|@
name|Schema
argument_list|(
name|name
operator|=
literal|"SecurityConfiguration"
argument_list|,
name|description
operator|=
literal|"Security configuration attributes."
argument_list|)
specifier|public
class|class
name|SecurityConfiguration
implements|implements
name|Serializable
implements|,
name|RestModel
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|4186866365979053029L
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|activeUserManagers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(  )
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|activeRbacManagers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(  )
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
init|=
operator|new
name|TreeMap
argument_list|<>
argument_list|(  )
decl_stmt|;
specifier|private
name|boolean
name|userCacheEnabled
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|ldapActive
init|=
literal|false
decl_stmt|;
specifier|public
name|SecurityConfiguration
parameter_list|()
block|{
block|}
specifier|public
specifier|static
name|SecurityConfiguration
name|ofRedbackConfiguration
parameter_list|(
name|RedbackRuntimeConfiguration
name|configuration
parameter_list|)
block|{
name|SecurityConfiguration
name|secConfig
init|=
operator|new
name|SecurityConfiguration
argument_list|( )
decl_stmt|;
name|secConfig
operator|.
name|setActiveRbacManagers
argument_list|(
name|configuration
operator|.
name|getRbacManagerImpls
argument_list|()
argument_list|)
expr_stmt|;
name|secConfig
operator|.
name|setActiveUserManagers
argument_list|(
name|configuration
operator|.
name|getUserManagerImpls
argument_list|()
argument_list|)
expr_stmt|;
name|secConfig
operator|.
name|setProperties
argument_list|(
name|configuration
operator|.
name|getConfigurationProperties
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
name|rbLdapActive
init|=
name|configuration
operator|.
name|getUserManagerImpls
argument_list|( )
operator|.
name|stream
argument_list|( )
operator|.
name|anyMatch
argument_list|(
name|um
lambda|->
name|um
operator|.
name|contains
argument_list|(
literal|"ldap"
argument_list|)
argument_list|)
decl_stmt|;
name|secConfig
operator|.
name|setLdapActive
argument_list|(
name|rbLdapActive
argument_list|)
expr_stmt|;
name|secConfig
operator|.
name|setUserCacheEnabled
argument_list|(
name|configuration
operator|.
name|isUseUsersCache
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|secConfig
return|;
block|}
annotation|@
name|Schema
argument_list|(
name|name
operator|=
literal|"active_user_managers"
argument_list|,
name|description
operator|=
literal|"List of ids of the active user managers"
argument_list|)
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getActiveUserManagers
parameter_list|( )
block|{
return|return
name|activeUserManagers
return|;
block|}
specifier|public
name|void
name|setActiveUserManagers
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|activeUserManagers
parameter_list|)
block|{
name|this
operator|.
name|activeUserManagers
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|activeUserManagers
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addSelectedUserManager
parameter_list|(
name|String
name|userManager
parameter_list|)
block|{
name|this
operator|.
name|activeUserManagers
operator|.
name|add
argument_list|(
name|userManager
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Schema
argument_list|(
name|name
operator|=
literal|"active_rbac_managers"
argument_list|,
name|description
operator|=
literal|"List of ids of the active rbac managers"
argument_list|)
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getActiveRbacManagers
parameter_list|( )
block|{
return|return
name|activeRbacManagers
return|;
block|}
specifier|public
name|void
name|setActiveRbacManagers
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|activeRbacManagers
parameter_list|)
block|{
name|this
operator|.
name|activeRbacManagers
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|activeRbacManagers
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addSelectedRbacManager
parameter_list|(
name|String
name|rbacManager
parameter_list|)
block|{
name|this
operator|.
name|activeRbacManagers
operator|.
name|add
argument_list|(
name|rbacManager
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Schema
argument_list|(
name|description
operator|=
literal|"Map of all security properties"
argument_list|)
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getProperties
parameter_list|( )
block|{
return|return
name|properties
return|;
block|}
specifier|public
name|void
name|setProperties
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
parameter_list|)
block|{
name|this
operator|.
name|properties
operator|=
operator|new
name|TreeMap
argument_list|<>
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Schema
argument_list|(
name|name
operator|=
literal|"user_cache_enabled"
argument_list|,
name|description
operator|=
literal|"True, if the user cache is active. It caches data from user backend."
argument_list|)
specifier|public
name|boolean
name|isUserCacheEnabled
parameter_list|( )
block|{
return|return
name|userCacheEnabled
return|;
block|}
specifier|public
name|void
name|setUserCacheEnabled
parameter_list|(
name|boolean
name|userCacheEnabled
parameter_list|)
block|{
name|this
operator|.
name|userCacheEnabled
operator|=
name|userCacheEnabled
expr_stmt|;
block|}
annotation|@
name|Schema
argument_list|(
name|name
operator|=
literal|"ldap_active"
argument_list|,
name|description
operator|=
literal|"True, if LDAP is used as user manager"
argument_list|)
specifier|public
name|boolean
name|isLdapActive
parameter_list|( )
block|{
return|return
name|ldapActive
return|;
block|}
specifier|public
name|void
name|setLdapActive
parameter_list|(
name|boolean
name|ldapActive
parameter_list|)
block|{
name|this
operator|.
name|ldapActive
operator|=
name|ldapActive
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|( )
operator|!=
name|o
operator|.
name|getClass
argument_list|( )
condition|)
return|return
literal|false
return|;
name|SecurityConfiguration
name|that
init|=
operator|(
name|SecurityConfiguration
operator|)
name|o
decl_stmt|;
if|if
condition|(
name|userCacheEnabled
operator|!=
name|that
operator|.
name|userCacheEnabled
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|ldapActive
operator|!=
name|that
operator|.
name|ldapActive
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|activeUserManagers
operator|.
name|equals
argument_list|(
name|that
operator|.
name|activeUserManagers
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|activeRbacManagers
operator|.
name|equals
argument_list|(
name|that
operator|.
name|activeRbacManagers
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
name|properties
operator|.
name|equals
argument_list|(
name|that
operator|.
name|properties
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|( )
block|{
name|int
name|result
init|=
name|activeUserManagers
operator|.
name|hashCode
argument_list|( )
decl_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
name|activeRbacManagers
operator|.
name|hashCode
argument_list|( )
expr_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
name|properties
operator|.
name|hashCode
argument_list|( )
expr_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
operator|(
name|userCacheEnabled
condition|?
literal|1
else|:
literal|0
operator|)
expr_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
operator|(
name|ldapActive
condition|?
literal|1
else|:
literal|0
operator|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"StringBufferReplaceableByString"
argument_list|)
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|( )
block|{
specifier|final
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|(
literal|"SecurityConfiguration{"
argument_list|)
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"active_user_managers="
argument_list|)
operator|.
name|append
argument_list|(
name|activeUserManagers
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", active_rbac_managers="
argument_list|)
operator|.
name|append
argument_list|(
name|activeRbacManagers
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", properties="
argument_list|)
operator|.
name|append
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", user_cache_enabled="
argument_list|)
operator|.
name|append
argument_list|(
name|userCacheEnabled
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", ldap_active="
argument_list|)
operator|.
name|append
argument_list|(
name|ldapActive
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'}'
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|( )
return|;
block|}
block|}
end_class

end_unit

