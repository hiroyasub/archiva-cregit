begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|security
package|;
end_package

begin_comment
comment|/*  * Copyright 2005-2006 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|rbac
operator|.
name|profile
operator|.
name|AbstractDynamicRoleProfile
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * @plexus.component role="org.codehaus.plexus.rbac.profile.DynamicRoleProfile"  * role-hint="archiva-repository-manager"  */
end_comment

begin_class
specifier|public
class|class
name|RepositoryManagerDynamicRoleProfile
extends|extends
name|AbstractDynamicRoleProfile
block|{
comment|/**      * Create the Role name for a Repository Manager, using the provided repository id.      *       * @param repoId the repository id      */
specifier|public
name|String
name|getRoleName
parameter_list|(
name|String
name|repoId
parameter_list|)
block|{
return|return
name|ArchivaRoleConstants
operator|.
name|REPOSITORY_MANAGER_ROLE_PREFIX
operator|+
name|ArchivaRoleConstants
operator|.
name|DELIMITER
operator|+
name|repoId
return|;
block|}
specifier|public
name|List
name|getOperations
parameter_list|()
block|{
name|List
name|operations
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
comment|// I'm not sure these are appropriate roles.
name|operations
operator|.
name|add
argument_list|(
name|ArchivaRoleConstants
operator|.
name|OPERATION_EDIT_REPOSITORY
argument_list|)
expr_stmt|;
name|operations
operator|.
name|add
argument_list|(
name|ArchivaRoleConstants
operator|.
name|OPERATION_DELETE_REPOSITORY
argument_list|)
expr_stmt|;
name|operations
operator|.
name|add
argument_list|(
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_ACCESS
argument_list|)
expr_stmt|;
name|operations
operator|.
name|add
argument_list|(
name|ArchivaRoleConstants
operator|.
name|OPERATION_REPOSITORY_UPLOAD
argument_list|)
expr_stmt|;
return|return
name|operations
return|;
block|}
specifier|public
name|List
name|getChildRoles
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|singletonList
argument_list|(
name|ArchivaRoleConstants
operator|.
name|BASE_REPOSITORY_MANAGER
argument_list|)
return|;
block|}
specifier|public
name|List
name|getDynamicChildRoles
parameter_list|(
name|String
name|string
parameter_list|)
block|{
return|return
name|Collections
operator|.
name|singletonList
argument_list|(
name|ArchivaRoleConstants
operator|.
name|REPOSITORY_OBSERVER_ROLE_PREFIX
operator|+
name|ArchivaRoleConstants
operator|.
name|DELIMITER
operator|+
name|string
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isAssignable
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
block|}
end_class

end_unit

