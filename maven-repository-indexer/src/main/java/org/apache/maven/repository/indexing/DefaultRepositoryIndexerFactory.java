begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|indexing
package|;
end_package

begin_comment
comment|/*  * Copyright 2001-2005 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0    *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepository
import|;
end_import

begin_comment
comment|/**  *  * @author Edwin Punzalan  */
end_comment

begin_class
specifier|public
class|class
name|DefaultRepositoryIndexerFactory
implements|implements
name|RepositoryIndexerFactory
block|{
name|Map
name|indexerMap
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
specifier|public
name|RepositoryIndexer
name|getRepositoryIndexer
parameter_list|(
name|String
name|indexPath
parameter_list|,
name|ArtifactRepository
name|repository
parameter_list|,
name|Class
name|indexType
parameter_list|)
block|{
if|if
condition|(
operator|!
name|indexerMap
operator|.
name|containsKey
argument_list|(
name|indexType
argument_list|)
condition|)
block|{
name|RepositoryIndexer
name|indexer
decl_stmt|;
if|if
condition|(
name|Artifact
operator|.
name|class
operator|==
name|indexType
condition|)
block|{
name|indexer
operator|=
operator|new
name|ArtifactRepositoryIndexer
argument_list|(
name|repository
argument_list|,
name|indexPath
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|indexer
operator|=
literal|null
expr_stmt|;
block|}
name|indexerMap
operator|.
name|put
argument_list|(
name|indexType
argument_list|,
name|indexer
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
name|RepositoryIndexer
operator|)
name|indexerMap
operator|.
name|get
argument_list|(
name|indexType
argument_list|)
return|;
block|}
block|}
end_class

end_unit

