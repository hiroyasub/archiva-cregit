begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|indexing
package|;
end_package

begin_comment
comment|/*  * Copyright 2001-2005 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0    *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|MessageDigest
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|NoSuchAlgorithmException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|standard
operator|.
name|StandardAnalyzer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepository
import|;
end_import

begin_comment
comment|/**  *  * @author Edwin Punzalan  */
end_comment

begin_class
specifier|public
class|class
name|ArtifactRepositoryIndexer
extends|extends
name|AbstractRepositoryIndexer
block|{
specifier|private
specifier|static
specifier|final
name|String
name|NAME
init|=
literal|"name"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|GROUPID
init|=
literal|"groupId"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ARTIFACTID
init|=
literal|"artifactId"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|VERSION
init|=
literal|"version"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|SHA1
init|=
literal|"sha1"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MD5
init|=
literal|"md5"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CLASSES
init|=
literal|"classes"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PACKAGES
init|=
literal|"packages"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
index|[]
name|FIELDS
init|=
block|{
name|NAME
block|,
name|GROUPID
block|,
name|ARTIFACTID
block|,
name|VERSION
block|,
name|SHA1
block|,
name|MD5
block|,
name|CLASSES
block|,
name|PACKAGES
block|}
decl_stmt|;
name|String
name|indexPath
decl_stmt|;
name|ArtifactRepository
name|repository
decl_stmt|;
name|IndexReader
name|indexReader
decl_stmt|;
name|IndexWriter
name|indexWriter
decl_stmt|;
specifier|public
name|ArtifactRepositoryIndexer
parameter_list|(
name|ArtifactRepository
name|repository
parameter_list|,
name|String
name|path
parameter_list|)
block|{
try|try
block|{
name|this
operator|.
name|repository
operator|=
name|repository
expr_stmt|;
name|validateIndex
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
block|}
block|}
specifier|public
name|void
name|addArtifactIndex
parameter_list|(
name|Artifact
name|artifact
parameter_list|)
throws|throws
name|IOException
throws|,
name|NoSuchAlgorithmException
block|{
name|getIndexWriter
argument_list|()
expr_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|Field
operator|.
name|Text
argument_list|(
name|NAME
argument_list|,
name|repository
operator|.
name|pathOf
argument_list|(
name|artifact
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|Field
operator|.
name|Text
argument_list|(
name|GROUPID
argument_list|,
name|artifact
operator|.
name|getGroupId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|Field
operator|.
name|Text
argument_list|(
name|ARTIFACTID
argument_list|,
name|artifact
operator|.
name|getArtifactId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|Field
operator|.
name|Text
argument_list|(
name|VERSION
argument_list|,
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|Field
operator|.
name|Text
argument_list|(
name|SHA1
argument_list|,
name|getSha1
argument_list|(
name|artifact
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|Field
operator|.
name|Text
argument_list|(
name|MD5
argument_list|,
name|getMd5
argument_list|(
name|artifact
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|Field
operator|.
name|Text
argument_list|(
name|CLASSES
argument_list|,
name|getClasses
argument_list|(
name|artifact
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|Field
operator|.
name|Text
argument_list|(
name|PACKAGES
argument_list|,
name|getPackages
argument_list|(
name|artifact
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|indexWriter
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|getSha1
parameter_list|(
name|Artifact
name|artifact
parameter_list|)
throws|throws
name|FileNotFoundException
throws|,
name|IOException
throws|,
name|NoSuchAlgorithmException
block|{
name|FileInputStream
name|fIn
init|=
operator|new
name|FileInputStream
argument_list|(
name|artifact
operator|.
name|getFile
argument_list|()
argument_list|)
decl_stmt|;
return|return
operator|new
name|String
argument_list|(
name|getChecksum
argument_list|(
name|fIn
argument_list|,
literal|"SHA-1"
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|String
name|getMd5
parameter_list|(
name|Artifact
name|artifact
parameter_list|)
throws|throws
name|FileNotFoundException
throws|,
name|IOException
throws|,
name|NoSuchAlgorithmException
block|{
name|FileInputStream
name|fIn
init|=
operator|new
name|FileInputStream
argument_list|(
name|artifact
operator|.
name|getFile
argument_list|()
argument_list|)
decl_stmt|;
return|return
operator|new
name|String
argument_list|(
name|getChecksum
argument_list|(
name|fIn
argument_list|,
literal|"MD5"
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|byte
index|[]
name|getChecksum
parameter_list|(
name|InputStream
name|inStream
parameter_list|,
name|String
name|algorithm
parameter_list|)
throws|throws
name|IOException
throws|,
name|NoSuchAlgorithmException
block|{
name|byte
index|[]
name|buffer
init|=
operator|new
name|byte
index|[
literal|256
index|]
decl_stmt|;
name|MessageDigest
name|complete
init|=
name|MessageDigest
operator|.
name|getInstance
argument_list|(
name|algorithm
argument_list|)
decl_stmt|;
name|int
name|numRead
decl_stmt|;
do|do
block|{
name|numRead
operator|=
name|inStream
operator|.
name|read
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
if|if
condition|(
name|numRead
operator|>
literal|0
condition|)
block|{
name|complete
operator|.
name|update
argument_list|(
name|buffer
argument_list|,
literal|0
argument_list|,
name|numRead
argument_list|)
expr_stmt|;
block|}
block|}
do|while
condition|(
name|numRead
operator|!=
operator|-
literal|1
condition|)
do|;
name|inStream
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|complete
operator|.
name|digest
argument_list|()
return|;
block|}
specifier|private
name|String
name|getClasses
parameter_list|(
name|Artifact
name|artifact
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|private
name|String
name|getPackages
parameter_list|(
name|Artifact
name|artifact
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|private
name|void
name|getIndexWriter
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|indexWriter
operator|==
literal|null
condition|)
block|{
name|indexWriter
operator|=
operator|new
name|IndexWriter
argument_list|(
name|indexPath
argument_list|,
operator|new
name|StandardAnalyzer
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|getIndexReader
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|indexReader
operator|==
literal|null
condition|)
block|{
name|indexReader
operator|=
name|IndexReader
operator|.
name|open
argument_list|(
name|indexPath
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|validateIndex
parameter_list|()
throws|throws
name|IOException
block|{
name|getIndexReader
argument_list|()
expr_stmt|;
name|Collection
name|fields
init|=
name|indexReader
operator|.
name|getFieldNames
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
name|FIELDS
operator|.
name|length
condition|;
name|idx
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|fields
operator|.
name|contains
argument_list|(
name|FIELDS
index|[
name|idx
index|]
argument_list|)
condition|)
block|{
comment|//should throw something
block|}
block|}
block|}
block|}
end_class

end_unit

