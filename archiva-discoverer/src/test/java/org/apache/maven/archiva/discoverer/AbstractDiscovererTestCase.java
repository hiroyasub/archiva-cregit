begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|discoverer
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepositoryFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|layout
operator|.
name|ArtifactRepositoryLayout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|PlexusTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_comment
comment|/**  * @author Edwin Punzalan  * @author<a href="mailto:joakime@apache.org">Joakim Erdfelt</a>  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractDiscovererTestCase
extends|extends
name|PlexusTestCase
block|{
specifier|protected
name|Discoverer
name|discoverer
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|discoverer
operator|=
operator|(
name|Discoverer
operator|)
name|lookup
argument_list|(
name|Discoverer
operator|.
name|ROLE
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|release
argument_list|(
name|discoverer
argument_list|)
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|ArtifactRepository
name|getLegacyRepository
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|repoBaseDir
init|=
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"src/test/legacy-repository"
argument_list|)
decl_stmt|;
name|ArtifactRepository
name|repository
init|=
name|createRepository
argument_list|(
name|repoBaseDir
argument_list|,
literal|"legacy"
argument_list|)
decl_stmt|;
name|resetRepositoryState
argument_list|(
name|repository
argument_list|)
expr_stmt|;
return|return
name|repository
return|;
block|}
specifier|protected
name|ArtifactRepository
name|getDefaultRepository
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|repoBaseDir
init|=
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"src/test/repository"
argument_list|)
decl_stmt|;
name|ArtifactRepository
name|repository
init|=
name|createRepository
argument_list|(
name|repoBaseDir
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|resetRepositoryState
argument_list|(
name|repository
argument_list|)
expr_stmt|;
return|return
name|repository
return|;
block|}
specifier|protected
name|void
name|resetRepositoryState
parameter_list|(
name|ArtifactRepository
name|repository
parameter_list|)
block|{
comment|// Implement any kind of repository cleanup.
block|}
specifier|protected
name|ArtifactRepository
name|createRepository
parameter_list|(
name|File
name|basedir
parameter_list|,
name|String
name|layout
parameter_list|)
throws|throws
name|Exception
block|{
name|ArtifactRepositoryFactory
name|factory
init|=
operator|(
name|ArtifactRepositoryFactory
operator|)
name|lookup
argument_list|(
name|ArtifactRepositoryFactory
operator|.
name|ROLE
argument_list|)
decl_stmt|;
name|ArtifactRepositoryLayout
name|repoLayout
init|=
operator|(
name|ArtifactRepositoryLayout
operator|)
name|lookup
argument_list|(
name|ArtifactRepositoryLayout
operator|.
name|ROLE
argument_list|,
name|layout
argument_list|)
decl_stmt|;
return|return
name|factory
operator|.
name|createArtifactRepository
argument_list|(
literal|"discoveryRepo-"
operator|+
name|getName
argument_list|()
argument_list|,
literal|"file://"
operator|+
name|basedir
argument_list|,
name|repoLayout
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
block|}
end_class

end_unit

