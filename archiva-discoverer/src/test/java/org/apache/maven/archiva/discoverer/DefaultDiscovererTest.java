begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|discoverer
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|BaseFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|logging
operator|.
name|console
operator|.
name|ConsoleLogger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * DefaultDiscovererTest   *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|DefaultDiscovererTest
extends|extends
name|AbstractDiscovererTestCase
block|{
specifier|private
name|MockConsumer
name|createAndAddMockConsumer
parameter_list|(
name|List
name|consumers
parameter_list|,
name|String
name|includePattern
parameter_list|,
name|String
name|excludePattern
parameter_list|)
block|{
name|MockConsumer
name|mockConsumer
init|=
operator|new
name|MockConsumer
argument_list|()
decl_stmt|;
name|mockConsumer
operator|.
name|getIncludePatterns
argument_list|()
operator|.
name|add
argument_list|(
name|includePattern
argument_list|)
expr_stmt|;
if|if
condition|(
name|StringUtils
operator|.
name|isNotBlank
argument_list|(
name|excludePattern
argument_list|)
condition|)
block|{
name|mockConsumer
operator|.
name|getExcludePatterns
argument_list|()
operator|.
name|add
argument_list|(
name|excludePattern
argument_list|)
expr_stmt|;
block|}
name|consumers
operator|.
name|add
argument_list|(
name|mockConsumer
argument_list|)
expr_stmt|;
return|return
name|mockConsumer
return|;
block|}
specifier|private
name|void
name|assertFilesProcessed
parameter_list|(
name|int
name|expectedFileCount
parameter_list|,
name|DiscovererStatistics
name|stats
parameter_list|,
name|MockConsumer
name|mockConsumer
parameter_list|)
block|{
name|assertNotNull
argument_list|(
literal|"Stats should not be null."
argument_list|,
name|stats
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"MockConsumer should not be null."
argument_list|,
name|mockConsumer
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"MockConsumer.filesProcessed should not be null."
argument_list|,
name|mockConsumer
operator|.
name|getFilesProcessed
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|stats
operator|.
name|getFilesConsumed
argument_list|()
operator|!=
name|mockConsumer
operator|.
name|getFilesProcessed
argument_list|()
operator|.
name|size
argument_list|()
condition|)
block|{
name|fail
argument_list|(
literal|"Somehow, the stats count of files consumed, and the count of actual files "
operator|+
literal|"processed by the consumer do not match."
argument_list|)
expr_stmt|;
block|}
name|int
name|actualFileCount
init|=
name|mockConsumer
operator|.
name|getFilesProcessed
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
if|if
condition|(
name|expectedFileCount
operator|!=
name|actualFileCount
condition|)
block|{
name|stats
operator|.
name|dump
argument_list|(
operator|new
name|ConsoleLogger
argument_list|(
name|Logger
operator|.
name|LEVEL_DEBUG
argument_list|,
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Base Dir:"
operator|+
name|stats
operator|.
name|getRepository
argument_list|()
operator|.
name|getBasedir
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|num
init|=
literal|0
decl_stmt|;
name|Iterator
name|it
init|=
name|mockConsumer
operator|.
name|getFilesProcessed
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|BaseFile
name|file
init|=
operator|(
name|BaseFile
operator|)
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"  Processed File ["
operator|+
name|num
operator|+
literal|"]: "
operator|+
name|file
operator|.
name|getRelativePath
argument_list|()
argument_list|)
expr_stmt|;
name|num
operator|++
expr_stmt|;
block|}
name|fail
argument_list|(
literal|"Files Processed mismatch: expected:<"
operator|+
name|expectedFileCount
operator|+
literal|">, actual:<"
operator|+
name|actualFileCount
operator|+
literal|">"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testLegacyLayoutRepositoryAll
parameter_list|()
throws|throws
name|Exception
block|{
name|ArtifactRepository
name|repository
init|=
name|getLegacyRepository
argument_list|()
decl_stmt|;
name|List
name|consumers
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|MockConsumer
name|mockConsumer
init|=
name|createAndAddMockConsumer
argument_list|(
name|consumers
argument_list|,
literal|"**/*"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|DiscovererStatistics
name|stats
init|=
name|discoverer
operator|.
name|walkRepository
argument_list|(
name|repository
argument_list|,
name|consumers
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|stats
argument_list|)
expr_stmt|;
name|assertFilesProcessed
argument_list|(
literal|16
argument_list|,
name|stats
argument_list|,
name|mockConsumer
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDefaultLayoutRepositoryAll
parameter_list|()
throws|throws
name|Exception
block|{
name|ArtifactRepository
name|repository
init|=
name|getDefaultRepository
argument_list|()
decl_stmt|;
name|List
name|consumers
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|MockConsumer
name|mockConsumer
init|=
name|createAndAddMockConsumer
argument_list|(
name|consumers
argument_list|,
literal|"**/*"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|DiscovererStatistics
name|stats
init|=
name|discoverer
operator|.
name|walkRepository
argument_list|(
name|repository
argument_list|,
name|consumers
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|stats
argument_list|)
expr_stmt|;
name|assertFilesProcessed
argument_list|(
literal|42
argument_list|,
name|stats
argument_list|,
name|mockConsumer
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDefaultLayoutRepositoryPomsOnly
parameter_list|()
throws|throws
name|Exception
block|{
name|ArtifactRepository
name|repository
init|=
name|getDefaultRepository
argument_list|()
decl_stmt|;
name|List
name|consumers
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|MockConsumer
name|mockConsumer
init|=
name|createAndAddMockConsumer
argument_list|(
name|consumers
argument_list|,
literal|"**/*.pom"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|DiscovererStatistics
name|stats
init|=
name|discoverer
operator|.
name|walkRepository
argument_list|(
name|repository
argument_list|,
name|consumers
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|stats
argument_list|)
expr_stmt|;
name|assertFilesProcessed
argument_list|(
literal|10
argument_list|,
name|stats
argument_list|,
name|mockConsumer
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDefaultLayoutRepositoryJarsOnly
parameter_list|()
throws|throws
name|Exception
block|{
name|ArtifactRepository
name|repository
init|=
name|getDefaultRepository
argument_list|()
decl_stmt|;
name|List
name|consumers
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|MockConsumer
name|mockConsumer
init|=
name|createAndAddMockConsumer
argument_list|(
name|consumers
argument_list|,
literal|"**/*.jar"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|DiscovererStatistics
name|stats
init|=
name|discoverer
operator|.
name|walkRepository
argument_list|(
name|repository
argument_list|,
name|consumers
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|stats
argument_list|)
expr_stmt|;
name|assertFilesProcessed
argument_list|(
literal|17
argument_list|,
name|stats
argument_list|,
name|mockConsumer
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDefaultLayoutRepositoryJarsNoSnapshots
parameter_list|()
throws|throws
name|Exception
block|{
name|ArtifactRepository
name|repository
init|=
name|getDefaultRepository
argument_list|()
decl_stmt|;
name|List
name|consumers
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|MockConsumer
name|mockConsumer
init|=
name|createAndAddMockConsumer
argument_list|(
name|consumers
argument_list|,
literal|"**/*.jar"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|DiscovererStatistics
name|stats
init|=
name|discoverer
operator|.
name|walkRepository
argument_list|(
name|repository
argument_list|,
name|consumers
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|stats
argument_list|)
expr_stmt|;
name|assertFilesProcessed
argument_list|(
literal|13
argument_list|,
name|stats
argument_list|,
name|mockConsumer
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDefaultLayoutRepositoryJarsNoSnapshotsWithExclusions
parameter_list|()
throws|throws
name|Exception
block|{
name|ArtifactRepository
name|repository
init|=
name|getDefaultRepository
argument_list|()
decl_stmt|;
name|List
name|consumers
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|MockConsumer
name|mockConsumer
init|=
name|createAndAddMockConsumer
argument_list|(
name|consumers
argument_list|,
literal|"**/*.jar"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|List
name|exclusions
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|exclusions
operator|.
name|add
argument_list|(
literal|"**/*-client.jar"
argument_list|)
expr_stmt|;
name|DiscovererStatistics
name|stats
init|=
name|discoverer
operator|.
name|walkRepository
argument_list|(
name|repository
argument_list|,
name|consumers
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|exclusions
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|stats
argument_list|)
expr_stmt|;
name|assertFilesProcessed
argument_list|(
literal|12
argument_list|,
name|stats
argument_list|,
name|mockConsumer
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

