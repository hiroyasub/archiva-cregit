begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|discoverer
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|math
operator|.
name|NumberUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|util
operator|.
name|IOUtil
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_comment
comment|/**  * DiscovererStatistics   *  * @author<a href="mailto:joakime@apache.org">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|DiscovererStatistics
block|{
specifier|private
specifier|static
specifier|final
name|String
name|PROP_FILES_CONSUMED
init|=
literal|"scan.consumed.files"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PROP_FILES_INCLUDED
init|=
literal|"scan.included.files"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PROP_FILES_SKIPPED
init|=
literal|"scan.skipped.files"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PROP_TIMESTAMP_STARTED
init|=
literal|"scan.started.timestamp"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PROP_TIMESTAMP_FINISHED
init|=
literal|"scan.finished.timestamp"
decl_stmt|;
specifier|protected
name|long
name|timestampStarted
init|=
literal|0
decl_stmt|;
specifier|protected
name|long
name|timestampFinished
init|=
literal|0
decl_stmt|;
specifier|protected
name|long
name|filesIncluded
init|=
literal|0
decl_stmt|;
specifier|protected
name|long
name|filesConsumed
init|=
literal|0
decl_stmt|;
specifier|protected
name|long
name|filesSkipped
init|=
literal|0
decl_stmt|;
specifier|private
name|ArtifactRepository
name|repository
decl_stmt|;
specifier|public
name|DiscovererStatistics
parameter_list|(
name|ArtifactRepository
name|repository
parameter_list|)
block|{
name|this
operator|.
name|repository
operator|=
name|repository
expr_stmt|;
block|}
specifier|public
name|void
name|load
parameter_list|(
name|String
name|filename
parameter_list|)
throws|throws
name|IOException
block|{
name|File
name|repositoryBase
init|=
operator|new
name|File
argument_list|(
name|this
operator|.
name|repository
operator|.
name|getBasedir
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|scanProperties
init|=
operator|new
name|File
argument_list|(
name|repositoryBase
argument_list|,
name|filename
argument_list|)
decl_stmt|;
name|FileInputStream
name|fis
init|=
literal|null
decl_stmt|;
try|try
block|{
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|fis
operator|=
operator|new
name|FileInputStream
argument_list|(
name|scanProperties
argument_list|)
expr_stmt|;
name|props
operator|.
name|load
argument_list|(
name|fis
argument_list|)
expr_stmt|;
name|timestampFinished
operator|=
name|NumberUtils
operator|.
name|toLong
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|PROP_TIMESTAMP_FINISHED
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|timestampStarted
operator|=
name|NumberUtils
operator|.
name|toLong
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|PROP_TIMESTAMP_STARTED
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|filesIncluded
operator|=
name|NumberUtils
operator|.
name|toLong
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|PROP_FILES_INCLUDED
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|filesConsumed
operator|=
name|NumberUtils
operator|.
name|toLong
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|PROP_FILES_CONSUMED
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|filesSkipped
operator|=
name|NumberUtils
operator|.
name|toLong
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|PROP_FILES_SKIPPED
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|reset
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
name|IOUtil
operator|.
name|close
argument_list|(
name|fis
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|save
parameter_list|(
name|String
name|filename
parameter_list|)
throws|throws
name|IOException
block|{
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|PROP_TIMESTAMP_FINISHED
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|timestampFinished
argument_list|)
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|PROP_TIMESTAMP_STARTED
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|timestampStarted
argument_list|)
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|PROP_FILES_INCLUDED
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|filesIncluded
argument_list|)
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|PROP_FILES_CONSUMED
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|filesConsumed
argument_list|)
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|PROP_FILES_SKIPPED
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|filesSkipped
argument_list|)
argument_list|)
expr_stmt|;
name|File
name|repositoryBase
init|=
operator|new
name|File
argument_list|(
name|this
operator|.
name|repository
operator|.
name|getBasedir
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|statsFile
init|=
operator|new
name|File
argument_list|(
name|repositoryBase
argument_list|,
name|filename
argument_list|)
decl_stmt|;
name|FileOutputStream
name|fos
init|=
literal|null
decl_stmt|;
try|try
block|{
name|fos
operator|=
operator|new
name|FileOutputStream
argument_list|(
name|statsFile
argument_list|)
expr_stmt|;
name|props
operator|.
name|store
argument_list|(
name|fos
argument_list|,
literal|"Last Scan Information, managed by Archiva. DO NOT EDIT"
argument_list|)
expr_stmt|;
name|fos
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|IOUtil
operator|.
name|close
argument_list|(
name|fos
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|reset
parameter_list|()
block|{
name|timestampStarted
operator|=
literal|0
expr_stmt|;
name|timestampFinished
operator|=
literal|0
expr_stmt|;
name|filesIncluded
operator|=
literal|0
expr_stmt|;
name|filesConsumed
operator|=
literal|0
expr_stmt|;
name|filesSkipped
operator|=
literal|0
expr_stmt|;
block|}
specifier|public
name|long
name|getElapsedMilliseconds
parameter_list|()
block|{
return|return
name|timestampFinished
operator|-
name|timestampStarted
return|;
block|}
specifier|public
name|long
name|getFilesConsumed
parameter_list|()
block|{
return|return
name|filesConsumed
return|;
block|}
specifier|public
name|long
name|getFilesIncluded
parameter_list|()
block|{
return|return
name|filesIncluded
return|;
block|}
specifier|public
name|ArtifactRepository
name|getRepository
parameter_list|()
block|{
return|return
name|repository
return|;
block|}
specifier|public
name|long
name|getTimestampFinished
parameter_list|()
block|{
return|return
name|timestampFinished
return|;
block|}
specifier|public
name|long
name|getTimestampStarted
parameter_list|()
block|{
return|return
name|timestampStarted
return|;
block|}
specifier|public
name|long
name|getFilesSkipped
parameter_list|()
block|{
return|return
name|filesSkipped
return|;
block|}
specifier|public
name|void
name|setTimestampFinished
parameter_list|(
name|long
name|timestampFinished
parameter_list|)
block|{
name|this
operator|.
name|timestampFinished
operator|=
name|timestampFinished
expr_stmt|;
block|}
specifier|public
name|void
name|setTimestampStarted
parameter_list|(
name|long
name|timestampStarted
parameter_list|)
block|{
name|this
operator|.
name|timestampStarted
operator|=
name|timestampStarted
expr_stmt|;
block|}
specifier|public
name|void
name|dump
parameter_list|(
name|Logger
name|logger
parameter_list|)
block|{
name|logger
operator|.
name|info
argument_list|(
literal|"----------------------------------------------------"
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Scan of Repository: "
operator|+
name|repository
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"   Started : "
operator|+
name|toHumanTimestamp
argument_list|(
name|this
operator|.
name|getTimestampStarted
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"   Finished: "
operator|+
name|toHumanTimestamp
argument_list|(
name|this
operator|.
name|getTimestampFinished
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// TODO: pretty print ellapsed time.
name|logger
operator|.
name|info
argument_list|(
literal|"   Duration: "
operator|+
name|this
operator|.
name|getElapsedMilliseconds
argument_list|()
operator|+
literal|"ms"
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"   Files   : "
operator|+
name|this
operator|.
name|getFilesIncluded
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"   Consumed: "
operator|+
name|this
operator|.
name|getFilesConsumed
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"   Skipped : "
operator|+
name|this
operator|.
name|getFilesSkipped
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|toHumanTimestamp
parameter_list|(
name|long
name|timestamp
parameter_list|)
block|{
name|SimpleDateFormat
name|dateFormat
init|=
operator|new
name|SimpleDateFormat
argument_list|()
decl_stmt|;
return|return
name|dateFormat
operator|.
name|format
argument_list|(
operator|new
name|Date
argument_list|(
name|timestamp
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

