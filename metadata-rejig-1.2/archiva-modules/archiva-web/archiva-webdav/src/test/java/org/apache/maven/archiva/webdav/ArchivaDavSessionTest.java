begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|webdav
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
specifier|public
class|class
name|ArchivaDavSessionTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testTokens
parameter_list|()
block|{
name|ArchivaDavSession
name|session
init|=
operator|new
name|ArchivaDavSession
argument_list|()
decl_stmt|;
specifier|final
name|String
name|myToken
init|=
literal|"thisisadavtoken"
decl_stmt|;
name|session
operator|.
name|addLockToken
argument_list|(
name|myToken
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|session
operator|.
name|getLockTokens
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|myToken
argument_list|,
name|session
operator|.
name|getLockTokens
argument_list|()
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|session
operator|.
name|removeLockToken
argument_list|(
name|myToken
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|session
operator|.
name|getLockTokens
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testAddReferencesThrowsUnsupportedOperationException
parameter_list|()
block|{
name|ArchivaDavSession
name|session
init|=
operator|new
name|ArchivaDavSession
argument_list|()
decl_stmt|;
try|try
block|{
name|session
operator|.
name|addReference
argument_list|(
operator|new
name|Object
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Did not throw UnsupportedOperationException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedOperationException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testRemoveReferencesThrowsUnsupportedOperationException
parameter_list|()
block|{
name|ArchivaDavSession
name|session
init|=
operator|new
name|ArchivaDavSession
argument_list|()
decl_stmt|;
try|try
block|{
name|session
operator|.
name|removeReference
argument_list|(
operator|new
name|Object
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Did not throw UnsupportedOperationException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedOperationException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

