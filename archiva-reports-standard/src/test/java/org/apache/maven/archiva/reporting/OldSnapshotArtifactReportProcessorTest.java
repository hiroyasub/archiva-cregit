begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|reporting
package|;
end_package

begin_comment
comment|/*  * Copyright 2005-2006 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|reporting
operator|.
name|model
operator|.
name|ArtifactResults
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|reporting
operator|.
name|model
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|util
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_comment
comment|/**  * This class tests the OldArtifactReportProcessor.  */
end_comment

begin_class
specifier|public
class|class
name|OldSnapshotArtifactReportProcessorTest
extends|extends
name|AbstractRepositoryReportsTestCase
block|{
specifier|private
name|ArtifactReportProcessor
name|artifactReportProcessor
decl_stmt|;
specifier|private
name|ReportingDatabase
name|reportDatabase
decl_stmt|;
specifier|private
name|File
name|tempRepository
decl_stmt|;
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|artifactReportProcessor
operator|=
operator|(
name|ArtifactReportProcessor
operator|)
name|lookup
argument_list|(
name|ArtifactReportProcessor
operator|.
name|ROLE
argument_list|,
literal|"old-snapshot-artifact"
argument_list|)
expr_stmt|;
name|ReportGroup
name|reportGroup
init|=
operator|(
name|ReportGroup
operator|)
name|lookup
argument_list|(
name|ReportGroup
operator|.
name|ROLE
argument_list|,
literal|"old-artifact"
argument_list|)
decl_stmt|;
name|reportDatabase
operator|=
operator|new
name|ReportingDatabase
argument_list|(
name|reportGroup
argument_list|)
expr_stmt|;
name|tempRepository
operator|=
name|getTestFile
argument_list|(
literal|"target/test-repository"
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|tempRepository
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testOldSnapshotArtifact
parameter_list|()
block|{
name|Artifact
name|artifact
init|=
name|createArtifact
argument_list|(
literal|"groupId"
argument_list|,
literal|"snapshot-artifact"
argument_list|,
literal|"1.0-alpha-1-20050611.202024-1"
argument_list|,
literal|"pom"
argument_list|)
decl_stmt|;
name|artifactReportProcessor
operator|.
name|processArtifact
argument_list|(
name|artifact
argument_list|,
literal|null
argument_list|,
name|reportDatabase
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|reportDatabase
operator|.
name|getNumFailures
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|reportDatabase
operator|.
name|getNumWarnings
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Check notices"
argument_list|,
literal|1
argument_list|,
name|reportDatabase
operator|.
name|getNumNotices
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
name|artifactIterator
init|=
name|reportDatabase
operator|.
name|getArtifactIterator
argument_list|()
decl_stmt|;
name|assertArtifactResults
argument_list|(
name|artifactIterator
argument_list|,
name|artifact
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|assertArtifactResults
parameter_list|(
name|Iterator
name|artifactIterator
parameter_list|,
name|Artifact
name|artifact
parameter_list|)
block|{
name|ArtifactResults
name|results
init|=
operator|(
name|ArtifactResults
operator|)
name|artifactIterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|artifact
operator|.
name|getArtifactId
argument_list|()
argument_list|,
name|results
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artifact
operator|.
name|getGroupId
argument_list|()
argument_list|,
name|results
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|,
name|results
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|artifact
operator|.
name|getVersion
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"SNAPSHOT"
argument_list|)
operator|>=
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|results
operator|.
name|getNotices
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
name|i
init|=
name|results
operator|.
name|getNotices
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Result
name|result
init|=
operator|(
name|Result
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"old-snapshot-artifact"
argument_list|,
name|result
operator|.
name|getProcessor
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSNAPSHOTArtifact
parameter_list|()
block|{
name|Artifact
name|artifact
init|=
name|createArtifact
argument_list|(
literal|"groupId"
argument_list|,
literal|"snapshot-artifact"
argument_list|,
literal|"1.0-alpha-1-SNAPSHOT"
argument_list|,
literal|"pom"
argument_list|)
decl_stmt|;
name|artifactReportProcessor
operator|.
name|processArtifact
argument_list|(
name|artifact
argument_list|,
literal|null
argument_list|,
name|reportDatabase
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|reportDatabase
operator|.
name|getNumFailures
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|reportDatabase
operator|.
name|getNumWarnings
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Check no notices"
argument_list|,
literal|0
argument_list|,
name|reportDatabase
operator|.
name|getNumNotices
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testNonSnapshotArtifact
parameter_list|()
block|{
name|Artifact
name|artifact
init|=
name|createArtifact
argument_list|(
literal|"groupId"
argument_list|,
literal|"artifactId"
argument_list|,
literal|"1.0-alpha-1"
argument_list|)
decl_stmt|;
name|artifactReportProcessor
operator|.
name|processArtifact
argument_list|(
name|artifact
argument_list|,
literal|null
argument_list|,
name|reportDatabase
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|reportDatabase
operator|.
name|getNumFailures
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|reportDatabase
operator|.
name|getNumWarnings
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Check no notices"
argument_list|,
literal|0
argument_list|,
name|reportDatabase
operator|.
name|getNumNotices
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testNewSnapshotArtifact
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|repository
init|=
name|getTestFile
argument_list|(
literal|"target/test-repository"
argument_list|)
decl_stmt|;
name|File
name|dir
init|=
operator|new
name|File
argument_list|(
name|repository
argument_list|,
literal|"groupId/artifactId/1.0-alpha-1-SNAPSHOT"
argument_list|)
decl_stmt|;
name|dir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|String
name|date
init|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"yyyyMMdd.HHmmss"
argument_list|)
operator|.
name|format
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|fileWrite
argument_list|(
operator|new
name|File
argument_list|(
name|dir
argument_list|,
literal|"artifactId-1.0-alpha-1-"
operator|+
name|date
operator|+
literal|"-1.jar"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
name|createArtifactFromRepository
argument_list|(
name|repository
argument_list|,
literal|"groupId"
argument_list|,
literal|"artifactId"
argument_list|,
literal|"1.0-alpha-1-"
operator|+
name|date
operator|+
literal|"-1"
argument_list|)
decl_stmt|;
name|artifactReportProcessor
operator|.
name|processArtifact
argument_list|(
name|artifact
argument_list|,
literal|null
argument_list|,
name|reportDatabase
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|reportDatabase
operator|.
name|getNumFailures
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|reportDatabase
operator|.
name|getNumWarnings
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Check no notices"
argument_list|,
literal|0
argument_list|,
name|reportDatabase
operator|.
name|getNumNotices
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testTooManySnapshotArtifact
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|dir
init|=
operator|new
name|File
argument_list|(
name|tempRepository
argument_list|,
literal|"groupId/artifactId/1.0-alpha-1-SNAPSHOT"
argument_list|)
decl_stmt|;
name|dir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|String
name|date
init|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"yyyyMMdd.HHmmss"
argument_list|)
operator|.
name|format
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
literal|5
condition|;
name|i
operator|++
control|)
block|{
name|FileUtils
operator|.
name|fileWrite
argument_list|(
operator|new
name|File
argument_list|(
name|dir
argument_list|,
literal|"artifactId-1.0-alpha-1-"
operator|+
name|date
operator|+
literal|"-"
operator|+
name|i
operator|+
literal|".jar"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
literal|5
condition|;
name|i
operator|++
control|)
block|{
name|Artifact
name|artifact
init|=
name|createArtifactFromRepository
argument_list|(
name|tempRepository
argument_list|,
literal|"groupId"
argument_list|,
literal|"artifactId"
argument_list|,
literal|"1.0-alpha-1-"
operator|+
name|date
operator|+
literal|"-"
operator|+
name|i
argument_list|)
decl_stmt|;
name|artifactReportProcessor
operator|.
name|processArtifact
argument_list|(
name|artifact
argument_list|,
literal|null
argument_list|,
name|reportDatabase
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|reportDatabase
operator|.
name|getNumFailures
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|reportDatabase
operator|.
name|getNumWarnings
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Check notices"
argument_list|,
literal|3
argument_list|,
name|reportDatabase
operator|.
name|getNumNotices
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
name|artifactIterator
init|=
name|reportDatabase
operator|.
name|getArtifactIterator
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
literal|3
condition|;
name|i
operator|++
control|)
block|{
name|String
name|version
init|=
literal|"1.0-alpha-1-"
operator|+
name|date
operator|+
literal|"-"
operator|+
name|i
decl_stmt|;
name|Artifact
name|artifact
init|=
name|createArtifactFromRepository
argument_list|(
name|tempRepository
argument_list|,
literal|"groupId"
argument_list|,
literal|"artifactId"
argument_list|,
name|version
argument_list|)
decl_stmt|;
name|assertArtifactResults
argument_list|(
name|artifactIterator
argument_list|,
name|artifact
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testMissingArtifact
parameter_list|()
throws|throws
name|Exception
block|{
name|Artifact
name|artifact
init|=
name|createArtifact
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|"XP"
argument_list|)
decl_stmt|;
try|try
block|{
name|artifactReportProcessor
operator|.
name|processArtifact
argument_list|(
name|artifact
argument_list|,
literal|null
argument_list|,
name|reportDatabase
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should not have passed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

