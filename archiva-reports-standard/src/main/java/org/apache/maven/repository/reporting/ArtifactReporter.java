begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|reporting
package|;
end_package

begin_comment
comment|/*  * Copyright 2005-2006 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|metadata
operator|.
name|RepositoryMetadata
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_comment
comment|/**  * This interface is used by the single artifact processor.  *<p/>  * The initial implementation of this will just need to be a mock implementation in src/test/java, used to track the  * failures and successes for checking assertions. Later, implementations will be made to present reports on the  * web interface, send them via mail, and so on.  *  * @todo i18n  */
end_comment

begin_interface
specifier|public
interface|interface
name|ArtifactReporter
block|{
name|String
name|ROLE
init|=
name|ArtifactReporter
operator|.
name|class
operator|.
name|getName
argument_list|()
decl_stmt|;
name|String
name|NULL_MODEL
init|=
literal|"Provided model was null"
decl_stmt|;
name|String
name|NULL_ARTIFACT
init|=
literal|"Provided artifact was null"
decl_stmt|;
name|String
name|EMPTY_GROUP_ID
init|=
literal|"Group id was empty or null"
decl_stmt|;
name|String
name|EMPTY_ARTIFACT_ID
init|=
literal|"Artifact id was empty or null"
decl_stmt|;
name|String
name|EMPTY_VERSION
init|=
literal|"Version was empty or null"
decl_stmt|;
name|String
name|EMPTY_DEPENDENCY_GROUP_ID
init|=
literal|"Group id was empty or null"
decl_stmt|;
name|String
name|EMPTY_DEPENDENCY_ARTIFACT_ID
init|=
literal|"Artifact id was empty or null"
decl_stmt|;
name|String
name|EMPTY_DEPENDENCY_VERSION
init|=
literal|"Version was empty or null"
decl_stmt|;
name|String
name|NO_DEPENDENCIES
init|=
literal|"Artifact has no dependencies"
decl_stmt|;
name|String
name|ARTIFACT_NOT_FOUND
init|=
literal|"Artifact does not exist in the repository"
decl_stmt|;
name|String
name|DEPENDENCY_NOT_FOUND
init|=
literal|"Artifact's dependency does not exist in the repository"
decl_stmt|;
name|void
name|addFailure
parameter_list|(
name|Artifact
name|artifact
parameter_list|,
name|String
name|reason
parameter_list|)
function_decl|;
name|void
name|addSuccess
parameter_list|(
name|Artifact
name|artifact
parameter_list|)
function_decl|;
name|void
name|addWarning
parameter_list|(
name|Artifact
name|artifact
parameter_list|,
name|String
name|message
parameter_list|)
function_decl|;
name|void
name|addFailure
parameter_list|(
name|RepositoryMetadata
name|metadata
parameter_list|,
name|String
name|reason
parameter_list|)
function_decl|;
name|void
name|addSuccess
parameter_list|(
name|RepositoryMetadata
name|metadata
parameter_list|)
function_decl|;
name|void
name|addWarning
parameter_list|(
name|RepositoryMetadata
name|metadata
parameter_list|,
name|String
name|message
parameter_list|)
function_decl|;
name|Iterator
name|getArtifactFailureIterator
parameter_list|()
function_decl|;
name|Iterator
name|getArtifactSuccessIterator
parameter_list|()
function_decl|;
name|Iterator
name|getArtifactWarningIterator
parameter_list|()
function_decl|;
name|Iterator
name|getRepositoryMetadataFailureIterator
parameter_list|()
function_decl|;
name|Iterator
name|getRepositoryMetadataSuccessIterator
parameter_list|()
function_decl|;
name|Iterator
name|getRepositoryMetadataWarningIterator
parameter_list|()
function_decl|;
name|int
name|getFailures
parameter_list|()
function_decl|;
name|int
name|getSuccesses
parameter_list|()
function_decl|;
name|int
name|getWarnings
parameter_list|()
function_decl|;
block|}
end_interface

end_unit

