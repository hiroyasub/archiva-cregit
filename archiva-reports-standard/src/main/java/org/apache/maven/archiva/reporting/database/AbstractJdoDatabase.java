begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|reporting
operator|.
name|database
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|jdo
operator|.
name|JdoFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|personality
operator|.
name|plexus
operator|.
name|lifecycle
operator|.
name|phase
operator|.
name|Initializable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|personality
operator|.
name|plexus
operator|.
name|lifecycle
operator|.
name|phase
operator|.
name|InitializationException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jdo
operator|.
name|Extent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jdo
operator|.
name|JDOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jdo
operator|.
name|JDOHelper
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jdo
operator|.
name|JDOObjectNotFoundException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jdo
operator|.
name|JDOUserException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jdo
operator|.
name|PersistenceManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jdo
operator|.
name|PersistenceManagerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jdo
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jdo
operator|.
name|Transaction
import|;
end_import

begin_comment
comment|/**  * AbstractJdoResults - Base class for all JDO related results.  *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractJdoDatabase
implements|implements
name|Initializable
block|{
comment|/**      * @plexus.requirement role-hint="archiva"      */
specifier|private
name|JdoFactory
name|jdoFactory
decl_stmt|;
specifier|private
name|PersistenceManagerFactory
name|pmf
decl_stmt|;
comment|// -------------------------------------------------------------------
comment|// JPOX / JDO Specifics.
comment|// -------------------------------------------------------------------
specifier|protected
name|List
name|getAllObjects
parameter_list|(
name|Class
name|clazz
parameter_list|,
name|String
name|ordering
parameter_list|)
block|{
name|PersistenceManager
name|pm
init|=
name|getPersistenceManager
argument_list|()
decl_stmt|;
name|Transaction
name|tx
init|=
name|pm
operator|.
name|currentTransaction
argument_list|()
decl_stmt|;
try|try
block|{
name|tx
operator|.
name|begin
argument_list|()
expr_stmt|;
name|Extent
name|extent
init|=
name|pm
operator|.
name|getExtent
argument_list|(
name|clazz
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Query
name|query
init|=
name|pm
operator|.
name|newQuery
argument_list|(
name|extent
argument_list|)
decl_stmt|;
if|if
condition|(
name|ordering
operator|!=
literal|null
condition|)
block|{
name|query
operator|.
name|setOrdering
argument_list|(
name|ordering
argument_list|)
expr_stmt|;
block|}
comment|//            for ( Iterator i = fetchGroups.iterator(); i.hasNext(); )
comment|//            {
comment|//                pm.getFetchPlan().addGroup( (String) i.next() );
comment|//            }
name|List
name|result
init|=
operator|(
name|List
operator|)
name|query
operator|.
name|execute
argument_list|()
decl_stmt|;
name|result
operator|=
operator|(
name|List
operator|)
name|pm
operator|.
name|detachCopyAll
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|tx
operator|.
name|commit
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
finally|finally
block|{
name|rollbackIfActive
argument_list|(
name|tx
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|Object
name|getObjectByKey
parameter_list|(
name|Class
name|clazz
parameter_list|,
name|Object
name|key
parameter_list|)
throws|throws
name|JDOObjectNotFoundException
throws|,
name|JDOException
block|{
if|if
condition|(
name|key
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|JDOException
argument_list|(
literal|"Unable to get object from jdo using null key."
argument_list|)
throw|;
block|}
name|PersistenceManager
name|pm
init|=
name|getPersistenceManager
argument_list|()
decl_stmt|;
name|Transaction
name|tx
init|=
name|pm
operator|.
name|currentTransaction
argument_list|()
decl_stmt|;
try|try
block|{
name|tx
operator|.
name|begin
argument_list|()
expr_stmt|;
comment|//            if ( fetchGroup != null )
comment|//            {
comment|//                pm.getFetchPlan().addGroup( fetchGroup );
comment|//            }
name|Object
name|objectId
init|=
name|pm
operator|.
name|newObjectIdInstance
argument_list|(
name|clazz
argument_list|,
name|key
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|Object
name|object
init|=
name|pm
operator|.
name|getObjectById
argument_list|(
name|objectId
argument_list|)
decl_stmt|;
name|object
operator|=
name|pm
operator|.
name|detachCopy
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|tx
operator|.
name|commit
argument_list|()
expr_stmt|;
return|return
name|object
return|;
block|}
finally|finally
block|{
name|rollbackIfActive
argument_list|(
name|tx
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|initialize
parameter_list|()
throws|throws
name|InitializationException
block|{
name|pmf
operator|=
name|jdoFactory
operator|.
name|getPersistenceManagerFactory
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|removeObject
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
name|PersistenceManager
name|pm
init|=
name|getPersistenceManager
argument_list|()
decl_stmt|;
name|Transaction
name|tx
init|=
name|pm
operator|.
name|currentTransaction
argument_list|()
decl_stmt|;
try|try
block|{
name|tx
operator|.
name|begin
argument_list|()
expr_stmt|;
name|o
operator|=
name|pm
operator|.
name|getObjectById
argument_list|(
name|pm
operator|.
name|getObjectId
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
name|pm
operator|.
name|deletePersistent
argument_list|(
name|o
argument_list|)
expr_stmt|;
name|tx
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|rollbackIfActive
argument_list|(
name|tx
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|Object
name|saveObject
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
return|return
name|saveObject
argument_list|(
name|object
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|protected
name|Object
name|saveObject
parameter_list|(
name|Object
name|object
parameter_list|,
name|String
name|fetchGroups
index|[]
parameter_list|)
throws|throws
name|JDOException
block|{
name|PersistenceManager
name|pm
init|=
name|getPersistenceManager
argument_list|()
decl_stmt|;
name|Transaction
name|tx
init|=
name|pm
operator|.
name|currentTransaction
argument_list|()
decl_stmt|;
try|try
block|{
name|tx
operator|.
name|begin
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
name|JDOHelper
operator|.
name|getObjectId
argument_list|(
name|object
argument_list|)
operator|!=
literal|null
operator|)
operator|&&
operator|!
name|JDOHelper
operator|.
name|isDetached
argument_list|(
name|object
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|JDOException
argument_list|(
literal|"Existing object is not detached: "
operator|+
name|object
argument_list|)
throw|;
block|}
if|if
condition|(
name|fetchGroups
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|>=
name|fetchGroups
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|pm
operator|.
name|getFetchPlan
argument_list|()
operator|.
name|addGroup
argument_list|(
name|fetchGroups
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
name|pm
operator|.
name|makePersistent
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|object
operator|=
name|pm
operator|.
name|detachCopy
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|tx
operator|.
name|commit
argument_list|()
expr_stmt|;
return|return
name|object
return|;
block|}
finally|finally
block|{
name|rollbackIfActive
argument_list|(
name|tx
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|PersistenceManager
name|getPersistenceManager
parameter_list|()
block|{
name|PersistenceManager
name|pm
init|=
name|pmf
operator|.
name|getPersistenceManager
argument_list|()
decl_stmt|;
name|pm
operator|.
name|getFetchPlan
argument_list|()
operator|.
name|setMaxFetchDepth
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
return|return
name|pm
return|;
block|}
specifier|protected
specifier|static
name|void
name|closePersistenceManager
parameter_list|(
name|PersistenceManager
name|pm
parameter_list|)
block|{
try|try
block|{
name|pm
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JDOUserException
name|e
parameter_list|)
block|{
comment|// ignore
block|}
block|}
specifier|protected
specifier|static
name|void
name|rollbackIfActive
parameter_list|(
name|Transaction
name|tx
parameter_list|)
block|{
name|PersistenceManager
name|pm
init|=
name|tx
operator|.
name|getPersistenceManager
argument_list|()
decl_stmt|;
try|try
block|{
if|if
condition|(
name|tx
operator|.
name|isActive
argument_list|()
condition|)
block|{
name|tx
operator|.
name|rollback
argument_list|()
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|closePersistenceManager
argument_list|(
name|pm
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

