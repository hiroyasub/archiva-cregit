begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|webdav
operator|.
name|simple
package|;
end_package

begin_import
import|import
name|it
operator|.
name|could
operator|.
name|webdav
operator|.
name|DAVListener
import|;
end_import

begin_import
import|import
name|it
operator|.
name|could
operator|.
name|webdav
operator|.
name|DAVProcessor
import|;
end_import

begin_import
import|import
name|it
operator|.
name|could
operator|.
name|webdav
operator|.
name|DAVRepository
import|;
end_import

begin_import
import|import
name|it
operator|.
name|could
operator|.
name|webdav
operator|.
name|DAVResource
import|;
end_import

begin_import
import|import
name|it
operator|.
name|could
operator|.
name|webdav
operator|.
name|DAVTransaction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|webdav
operator|.
name|AbstractDavServerComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|webdav
operator|.
name|DavServerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|webdav
operator|.
name|servlet
operator|.
name|DavServerRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * SimpleDavServerComponent   *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id: SimpleDavServerComponent.java 7097 2007-11-30 12:57:29Z handyande $  *   * @plexus.component role="org.apache.maven.archiva.webdav.DavServerComponent"  *                   role-hint="simple"   *                   instantiation-strategy="per-lookup"  */
end_comment

begin_class
specifier|public
class|class
name|SimpleDavServerComponent
extends|extends
name|AbstractDavServerComponent
implements|implements
name|DAVListener
block|{
comment|/**      * @plexus.requirement       *              role="it.could.webdav.DAVMethod"      *              role-hint="get-with-indexing"      */
specifier|public
name|ReplacementGetMethod
name|methodGet
decl_stmt|;
specifier|private
name|String
name|prefix
decl_stmt|;
specifier|private
name|File
name|rootDirectory
decl_stmt|;
specifier|private
name|DAVRepository
name|davRepository
decl_stmt|;
specifier|private
name|DAVProcessor
name|davProcessor
decl_stmt|;
specifier|public
name|String
name|getPrefix
parameter_list|()
block|{
return|return
name|prefix
return|;
block|}
specifier|public
name|File
name|getRootDirectory
parameter_list|()
block|{
return|return
name|rootDirectory
return|;
block|}
specifier|public
name|void
name|setPrefix
parameter_list|(
name|String
name|prefix
parameter_list|)
block|{
name|this
operator|.
name|prefix
operator|=
name|prefix
expr_stmt|;
block|}
specifier|public
name|void
name|setRootDirectory
parameter_list|(
name|File
name|rootDirectory
parameter_list|)
block|{
name|this
operator|.
name|rootDirectory
operator|=
name|rootDirectory
expr_stmt|;
block|}
specifier|public
name|void
name|init
parameter_list|(
name|ServletConfig
name|servletConfig
parameter_list|)
throws|throws
name|DavServerException
block|{
name|servletConfig
operator|.
name|getServletContext
argument_list|()
operator|.
name|log
argument_list|(
literal|"Initializing "
operator|+
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|davRepository
operator|=
operator|new
name|DAVRepository
argument_list|(
name|rootDirectory
argument_list|)
expr_stmt|;
name|davProcessor
operator|=
operator|new
name|DAVProcessor
argument_list|(
name|davRepository
argument_list|)
expr_stmt|;
name|davRepository
operator|.
name|addListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|hackDavProcessor
argument_list|(
name|davProcessor
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|DavServerException
argument_list|(
literal|"Unable to initialize DAVRepository."
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|/**      * Replace the problematic dav methods with local hacked versions.      *       * @param davProcessor      * @throws DavServerException       */
specifier|private
name|void
name|hackDavProcessor
parameter_list|(
name|DAVProcessor
name|davProcessor
parameter_list|)
throws|throws
name|DavServerException
block|{
name|davProcessor
operator|.
name|setMethod
argument_list|(
literal|"MOVE"
argument_list|,
operator|new
name|HackedMoveMethod
argument_list|()
argument_list|)
expr_stmt|;
name|davProcessor
operator|.
name|setMethod
argument_list|(
literal|"GET"
argument_list|,
name|methodGet
argument_list|)
expr_stmt|;
comment|/* Reflection based technique.         try         {             Field fldInstance = davProcessor.getClass().getDeclaredField( "INSTANCES" );             fldInstance.setAccessible( true );              Map mapInstances = (Map) fldInstance.get( davProcessor );              // Replace MOVE method.             // TODO: Remove MOVE method when upgrading it.could.webdav to v0.5             mapInstances.put( "MOVE", (DAVMethod) new HackedMoveMethod() );              // Replace GET method.             mapInstances.put( "GET", (DAVMethod) methodGet );         }         catch ( Throwable e )         {             throw new DavServerException( "Unable to twiddle DAVProcessor.INSTANCES field.", e );         }         */
block|}
specifier|public
name|void
name|process
parameter_list|(
name|DavServerRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|ServletException
throws|,
name|IOException
block|{
name|DAVTransaction
name|transaction
init|=
operator|new
name|DAVTransaction
argument_list|(
name|request
operator|.
name|getRequest
argument_list|()
argument_list|,
name|response
argument_list|)
decl_stmt|;
comment|/* BEGIN - it.could.webdav hacks          * TODO: Remove hacks with release of it.could.webdav 0.5 (or newer)          */
name|String
name|depthValue
init|=
name|request
operator|.
name|getRequest
argument_list|()
operator|.
name|getHeader
argument_list|(
literal|"Depth"
argument_list|)
decl_stmt|;
if|if
condition|(
name|StringUtils
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"infinity"
argument_list|,
name|depthValue
argument_list|)
condition|)
block|{
comment|// See - http://could.it/bugs/browse/DAV-3
name|request
operator|.
name|getRequest
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"Depth"
argument_list|,
literal|"infinity"
argument_list|)
expr_stmt|;
block|}
comment|/* END - it.could.webdav hacks */
name|davProcessor
operator|.
name|process
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|notify
parameter_list|(
name|DAVResource
name|resource
parameter_list|,
name|int
name|event
parameter_list|)
block|{
switch|switch
condition|(
name|event
condition|)
block|{
case|case
name|DAVListener
operator|.
name|COLLECTION_CREATED
case|:
name|triggerCollectionCreated
argument_list|(
name|resource
operator|.
name|getRelativePath
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|DAVListener
operator|.
name|COLLECTION_REMOVED
case|:
name|triggerCollectionRemoved
argument_list|(
name|resource
operator|.
name|getRelativePath
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|DAVListener
operator|.
name|RESOURCE_CREATED
case|:
name|triggerResourceCreated
argument_list|(
name|resource
operator|.
name|getRelativePath
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|DAVListener
operator|.
name|RESOURCE_REMOVED
case|:
name|triggerResourceRemoved
argument_list|(
name|resource
operator|.
name|getRelativePath
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|DAVListener
operator|.
name|RESOURCE_MODIFIED
case|:
name|triggerResourceModified
argument_list|(
name|resource
operator|.
name|getRelativePath
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
specifier|public
name|void
name|setUseIndexHtml
parameter_list|(
name|boolean
name|useIndexHtml
parameter_list|)
block|{
name|super
operator|.
name|setUseIndexHtml
argument_list|(
name|useIndexHtml
argument_list|)
expr_stmt|;
name|this
operator|.
name|methodGet
operator|.
name|setUseIndexHtml
argument_list|(
name|useIndexHtml
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

