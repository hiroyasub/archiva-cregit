begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* ========================================================================== *  *         Copyright (C) 2004-2006, Pier Fumagalli<http://could.it/>         *  *                            All rights reserved.                            *  * ========================================================================== *  *                                                                            *  * Licensed under the  Apache License, Version 2.0  (the "License").  You may *  * not use this file except in compliance with the License.  You may obtain a *  * copy of the License at<http://www.apache.org/licenses/LICENSE-2.0>.       *  *                                                                            *  * Unless  required  by applicable  law or  agreed  to  in writing,  software *  * distributed under the License is distributed on an  "AS IS" BASIS, WITHOUT *  * WARRANTIES OR  CONDITIONS OF ANY KIND, either express or implied.  See the *  * License for the  specific language  governing permissions  and limitations *  * under the License.                                                         *  *                                                                            *  * ========================================================================== */
end_comment

begin_package
package|package
name|it
operator|.
name|could
operator|.
name|webdav
operator|.
name|methods
package|;
end_package

begin_import
import|import
name|it
operator|.
name|could
operator|.
name|webdav
operator|.
name|DAVException
import|;
end_import

begin_import
import|import
name|it
operator|.
name|could
operator|.
name|webdav
operator|.
name|DAVMethod
import|;
end_import

begin_import
import|import
name|it
operator|.
name|could
operator|.
name|webdav
operator|.
name|DAVNotModified
import|;
end_import

begin_import
import|import
name|it
operator|.
name|could
operator|.
name|webdav
operator|.
name|DAVResource
import|;
end_import

begin_import
import|import
name|it
operator|.
name|could
operator|.
name|webdav
operator|.
name|DAVTransaction
import|;
end_import

begin_import
import|import
name|it
operator|.
name|could
operator|.
name|webdav
operator|.
name|DAVUtilities
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_comment
comment|/**  *<p><a href="http://www.rfc-editor.org/rfc/rfc2616.txt">HTTP</a>  *<code>HEAD</code> metohd implementation.</p>   *  * @author<a href="http://could.it/">Pier Fumagalli</a>  */
end_comment

begin_class
specifier|public
class|class
name|HEAD
implements|implements
name|DAVMethod
block|{
comment|/**      *<p>Create a new {@link HEAD} instance.</p>      */
specifier|public
name|HEAD
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
comment|/**      *<p>Process the<code>HEAD</code> method.</p>      */
specifier|public
name|void
name|process
parameter_list|(
name|DAVTransaction
name|transaction
parameter_list|,
name|DAVResource
name|resource
parameter_list|)
throws|throws
name|IOException
block|{
comment|/* Check if we have to force a resource not found or a redirection */
if|if
condition|(
name|resource
operator|.
name|isNull
argument_list|()
condition|)
throw|throw
operator|new
name|DAVException
argument_list|(
literal|404
argument_list|,
literal|"Not found"
argument_list|,
name|resource
argument_list|)
throw|;
comment|/* Check if this is a conditional (processable only for resources) */
name|Date
name|ifmod
init|=
name|transaction
operator|.
name|getIfModifiedSince
argument_list|()
decl_stmt|;
name|Date
name|lsmod
init|=
name|resource
operator|.
name|getLastModified
argument_list|()
decl_stmt|;
if|if
condition|(
name|resource
operator|.
name|isResource
argument_list|()
operator|&&
operator|(
name|ifmod
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|lsmod
operator|!=
literal|null
operator|)
condition|)
block|{
comment|/* HTTP doesn't send milliseconds, but Java does, so, reset them */
name|lsmod
operator|=
operator|new
name|Date
argument_list|(
operator|(
operator|(
name|long
operator|)
operator|(
name|lsmod
operator|.
name|getTime
argument_list|()
operator|/
literal|1000
operator|)
operator|)
operator|*
literal|1000
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|ifmod
operator|.
name|before
argument_list|(
name|lsmod
argument_list|)
condition|)
throw|throw
operator|new
name|DAVNotModified
argument_list|(
name|resource
argument_list|)
throw|;
block|}
comment|/* Get the headers of this method */
name|String
name|ctyp
init|=
name|resource
operator|.
name|getContentType
argument_list|()
decl_stmt|;
name|String
name|etag
init|=
name|resource
operator|.
name|getEntityTag
argument_list|()
decl_stmt|;
name|String
name|lmod
init|=
name|DAVUtilities
operator|.
name|formatHttpDate
argument_list|(
name|resource
operator|.
name|getLastModified
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|clen
init|=
name|DAVUtilities
operator|.
name|formatNumber
argument_list|(
name|resource
operator|.
name|getContentLength
argument_list|()
argument_list|)
decl_stmt|;
comment|/* Set the normal headers that are required for a GET */
if|if
condition|(
name|resource
operator|.
name|isCollection
argument_list|()
condition|)
block|{
name|transaction
operator|.
name|setContentType
argument_list|(
name|GET
operator|.
name|COLLECTION_MIME_TYPE
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|ctyp
operator|!=
literal|null
condition|)
block|{
name|transaction
operator|.
name|setContentType
argument_list|(
name|ctyp
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|etag
operator|!=
literal|null
condition|)
name|transaction
operator|.
name|setHeader
argument_list|(
literal|"ETag"
argument_list|,
name|etag
argument_list|)
expr_stmt|;
if|if
condition|(
name|lmod
operator|!=
literal|null
condition|)
name|transaction
operator|.
name|setHeader
argument_list|(
literal|"Last-Modified"
argument_list|,
name|lmod
argument_list|)
expr_stmt|;
if|if
condition|(
name|clen
operator|!=
literal|null
condition|)
name|transaction
operator|.
name|setHeader
argument_list|(
literal|"Content-Length"
argument_list|,
name|clen
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

