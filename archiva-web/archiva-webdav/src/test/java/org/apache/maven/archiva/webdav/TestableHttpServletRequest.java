begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|webdav
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|NotImplementedException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|RequestDispatcher
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletInputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|Cookie
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSession
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * TestableHttpServletRequest   *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id: TestableHttpServletRequest.java 6940 2007-10-16 01:02:02Z joakime $  */
end_comment

begin_class
specifier|public
class|class
name|TestableHttpServletRequest
implements|implements
name|HttpServletRequest
block|{
specifier|public
name|TestableHttpServletRequest
parameter_list|()
block|{
name|setDefaults
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setDefaults
parameter_list|()
block|{
name|authType
operator|=
literal|null
expr_stmt|;
name|scheme
operator|=
literal|"http"
expr_stmt|;
name|protocol
operator|=
literal|"HTTP/1.1"
expr_stmt|;
name|serverName
operator|=
literal|"localhost"
expr_stmt|;
name|serverPort
operator|=
literal|80
expr_stmt|;
name|remoteHost
operator|=
literal|"localhost"
expr_stmt|;
block|}
specifier|private
name|String
name|authType
decl_stmt|;
specifier|private
name|String
name|characterEncoding
decl_stmt|;
specifier|private
name|int
name|contentLength
decl_stmt|;
specifier|private
name|String
name|contentType
decl_stmt|;
specifier|private
name|String
name|contextPath
decl_stmt|;
specifier|private
name|Locale
name|locale
decl_stmt|;
specifier|private
name|String
name|method
decl_stmt|;
specifier|private
name|String
name|pathInfo
decl_stmt|;
specifier|private
name|String
name|pathTranslated
decl_stmt|;
specifier|private
name|String
name|protocol
decl_stmt|;
specifier|private
name|String
name|queryString
decl_stmt|;
specifier|private
name|String
name|remoteAddr
decl_stmt|;
specifier|private
name|String
name|remoteHost
decl_stmt|;
specifier|private
name|String
name|remoteUser
decl_stmt|;
specifier|private
name|String
name|requestedSessionId
decl_stmt|;
specifier|private
name|boolean
name|requestedSessionIdFromCookie
decl_stmt|;
specifier|private
name|boolean
name|requestedSessionIdFromUrl
decl_stmt|;
specifier|private
name|boolean
name|requestedSessionIdValid
decl_stmt|;
specifier|private
name|StringBuffer
name|requestURL
decl_stmt|;
specifier|private
name|String
name|scheme
decl_stmt|;
specifier|private
name|boolean
name|secure
decl_stmt|;
specifier|private
name|String
name|serverName
decl_stmt|;
specifier|private
name|int
name|serverPort
decl_stmt|;
specifier|private
name|String
name|servletPath
decl_stmt|;
specifier|public
name|Object
name|getAttribute
parameter_list|(
name|String
name|name
parameter_list|)
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getAttribute(String)"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|Enumeration
name|getAttributeNames
parameter_list|()
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getAttributeNames()"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|String
name|getAuthType
parameter_list|()
block|{
return|return
name|authType
return|;
block|}
specifier|public
name|String
name|getCharacterEncoding
parameter_list|()
block|{
return|return
name|characterEncoding
return|;
block|}
specifier|public
name|int
name|getContentLength
parameter_list|()
block|{
return|return
name|contentLength
return|;
block|}
specifier|public
name|String
name|getContentType
parameter_list|()
block|{
return|return
name|contentType
return|;
block|}
specifier|public
name|String
name|getContextPath
parameter_list|()
block|{
return|return
name|contextPath
return|;
block|}
specifier|public
name|Cookie
index|[]
name|getCookies
parameter_list|()
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getCookies()"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|long
name|getDateHeader
parameter_list|(
name|String
name|name
parameter_list|)
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getDateHeader(String)"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|String
name|getHeader
parameter_list|(
name|String
name|name
parameter_list|)
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getHeader(String)"
argument_list|)
argument_list|)
throw|;
block|}
specifier|private
name|Map
name|headers
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
specifier|public
name|Enumeration
name|getHeaderNames
parameter_list|()
block|{
return|return
operator|new
name|IterEnumeration
argument_list|(
name|headers
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|Enumeration
name|getHeaders
parameter_list|(
name|String
name|name
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getHeaders(String)"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|ServletInputStream
name|getInputStream
parameter_list|()
throws|throws
name|IOException
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getInputStream()"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|int
name|getIntHeader
parameter_list|(
name|String
name|name
parameter_list|)
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getIntHeader(String)"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|Locale
name|getLocale
parameter_list|()
block|{
return|return
name|locale
return|;
block|}
specifier|public
name|Enumeration
name|getLocales
parameter_list|()
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getLocales()"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|String
name|getMethod
parameter_list|()
block|{
return|return
name|method
return|;
block|}
specifier|public
name|String
name|getParameter
parameter_list|(
name|String
name|name
parameter_list|)
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getParameter(String)"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|Map
name|getParameterMap
parameter_list|()
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getParameterMap()"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|Enumeration
name|getParameterNames
parameter_list|()
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getParameterNames()"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|String
index|[]
name|getParameterValues
parameter_list|(
name|String
name|name
parameter_list|)
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getParameterValues(String)"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|String
name|getPathInfo
parameter_list|()
block|{
return|return
name|pathInfo
return|;
block|}
specifier|public
name|String
name|getPathTranslated
parameter_list|()
block|{
return|return
name|pathTranslated
return|;
block|}
specifier|public
name|String
name|getProtocol
parameter_list|()
block|{
return|return
name|protocol
return|;
block|}
specifier|public
name|String
name|getQueryString
parameter_list|()
block|{
return|return
name|queryString
return|;
block|}
specifier|public
name|BufferedReader
name|getReader
parameter_list|()
throws|throws
name|IOException
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getReader()"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|String
name|getRealPath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getRealPath(String)"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|String
name|getRemoteAddr
parameter_list|()
block|{
return|return
name|remoteAddr
return|;
block|}
specifier|public
name|String
name|getRemoteHost
parameter_list|()
block|{
return|return
name|remoteHost
return|;
block|}
specifier|public
name|String
name|getRemoteUser
parameter_list|()
block|{
return|return
name|remoteUser
return|;
block|}
specifier|public
name|RequestDispatcher
name|getRequestDispatcher
parameter_list|(
name|String
name|path
parameter_list|)
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getRequestDispatcher(String)"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|String
name|getRequestedSessionId
parameter_list|()
block|{
return|return
name|requestedSessionId
return|;
block|}
specifier|public
name|String
name|getRequestURI
parameter_list|()
block|{
return|return
name|requestURL
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|StringBuffer
name|getRequestURL
parameter_list|()
block|{
return|return
name|requestURL
return|;
block|}
specifier|public
name|String
name|getScheme
parameter_list|()
block|{
return|return
name|scheme
return|;
block|}
specifier|public
name|String
name|getServerName
parameter_list|()
block|{
return|return
name|serverName
return|;
block|}
specifier|public
name|int
name|getServerPort
parameter_list|()
block|{
return|return
name|serverPort
return|;
block|}
specifier|public
name|String
name|getServletPath
parameter_list|()
block|{
return|return
name|servletPath
return|;
block|}
specifier|public
name|HttpSession
name|getSession
parameter_list|()
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getSession()"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|HttpSession
name|getSession
parameter_list|(
name|boolean
name|create
parameter_list|)
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getSession(boolean)"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|Principal
name|getUserPrincipal
parameter_list|()
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".getUserPrincipal()"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|isRequestedSessionIdFromCookie
parameter_list|()
block|{
return|return
name|requestedSessionIdFromCookie
return|;
block|}
specifier|public
name|boolean
name|isRequestedSessionIdFromUrl
parameter_list|()
block|{
return|return
name|requestedSessionIdFromUrl
return|;
block|}
specifier|public
name|boolean
name|isRequestedSessionIdFromURL
parameter_list|()
block|{
return|return
name|requestedSessionIdFromUrl
return|;
block|}
specifier|public
name|boolean
name|isRequestedSessionIdValid
parameter_list|()
block|{
return|return
name|requestedSessionIdValid
return|;
block|}
specifier|public
name|boolean
name|isSecure
parameter_list|()
block|{
return|return
name|secure
return|;
block|}
specifier|public
name|boolean
name|isUserInRole
parameter_list|(
name|String
name|role
parameter_list|)
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".isUserInRole(String)"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|void
name|removeAttribute
parameter_list|(
name|String
name|name
parameter_list|)
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".removeAttribute(String)"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|void
name|setAttribute
parameter_list|(
name|String
name|name
parameter_list|,
name|Object
name|o
parameter_list|)
block|{
comment|// TODO: Implement if needed.
throw|throw
operator|new
name|NotImplementedException
argument_list|(
name|notImplemented
argument_list|(
literal|".setAttribute(String, Object)"
argument_list|)
argument_list|)
throw|;
block|}
specifier|public
name|void
name|setCharacterEncoding
parameter_list|(
name|String
name|encoding
parameter_list|)
throws|throws
name|UnsupportedEncodingException
block|{
name|this
operator|.
name|characterEncoding
operator|=
name|encoding
expr_stmt|;
block|}
specifier|public
name|void
name|setContentLength
parameter_list|(
name|int
name|contentLength
parameter_list|)
block|{
name|this
operator|.
name|contentLength
operator|=
name|contentLength
expr_stmt|;
block|}
specifier|public
name|void
name|setContentType
parameter_list|(
name|String
name|contentType
parameter_list|)
block|{
name|this
operator|.
name|contentType
operator|=
name|contentType
expr_stmt|;
block|}
specifier|public
name|void
name|setContextPath
parameter_list|(
name|String
name|contextPath
parameter_list|)
block|{
name|this
operator|.
name|contextPath
operator|=
name|contextPath
expr_stmt|;
block|}
specifier|public
name|void
name|setMethod
parameter_list|(
name|String
name|method
parameter_list|)
block|{
name|this
operator|.
name|method
operator|=
name|method
expr_stmt|;
block|}
specifier|public
name|void
name|setPathInfo
parameter_list|(
name|String
name|pathInfo
parameter_list|)
block|{
name|this
operator|.
name|pathInfo
operator|=
name|pathInfo
expr_stmt|;
block|}
specifier|public
name|void
name|setProtocol
parameter_list|(
name|String
name|protocol
parameter_list|)
block|{
name|this
operator|.
name|protocol
operator|=
name|protocol
expr_stmt|;
block|}
specifier|public
name|void
name|setQueryString
parameter_list|(
name|String
name|queryString
parameter_list|)
block|{
name|this
operator|.
name|queryString
operator|=
name|queryString
expr_stmt|;
block|}
specifier|public
name|void
name|setScheme
parameter_list|(
name|String
name|scheme
parameter_list|)
block|{
name|this
operator|.
name|scheme
operator|=
name|scheme
expr_stmt|;
block|}
specifier|public
name|void
name|setSecure
parameter_list|(
name|boolean
name|secure
parameter_list|)
block|{
name|this
operator|.
name|secure
operator|=
name|secure
expr_stmt|;
block|}
specifier|public
name|void
name|setServerName
parameter_list|(
name|String
name|serverName
parameter_list|)
block|{
name|this
operator|.
name|serverName
operator|=
name|serverName
expr_stmt|;
block|}
specifier|public
name|void
name|setServerPort
parameter_list|(
name|int
name|serverPort
parameter_list|)
block|{
name|this
operator|.
name|serverPort
operator|=
name|serverPort
expr_stmt|;
block|}
specifier|public
name|void
name|setServletPath
parameter_list|(
name|String
name|servletPath
parameter_list|)
block|{
name|this
operator|.
name|servletPath
operator|=
name|servletPath
expr_stmt|;
block|}
specifier|public
name|void
name|setUrl
parameter_list|(
name|String
name|urlString
parameter_list|)
throws|throws
name|MalformedURLException
block|{
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|urlString
argument_list|)
decl_stmt|;
name|this
operator|.
name|queryString
operator|=
name|url
operator|.
name|getQuery
argument_list|()
expr_stmt|;
name|this
operator|.
name|scheme
operator|=
name|url
operator|.
name|getProtocol
argument_list|()
expr_stmt|;
name|this
operator|.
name|serverName
operator|=
name|url
operator|.
name|getHost
argument_list|()
expr_stmt|;
name|this
operator|.
name|serverPort
operator|=
name|url
operator|.
name|getPort
argument_list|()
expr_stmt|;
name|String
name|path
init|=
name|url
operator|.
name|getPath
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|path
operator|.
name|startsWith
argument_list|(
name|this
operator|.
name|servletPath
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|MalformedURLException
argument_list|(
literal|"Unable to operate on request path ["
operator|+
name|path
operator|+
literal|"] outside of servletPath ["
operator|+
name|this
operator|.
name|servletPath
operator|+
literal|"]."
argument_list|)
throw|;
block|}
name|this
operator|.
name|pathInfo
operator|=
name|path
operator|.
name|substring
argument_list|(
name|this
operator|.
name|servletPath
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|requestURL
operator|=
operator|new
name|StringBuffer
argument_list|(
name|this
operator|.
name|pathInfo
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|notImplemented
parameter_list|(
name|String
name|msg
parameter_list|)
block|{
return|return
name|msg
operator|+
literal|" is not implemented in "
operator|+
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
return|;
block|}
class|class
name|IterEnumeration
implements|implements
name|Enumeration
block|{
specifier|private
name|Iterator
name|iter
decl_stmt|;
specifier|public
name|IterEnumeration
parameter_list|(
name|Iterator
name|it
parameter_list|)
block|{
name|this
operator|.
name|iter
operator|=
name|it
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasMoreElements
parameter_list|()
block|{
return|return
name|this
operator|.
name|iter
operator|.
name|hasNext
argument_list|()
return|;
block|}
specifier|public
name|Object
name|nextElement
parameter_list|()
block|{
return|return
name|this
operator|.
name|iter
operator|.
name|next
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

