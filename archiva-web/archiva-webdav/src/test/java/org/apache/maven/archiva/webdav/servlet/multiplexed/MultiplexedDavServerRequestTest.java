begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|webdav
operator|.
name|servlet
operator|.
name|multiplexed
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|webdav
operator|.
name|TestableHttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|webdav
operator|.
name|util
operator|.
name|WrappedRepositoryRequest
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_comment
comment|/**  * MultiplexedDavServerRequestTest   *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id: MultiplexedDavServerRequestTest.java 6940 2007-10-16 01:02:02Z joakime $  */
end_comment

begin_class
specifier|public
class|class
name|MultiplexedDavServerRequestTest
extends|extends
name|TestCase
block|{
specifier|private
name|void
name|assertMultiURL
parameter_list|(
name|String
name|expectedPrefix
parameter_list|,
name|String
name|expectedLogicalResource
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|MalformedURLException
block|{
name|TestableHttpServletRequest
name|testrequest
init|=
operator|new
name|TestableHttpServletRequest
argument_list|()
decl_stmt|;
name|testrequest
operator|.
name|setMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|testrequest
operator|.
name|setServletPath
argument_list|(
literal|"/repository"
argument_list|)
expr_stmt|;
name|testrequest
operator|.
name|setUrl
argument_list|(
name|url
argument_list|)
expr_stmt|;
name|WrappedRepositoryRequest
name|wraprequest
init|=
operator|new
name|WrappedRepositoryRequest
argument_list|(
name|testrequest
argument_list|)
decl_stmt|;
name|MultiplexedDavServerRequest
name|multirequest
init|=
operator|new
name|MultiplexedDavServerRequest
argument_list|(
name|wraprequest
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedPrefix
argument_list|,
name|multirequest
operator|.
name|getPrefix
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedLogicalResource
argument_list|,
name|multirequest
operator|.
name|getLogicalResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testNormalUsage
parameter_list|()
throws|throws
name|MalformedURLException
block|{
name|assertMultiURL
argument_list|(
literal|"corporate"
argument_list|,
literal|"/"
argument_list|,
literal|"http://localhost:9091/repository/corporate"
argument_list|)
expr_stmt|;
name|assertMultiURL
argument_list|(
literal|"corporate"
argument_list|,
literal|"/dom4j/dom4j/1.4"
argument_list|,
literal|"http://localhost:9091/repository/corporate/dom4j/dom4j/1.4"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testHacker
parameter_list|()
throws|throws
name|MalformedURLException
block|{
name|assertMultiURL
argument_list|(
literal|"corporate"
argument_list|,
literal|"/etc/passwd"
argument_list|,
literal|"http://localhost:9091/repository/corporate//etc/passwd"
argument_list|)
expr_stmt|;
comment|// Since the double ".." puts the path outside of the /corporate/, it will return "/" as a hack fallback.
name|assertMultiURL
argument_list|(
literal|"corporate"
argument_list|,
literal|"/"
argument_list|,
literal|"http://localhost:9091/repository/corporate/dom4j/../../etc/passwd"
argument_list|)
expr_stmt|;
name|assertMultiURL
argument_list|(
literal|"corporate"
argument_list|,
literal|"/"
argument_list|,
literal|"http://localhost:9091/repository/corporate/../.."
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

