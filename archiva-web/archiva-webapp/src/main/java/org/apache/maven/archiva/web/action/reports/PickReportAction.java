begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|action
operator|.
name|reports
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|com
operator|.
name|opensymphony
operator|.
name|xwork
operator|.
name|Preparable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ArchivaDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|constraints
operator|.
name|UniqueFieldConstraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|RepositoryProblem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|xwork
operator|.
name|action
operator|.
name|PlexusActionSupport
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_comment
comment|/**  * PickReportAction   *  * @author<a href="mailto:joakime@apache.org">Joakim Erdfelt</a>  * @version $Id$  *   * @plexus.component role="com.opensymphony.xwork.Action" role-hint="pickReport"  */
end_comment

begin_class
specifier|public
class|class
name|PickReportAction
extends|extends
name|PlexusActionSupport
implements|implements
name|Preparable
block|{
comment|/**      * @plexus.requirement role-hint="jdo"      */
specifier|protected
name|ArchivaDAO
name|dao
decl_stmt|;
specifier|private
name|Collection
argument_list|<
name|String
argument_list|>
name|repositoryIds
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ALL_REPOSITORIES
init|=
literal|"All Repositories"
decl_stmt|;
specifier|public
name|void
name|prepare
parameter_list|()
block|{
name|repositoryIds
operator|.
name|add
argument_list|(
name|ALL_REPOSITORIES
argument_list|)
expr_stmt|;
name|repositoryIds
operator|.
name|addAll
argument_list|(
name|dao
operator|.
name|query
argument_list|(
operator|new
name|UniqueFieldConstraint
argument_list|(
name|RepositoryProblem
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|"repositoryId"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|input
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|INPUT
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|String
argument_list|>
name|getRepositoryIds
parameter_list|()
block|{
return|return
name|repositoryIds
return|;
block|}
block|}
end_class

end_unit

