begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|startup
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ConfigurationNames
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|RepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ArchivaDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ArchivaDatabaseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|database
operator|.
name|ObjectNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ArchivaConfigurationAdaptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|logging
operator|.
name|AbstractLogEnabled
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|personality
operator|.
name|plexus
operator|.
name|lifecycle
operator|.
name|phase
operator|.
name|Initializable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|personality
operator|.
name|plexus
operator|.
name|lifecycle
operator|.
name|phase
operator|.
name|InitializationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|role
operator|.
name|RoleManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|redback
operator|.
name|role
operator|.
name|RoleManagerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|registry
operator|.
name|Registry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|registry
operator|.
name|RegistryListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * ConfigurationSynchronization   *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  *   * @plexus.component   *              role="org.apache.maven.archiva.web.startup.ConfigurationSynchronization"  *              role-hint="default"  */
end_comment

begin_class
specifier|public
class|class
name|ConfigurationSynchronization
extends|extends
name|AbstractLogEnabled
implements|implements
name|RegistryListener
implements|,
name|Initializable
block|{
comment|/**      * @plexus.requirement role-hint="jdo"      */
specifier|private
name|ArchivaDAO
name|dao
decl_stmt|;
comment|/**      * @plexus.requirement role-hint="default"      */
specifier|private
name|RoleManager
name|roleManager
decl_stmt|;
comment|/**      * @plexus.requirement      */
specifier|private
name|ArchivaConfiguration
name|archivaConfiguration
decl_stmt|;
specifier|public
name|void
name|afterConfigurationChange
parameter_list|(
name|Registry
name|registry
parameter_list|,
name|String
name|propertyName
parameter_list|,
name|Object
name|propertyValue
parameter_list|)
block|{
if|if
condition|(
name|ConfigurationNames
operator|.
name|isRepositories
argument_list|(
name|propertyName
argument_list|)
condition|)
block|{
name|synchConfiguration
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|beforeConfigurationChange
parameter_list|(
name|Registry
name|registry
parameter_list|,
name|String
name|propertyName
parameter_list|,
name|Object
name|propertyValue
parameter_list|)
block|{
comment|/* do nothing */
block|}
specifier|private
name|void
name|synchConfiguration
parameter_list|()
block|{
name|List
name|repos
init|=
name|archivaConfiguration
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getRepositories
argument_list|()
decl_stmt|;
name|Iterator
name|it
init|=
name|repos
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|RepositoryConfiguration
name|repoConfig
init|=
operator|(
name|RepositoryConfiguration
operator|)
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
try|try
block|{
try|try
block|{
name|ArchivaRepository
name|repository
init|=
name|dao
operator|.
name|getRepositoryDAO
argument_list|()
operator|.
name|getRepository
argument_list|(
name|repoConfig
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
comment|// Found repository.  Update it.
name|repository
operator|.
name|getModel
argument_list|()
operator|.
name|setName
argument_list|(
name|repoConfig
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|repository
operator|.
name|getModel
argument_list|()
operator|.
name|setUrl
argument_list|(
name|repoConfig
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
name|repository
operator|.
name|getModel
argument_list|()
operator|.
name|setLayoutName
argument_list|(
name|repoConfig
operator|.
name|getLayout
argument_list|()
argument_list|)
expr_stmt|;
name|repository
operator|.
name|getModel
argument_list|()
operator|.
name|setCreationSource
argument_list|(
literal|"configuration"
argument_list|)
expr_stmt|;
name|repository
operator|.
name|getModel
argument_list|()
operator|.
name|setReleasePolicy
argument_list|(
name|repoConfig
operator|.
name|isReleases
argument_list|()
argument_list|)
expr_stmt|;
name|repository
operator|.
name|getModel
argument_list|()
operator|.
name|setSnapshotPolicy
argument_list|(
name|repoConfig
operator|.
name|isSnapshots
argument_list|()
argument_list|)
expr_stmt|;
name|dao
operator|.
name|getRepositoryDAO
argument_list|()
operator|.
name|saveRepository
argument_list|(
name|repository
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ObjectNotFoundException
name|e
parameter_list|)
block|{
comment|// Add the repository to the database.
name|getLogger
argument_list|()
operator|.
name|info
argument_list|(
literal|"Adding repository configuration to DB: "
operator|+
name|repoConfig
argument_list|)
expr_stmt|;
name|ArchivaRepository
name|drepo
init|=
name|ArchivaConfigurationAdaptor
operator|.
name|toArchivaRepository
argument_list|(
name|repoConfig
argument_list|)
decl_stmt|;
name|drepo
operator|.
name|getModel
argument_list|()
operator|.
name|setCreationSource
argument_list|(
literal|"configuration"
argument_list|)
expr_stmt|;
name|dao
operator|.
name|getRepositoryDAO
argument_list|()
operator|.
name|saveRepository
argument_list|(
name|drepo
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|ArchivaDatabaseException
name|e
parameter_list|)
block|{
comment|// Log error.
name|getLogger
argument_list|()
operator|.
name|error
argument_list|(
literal|"Unable to add configured repositories to the database: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
comment|// manage roles for repositories
try|try
block|{
if|if
condition|(
operator|!
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
literal|"archiva-repository-observer"
argument_list|,
name|repoConfig
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
block|{
name|roleManager
operator|.
name|createTemplatedRole
argument_list|(
literal|"archiva-repository-observer"
argument_list|,
name|repoConfig
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|roleManager
operator|.
name|templatedRoleExists
argument_list|(
literal|"archiva-repository-manager"
argument_list|,
name|repoConfig
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
empty_stmt|;
block|{
name|roleManager
operator|.
name|createTemplatedRole
argument_list|(
literal|"archiva-repository-manager"
argument_list|,
name|repoConfig
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|RoleManagerException
name|e
parameter_list|)
block|{
comment|// Log error.
name|getLogger
argument_list|()
operator|.
name|error
argument_list|(
literal|"Unable to create roles for configured repositories: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|initialize
parameter_list|()
throws|throws
name|InitializationException
block|{
name|synchConfiguration
argument_list|()
expr_stmt|;
name|archivaConfiguration
operator|.
name|addChangeListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

