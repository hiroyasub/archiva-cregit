begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|startup
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_comment
comment|/**  * ArchivaVersion   *  * @author<a href="mailto:joakime@apache.org">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|ArchivaVersion
block|{
specifier|private
specifier|static
name|String
name|version
init|=
literal|null
decl_stmt|;
specifier|private
name|ArchivaVersion
parameter_list|()
block|{
block|}
specifier|public
specifier|static
name|String
name|determineVersion
parameter_list|(
name|ClassLoader
name|cloader
parameter_list|)
block|{
if|if
condition|(
name|version
operator|!=
literal|null
condition|)
block|{
return|return
name|version
return|;
block|}
comment|/* This is the search order of modules to find the version.          */
name|String
index|[]
name|modules
init|=
operator|new
name|String
index|[]
block|{
literal|"archiva-common"
block|,
literal|"archiva-configuration"
block|,
literal|"archiva-database"
block|,
literal|"archiva-consumer-api"
block|,
literal|"archiva-core-consumers"
block|,
literal|"archiva-signature-consumers"
block|,
literal|"archiva-database-consumers"
block|,
literal|"archiva-lucene-consumers"
block|,
literal|"archiva-indexer"
block|,
literal|"archiva-model"
block|,
literal|"archiva-policies"
block|,
literal|"archiva-proxy"
block|,
literal|"archiva-report-manager"
block|,
literal|"archiva-artifact-reports"
block|,
literal|"archiva-project-reports"
block|,
literal|"archiva-metadata-reports"
block|,
literal|"archiva-repository-layer"
block|,
literal|"archiva-scheduled"
block|,
literal|"archiva-webapp"
block|,
literal|"archiva-security"
block|,
literal|"archiva-applet"
block|,
literal|"archiva-xml-tools"
block|}
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|modules
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|String
name|module
init|=
name|modules
index|[
name|i
index|]
decl_stmt|;
name|URL
name|pomurl
init|=
name|findModulePom
argument_list|(
name|cloader
argument_list|,
name|module
argument_list|)
decl_stmt|;
if|if
condition|(
name|pomurl
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|InputStream
name|is
init|=
name|pomurl
operator|.
name|openStream
argument_list|()
decl_stmt|;
name|props
operator|.
name|load
argument_list|(
name|is
argument_list|)
expr_stmt|;
name|String
name|version
init|=
name|props
operator|.
name|getProperty
argument_list|(
literal|"version"
argument_list|)
decl_stmt|;
if|if
condition|(
name|StringUtils
operator|.
name|isNotBlank
argument_list|(
name|version
argument_list|)
condition|)
block|{
name|ArchivaVersion
operator|.
name|version
operator|=
name|version
expr_stmt|;
return|return
name|this
operator|.
name|version
return|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|/* do nothing */
block|}
block|}
block|}
name|version
operator|=
literal|"<Unknown Version>"
expr_stmt|;
return|return
name|version
return|;
block|}
specifier|private
specifier|static
name|URL
name|findModulePom
parameter_list|(
name|ClassLoader
name|cloader
parameter_list|,
name|String
name|module
parameter_list|)
block|{
return|return
name|cloader
operator|.
name|getResource
argument_list|(
literal|"/META-INF/maven/org.apache.maven.archiva/"
operator|+
name|module
operator|+
literal|"/pom.properties"
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|String
name|getVersion
parameter_list|()
block|{
return|return
name|version
return|;
block|}
block|}
end_class

end_unit

