begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|repository
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|evaluator
operator|.
name|EvaluatorException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|evaluator
operator|.
name|ExpressionEvaluator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|evaluator
operator|.
name|ExpressionSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|personality
operator|.
name|plexus
operator|.
name|lifecycle
operator|.
name|phase
operator|.
name|Initializable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|personality
operator|.
name|plexus
operator|.
name|lifecycle
operator|.
name|phase
operator|.
name|InitializationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|webdav
operator|.
name|DavServerComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|webdav
operator|.
name|DavServerListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_comment
comment|/**  * AuditLog - Audit Log.   *  * @author<a href="mailto:joakime@apache.org">Joakim Erdfelt</a>  * @version $Id$  *   * @plexus.component role="org.apache.maven.archiva.web.repository.AuditLog"  */
end_comment

begin_class
specifier|public
class|class
name|AuditLog
implements|implements
name|DavServerListener
implements|,
name|Initializable
block|{
specifier|public
specifier|static
specifier|final
name|String
name|ROLE
init|=
name|AuditLog
operator|.
name|class
operator|.
name|getName
argument_list|()
decl_stmt|;
comment|/**      * @plexus.configuration default-value="${appserver.base}/logs/audit.log"      */
specifier|private
name|String
name|logFilename
decl_stmt|;
comment|/**      * @plexus.configuration default-value="yyyy-MM-dd HH:mm:ss"      */
specifier|private
name|String
name|timestampFormat
decl_stmt|;
comment|/**      * @plexus.requirement role-hint="default"      */
specifier|private
name|ExpressionEvaluator
name|expressionEvaluator
decl_stmt|;
comment|/**      * @plexus.requirement role-hint="sysprops"      */
specifier|private
name|ExpressionSource
name|syspropExprSource
decl_stmt|;
specifier|private
name|File
name|logFile
decl_stmt|;
specifier|private
name|PrintWriter
name|writer
decl_stmt|;
specifier|private
name|SimpleDateFormat
name|timestamp
decl_stmt|;
specifier|private
name|String
name|getServerId
parameter_list|(
name|DavServerComponent
name|server
parameter_list|)
block|{
return|return
literal|"["
operator|+
name|server
operator|.
name|getPrefix
argument_list|()
operator|+
literal|"]"
return|;
block|}
specifier|public
name|void
name|serverCollectionCreated
parameter_list|(
name|DavServerComponent
name|server
parameter_list|,
name|String
name|resource
parameter_list|)
block|{
name|log
argument_list|(
name|getServerId
argument_list|(
name|server
argument_list|)
operator|+
literal|" Created Directory \""
operator|+
name|resource
operator|+
literal|"\""
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|serverCollectionRemoved
parameter_list|(
name|DavServerComponent
name|server
parameter_list|,
name|String
name|resource
parameter_list|)
block|{
name|log
argument_list|(
name|getServerId
argument_list|(
name|server
argument_list|)
operator|+
literal|" Removed Directory \""
operator|+
name|resource
operator|+
literal|"\""
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|serverResourceCreated
parameter_list|(
name|DavServerComponent
name|server
parameter_list|,
name|String
name|resource
parameter_list|)
block|{
name|log
argument_list|(
name|getServerId
argument_list|(
name|server
argument_list|)
operator|+
literal|" Created File \""
operator|+
name|resource
operator|+
literal|"\""
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|serverResourceModified
parameter_list|(
name|DavServerComponent
name|server
parameter_list|,
name|String
name|resource
parameter_list|)
block|{
name|log
argument_list|(
name|getServerId
argument_list|(
name|server
argument_list|)
operator|+
literal|" Modified Existing File \""
operator|+
name|resource
operator|+
literal|"\""
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|serverResourceRemoved
parameter_list|(
name|DavServerComponent
name|server
parameter_list|,
name|String
name|resource
parameter_list|)
block|{
name|log
argument_list|(
name|getServerId
argument_list|(
name|server
argument_list|)
operator|+
literal|" Removed File \""
operator|+
name|resource
operator|+
literal|"\""
argument_list|)
expr_stmt|;
block|}
comment|/**      * Log the message to the file.      *       * @param msg the message.      */
specifier|public
name|void
name|log
parameter_list|(
name|String
name|msg
parameter_list|)
block|{
comment|// Synchronize to prevent threading issues.
synchronized|synchronized
init|(
name|writer
init|)
block|{
name|writer
operator|.
name|println
argument_list|(
name|timestamp
operator|.
name|format
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
operator|+
literal|" - "
operator|+
name|msg
argument_list|)
expr_stmt|;
comment|// Manually flush buffer to ensure data is written to disk.
name|writer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|initialize
parameter_list|()
throws|throws
name|InitializationException
block|{
name|String
name|actualFilename
decl_stmt|;
try|try
block|{
name|expressionEvaluator
operator|.
name|addExpressionSource
argument_list|(
name|syspropExprSource
argument_list|)
expr_stmt|;
name|actualFilename
operator|=
name|expressionEvaluator
operator|.
name|expand
argument_list|(
name|this
operator|.
name|logFilename
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EvaluatorException
name|e1
parameter_list|)
block|{
name|actualFilename
operator|=
name|this
operator|.
name|logFilename
expr_stmt|;
block|}
name|this
operator|.
name|logFile
operator|=
operator|new
name|File
argument_list|(
name|actualFilename
argument_list|)
expr_stmt|;
name|File
name|parentDir
init|=
name|logFile
operator|.
name|getParentFile
argument_list|()
decl_stmt|;
if|if
condition|(
name|parentDir
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|parentDir
operator|.
name|exists
argument_list|()
condition|)
block|{
name|parentDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|StringUtils
operator|.
name|isBlank
argument_list|(
name|timestampFormat
argument_list|)
condition|)
block|{
name|timestampFormat
operator|=
literal|"yyyy-MM-dd HH:mm:ss"
expr_stmt|;
block|}
name|timestamp
operator|=
operator|new
name|SimpleDateFormat
argument_list|(
name|timestampFormat
argument_list|)
expr_stmt|;
try|try
block|{
name|writer
operator|=
operator|new
name|PrintWriter
argument_list|(
operator|new
name|FileWriter
argument_list|(
name|logFile
argument_list|)
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"Logging Initialized."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|InitializationException
argument_list|(
literal|"Unable to initialize log file writer: "
operator|+
name|logFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

