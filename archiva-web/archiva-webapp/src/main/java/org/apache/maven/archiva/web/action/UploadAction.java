begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|action
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|xwork
operator|.
name|action
operator|.
name|PlexusActionSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_comment
comment|// import org.apache.maven.archiva.configuration.ArchivaConfiguration;
end_comment

begin_comment
comment|// import org.apache.maven.archiva.configuration.RepositoryConfiguration;
end_comment

begin_comment
comment|// import org.apache.maven.archiva.repository.layout.BidirectionalRepositoryLayoutFactory;
end_comment

begin_comment
comment|// import org.apache.maven.archiva.repository.layout.BidirectionalRepositoryLayout;
end_comment

begin_comment
comment|// import org.apache.maven.archiva.repository.layout.LayoutException;
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaArtifact
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_comment
comment|/**  * Upload an artifact.  *   * @author Wendy Smoak  * @plexus.component role="com.opensymphony.xwork.Action" role-hint="uploadAction"  */
end_comment

begin_class
specifier|public
class|class
name|UploadAction
extends|extends
name|PlexusActionSupport
block|{
specifier|private
name|String
name|groupId
decl_stmt|;
specifier|private
name|String
name|artifactId
decl_stmt|;
specifier|private
name|String
name|version
decl_stmt|;
specifier|private
name|String
name|packaging
decl_stmt|;
specifier|private
name|String
name|classifier
decl_stmt|;
specifier|private
name|File
name|file
decl_stmt|;
specifier|private
name|String
name|contentType
decl_stmt|;
specifier|private
name|String
name|filename
decl_stmt|;
specifier|private
name|String
name|repositoryId
decl_stmt|;
comment|/**      * @plexus.requirement role-hint="default"      */
comment|// private ArchivaConfiguration configuration;
comment|/**      * @plexus.requirement role-hint="default"      */
comment|// private BidirectionalRepositoryLayoutFactory layoutFactory;
specifier|public
name|void
name|setUpload
parameter_list|(
name|File
name|file
parameter_list|)
block|{
name|this
operator|.
name|file
operator|=
name|file
expr_stmt|;
block|}
specifier|public
name|void
name|setUploadContentType
parameter_list|(
name|String
name|contentType
parameter_list|)
block|{
name|this
operator|.
name|contentType
operator|=
name|contentType
expr_stmt|;
block|}
specifier|public
name|void
name|setUploadFileName
parameter_list|(
name|String
name|filename
parameter_list|)
block|{
name|this
operator|.
name|filename
operator|=
name|filename
expr_stmt|;
block|}
specifier|public
name|String
name|getGroupId
parameter_list|()
block|{
return|return
name|groupId
return|;
block|}
specifier|public
name|void
name|setGroupId
parameter_list|(
name|String
name|groupId
parameter_list|)
block|{
name|this
operator|.
name|groupId
operator|=
name|groupId
expr_stmt|;
block|}
specifier|public
name|String
name|getArtifactId
parameter_list|()
block|{
return|return
name|artifactId
return|;
block|}
specifier|public
name|void
name|setArtifactId
parameter_list|(
name|String
name|artifactId
parameter_list|)
block|{
name|this
operator|.
name|artifactId
operator|=
name|artifactId
expr_stmt|;
block|}
specifier|public
name|String
name|getVersion
parameter_list|()
block|{
return|return
name|version
return|;
block|}
specifier|public
name|void
name|setVersion
parameter_list|(
name|String
name|version
parameter_list|)
block|{
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
block|}
specifier|public
name|String
name|getPackaging
parameter_list|()
block|{
return|return
name|packaging
return|;
block|}
specifier|public
name|void
name|setPackaging
parameter_list|(
name|String
name|packaging
parameter_list|)
block|{
name|this
operator|.
name|packaging
operator|=
name|packaging
expr_stmt|;
block|}
specifier|public
name|String
name|getClassifier
parameter_list|()
block|{
return|return
name|classifier
return|;
block|}
specifier|public
name|void
name|setClassifier
parameter_list|(
name|String
name|classifier
parameter_list|)
block|{
name|this
operator|.
name|classifier
operator|=
name|classifier
expr_stmt|;
block|}
specifier|public
name|String
name|getRepositoryId
parameter_list|()
block|{
return|return
name|repositoryId
return|;
block|}
specifier|public
name|void
name|setRepositoryId
parameter_list|(
name|String
name|repositoryId
parameter_list|)
block|{
name|this
operator|.
name|repositoryId
operator|=
name|repositoryId
expr_stmt|;
block|}
specifier|public
name|String
name|upload
parameter_list|()
block|{
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"upload"
argument_list|)
expr_stmt|;
return|return
name|SUCCESS
return|;
block|}
specifier|public
name|String
name|doUpload
parameter_list|()
comment|// throws LayoutException
block|{
comment|// TODO: adapt to changes in RepositoryConfiguration from the MRM-462 branch
comment|// RepositoryConfiguration rc = configuration.getConfiguration().findRepositoryById( repositoryId );
comment|// String layout = rc.getLayout();
comment|// String url = rc.getUrl();
comment|// ArchivaArtifact artifact = new ArchivaArtifact( groupId, artifactId, version, classifier, packaging );
comment|// BidirectionalRepositoryLayout repositoryLayout = layoutFactory.getLayout( layout );
comment|// output from getLogger().debug(...) not appearing in logs, so...
comment|// System.out.println( "doUpload, file: " + file.getAbsolutePath() );
comment|// System.out.println( "doUpload, path: " + repositoryLayout.toPath( artifact ) );
return|return
name|SUCCESS
return|;
block|}
block|}
end_class

end_unit

