begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|repository
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FilenameUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|SystemUtils
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequestWrapper
import|;
end_import

begin_comment
comment|/**  * PolicingServletRequest is for policing the incoming request for naughty bits, such as a double slashes,  * or paths that include "/../" type syntax, or query string.  Stripping out all things that are   * not appropriate.   *  * @author<a href="mailto:joakime@apache.org">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|PolicingServletRequest
extends|extends
name|HttpServletRequestWrapper
implements|implements
name|HttpServletRequest
block|{
specifier|private
name|String
name|fixedPathInfo
decl_stmt|;
specifier|public
name|PolicingServletRequest
parameter_list|(
name|HttpServletRequest
name|originalRequest
parameter_list|)
block|{
name|super
argument_list|(
name|originalRequest
argument_list|)
expr_stmt|;
name|fixedPathInfo
operator|=
name|originalRequest
operator|.
name|getPathInfo
argument_list|()
expr_stmt|;
if|if
condition|(
name|StringUtils
operator|.
name|isNotBlank
argument_list|(
name|fixedPathInfo
argument_list|)
condition|)
block|{
comment|/* Perform a simple security normalization of the requested pathinfo.              * This is to cleanup requests that use "/../" or "///" type hacks.              */
name|fixedPathInfo
operator|=
name|FilenameUtils
operator|.
name|normalize
argument_list|(
name|fixedPathInfo
argument_list|)
expr_stmt|;
if|if
condition|(
name|SystemUtils
operator|.
name|IS_OS_WINDOWS
condition|)
block|{
comment|// Adjust paths back to unix& url format expectations (when on windows)
name|fixedPathInfo
operator|=
name|FilenameUtils
operator|.
name|separatorsToUnix
argument_list|(
name|fixedPathInfo
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|getPathInfo
parameter_list|()
block|{
return|return
name|fixedPathInfo
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getQueryString
parameter_list|()
block|{
comment|// No query string allowed.
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

