begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|discovery
package|;
end_package

begin_comment
comment|/*  * Copyright 2005-2006 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|factory
operator|.
name|ArtifactFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepositoryFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|layout
operator|.
name|ArtifactRepositoryLayout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|PlexusTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|component
operator|.
name|repository
operator|.
name|exception
operator|.
name|ComponentLookupException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_comment
comment|/**  * @author Edwin Punzalan  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractArtifactDiscovererTest
extends|extends
name|PlexusTestCase
block|{
specifier|protected
name|ArtifactDiscoverer
name|discoverer
decl_stmt|;
specifier|private
name|ArtifactFactory
name|factory
decl_stmt|;
specifier|protected
name|ArtifactRepository
name|repository
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|TEST_OPERATION
init|=
literal|"test"
decl_stmt|;
specifier|protected
specifier|abstract
name|String
name|getLayout
parameter_list|()
function_decl|;
specifier|protected
specifier|abstract
name|File
name|getRepositoryFile
parameter_list|()
function_decl|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|discoverer
operator|=
operator|(
name|ArtifactDiscoverer
operator|)
name|lookup
argument_list|(
name|ArtifactDiscoverer
operator|.
name|ROLE
argument_list|,
name|getLayout
argument_list|()
argument_list|)
expr_stmt|;
name|factory
operator|=
operator|(
name|ArtifactFactory
operator|)
name|lookup
argument_list|(
name|ArtifactFactory
operator|.
name|ROLE
argument_list|)
expr_stmt|;
name|repository
operator|=
name|getRepository
argument_list|()
expr_stmt|;
name|removeTimestampMetadata
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|ArtifactRepository
name|getRepository
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|basedir
init|=
name|getRepositoryFile
argument_list|()
decl_stmt|;
name|ArtifactRepositoryFactory
name|factory
init|=
operator|(
name|ArtifactRepositoryFactory
operator|)
name|lookup
argument_list|(
name|ArtifactRepositoryFactory
operator|.
name|ROLE
argument_list|)
decl_stmt|;
name|ArtifactRepositoryLayout
name|layout
init|=
operator|(
name|ArtifactRepositoryLayout
operator|)
name|lookup
argument_list|(
name|ArtifactRepositoryLayout
operator|.
name|ROLE
argument_list|,
name|getLayout
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|factory
operator|.
name|createArtifactRepository
argument_list|(
literal|"discoveryRepo"
argument_list|,
literal|"file://"
operator|+
name|basedir
argument_list|,
name|layout
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|protected
name|Artifact
name|createArtifact
parameter_list|(
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|)
block|{
return|return
name|factory
operator|.
name|createArtifact
argument_list|(
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
literal|null
argument_list|,
literal|"jar"
argument_list|)
return|;
block|}
specifier|protected
name|Artifact
name|createArtifact
parameter_list|(
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|String
name|type
parameter_list|)
block|{
return|return
name|factory
operator|.
name|createArtifact
argument_list|(
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
literal|null
argument_list|,
name|type
argument_list|)
return|;
block|}
specifier|protected
name|Artifact
name|createArtifact
parameter_list|(
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|classifier
parameter_list|)
block|{
return|return
name|factory
operator|.
name|createArtifactWithClassifier
argument_list|(
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
name|type
argument_list|,
name|classifier
argument_list|)
return|;
block|}
specifier|public
name|void
name|testUpdatedInRepository
parameter_list|()
throws|throws
name|ComponentLookupException
throws|,
name|DiscovererException
throws|,
name|ParseException
throws|,
name|IOException
block|{
comment|// Set repository time to 1-1-2000, a time in the distant past so definitely updated
name|discoverer
operator|.
name|setLastCheckedTime
argument_list|(
name|repository
argument_list|,
literal|"update"
argument_list|,
operator|new
name|SimpleDateFormat
argument_list|(
literal|"yyyy-MM-dd"
argument_list|,
name|Locale
operator|.
name|US
argument_list|)
operator|.
name|parse
argument_list|(
literal|"2000-01-01"
argument_list|)
argument_list|)
expr_stmt|;
name|List
name|artifacts
init|=
name|discoverer
operator|.
name|discoverArtifacts
argument_list|(
name|repository
argument_list|,
literal|"update"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Check artifacts not null"
argument_list|,
name|artifacts
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Check included"
argument_list|,
name|artifacts
operator|.
name|contains
argument_list|(
name|createArtifact
argument_list|(
literal|"org.apache.maven.update"
argument_list|,
literal|"test-updated"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// try again with the updated timestamp
name|artifacts
operator|=
name|discoverer
operator|.
name|discoverArtifacts
argument_list|(
name|repository
argument_list|,
literal|"update"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Check artifacts not null"
argument_list|,
name|artifacts
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Check not included"
argument_list|,
name|artifacts
operator|.
name|contains
argument_list|(
name|createArtifact
argument_list|(
literal|"org.apache.maven.update"
argument_list|,
literal|"test-updated"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testNotUpdatedInRepository
parameter_list|()
throws|throws
name|ComponentLookupException
throws|,
name|DiscovererException
throws|,
name|IOException
block|{
comment|// Set repository time to now, which is after any artifacts, so definitely not updated
name|discoverer
operator|.
name|setLastCheckedTime
argument_list|(
name|repository
argument_list|,
literal|"update"
argument_list|,
operator|new
name|Date
argument_list|()
argument_list|)
expr_stmt|;
name|List
name|artifacts
init|=
name|discoverer
operator|.
name|discoverArtifacts
argument_list|(
name|repository
argument_list|,
literal|"update"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Check artifacts not null"
argument_list|,
name|artifacts
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Check not included"
argument_list|,
name|artifacts
operator|.
name|contains
argument_list|(
name|createArtifact
argument_list|(
literal|"org.apache.maven.update"
argument_list|,
literal|"test-not-updated"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testNotUpdatedInRepositoryForcedDiscovery
parameter_list|()
throws|throws
name|ComponentLookupException
throws|,
name|DiscovererException
throws|,
name|IOException
block|{
name|discoverer
operator|.
name|resetLastCheckedTime
argument_list|(
name|repository
argument_list|,
literal|"update"
argument_list|)
expr_stmt|;
name|List
name|artifacts
init|=
name|discoverer
operator|.
name|discoverArtifacts
argument_list|(
name|repository
argument_list|,
literal|"update"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Check artifacts not null"
argument_list|,
name|artifacts
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Check included"
argument_list|,
name|artifacts
operator|.
name|contains
argument_list|(
name|createArtifact
argument_list|(
literal|"org.apache.maven.update"
argument_list|,
literal|"test-not-updated"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// try again with the updated timestamp
name|artifacts
operator|=
name|discoverer
operator|.
name|discoverArtifacts
argument_list|(
name|repository
argument_list|,
literal|"update"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Check artifacts not null"
argument_list|,
name|artifacts
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Check not included"
argument_list|,
name|artifacts
operator|.
name|contains
argument_list|(
name|createArtifact
argument_list|(
literal|"org.apache.maven.update"
argument_list|,
literal|"test-not-updated"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testNotUpdatedInRepositoryForcedDiscoveryMetadataAlreadyExists
parameter_list|()
throws|throws
name|ComponentLookupException
throws|,
name|DiscovererException
throws|,
name|IOException
block|{
name|discoverer
operator|.
name|setLastCheckedTime
argument_list|(
name|repository
argument_list|,
literal|"update"
argument_list|,
operator|new
name|Date
argument_list|()
argument_list|)
expr_stmt|;
name|discoverer
operator|.
name|resetLastCheckedTime
argument_list|(
name|repository
argument_list|,
literal|"update"
argument_list|)
expr_stmt|;
name|List
name|artifacts
init|=
name|discoverer
operator|.
name|discoverArtifacts
argument_list|(
name|repository
argument_list|,
literal|"update"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Check artifacts not null"
argument_list|,
name|artifacts
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Check included"
argument_list|,
name|artifacts
operator|.
name|contains
argument_list|(
name|createArtifact
argument_list|(
literal|"org.apache.maven.update"
argument_list|,
literal|"test-not-updated"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// try again with the updated timestamp
name|artifacts
operator|=
name|discoverer
operator|.
name|discoverArtifacts
argument_list|(
name|repository
argument_list|,
literal|"update"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Check artifacts not null"
argument_list|,
name|artifacts
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Check not included"
argument_list|,
name|artifacts
operator|.
name|contains
argument_list|(
name|createArtifact
argument_list|(
literal|"org.apache.maven.update"
argument_list|,
literal|"test-not-updated"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testNotUpdatedInRepositoryForcedDiscoveryOtherMetadataAlreadyExists
parameter_list|()
throws|throws
name|ComponentLookupException
throws|,
name|DiscovererException
throws|,
name|IOException
block|{
name|discoverer
operator|.
name|setLastCheckedTime
argument_list|(
name|repository
argument_list|,
literal|"test"
argument_list|,
operator|new
name|Date
argument_list|()
argument_list|)
expr_stmt|;
name|discoverer
operator|.
name|resetLastCheckedTime
argument_list|(
name|repository
argument_list|,
literal|"update"
argument_list|)
expr_stmt|;
name|List
name|artifacts
init|=
name|discoverer
operator|.
name|discoverArtifacts
argument_list|(
name|repository
argument_list|,
literal|"update"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Check artifacts not null"
argument_list|,
name|artifacts
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Check included"
argument_list|,
name|artifacts
operator|.
name|contains
argument_list|(
name|createArtifact
argument_list|(
literal|"org.apache.maven.update"
argument_list|,
literal|"test-not-updated"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// try again with the updated timestamp
name|artifacts
operator|=
name|discoverer
operator|.
name|discoverArtifacts
argument_list|(
name|repository
argument_list|,
literal|"update"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Check artifacts not null"
argument_list|,
name|artifacts
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Check not included"
argument_list|,
name|artifacts
operator|.
name|contains
argument_list|(
name|createArtifact
argument_list|(
literal|"org.apache.maven.update"
argument_list|,
literal|"test-not-updated"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testNoRepositoryMetadata
parameter_list|()
throws|throws
name|ComponentLookupException
throws|,
name|DiscovererException
throws|,
name|ParseException
throws|,
name|IOException
block|{
name|removeTimestampMetadata
argument_list|()
expr_stmt|;
comment|// should find all
name|List
name|artifacts
init|=
name|discoverer
operator|.
name|discoverArtifacts
argument_list|(
name|repository
argument_list|,
name|TEST_OPERATION
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Check artifacts not null"
argument_list|,
name|artifacts
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Check included"
argument_list|,
name|artifacts
operator|.
name|contains
argument_list|(
name|createArtifact
argument_list|(
literal|"org.apache.maven.update"
argument_list|,
literal|"test-updated"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|removeTimestampMetadata
parameter_list|()
block|{
comment|// remove the metadata that tracks time
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|repository
operator|.
name|getBasedir
argument_list|()
argument_list|,
literal|"maven-metadata.xml"
argument_list|)
decl_stmt|;
name|file
operator|.
name|delete
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
name|file
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

