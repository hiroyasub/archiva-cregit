begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|proxy
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaRepositoryMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ProjectReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|SnapshotVersion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|policies
operator|.
name|CachedFailuresPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|policies
operator|.
name|ChecksumPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|policies
operator|.
name|ReleasesPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|policies
operator|.
name|SnapshotsPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|metadata
operator|.
name|RepositoryMetadataException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|metadata
operator|.
name|RepositoryMetadataReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|metadata
operator|.
name|RepositoryMetadataWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|DateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TimeZone
import|;
end_import

begin_comment
comment|/**  * MetadataTransferTest   *  * @author Brett Porter  * @author<a href="mailto:joakime@apache.org">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|MetadataTransferTest
extends|extends
name|AbstractProxyTestCase
block|{
specifier|public
name|void
name|testGetMetadataNotPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
literal|"org/apache/maven/test/dummy-artifact/1.0/maven-metadata.xml"
decl_stmt|;
name|File
name|expectedFile
init|=
operator|new
name|File
argument_list|(
name|managedDefaultDir
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|ProjectReference
name|metadata
init|=
name|createMetadataReference
argument_list|(
literal|"default"
argument_list|,
name|path
argument_list|)
decl_stmt|;
comment|// Configure Connector (usually done within archiva.xml configuration)
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
name|ID_PROXIED1
argument_list|,
name|ChecksumPolicy
operator|.
name|FIX
argument_list|,
name|ReleasesPolicy
operator|.
name|IGNORED
argument_list|,
name|SnapshotsPolicy
operator|.
name|IGNORED
argument_list|,
name|CachedFailuresPolicy
operator|.
name|IGNORED
argument_list|)
expr_stmt|;
name|File
name|downloadedFile
init|=
name|proxyHandler
operator|.
name|fetchFromProxies
argument_list|(
name|managedDefaultRepository
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
name|assertNotDownloaded
argument_list|(
name|downloadedFile
argument_list|)
expr_stmt|;
name|assertNoTempFiles
argument_list|(
name|expectedFile
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|getExpectedMetadata
parameter_list|(
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|)
throws|throws
name|RepositoryMetadataException
block|{
return|return
name|getExpectedMetadata
argument_list|(
name|artifactId
argument_list|,
name|version
argument_list|,
operator|(
name|SnapshotVersion
operator|)
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
name|TimeZone
name|UTC_TIMEZONE
init|=
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"UTC"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|String
name|getLastUpdatedTimestamp
parameter_list|(
name|File
name|file
parameter_list|)
block|{
name|DateFormat
name|fmt
init|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"yyyyMMddHHmmss"
argument_list|,
name|Locale
operator|.
name|US
argument_list|)
decl_stmt|;
name|fmt
operator|.
name|setTimeZone
argument_list|(
name|UTC_TIMEZONE
argument_list|)
expr_stmt|;
return|return
name|fmt
operator|.
name|format
argument_list|(
operator|new
name|Date
argument_list|(
name|file
operator|.
name|lastModified
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|String
name|getExpectedMetadata
parameter_list|(
name|String
name|artifactId
parameter_list|,
name|String
index|[]
name|availableVersions
parameter_list|,
name|File
name|file
parameter_list|)
throws|throws
name|RepositoryMetadataException
block|{
return|return
name|getExpectedMetadata
argument_list|(
name|artifactId
argument_list|,
literal|null
argument_list|,
name|availableVersions
argument_list|,
name|file
argument_list|)
return|;
block|}
specifier|private
name|SnapshotVersion
name|getSnapshotVersion
parameter_list|(
name|String
name|timestamp
parameter_list|,
name|int
name|buildNumber
parameter_list|)
block|{
name|SnapshotVersion
name|snapshot
init|=
operator|new
name|SnapshotVersion
argument_list|()
decl_stmt|;
name|snapshot
operator|.
name|setTimestamp
argument_list|(
name|timestamp
argument_list|)
expr_stmt|;
name|snapshot
operator|.
name|setBuildNumber
argument_list|(
name|buildNumber
argument_list|)
expr_stmt|;
return|return
name|snapshot
return|;
block|}
specifier|private
name|String
name|getExpectedMetadata
parameter_list|(
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|SnapshotVersion
name|snapshot
parameter_list|,
name|File
name|file
parameter_list|)
throws|throws
name|RepositoryMetadataException
block|{
name|StringWriter
name|expectedContents
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|ArchivaRepositoryMetadata
name|m
init|=
operator|new
name|ArchivaRepositoryMetadata
argument_list|()
decl_stmt|;
name|m
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.maven.test"
argument_list|)
expr_stmt|;
name|m
operator|.
name|setArtifactId
argument_list|(
name|artifactId
argument_list|)
expr_stmt|;
name|m
operator|.
name|setVersion
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|m
operator|.
name|setSnapshotVersion
argument_list|(
name|snapshot
argument_list|)
expr_stmt|;
if|if
condition|(
name|file
operator|!=
literal|null
condition|)
block|{
name|m
operator|.
name|setLastUpdated
argument_list|(
name|getLastUpdatedTimestamp
argument_list|(
name|file
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|m
operator|.
name|setModelEncoding
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|RepositoryMetadataWriter
operator|.
name|write
argument_list|(
name|m
argument_list|,
name|expectedContents
argument_list|)
expr_stmt|;
return|return
name|expectedContents
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|private
name|String
name|getExpectedMetadata
parameter_list|(
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|String
index|[]
name|availableVersions
parameter_list|,
name|File
name|file
parameter_list|)
throws|throws
name|RepositoryMetadataException
block|{
name|StringWriter
name|expectedContents
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|ArchivaRepositoryMetadata
name|m
init|=
operator|new
name|ArchivaRepositoryMetadata
argument_list|()
decl_stmt|;
name|m
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.maven.test"
argument_list|)
expr_stmt|;
name|m
operator|.
name|setArtifactId
argument_list|(
name|artifactId
argument_list|)
expr_stmt|;
name|m
operator|.
name|setVersion
argument_list|(
name|version
argument_list|)
expr_stmt|;
if|if
condition|(
name|file
operator|!=
literal|null
condition|)
block|{
name|m
operator|.
name|setLastUpdated
argument_list|(
name|getLastUpdatedTimestamp
argument_list|(
name|file
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|availableVersions
operator|!=
literal|null
condition|)
block|{
name|m
operator|.
name|getAvailableVersions
argument_list|()
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|availableVersions
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|m
operator|.
name|setModelEncoding
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|RepositoryMetadataWriter
operator|.
name|write
argument_list|(
name|m
argument_list|,
name|expectedContents
argument_list|)
expr_stmt|;
return|return
name|expectedContents
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|private
name|void
name|assertMetadataEquals
parameter_list|(
name|File
name|expectedFile
parameter_list|,
name|File
name|downloadedFile
parameter_list|,
name|String
name|expectedMetadata
parameter_list|)
throws|throws
name|Exception
block|{
name|assertNotNull
argument_list|(
literal|"Expected File should not be null."
argument_list|,
name|expectedFile
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Downloaded File should not be null."
argument_list|,
name|downloadedFile
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Check downloaded file exists."
argument_list|,
name|downloadedFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Check file path matches."
argument_list|,
name|expectedFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|downloadedFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|StringWriter
name|actualContents
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|RepositoryMetadataReader
name|metadataReader
init|=
operator|new
name|RepositoryMetadataReader
argument_list|()
decl_stmt|;
name|ArchivaRepositoryMetadata
name|metadata
init|=
name|metadataReader
operator|.
name|read
argument_list|(
name|downloadedFile
argument_list|)
decl_stmt|;
name|RepositoryMetadataWriter
operator|.
name|write
argument_list|(
name|metadata
argument_list|,
name|actualContents
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Check file contents."
argument_list|,
name|expectedMetadata
argument_list|,
name|actualContents
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetMetadataProxied
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
literal|"org/apache/maven/test/get-default-metadata/1.0/maven-metadata.xml"
decl_stmt|;
name|File
name|expectedFile
init|=
operator|new
name|File
argument_list|(
name|managedDefaultDir
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|ProjectReference
name|metadata
init|=
name|createMetadataReference
argument_list|(
literal|"default"
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|expectedFile
operator|.
name|getParentFile
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|expectedFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// Configure Connector (usually done within archiva.xml configuration)
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
name|ID_PROXIED1
argument_list|,
name|ChecksumPolicy
operator|.
name|FIX
argument_list|,
name|ReleasesPolicy
operator|.
name|IGNORED
argument_list|,
name|SnapshotsPolicy
operator|.
name|IGNORED
argument_list|,
name|CachedFailuresPolicy
operator|.
name|IGNORED
argument_list|)
expr_stmt|;
name|File
name|downloadedFile
init|=
name|proxyHandler
operator|.
name|fetchFromProxies
argument_list|(
name|managedDefaultRepository
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
name|String
name|expectedMetadata
init|=
name|getExpectedMetadata
argument_list|(
literal|"get-default-metadata"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|assertMetadataEquals
argument_list|(
name|expectedFile
argument_list|,
name|downloadedFile
argument_list|,
name|expectedMetadata
argument_list|)
expr_stmt|;
name|assertNoTempFiles
argument_list|(
name|expectedFile
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetMetadataMergeRepos
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
literal|"org/apache/maven/test/get-merged-metadata/maven-metadata.xml"
decl_stmt|;
name|File
name|expectedFile
init|=
operator|new
name|File
argument_list|(
name|managedDefaultDir
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|ProjectReference
name|metadata
init|=
name|createMetadataReference
argument_list|(
literal|"default"
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|expectedFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// Configure Connector (usually done within archiva.xml configuration)
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
name|ID_PROXIED1
argument_list|,
name|ChecksumPolicy
operator|.
name|FIX
argument_list|,
name|ReleasesPolicy
operator|.
name|IGNORED
argument_list|,
name|SnapshotsPolicy
operator|.
name|IGNORED
argument_list|,
name|CachedFailuresPolicy
operator|.
name|IGNORED
argument_list|)
expr_stmt|;
name|File
name|downloadedFile
init|=
name|proxyHandler
operator|.
name|fetchFromProxies
argument_list|(
name|managedDefaultRepository
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
name|String
name|expectedMetadata
init|=
name|getExpectedMetadata
argument_list|(
literal|"get-merged-metadata"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"0.9"
block|,
literal|"1.0"
block|,
literal|"2.0"
block|,
literal|"3.0"
block|,
literal|"5.0"
block|,
literal|"4.0"
block|}
argument_list|,
name|downloadedFile
argument_list|)
decl_stmt|;
name|assertMetadataEquals
argument_list|(
name|expectedFile
argument_list|,
name|downloadedFile
argument_list|,
name|expectedMetadata
argument_list|)
expr_stmt|;
name|assertNoTempFiles
argument_list|(
name|expectedFile
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetMetadataRemovedFromProxies
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
literal|"org/apache/maven/test/get-removed-metadata/1.0/maven-metadata.xml"
decl_stmt|;
name|File
name|expectedFile
init|=
operator|new
name|File
argument_list|(
name|managedDefaultDir
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|ProjectReference
name|metadata
init|=
name|createMetadataReference
argument_list|(
literal|"default"
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|expectedFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// Configure Connector (usually done within archiva.xml configuration)
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
literal|"proxied1"
argument_list|,
name|ChecksumPolicy
operator|.
name|FIX
argument_list|,
name|ReleasesPolicy
operator|.
name|IGNORED
argument_list|,
name|SnapshotsPolicy
operator|.
name|IGNORED
argument_list|,
name|CachedFailuresPolicy
operator|.
name|IGNORED
argument_list|)
expr_stmt|;
name|File
name|downloadedFile
init|=
name|proxyHandler
operator|.
name|fetchFromProxies
argument_list|(
name|managedDefaultRepository
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
name|File
name|proxiedFile
init|=
operator|new
name|File
argument_list|(
name|REPOPATH_PROXIED1
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|assertFileEquals
argument_list|(
name|expectedFile
argument_list|,
name|downloadedFile
argument_list|,
name|proxiedFile
argument_list|)
expr_stmt|;
name|assertNoTempFiles
argument_list|(
name|expectedFile
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetReleaseMetadataNotExpired
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
literal|"org/apache/maven/test/get-updated-metadata/maven-metadata.xml"
decl_stmt|;
name|File
name|expectedFile
init|=
operator|new
name|File
argument_list|(
name|managedDefaultDir
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|ProjectReference
name|metadata
init|=
name|createMetadataReference
argument_list|(
literal|"default"
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|expectedFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
operator|new
name|File
argument_list|(
name|expectedFile
operator|.
name|getParentFile
argument_list|()
argument_list|,
literal|".metadata-proxied1"
argument_list|)
operator|.
name|setLastModified
argument_list|(
name|getPastDate
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// Configure Connector (usually done within archiva.xml configuration)
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
literal|"proxied1"
argument_list|,
name|ChecksumPolicy
operator|.
name|FIX
argument_list|,
name|ReleasesPolicy
operator|.
name|IGNORED
argument_list|,
name|SnapshotsPolicy
operator|.
name|IGNORED
argument_list|,
name|CachedFailuresPolicy
operator|.
name|IGNORED
argument_list|)
expr_stmt|;
name|File
name|downloadedFile
init|=
name|proxyHandler
operator|.
name|fetchFromProxies
argument_list|(
name|managedDefaultRepository
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
name|File
name|proxiedFile
init|=
operator|new
name|File
argument_list|(
name|REPOPATH_PROXIED1
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|assertFileEquals
argument_list|(
name|expectedFile
argument_list|,
name|downloadedFile
argument_list|,
name|proxiedFile
argument_list|)
expr_stmt|;
name|assertNoTempFiles
argument_list|(
name|expectedFile
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetSnapshotMetadataNotExpired
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
literal|"org/apache/maven/test/get-updated-metadata/1.0-SNAPSHOT/maven-metadata.xml"
decl_stmt|;
name|File
name|expectedFile
init|=
operator|new
name|File
argument_list|(
name|managedDefaultDir
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|ProjectReference
name|metadata
init|=
name|createMetadataReference
argument_list|(
literal|"default"
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|expectedFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
operator|new
name|File
argument_list|(
name|expectedFile
operator|.
name|getParentFile
argument_list|()
argument_list|,
literal|".metadata-proxied1"
argument_list|)
operator|.
name|setLastModified
argument_list|(
name|getPastDate
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// Configure Connector (usually done within archiva.xml configuration)
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
literal|"proxied1"
argument_list|,
name|ChecksumPolicy
operator|.
name|FIX
argument_list|,
name|ReleasesPolicy
operator|.
name|IGNORED
argument_list|,
name|SnapshotsPolicy
operator|.
name|IGNORED
argument_list|,
name|CachedFailuresPolicy
operator|.
name|IGNORED
argument_list|)
expr_stmt|;
name|File
name|downloadedFile
init|=
name|proxyHandler
operator|.
name|fetchFromProxies
argument_list|(
name|managedDefaultRepository
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
comment|// Content should NOT match that from proxied 1.
name|assertFileEquals
argument_list|(
name|expectedFile
argument_list|,
name|downloadedFile
argument_list|,
name|expectedFile
argument_list|)
expr_stmt|;
name|assertNoTempFiles
argument_list|(
name|expectedFile
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetReleaseMetadataExpired
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
literal|"org/apache/maven/test/get-updated-metadata/maven-metadata.xml"
decl_stmt|;
name|File
name|expectedFile
init|=
operator|new
name|File
argument_list|(
name|managedDefaultDir
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|ProjectReference
name|metadata
init|=
name|createMetadataReference
argument_list|(
literal|"default"
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|expectedFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
operator|new
name|File
argument_list|(
name|expectedFile
operator|.
name|getParentFile
argument_list|()
argument_list|,
literal|".metadata-proxied1"
argument_list|)
operator|.
name|setLastModified
argument_list|(
name|getPastDate
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// Configure Connector (usually done within archiva.xml configuration)
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
literal|"proxied1"
argument_list|,
name|ChecksumPolicy
operator|.
name|FIX
argument_list|,
name|ReleasesPolicy
operator|.
name|IGNORED
argument_list|,
name|SnapshotsPolicy
operator|.
name|IGNORED
argument_list|,
name|CachedFailuresPolicy
operator|.
name|IGNORED
argument_list|)
expr_stmt|;
name|File
name|downloadedFile
init|=
name|proxyHandler
operator|.
name|fetchFromProxies
argument_list|(
name|managedDefaultRepository
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
name|String
name|expectedMetadata
init|=
name|getExpectedMetadata
argument_list|(
literal|"get-updated-metadata"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"1.0"
block|,
literal|"2.0"
block|, }
argument_list|,
name|downloadedFile
argument_list|)
decl_stmt|;
name|assertMetadataEquals
argument_list|(
name|expectedFile
argument_list|,
name|downloadedFile
argument_list|,
name|expectedMetadata
argument_list|)
expr_stmt|;
name|assertNoTempFiles
argument_list|(
name|expectedFile
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetSnapshotMetadataExpired
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
literal|"org/apache/maven/test/get-updated-metadata/1.0-SNAPSHOT/maven-metadata.xml"
decl_stmt|;
name|File
name|expectedFile
init|=
operator|new
name|File
argument_list|(
name|managedDefaultDir
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|ProjectReference
name|metadata
init|=
name|createMetadataReference
argument_list|(
literal|"default"
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|expectedFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
operator|new
name|File
argument_list|(
name|expectedFile
operator|.
name|getParentFile
argument_list|()
argument_list|,
literal|".metadata-proxied1"
argument_list|)
operator|.
name|setLastModified
argument_list|(
name|getPastDate
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// Configure Connector (usually done within archiva.xml configuration)
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
literal|"proxied1"
argument_list|,
name|ChecksumPolicy
operator|.
name|FIX
argument_list|,
name|ReleasesPolicy
operator|.
name|IGNORED
argument_list|,
name|SnapshotsPolicy
operator|.
name|IGNORED
argument_list|,
name|CachedFailuresPolicy
operator|.
name|IGNORED
argument_list|)
expr_stmt|;
name|File
name|downloadedFile
init|=
name|proxyHandler
operator|.
name|fetchFromProxies
argument_list|(
name|managedDefaultRepository
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
name|String
name|expectedMetadata
init|=
name|getExpectedMetadata
argument_list|(
literal|"get-updated-metadata"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|,
name|getSnapshotVersion
argument_list|(
literal|"20050831.111213"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|downloadedFile
argument_list|)
decl_stmt|;
name|assertMetadataEquals
argument_list|(
name|expectedFile
argument_list|,
name|downloadedFile
argument_list|,
name|expectedMetadata
argument_list|)
expr_stmt|;
name|assertNoTempFiles
argument_list|(
name|expectedFile
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetMetadataNotUpdated
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
literal|"org/apache/maven/test/get-updated-metadata/maven-metadata.xml"
decl_stmt|;
name|File
name|expectedFile
init|=
operator|new
name|File
argument_list|(
name|managedDefaultDir
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|ProjectReference
name|metadata
init|=
name|createMetadataReference
argument_list|(
literal|"default"
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|expectedFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|proxiedFile
init|=
operator|new
name|File
argument_list|(
name|REPOPATH_PROXIED1
argument_list|,
name|path
argument_list|)
decl_stmt|;
operator|new
name|File
argument_list|(
name|expectedFile
operator|.
name|getParentFile
argument_list|()
argument_list|,
literal|".metadata-proxied1"
argument_list|)
operator|.
name|setLastModified
argument_list|(
name|proxiedFile
operator|.
name|lastModified
argument_list|()
argument_list|)
expr_stmt|;
comment|// Configure Connector (usually done within archiva.xml configuration)
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
literal|"proxied1"
argument_list|,
name|ChecksumPolicy
operator|.
name|FIX
argument_list|,
name|ReleasesPolicy
operator|.
name|IGNORED
argument_list|,
name|SnapshotsPolicy
operator|.
name|IGNORED
argument_list|,
name|CachedFailuresPolicy
operator|.
name|IGNORED
argument_list|)
expr_stmt|;
name|File
name|downloadedFile
init|=
name|proxyHandler
operator|.
name|fetchFromProxies
argument_list|(
name|managedDefaultRepository
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
name|assertFileEquals
argument_list|(
name|expectedFile
argument_list|,
name|downloadedFile
argument_list|,
name|expectedFile
argument_list|)
expr_stmt|;
name|assertNoTempFiles
argument_list|(
name|expectedFile
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetMetadataUpdated
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
literal|"org/apache/maven/test/get-updated-metadata/maven-metadata.xml"
decl_stmt|;
name|File
name|expectedFile
init|=
operator|new
name|File
argument_list|(
name|managedDefaultDir
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|ProjectReference
name|metadata
init|=
name|createMetadataReference
argument_list|(
literal|"default"
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|expectedFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
operator|new
name|File
argument_list|(
name|expectedFile
operator|.
name|getParentFile
argument_list|()
argument_list|,
literal|".metadata-proxied1"
argument_list|)
operator|.
name|setLastModified
argument_list|(
name|getPastDate
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// Configure Connector (usually done within archiva.xml configuration)
name|saveConnector
argument_list|(
name|ID_DEFAULT_MANAGED
argument_list|,
literal|"proxied1"
argument_list|,
name|ChecksumPolicy
operator|.
name|FIX
argument_list|,
name|ReleasesPolicy
operator|.
name|IGNORED
argument_list|,
name|SnapshotsPolicy
operator|.
name|IGNORED
argument_list|,
name|CachedFailuresPolicy
operator|.
name|IGNORED
argument_list|)
expr_stmt|;
name|File
name|downloadedFile
init|=
name|proxyHandler
operator|.
name|fetchFromProxies
argument_list|(
name|managedDefaultRepository
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
name|String
name|expectedMetadata
init|=
name|getExpectedMetadata
argument_list|(
literal|"get-updated-metadata"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"1.0"
block|,
literal|"2.0"
block|}
argument_list|,
name|downloadedFile
argument_list|)
decl_stmt|;
name|assertMetadataEquals
argument_list|(
name|expectedFile
argument_list|,
name|downloadedFile
argument_list|,
name|expectedMetadata
argument_list|)
expr_stmt|;
name|assertNoTempFiles
argument_list|(
name|expectedFile
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

