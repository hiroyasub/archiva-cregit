begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|proxy
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|wagon
operator|.
name|Wagon
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|PlexusTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|MockControl
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_comment
comment|/**  * RepositoryProxyConnectorsTest   *  * @author Brett Porter  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|RepositoryProxyConnectorsTest
extends|extends
name|PlexusTestCase
block|{
specifier|private
name|MockControl
name|wagonMockControl
decl_stmt|;
specifier|private
name|Wagon
name|wagonMock
decl_stmt|;
specifier|private
name|RepositoryProxyConnectors
name|proxyHandler
decl_stmt|;
specifier|private
name|ArchivaRepository
name|createRepository
parameter_list|(
name|String
name|repoPath
parameter_list|,
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|layout
parameter_list|)
block|{
name|File
name|repoDir
init|=
name|getTestFile
argument_list|(
name|repoPath
argument_list|)
decl_stmt|;
name|String
name|repoUrl
init|=
literal|"file://"
operator|+
name|StringUtils
operator|.
name|replaceChars
argument_list|(
name|repoDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
literal|'\\'
argument_list|,
literal|'/'
argument_list|)
decl_stmt|;
name|ArchivaRepository
name|repo
init|=
operator|new
name|ArchivaRepository
argument_list|(
name|id
argument_list|,
name|name
argument_list|,
name|repoUrl
argument_list|)
decl_stmt|;
name|repo
operator|.
name|getModel
argument_list|()
operator|.
name|setLayoutName
argument_list|(
name|layout
argument_list|)
expr_stmt|;
return|return
name|repo
return|;
block|}
specifier|private
name|ArchivaRepository
name|createManagedLegacyRepository
parameter_list|()
block|{
return|return
name|createRepository
argument_list|(
literal|"src/test/repositories/legacy-managed"
argument_list|,
literal|"testManagedLegacyRepo"
argument_list|,
literal|"Test Managed (Legacy) Repository"
argument_list|,
literal|"legacy"
argument_list|)
return|;
block|}
specifier|private
name|ArchivaRepository
name|createProxiedLegacyRepository
parameter_list|()
block|{
return|return
name|createRepository
argument_list|(
literal|"src/test/repositories/legacy-proxied"
argument_list|,
literal|"testProxiedLegacyRepo"
argument_list|,
literal|"Test Proxied (Legacy) Repository"
argument_list|,
literal|"legacy"
argument_list|)
return|;
block|}
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|proxyHandler
operator|=
operator|(
name|RepositoryProxyConnectors
operator|)
name|lookup
argument_list|(
name|RepositoryProxyConnectors
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|repoLocation
init|=
name|getTestFile
argument_list|(
literal|"target/test-repository/managed"
argument_list|)
decl_stmt|;
comment|// faster only to delete this one before copying, the others are done case by case
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
operator|new
name|File
argument_list|(
name|repoLocation
argument_list|,
literal|"org/apache/maven/test/get-merged-metadata"
argument_list|)
argument_list|)
expr_stmt|;
name|copyDirectoryStructure
argument_list|(
name|getTestFile
argument_list|(
literal|"src/test/repositories/managed"
argument_list|)
argument_list|,
name|repoLocation
argument_list|)
expr_stmt|;
name|defaultLayout
operator|=
operator|(
name|ArtifactRepositoryLayout
operator|)
name|lookup
argument_list|(
name|ArtifactRepositoryLayout
operator|.
name|ROLE
argument_list|,
literal|"default"
argument_list|)
expr_stmt|;
name|defaultManagedRepository
operator|=
name|createRepository
argument_list|(
literal|"managed-repository"
argument_list|,
name|repoLocation
argument_list|)
expr_stmt|;
name|repoLocation
operator|=
name|getTestFile
argument_list|(
literal|"target/test-repository/legacy-managed"
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|repoLocation
argument_list|)
expr_stmt|;
name|copyDirectoryStructure
argument_list|(
name|getTestFile
argument_list|(
literal|"src/test/repositories/legacy-managed"
argument_list|)
argument_list|,
name|repoLocation
argument_list|)
expr_stmt|;
name|ArtifactRepositoryLayout
name|legacyLayout
init|=
operator|(
name|ArtifactRepositoryLayout
operator|)
name|lookup
argument_list|(
name|ArtifactRepositoryLayout
operator|.
name|ROLE
argument_list|,
literal|"legacy"
argument_list|)
decl_stmt|;
name|legacyManagedRepository
operator|=
name|createRepository
argument_list|(
literal|"managed-repository"
argument_list|,
name|repoLocation
argument_list|,
name|legacyLayout
argument_list|)
expr_stmt|;
name|File
name|location
init|=
name|getTestFile
argument_list|(
literal|"src/test/repositories/proxied1"
argument_list|)
decl_stmt|;
name|proxiedRepository1
operator|=
name|createRepository
argument_list|(
literal|"proxied1"
argument_list|,
name|location
argument_list|)
expr_stmt|;
name|location
operator|=
name|getTestFile
argument_list|(
literal|"src/test/repositories/proxied2"
argument_list|)
expr_stmt|;
name|proxiedRepository2
operator|=
name|createRepository
argument_list|(
literal|"proxied2"
argument_list|,
name|location
argument_list|)
expr_stmt|;
name|proxiedRepositories
operator|=
operator|new
name|ArrayList
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|proxiedRepositories
operator|.
name|add
argument_list|(
name|createProxiedRepository
argument_list|(
name|proxiedRepository1
argument_list|)
argument_list|)
expr_stmt|;
name|proxiedRepositories
operator|.
name|add
argument_list|(
name|createProxiedRepository
argument_list|(
name|proxiedRepository2
argument_list|)
argument_list|)
expr_stmt|;
name|location
operator|=
name|getTestFile
argument_list|(
literal|"src/test/repositories/legacy-proxied"
argument_list|)
expr_stmt|;
name|legacyProxiedRepository
operator|=
name|createRepository
argument_list|(
literal|"legacy-proxied"
argument_list|,
name|location
argument_list|,
name|legacyLayout
argument_list|)
expr_stmt|;
name|legacyProxiedRepositories
operator|=
name|Collections
operator|.
name|singletonList
argument_list|(
name|createProxiedRepository
argument_list|(
name|legacyProxiedRepository
argument_list|)
argument_list|)
expr_stmt|;
name|wagonMockControl
operator|=
name|MockControl
operator|.
name|createNiceControl
argument_list|(
name|Wagon
operator|.
name|class
argument_list|)
expr_stmt|;
name|wagonMock
operator|=
operator|(
name|Wagon
operator|)
name|wagonMockControl
operator|.
name|getMock
argument_list|()
expr_stmt|;
name|WagonDelegate
name|delegate
init|=
operator|(
name|WagonDelegate
operator|)
name|lookup
argument_list|(
name|Wagon
operator|.
name|ROLE
argument_list|,
literal|"test"
argument_list|)
decl_stmt|;
name|delegate
operator|.
name|setDelegate
argument_list|(
name|wagonMock
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

