begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|content
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_comment
comment|/**  * LegacyArtifactExtensionMapping   *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|LegacyArtifactExtensionMapping
extends|extends
name|AbstractArtifactExtensionMapping
block|{
specifier|public
name|LegacyArtifactExtensionMapping
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|String
name|getType
parameter_list|(
name|String
name|pathType
parameter_list|,
name|String
name|filename
parameter_list|)
block|{
if|if
condition|(
name|StringUtils
operator|.
name|isBlank
argument_list|(
name|filename
argument_list|)
condition|)
block|{
return|return
name|pathType
return|;
block|}
name|String
name|normalizedName
init|=
name|filename
operator|.
name|toLowerCase
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
if|if
condition|(
name|normalizedName
operator|.
name|endsWith
argument_list|(
literal|".tar.gz"
argument_list|)
condition|)
block|{
return|return
literal|"distribution-tgz"
return|;
block|}
if|else if
condition|(
name|normalizedName
operator|.
name|endsWith
argument_list|(
literal|".zip"
argument_list|)
condition|)
block|{
return|return
literal|"distribution-zip"
return|;
block|}
if|else if
condition|(
name|normalizedName
operator|.
name|endsWith
argument_list|(
literal|"-sources.jar"
argument_list|)
condition|)
block|{
return|return
literal|"jar"
return|;
block|}
if|else if
condition|(
name|normalizedName
operator|.
name|endsWith
argument_list|(
literal|"-javadoc.jar"
argument_list|)
condition|)
block|{
return|return
literal|"jar"
return|;
block|}
else|else
block|{
if|if
condition|(
name|pathType
operator|.
name|endsWith
argument_list|(
literal|"s"
argument_list|)
condition|)
block|{
return|return
name|pathType
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|pathType
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|pathType
return|;
block|}
block|}
block|}
block|}
end_class

end_unit

