begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|layout
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaArtifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArtifactReference
import|;
end_import

begin_comment
comment|/**  * LegacyBidirectionalRepositoryLayoutTest   *  * @author<a href="mailto:joakime@apache.org">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|LegacyBidirectionalRepositoryLayoutTest
extends|extends
name|AbstractBidirectionalRepositoryLayoutTestCase
block|{
specifier|private
name|BidirectionalRepositoryLayout
name|layout
decl_stmt|;
specifier|public
name|void
name|testBadPathArtifactIdMissingA
parameter_list|()
block|{
name|assertBadPath
argument_list|(
literal|"groupId/jars/-1.0.jar"
argument_list|,
literal|"artifactId is missing"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testBadPathArtifactIdMissingB
parameter_list|()
block|{
name|assertBadPath
argument_list|(
literal|"groupId/jars/1.0.jar"
argument_list|,
literal|"artifactId is missing"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testBadPathMissingType
parameter_list|()
block|{
name|assertBadPath
argument_list|(
literal|"invalid/invalid/1/invalid-1"
argument_list|,
literal|"missing type"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testBadPathTooShort
parameter_list|()
block|{
comment|// NEW
name|assertBadPath
argument_list|(
literal|"invalid/invalid-1.0.jar"
argument_list|,
literal|"path is too short"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testBadPathWrongPackageExtension
parameter_list|()
block|{
name|assertBadPath
argument_list|(
literal|"org.apache.maven.test/jars/artifactId-1.0.war"
argument_list|,
literal|"wrong package extension"
argument_list|)
expr_stmt|;
block|}
comment|/**       * [MRM-432] Oddball version spec.      * Example of an oddball / unusual version spec.      * @throws LayoutException       */
comment|/*     public void testGoodButOddVersionSpecGanymedSsh2()         throws LayoutException     {         String groupId = "ch.ethz.ganymed";         String artifactId = "ganymed-ssh2";         String version = "build210";         String type = "jar";         String path = "ch.ethz.ganymed/jars/ganymed-ssh2-build210.jar";          assertLayout( path, groupId, artifactId, version, type );     }     */
comment|/**       * [MRM-432] Oddball version spec.      * Example of an oddball / unusual version spec.      * @throws LayoutException       */
comment|/*     public void testGoodButOddVersionSpecJavaxComm()         throws LayoutException     {         String groupId = "javax";         String artifactId = "comm";         String version = "3.0-u1";         String type = "jar";         String path = "javax/jars/comm-3.0-u1.jar";          assertLayout( path, groupId, artifactId, version, type );     }     */
comment|/**       * [MRM-432] Oddball version spec.      * Example of an oddball / unusual version spec.      * @throws LayoutException       */
comment|/*     public void testGoodButOddVersionSpecJavaxPersistence()         throws LayoutException     {         String groupId = "javax.persistence";         String artifactId = "ejb";         String version = "3.0-public_review";         String type = "jar";         String path = "javax.persistence/jars/ejb-3.0-public_review.jar";          assertLayout( path, groupId, artifactId, version, type );     }     */
comment|/**      * [MRM-519] version identifiers within filename cause misidentification of version.      * Example uses "test" in artifact Id, which is also part of the versionKeyword list.      */
comment|/*     public void testGoodVersionKeywordInArtifactId()         throws LayoutException     {         String groupId = "maven";         String artifactId = "maven-test-plugin";         String version = "1.8.2";         String type = "jar";          String path = "maven/jars/maven-test-plugin-1.8.2.jar";          assertLayout( path, groupId, artifactId, version, type );     }     */
specifier|public
name|void
name|testGoodCommonsLang
parameter_list|()
throws|throws
name|LayoutException
block|{
name|String
name|groupId
init|=
literal|"commons-lang"
decl_stmt|;
name|String
name|artifactId
init|=
literal|"commons-lang"
decl_stmt|;
name|String
name|version
init|=
literal|"2.1"
decl_stmt|;
name|String
name|type
init|=
literal|"jar"
decl_stmt|;
name|String
name|path
init|=
literal|"commons-lang/jars/commons-lang-2.1.jar"
decl_stmt|;
name|assertLayout
argument_list|(
name|path
argument_list|,
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGoodDerby
parameter_list|()
throws|throws
name|LayoutException
block|{
name|String
name|groupId
init|=
literal|"org.apache.derby"
decl_stmt|;
name|String
name|artifactId
init|=
literal|"derby"
decl_stmt|;
name|String
name|version
init|=
literal|"10.2.2.0"
decl_stmt|;
name|String
name|type
init|=
literal|"jar"
decl_stmt|;
name|String
name|path
init|=
literal|"org.apache.derby/jars/derby-10.2.2.0.jar"
decl_stmt|;
name|assertLayout
argument_list|(
name|path
argument_list|,
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test the ejb-client type spec.      * Type specs are not a 1 to 1 map to the extension.       * This tests that effect.      * @throws LayoutException       */
comment|/* TODO: Re-enabled in the future.      public void testGoodFooEjbClient()         throws LayoutException     {         String groupId = "com.foo";         String artifactId = "foo-client";         String version = "1.0";         String type = "ejb"; // oddball type-spec (should result in jar extension)         String path = "com.foo/ejbs/foo-client-1.0.jar";          assertLayout( path, groupId, artifactId, version, classifier, type );     }     */
comment|/**      * Test the classifier.      * @throws LayoutException       */
comment|/*     public void testGoodFooLibJavadoc()         throws LayoutException     {         String groupId = "com.foo.lib";         String artifactId = "foo-lib";         String version = "2.1-alpha-1-javadoc";         String type = "javadoc.jar";         String path = "com.foo.lib/javadoc.jars/foo-lib-2.1-alpha-1-javadoc.jar";          assertLayout( path, groupId, artifactId, version, type );     }     */
comment|/**      * Test the classifier, and java-source type spec.      * @throws LayoutException       */
comment|/*     public void testGoodFooLibSources()         throws LayoutException     {         String groupId = "com.foo.lib";         String artifactId = "foo-lib";         String version = "2.1-alpha-1-sources";         String type = "java-source"; // oddball type-spec (should result in jar extension)         String path = "com.foo.lib/java-sources/foo-lib-2.1-alpha-1-sources.jar";          assertLayout( path, groupId, artifactId, version, type );     }     */
specifier|public
name|void
name|testGoodFooTool
parameter_list|()
throws|throws
name|LayoutException
block|{
name|String
name|groupId
init|=
literal|"com.foo"
decl_stmt|;
name|String
name|artifactId
init|=
literal|"foo-tool"
decl_stmt|;
name|String
name|version
init|=
literal|"1.0"
decl_stmt|;
name|String
name|type
init|=
literal|"jar"
decl_stmt|;
name|String
name|path
init|=
literal|"com.foo/jars/foo-tool-1.0.jar"
decl_stmt|;
name|assertLayout
argument_list|(
name|path
argument_list|,
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGoodGeronimoEjbSpec
parameter_list|()
throws|throws
name|LayoutException
block|{
name|String
name|groupId
init|=
literal|"org.apache.geronimo.specs"
decl_stmt|;
name|String
name|artifactId
init|=
literal|"geronimo-ejb_2.1_spec"
decl_stmt|;
name|String
name|version
init|=
literal|"1.0.1"
decl_stmt|;
name|String
name|type
init|=
literal|"jar"
decl_stmt|;
name|String
name|path
init|=
literal|"org.apache.geronimo.specs/jars/geronimo-ejb_2.1_spec-1.0.1.jar"
decl_stmt|;
name|assertLayout
argument_list|(
name|path
argument_list|,
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGoodLdapClientsPom
parameter_list|()
throws|throws
name|LayoutException
block|{
name|String
name|groupId
init|=
literal|"directory-clients"
decl_stmt|;
name|String
name|artifactId
init|=
literal|"ldap-clients"
decl_stmt|;
name|String
name|version
init|=
literal|"0.9.1-SNAPSHOT"
decl_stmt|;
name|String
name|type
init|=
literal|"pom"
decl_stmt|;
name|String
name|path
init|=
literal|"directory-clients/poms/ldap-clients-0.9.1-SNAPSHOT.pom"
decl_stmt|;
name|assertLayout
argument_list|(
name|path
argument_list|,
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
comment|/**      * A timestamped versioned artifact, should reside in a SNAPSHOT baseversion directory.      * @throws LayoutException       */
specifier|public
name|void
name|testGoodSnapshotMavenTest
parameter_list|()
throws|throws
name|LayoutException
block|{
name|String
name|groupId
init|=
literal|"org.apache.archiva.test"
decl_stmt|;
name|String
name|artifactId
init|=
literal|"redonkulous"
decl_stmt|;
name|String
name|version
init|=
literal|"3.1-beta-1-20050831.101112-42"
decl_stmt|;
name|String
name|type
init|=
literal|"jar"
decl_stmt|;
name|String
name|path
init|=
literal|"org.apache.archiva.test/jars/redonkulous-3.1-beta-1-20050831.101112-42.jar"
decl_stmt|;
name|assertLayout
argument_list|(
name|path
argument_list|,
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
comment|/**      * Perform a roundtrip through the layout routines to determine success.      */
specifier|private
name|void
name|assertLayout
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|String
name|type
parameter_list|)
throws|throws
name|LayoutException
block|{
name|ArchivaArtifact
name|expectedArtifact
init|=
name|createArtifact
argument_list|(
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
name|type
argument_list|)
decl_stmt|;
comment|// --- Artifact Tests.
comment|// Artifact to Path
name|assertEquals
argument_list|(
literal|"Artifact<"
operator|+
name|expectedArtifact
operator|+
literal|"> to path:"
argument_list|,
name|path
argument_list|,
name|layout
operator|.
name|toPath
argument_list|(
name|expectedArtifact
argument_list|)
argument_list|)
expr_stmt|;
comment|// Path to Artifact.
name|ArchivaArtifact
name|testArtifact
init|=
name|layout
operator|.
name|toArtifact
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|assertArtifact
argument_list|(
name|testArtifact
argument_list|,
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
name|type
argument_list|)
expr_stmt|;
comment|// And back again, using test Artifact from previous step.
name|assertEquals
argument_list|(
literal|"Artifact<"
operator|+
name|expectedArtifact
operator|+
literal|"> to path:"
argument_list|,
name|path
argument_list|,
name|layout
operator|.
name|toPath
argument_list|(
name|testArtifact
argument_list|)
argument_list|)
expr_stmt|;
comment|// --- Artifact Reference Tests
comment|// Path to Artifact Reference.
name|ArtifactReference
name|testReference
init|=
name|layout
operator|.
name|toArtifactReference
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|assertArtifactReference
argument_list|(
name|testReference
argument_list|,
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
name|type
argument_list|)
expr_stmt|;
comment|// And back again, using test Reference from previous step.
name|assertEquals
argument_list|(
literal|"Artifact<"
operator|+
name|expectedArtifact
operator|+
literal|"> to path:"
argument_list|,
name|path
argument_list|,
name|layout
operator|.
name|toPath
argument_list|(
name|testReference
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|ArchivaArtifact
name|createArtifact
parameter_list|(
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|String
name|type
parameter_list|)
block|{
name|ArchivaArtifact
name|artifact
init|=
operator|new
name|ArchivaArtifact
argument_list|(
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
literal|null
argument_list|,
name|type
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|getModel
argument_list|()
operator|.
name|setRepositoryId
argument_list|(
name|repository
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|artifact
return|;
block|}
specifier|protected
name|void
name|assertArtifact
parameter_list|(
name|ArchivaArtifact
name|actualArtifact
parameter_list|,
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|String
name|type
parameter_list|)
block|{
name|String
name|expectedId
init|=
name|groupId
operator|+
literal|":"
operator|+
name|artifactId
operator|+
literal|":"
operator|+
name|version
operator|+
literal|":"
operator|+
name|type
decl_stmt|;
name|assertNotNull
argument_list|(
name|expectedId
operator|+
literal|" - Should not be null."
argument_list|,
name|actualArtifact
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedId
operator|+
literal|" - Group ID"
argument_list|,
name|groupId
argument_list|,
name|actualArtifact
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedId
operator|+
literal|" - Artifact ID"
argument_list|,
name|artifactId
argument_list|,
name|actualArtifact
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedId
operator|+
literal|" - Version ID"
argument_list|,
name|version
argument_list|,
name|actualArtifact
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedId
operator|+
literal|" - Type"
argument_list|,
name|type
argument_list|,
name|actualArtifact
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertArtifactReference
parameter_list|(
name|ArtifactReference
name|actualReference
parameter_list|,
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|String
name|type
parameter_list|)
block|{
name|String
name|expectedId
init|=
literal|"ArtifactReference - "
operator|+
name|groupId
operator|+
literal|":"
operator|+
name|artifactId
operator|+
literal|":"
operator|+
name|version
operator|+
literal|":"
operator|+
name|type
decl_stmt|;
name|assertNotNull
argument_list|(
name|expectedId
operator|+
literal|" - Should not be null."
argument_list|,
name|actualReference
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedId
operator|+
literal|" - Group ID"
argument_list|,
name|groupId
argument_list|,
name|actualReference
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedId
operator|+
literal|" - Artifact ID"
argument_list|,
name|artifactId
argument_list|,
name|actualReference
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedId
operator|+
literal|" - Version ID"
argument_list|,
name|version
argument_list|,
name|actualReference
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedId
operator|+
literal|" - Type"
argument_list|,
name|type
argument_list|,
name|actualReference
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertBadPath
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|reason
parameter_list|)
block|{
try|try
block|{
name|layout
operator|.
name|toArtifact
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown a LayoutException on the invalid path ["
operator|+
name|path
operator|+
literal|"] because of ["
operator|+
name|reason
operator|+
literal|"]"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|LayoutException
name|e
parameter_list|)
block|{
comment|/* expected path */
block|}
block|}
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|layout
operator|=
operator|(
name|BidirectionalRepositoryLayout
operator|)
name|lookup
argument_list|(
name|BidirectionalRepositoryLayout
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|"legacy"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

