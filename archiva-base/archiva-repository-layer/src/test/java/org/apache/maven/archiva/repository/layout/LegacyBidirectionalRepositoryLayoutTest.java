begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|layout
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ArchivaArtifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|layout
operator|.
name|BidirectionalRepositoryLayout
import|;
end_import

begin_comment
comment|/**  * LegacyBidirectionalRepositoryLayoutTest   *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|LegacyBidirectionalRepositoryLayoutTest
extends|extends
name|AbstractBidirectionalRepositoryLayoutTestCase
block|{
specifier|private
name|BidirectionalRepositoryLayout
name|layout
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|layout
operator|=
operator|(
name|BidirectionalRepositoryLayout
operator|)
name|lookup
argument_list|(
name|BidirectionalRepositoryLayout
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|"legacy"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testToPathBasic
parameter_list|()
block|{
name|ArchivaArtifact
name|artifact
init|=
name|createArtifact
argument_list|(
literal|"com.foo"
argument_list|,
literal|"foo-tool"
argument_list|,
literal|"1.0"
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"com.foo/jars/foo-tool-1.0.jar"
argument_list|,
name|layout
operator|.
name|pathOf
argument_list|(
name|artifact
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testToPathEjbClient
parameter_list|()
block|{
name|ArchivaArtifact
name|artifact
init|=
name|createArtifact
argument_list|(
literal|"com.foo"
argument_list|,
literal|"foo-client"
argument_list|,
literal|"1.0"
argument_list|,
literal|""
argument_list|,
literal|"ejb-client"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"com.foo/ejbs/foo-client-1.0.jar"
argument_list|,
name|layout
operator|.
name|pathOf
argument_list|(
name|artifact
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testToPathWithClassifier
parameter_list|()
block|{
name|ArchivaArtifact
name|artifact
init|=
name|createArtifact
argument_list|(
literal|"com.foo.lib"
argument_list|,
literal|"foo-lib"
argument_list|,
literal|"2.1-alpha-1"
argument_list|,
literal|"sources"
argument_list|,
literal|"jar"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"com.foo.lib/javadoc.jars/foo-lib-2.1-alpha-1-sources.jar"
argument_list|,
name|layout
operator|.
name|pathOf
argument_list|(
name|artifact
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testToPathUsingUniqueSnapshot
parameter_list|()
block|{
name|ArchivaArtifact
name|artifact
init|=
name|createArtifact
argument_list|(
literal|"com.foo"
argument_list|,
literal|"foo-connector"
argument_list|,
literal|"2.1-20060822.123456-35"
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"com.foo/jars/foo-connector-2.1-20060822.123456-35.jar"
argument_list|,
name|layout
operator|.
name|pathOf
argument_list|(
name|artifact
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testToArtifactBasicSimpleGroupId
parameter_list|()
throws|throws
name|LayoutException
block|{
name|ArchivaArtifact
name|artifact
init|=
name|layout
operator|.
name|toArtifact
argument_list|(
literal|"commons-lang/jars/commons-lang-2.1.jar"
argument_list|)
decl_stmt|;
name|assertArtifact
argument_list|(
name|artifact
argument_list|,
literal|"commons-lang"
argument_list|,
literal|"commons-lang"
argument_list|,
literal|"2.1"
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testToArtifactBasicLongGroupId
parameter_list|()
throws|throws
name|LayoutException
block|{
name|ArchivaArtifact
name|artifact
init|=
name|layout
operator|.
name|toArtifact
argument_list|(
literal|"org.apache.derby/jars/derby-10.2.2.0.jar"
argument_list|)
decl_stmt|;
name|assertArtifact
argument_list|(
name|artifact
argument_list|,
literal|"org.apache.derby"
argument_list|,
literal|"derby"
argument_list|,
literal|"10.2.2.0"
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testToArtifactLongGroupId
parameter_list|()
throws|throws
name|LayoutException
block|{
name|ArchivaArtifact
name|artifact
init|=
name|layout
operator|.
name|toArtifact
argument_list|(
literal|"org.apache.geronimo.specs/jars/geronimo-ejb_2.1_spec-1.0.1.jar"
argument_list|)
decl_stmt|;
name|assertArtifact
argument_list|(
name|artifact
argument_list|,
literal|"org.apache.geronimo.specs"
argument_list|,
literal|"geronimo-ejb_2.1_spec"
argument_list|,
literal|"1.0.1"
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testToArtifactEjbClient
parameter_list|()
throws|throws
name|LayoutException
block|{
name|ArchivaArtifact
name|artifact
init|=
name|layout
operator|.
name|toArtifact
argument_list|(
literal|"org.apache.beehive/jars/beehive-ejb-control-1.0.1.jar"
argument_list|)
decl_stmt|;
comment|// The type is correct. as we cannot possibly know this is an ejb client without parsing the pom
name|assertArtifact
argument_list|(
name|artifact
argument_list|,
literal|"org.apache.beehive"
argument_list|,
literal|"beehive-ejb-control"
argument_list|,
literal|"1.0.1"
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testToArtifactWithClassifier
parameter_list|()
throws|throws
name|LayoutException
block|{
name|ArchivaArtifact
name|artifact
init|=
name|layout
operator|.
name|toArtifact
argument_list|(
literal|"commons-lang/jars/commons-lang-2.3-sources.jar"
argument_list|)
decl_stmt|;
comment|// The 'java-source' type is correct.  You might be thinking of extension, which we are not testing here.
name|assertArtifact
argument_list|(
name|artifact
argument_list|,
literal|"commons-lang"
argument_list|,
literal|"commons-lang"
argument_list|,
literal|"2.3"
argument_list|,
literal|"sources"
argument_list|,
literal|"java-source"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testToArtifactSnapshot
parameter_list|()
throws|throws
name|LayoutException
block|{
name|ArchivaArtifact
name|artifact
init|=
name|layout
operator|.
name|toArtifact
argument_list|(
literal|"directory-clients/poms/ldap-clients-0.9.1-SNAPSHOT.pom"
argument_list|)
decl_stmt|;
name|assertSnapshotArtifact
argument_list|(
name|artifact
argument_list|,
literal|"directory-clients"
argument_list|,
literal|"ldap-clients"
argument_list|,
literal|"0.9.1-SNAPSHOT"
argument_list|,
literal|""
argument_list|,
literal|"pom"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

