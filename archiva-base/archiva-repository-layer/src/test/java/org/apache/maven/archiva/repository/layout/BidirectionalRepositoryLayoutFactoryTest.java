begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|layout
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaArtifact
import|;
end_import

begin_comment
comment|/**  * BidirectionalRepositoryLayoutFactoryTest  *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|BidirectionalRepositoryLayoutFactoryTest
extends|extends
name|AbstractBidirectionalRepositoryLayoutTestCase
block|{
specifier|private
name|BidirectionalRepositoryLayoutFactory
name|factory
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|factory
operator|=
operator|(
name|BidirectionalRepositoryLayoutFactory
operator|)
name|lookup
argument_list|(
name|BidirectionalRepositoryLayoutFactory
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testLayoutDefault
parameter_list|()
throws|throws
name|LayoutException
block|{
name|BidirectionalRepositoryLayout
name|layout
init|=
name|factory
operator|.
name|getLayout
argument_list|(
literal|"default"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Layout should not be null"
argument_list|,
name|layout
argument_list|)
expr_stmt|;
name|ArchivaArtifact
name|artifact
init|=
name|createArtifact
argument_list|(
literal|"com.foo"
argument_list|,
literal|"foo-tool"
argument_list|,
literal|"1.0"
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"com/foo/foo-tool/1.0/foo-tool-1.0.jar"
argument_list|,
name|layout
operator|.
name|toPath
argument_list|(
name|artifact
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testLayoutLegacy
parameter_list|()
throws|throws
name|LayoutException
block|{
name|BidirectionalRepositoryLayout
name|layout
init|=
name|factory
operator|.
name|getLayout
argument_list|(
literal|"legacy"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Layout should not be null"
argument_list|,
name|layout
argument_list|)
expr_stmt|;
name|ArchivaArtifact
name|artifact
init|=
name|createArtifact
argument_list|(
literal|"com.foo"
argument_list|,
literal|"foo-tool"
argument_list|,
literal|"1.0"
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"com.foo/jars/foo-tool-1.0.jar"
argument_list|,
name|layout
operator|.
name|toPath
argument_list|(
name|artifact
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testLayoutInvalid
parameter_list|()
block|{
try|try
block|{
name|factory
operator|.
name|getLayout
argument_list|(
literal|"-invalid-"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown a LayoutException due to missing layout type."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|LayoutException
name|e
parameter_list|)
block|{
comment|/* expected path */
block|}
block|}
specifier|public
name|void
name|testFindLayoutForPath
parameter_list|()
throws|throws
name|LayoutException
block|{
name|BidirectionalRepositoryLayout
name|layout
init|=
name|factory
operator|.
name|getLayoutForPath
argument_list|(
literal|"javax/servlet/servlet-api/2.3/servlet-api-2.3.jar"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"default"
argument_list|,
name|layout
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|layout
operator|=
name|factory
operator|.
name|getLayoutForPath
argument_list|(
literal|"javax.servlet/jars/servlet-api-2.3.jar"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"legacy"
argument_list|,
name|layout
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

