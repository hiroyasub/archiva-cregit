begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|project
operator|.
name|filters
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaProjectModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|Dependency
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|project
operator|.
name|ProjectModelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|project
operator|.
name|ProjectModelFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|project
operator|.
name|ProjectModelReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|project
operator|.
name|ProjectModelWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|project
operator|.
name|readers
operator|.
name|ProjectModel400Reader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|project
operator|.
name|writers
operator|.
name|ProjectModel400Writer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|PlexusTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * ProjectModelExpressionExpanderTest   *  * @author<a href="mailto:joakime@apache.org">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|ProjectModelExpressionExpanderTest
extends|extends
name|PlexusTestCase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_REPOSITORY
init|=
literal|"src/test/repositories/default-repository"
decl_stmt|;
specifier|private
name|ProjectModelExpressionFilter
name|lookupExpression
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|(
name|ProjectModelExpressionFilter
operator|)
name|lookup
argument_list|(
name|ProjectModelFilter
operator|.
name|class
argument_list|,
literal|"expression"
argument_list|)
return|;
block|}
specifier|public
name|void
name|testExpressionEvaluation
parameter_list|()
throws|throws
name|Exception
block|{
name|ArchivaProjectModel
name|model
init|=
operator|new
name|ArchivaProjectModel
argument_list|()
decl_stmt|;
name|model
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.maven.archiva"
argument_list|)
expr_stmt|;
name|model
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-test-project"
argument_list|)
expr_stmt|;
name|model
operator|.
name|setVersion
argument_list|(
literal|"1.0-SNAPSHOT"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Dependency
argument_list|>
name|deps
init|=
operator|new
name|ArrayList
argument_list|<
name|Dependency
argument_list|>
argument_list|()
decl_stmt|;
name|deps
operator|.
name|add
argument_list|(
name|createDependency
argument_list|(
literal|"org.apache.maven.archiva"
argument_list|,
literal|"archiva-model"
argument_list|,
literal|"${archiva.version}"
argument_list|)
argument_list|)
expr_stmt|;
name|deps
operator|.
name|add
argument_list|(
name|createDependency
argument_list|(
literal|"org.apache.maven.archiva"
argument_list|,
literal|"archiva-common"
argument_list|,
literal|"${archiva.version}"
argument_list|)
argument_list|)
expr_stmt|;
name|deps
operator|.
name|add
argument_list|(
name|createDependency
argument_list|(
literal|"org.apache.maven.archiva"
argument_list|,
literal|"archiva-indexer"
argument_list|,
literal|"${archiva.version}"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setDependencies
argument_list|(
name|deps
argument_list|)
expr_stmt|;
name|model
operator|.
name|addProperty
argument_list|(
literal|"archiva.version"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|)
expr_stmt|;
name|ProjectModelExpressionFilter
name|filter
init|=
name|lookupExpression
argument_list|()
decl_stmt|;
name|model
operator|=
name|filter
operator|.
name|filter
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Group ID"
argument_list|,
literal|"org.apache.maven.archiva"
argument_list|,
name|model
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Artifact ID"
argument_list|,
literal|"archiva-test-project"
argument_list|,
name|model
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Version"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|,
name|model
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Dependencies"
argument_list|,
name|model
operator|.
name|getDependencies
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Dependencies Size"
argument_list|,
literal|3
argument_list|,
name|model
operator|.
name|getDependencies
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Dependency
argument_list|>
name|it
init|=
name|model
operator|.
name|getDependencies
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Dependency
name|dep
init|=
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Dependency ["
operator|+
name|dep
operator|.
name|getArtifactId
argument_list|()
operator|+
literal|"] Group ID"
argument_list|,
literal|"org.apache.maven.archiva"
argument_list|,
name|dep
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Dependency ["
operator|+
name|dep
operator|.
name|getArtifactId
argument_list|()
operator|+
literal|"] Version"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|,
name|dep
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * [MRM-487] pom version is not resolved      * [MRM-488] properties in pom are not resolved (at least while browsing)      *       * This is to ensure that any expression within the pom is evaluated properly.      */
specifier|public
name|void
name|testExpressionHell
parameter_list|()
throws|throws
name|Exception
block|{
name|ProjectModelExpressionFilter
name|filter
init|=
name|lookupExpression
argument_list|()
decl_stmt|;
name|ArchivaProjectModel
name|initialModel
init|=
name|createArchivaProjectModel
argument_list|(
name|DEFAULT_REPOSITORY
operator|+
literal|"/org/apache/maven/test/2.0.4-SNAPSHOT/test-2.0.4-SNAPSHOT.pom"
argument_list|)
decl_stmt|;
name|ArchivaProjectModel
name|filteredModel
init|=
name|filter
operator|.
name|filter
argument_list|(
name|initialModel
argument_list|)
decl_stmt|;
comment|// Dump the evaluated model to xml
name|String
name|evaluatedModelText
init|=
name|toModelText
argument_list|(
name|filteredModel
argument_list|)
decl_stmt|;
comment|// Test xml buffer for the existance of an unevaluated expression.
name|boolean
name|foundUnevaluated
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|evaluatedModelText
operator|.
name|indexOf
argument_list|(
literal|"${"
argument_list|)
operator|!=
operator|(
operator|-
literal|1
operator|)
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Found Expression:\n"
operator|+
name|evaluatedModelText
argument_list|)
expr_stmt|;
name|foundUnevaluated
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|foundUnevaluated
condition|)
block|{
name|fail
argument_list|(
literal|"Found Unevaluated Expression. (see System.err for details)"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|toModelText
parameter_list|(
name|ArchivaProjectModel
name|model
parameter_list|)
throws|throws
name|ProjectModelException
throws|,
name|IOException
block|{
name|StringWriter
name|strWriter
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|ProjectModelWriter
name|modelWriter
init|=
operator|new
name|ProjectModel400Writer
argument_list|()
decl_stmt|;
name|modelWriter
operator|.
name|write
argument_list|(
name|model
argument_list|,
name|strWriter
argument_list|)
expr_stmt|;
return|return
name|strWriter
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|private
name|ArchivaProjectModel
name|createArchivaProjectModel
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|ProjectModelException
block|{
name|ProjectModelReader
name|reader
init|=
operator|new
name|ProjectModel400Reader
argument_list|()
decl_stmt|;
name|File
name|pomFile
init|=
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
name|path
argument_list|)
decl_stmt|;
return|return
name|reader
operator|.
name|read
argument_list|(
name|pomFile
argument_list|)
return|;
block|}
specifier|private
name|Dependency
name|createDependency
parameter_list|(
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|)
block|{
name|Dependency
name|dep
init|=
operator|new
name|Dependency
argument_list|()
decl_stmt|;
name|dep
operator|.
name|setGroupId
argument_list|(
name|groupId
argument_list|)
expr_stmt|;
name|dep
operator|.
name|setArtifactId
argument_list|(
name|artifactId
argument_list|)
expr_stmt|;
name|dep
operator|.
name|setVersion
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|dep
operator|.
name|setTransitive
argument_list|(
literal|false
argument_list|)
expr_stmt|;
return|return
name|dep
return|;
block|}
block|}
end_class

end_unit

