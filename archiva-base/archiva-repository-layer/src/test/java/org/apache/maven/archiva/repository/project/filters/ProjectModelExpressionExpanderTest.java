begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|project
operator|.
name|filters
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaProjectModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|Dependency
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|project
operator|.
name|ProjectModelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|project
operator|.
name|filters
operator|.
name|ProjectModelExpressionExpander
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_comment
comment|/**  * ProjectModelExpressionExpanderTest   *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|ProjectModelExpressionExpanderTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testExpressionEvaluation
parameter_list|()
throws|throws
name|ProjectModelException
block|{
name|ArchivaProjectModel
name|model
init|=
operator|new
name|ArchivaProjectModel
argument_list|()
decl_stmt|;
name|model
operator|.
name|setGroupId
argument_list|(
literal|"org.apache.maven.archiva"
argument_list|)
expr_stmt|;
name|model
operator|.
name|setArtifactId
argument_list|(
literal|"archiva-test-project"
argument_list|)
expr_stmt|;
name|model
operator|.
name|setVersion
argument_list|(
literal|"1.0-SNAPSHOT"
argument_list|)
expr_stmt|;
name|model
operator|.
name|addDependency
argument_list|(
name|createDependency
argument_list|(
literal|"org.apache.maven.archiva"
argument_list|,
literal|"archiva-model"
argument_list|,
literal|"${archiva.version}"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|addDependency
argument_list|(
name|createDependency
argument_list|(
literal|"org.apache.maven.archiva"
argument_list|,
literal|"archiva-common"
argument_list|,
literal|"${archiva.version}"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|addDependency
argument_list|(
name|createDependency
argument_list|(
literal|"org.apache.maven.archiva"
argument_list|,
literal|"archiva-indexer"
argument_list|,
literal|"${archiva.version}"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|addProperty
argument_list|(
literal|"archiva.version"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|)
expr_stmt|;
name|ProjectModelExpressionExpander
operator|.
name|evaluateExpressions
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Group ID"
argument_list|,
literal|"org.apache.maven.archiva"
argument_list|,
name|model
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Artifact ID"
argument_list|,
literal|"archiva-test-project"
argument_list|,
name|model
operator|.
name|getArtifactId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Version"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|,
name|model
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Dependencies"
argument_list|,
name|model
operator|.
name|getDependencies
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Dependencies Size"
argument_list|,
literal|3
argument_list|,
name|model
operator|.
name|getDependencies
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
name|it
init|=
name|model
operator|.
name|getDependencies
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Dependency
name|dep
init|=
operator|(
name|Dependency
operator|)
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Dependency ["
operator|+
name|dep
operator|.
name|getArtifactId
argument_list|()
operator|+
literal|"] Group ID"
argument_list|,
literal|"org.apache.maven.archiva"
argument_list|,
name|dep
operator|.
name|getGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Dependency ["
operator|+
name|dep
operator|.
name|getArtifactId
argument_list|()
operator|+
literal|"] Version"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|,
name|dep
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|Dependency
name|createDependency
parameter_list|(
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|)
block|{
name|Dependency
name|dep
init|=
operator|new
name|Dependency
argument_list|()
decl_stmt|;
name|dep
operator|.
name|setGroupId
argument_list|(
name|groupId
argument_list|)
expr_stmt|;
name|dep
operator|.
name|setArtifactId
argument_list|(
name|artifactId
argument_list|)
expr_stmt|;
name|dep
operator|.
name|setVersion
argument_list|(
name|version
argument_list|)
expr_stmt|;
return|return
name|dep
return|;
block|}
block|}
end_class

end_unit

