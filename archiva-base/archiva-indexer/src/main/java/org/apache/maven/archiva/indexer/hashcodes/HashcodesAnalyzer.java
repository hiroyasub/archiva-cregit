begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|hashcodes
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|Analyzer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|LowerCaseFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|StopAnalyzer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|StopFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|TokenStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|standard
operator|.
name|StandardAnalyzer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|ArtifactKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|lucene
operator|.
name|analyzers
operator|.
name|GroupIdTokenizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|lucene
operator|.
name|analyzers
operator|.
name|VersionTokenizer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_comment
comment|/**  * HashcodesAnalyzer   *  * @author<a href="mailto:joakime@apache.org">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|HashcodesAnalyzer
extends|extends
name|Analyzer
block|{
specifier|private
specifier|static
specifier|final
name|Analyzer
name|STANDARD
init|=
operator|new
name|StandardAnalyzer
argument_list|()
decl_stmt|;
specifier|public
name|TokenStream
name|tokenStream
parameter_list|(
name|String
name|field
parameter_list|,
name|Reader
name|reader
parameter_list|)
block|{
name|TokenStream
name|tokenStream
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|ArtifactKeys
operator|.
name|GROUPID
operator|.
name|equals
argument_list|(
name|field
argument_list|)
condition|)
block|{
name|tokenStream
operator|=
operator|new
name|GroupIdTokenizer
argument_list|(
name|reader
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|ArtifactKeys
operator|.
name|VERSION
operator|.
name|equals
argument_list|(
name|field
argument_list|)
condition|)
block|{
name|tokenStream
operator|=
operator|new
name|VersionTokenizer
argument_list|(
name|reader
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|tokenStream
operator|=
name|STANDARD
operator|.
name|tokenStream
argument_list|(
name|field
argument_list|,
name|reader
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|LowerCaseFilter
argument_list|(
operator|new
name|StopFilter
argument_list|(
name|tokenStream
argument_list|,
name|StopAnalyzer
operator|.
name|ENGLISH_STOP_WORDS
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

