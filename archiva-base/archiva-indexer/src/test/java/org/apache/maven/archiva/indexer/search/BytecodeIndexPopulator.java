begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|search
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|bytecode
operator|.
name|BytecodeRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|bytecode
operator|.
name|BytecodeRecordLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaArtifact
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|AssertionFailedError
import|;
end_import

begin_comment
comment|/**  * BytecodeIndexPopulator   *  * @author<a href="mailto:joakime@apache.org">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|BytecodeIndexPopulator
implements|implements
name|IndexPopulator
block|{
specifier|public
name|Map
name|getObjectMap
parameter_list|()
block|{
name|Map
name|dumps
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
comment|// archiva-common-1.0.jar.txt
name|dumps
operator|.
name|put
argument_list|(
literal|"archiva-common"
argument_list|,
name|createArchivaArtifact
argument_list|(
literal|"org.apache.maven.archiva"
argument_list|,
literal|"archiva-common"
argument_list|,
literal|"1.0"
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|)
argument_list|)
expr_stmt|;
comment|// continuum-webapp-1.0.3-SNAPSHOT.war.txt
name|dumps
operator|.
name|put
argument_list|(
literal|"continuum-webapp"
argument_list|,
name|createArchivaArtifact
argument_list|(
literal|"org.apache.maven.continuum"
argument_list|,
literal|"continuum-webapp"
argument_list|,
literal|"1.0.3-SNAPSHOT"
argument_list|,
literal|""
argument_list|,
literal|"war"
argument_list|)
argument_list|)
expr_stmt|;
comment|// daytrader-ear-1.1.ear.txt
name|dumps
operator|.
name|put
argument_list|(
literal|"daytrader-ear"
argument_list|,
name|createArchivaArtifact
argument_list|(
literal|"org.apache.geronimo"
argument_list|,
literal|"daytrader-ear"
argument_list|,
literal|"1.1"
argument_list|,
literal|""
argument_list|,
literal|"ear"
argument_list|)
argument_list|)
expr_stmt|;
comment|// maven-archetype-simple-1.0-alpha-4.jar.txt
name|dumps
operator|.
name|put
argument_list|(
literal|"maven-archetype-simple"
argument_list|,
name|createArchivaArtifact
argument_list|(
literal|"org.apache.maven"
argument_list|,
literal|"maven-archetype-simple"
argument_list|,
literal|"1.0-alpha-4"
argument_list|,
literal|""
argument_list|,
literal|"maven-archetype"
argument_list|)
argument_list|)
expr_stmt|;
comment|// maven-help-plugin-2.0.2-20070119.121239-2.jar.txt
name|dumps
operator|.
name|put
argument_list|(
literal|"maven-help-plugin"
argument_list|,
name|createArchivaArtifact
argument_list|(
literal|"org.apache.maven.plugins"
argument_list|,
literal|"maven-help-plugin"
argument_list|,
literal|"2.0.2-20070119.121239-2"
argument_list|,
literal|""
argument_list|,
literal|"maven-plugin"
argument_list|)
argument_list|)
expr_stmt|;
comment|// redback-authorization-open-1.0-alpha-1-SNAPSHOT.jar.txt
name|dumps
operator|.
name|put
argument_list|(
literal|"redback-authorization-open"
argument_list|,
name|createArchivaArtifact
argument_list|(
literal|"org.codehaus.plexus.redback"
argument_list|,
literal|"redback-authorization-open"
argument_list|,
literal|"1.0-alpha-1-SNAPSHOT"
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|)
argument_list|)
expr_stmt|;
comment|// testng-5.1-jdk15.jar.txt
name|dumps
operator|.
name|put
argument_list|(
literal|"testng"
argument_list|,
name|createArchivaArtifact
argument_list|(
literal|"org.testng"
argument_list|,
literal|"testng"
argument_list|,
literal|"5.1"
argument_list|,
literal|"jdk15"
argument_list|,
literal|"jar"
argument_list|)
argument_list|)
expr_stmt|;
comment|// wagon-provider-api-1.0-beta-3-20070209.213958-2.jar.txt
name|dumps
operator|.
name|put
argument_list|(
literal|"wagon-provider-api"
argument_list|,
name|createArchivaArtifact
argument_list|(
literal|"org.apache.maven.wagon"
argument_list|,
literal|"wagon-provider-api"
argument_list|,
literal|"1.0-beta-3-20070209.213958-2"
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|dumps
return|;
block|}
specifier|private
name|ArchivaArtifact
name|createArchivaArtifact
parameter_list|(
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|String
name|classifier
parameter_list|,
name|String
name|type
parameter_list|)
block|{
name|ArchivaArtifact
name|artifact
init|=
operator|new
name|ArchivaArtifact
argument_list|(
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
name|classifier
argument_list|,
name|type
argument_list|)
decl_stmt|;
return|return
name|artifact
return|;
block|}
specifier|public
name|Map
name|populate
parameter_list|(
name|File
name|basedir
parameter_list|)
block|{
name|Map
name|records
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|Map
name|artifactDumps
init|=
name|getObjectMap
argument_list|()
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|artifactDumps
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Map
operator|.
name|Entry
name|entry
init|=
operator|(
name|Map
operator|.
name|Entry
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|ArchivaArtifact
name|artifact
init|=
operator|(
name|ArchivaArtifact
operator|)
name|entry
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|File
name|dumpFile
init|=
name|getDumpFile
argument_list|(
name|basedir
argument_list|,
name|artifact
argument_list|)
decl_stmt|;
name|BytecodeRecord
name|record
init|=
name|BytecodeRecordLoader
operator|.
name|loadRecord
argument_list|(
name|dumpFile
argument_list|,
name|artifact
argument_list|)
decl_stmt|;
name|record
operator|.
name|setRepositoryId
argument_list|(
literal|"test-repo"
argument_list|)
expr_stmt|;
name|records
operator|.
name|put
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|record
argument_list|)
expr_stmt|;
block|}
return|return
name|records
return|;
block|}
specifier|protected
name|File
name|getDumpFile
parameter_list|(
name|File
name|basedir
parameter_list|,
name|ArchivaArtifact
name|artifact
parameter_list|)
block|{
name|File
name|dumpDir
init|=
operator|new
name|File
argument_list|(
name|basedir
argument_list|,
literal|"src/test/artifact-dumps"
argument_list|)
decl_stmt|;
name|StringBuffer
name|filename
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|filename
operator|.
name|append
argument_list|(
name|artifact
operator|.
name|getArtifactId
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"-"
argument_list|)
operator|.
name|append
argument_list|(
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|artifact
operator|.
name|hasClassifier
argument_list|()
condition|)
block|{
name|filename
operator|.
name|append
argument_list|(
literal|"-"
argument_list|)
operator|.
name|append
argument_list|(
name|artifact
operator|.
name|getClassifier
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|filename
operator|.
name|append
argument_list|(
literal|"."
argument_list|)
expr_stmt|;
comment|// TODO: use the ArtifactExtensionMapping object!
if|if
condition|(
literal|"maven-plugin"
operator|.
name|equals
argument_list|(
name|artifact
operator|.
name|getType
argument_list|()
argument_list|)
operator|||
literal|"maven-archetype"
operator|.
name|equals
argument_list|(
name|artifact
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
block|{
name|filename
operator|.
name|append
argument_list|(
literal|"jar"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|filename
operator|.
name|append
argument_list|(
name|artifact
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|filename
operator|.
name|append
argument_list|(
literal|".txt"
argument_list|)
expr_stmt|;
name|File
name|dumpFile
init|=
operator|new
name|File
argument_list|(
name|dumpDir
argument_list|,
name|filename
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|dumpFile
operator|.
name|exists
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|AssertionFailedError
argument_list|(
literal|"Dump file "
operator|+
name|dumpFile
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|" does not exist (should it?)."
argument_list|)
throw|;
block|}
return|return
name|dumpFile
return|;
block|}
block|}
end_class

end_unit

