begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|ArchivaConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
operator|.
name|RepositoryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|lucene
operator|.
name|LuceneIndexHandlers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|indexer
operator|.
name|lucene
operator|.
name|LuceneRepositoryContentRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaArtifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|ArchivaRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|PlexusTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|util
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * AbstractIndexerTestCase   *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractIndexerTestCase
extends|extends
name|PlexusTestCase
block|{
specifier|protected
name|RepositoryContentIndex
name|index
decl_stmt|;
specifier|protected
name|LuceneIndexHandlers
name|indexHandlers
decl_stmt|;
specifier|public
specifier|abstract
name|String
name|getIndexName
parameter_list|()
function_decl|;
specifier|protected
name|void
name|assertRecord
parameter_list|(
name|LuceneRepositoryContentRecord
name|expectedRecord
parameter_list|,
name|Document
name|luceneDocument
parameter_list|)
throws|throws
name|ParseException
block|{
name|LuceneRepositoryContentRecord
name|actualRecord
init|=
name|indexHandlers
operator|.
name|getConverter
argument_list|()
operator|.
name|convert
argument_list|(
name|luceneDocument
argument_list|)
decl_stmt|;
name|assertRecord
argument_list|(
name|expectedRecord
argument_list|,
name|actualRecord
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertRecord
parameter_list|(
name|LuceneRepositoryContentRecord
name|expectedRecord
parameter_list|,
name|LuceneRepositoryContentRecord
name|actualRecord
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expectedRecord
argument_list|,
name|actualRecord
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|abstract
name|RepositoryContentIndex
name|createIndex
parameter_list|(
name|RepositoryContentIndexFactory
name|indexFactory
parameter_list|,
name|ArchivaRepository
name|repository
parameter_list|)
function_decl|;
specifier|public
specifier|abstract
name|LuceneIndexHandlers
name|getIndexHandler
parameter_list|()
function_decl|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|RepositoryContentIndexFactory
name|indexFactory
init|=
operator|(
name|RepositoryContentIndexFactory
operator|)
name|lookup
argument_list|(
name|RepositoryContentIndexFactory
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|"lucene"
argument_list|)
decl_stmt|;
name|ArchivaRepository
name|repository
init|=
name|createTestIndex
argument_list|(
name|getIndexName
argument_list|()
argument_list|)
decl_stmt|;
name|index
operator|=
name|createIndex
argument_list|(
name|indexFactory
argument_list|,
name|repository
argument_list|)
expr_stmt|;
name|indexHandlers
operator|=
name|getIndexHandler
argument_list|()
expr_stmt|;
block|}
specifier|private
name|ArchivaRepository
name|createTestIndex
parameter_list|(
name|String
name|indexName
parameter_list|)
throws|throws
name|Exception
throws|,
name|IOException
block|{
name|File
name|repoDir
init|=
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"src/test/managed-repository"
argument_list|)
decl_stmt|;
name|File
name|testIndexesDir
init|=
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"target/test-indexes"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|testIndexesDir
operator|.
name|exists
argument_list|()
condition|)
block|{
name|testIndexesDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
block|}
name|assertTrue
argument_list|(
literal|"Default Test Repository should exist."
argument_list|,
name|repoDir
operator|.
name|exists
argument_list|()
operator|&&
name|repoDir
operator|.
name|isDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|repoUri
init|=
literal|"file://"
operator|+
name|StringUtils
operator|.
name|replace
argument_list|(
name|repoDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
literal|"\\"
argument_list|,
literal|"/"
argument_list|)
decl_stmt|;
name|ArchivaRepository
name|repository
init|=
operator|new
name|ArchivaRepository
argument_list|(
literal|"testDefaultRepo"
argument_list|,
literal|"Test Default Repository"
argument_list|,
name|repoUri
argument_list|)
decl_stmt|;
name|File
name|indexLocation
init|=
operator|new
name|File
argument_list|(
name|testIndexesDir
argument_list|,
literal|"/index-"
operator|+
name|indexName
operator|+
literal|"-"
operator|+
name|getName
argument_list|()
operator|+
literal|"/"
argument_list|)
decl_stmt|;
name|MockConfiguration
name|config
init|=
operator|(
name|MockConfiguration
operator|)
name|lookup
argument_list|(
name|ArchivaConfiguration
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|"mock"
argument_list|)
decl_stmt|;
name|RepositoryConfiguration
name|repoConfig
init|=
operator|new
name|RepositoryConfiguration
argument_list|()
decl_stmt|;
name|repoConfig
operator|.
name|setId
argument_list|(
name|repository
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setName
argument_list|(
name|repository
operator|.
name|getModel
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setUrl
argument_list|(
name|repository
operator|.
name|getModel
argument_list|()
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
name|repoConfig
operator|.
name|setIndexDir
argument_list|(
name|indexLocation
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|indexLocation
operator|.
name|exists
argument_list|()
condition|)
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|indexLocation
argument_list|)
expr_stmt|;
block|}
name|config
operator|.
name|getConfiguration
argument_list|()
operator|.
name|addRepository
argument_list|(
name|repoConfig
argument_list|)
expr_stmt|;
return|return
name|repository
return|;
block|}
specifier|protected
name|Map
name|getArchivaArtifactDumpMap
parameter_list|()
block|{
name|Map
name|dumps
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
comment|// archiva-common-1.0.jar.txt
name|dumps
operator|.
name|put
argument_list|(
literal|"archiva-common"
argument_list|,
name|createArchivaArtifact
argument_list|(
literal|"org.apache.maven.archiva"
argument_list|,
literal|"archiva-common"
argument_list|,
literal|"1.0"
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|)
argument_list|)
expr_stmt|;
comment|// continuum-webapp-1.0.3-SNAPSHOT.war.txt
name|dumps
operator|.
name|put
argument_list|(
literal|"continuum-webapp"
argument_list|,
name|createArchivaArtifact
argument_list|(
literal|"org.apache.maven.continuum"
argument_list|,
literal|"continuum-webapp"
argument_list|,
literal|"1.0.3-SNAPSHOT"
argument_list|,
literal|""
argument_list|,
literal|"war"
argument_list|)
argument_list|)
expr_stmt|;
comment|// daytrader-ear-1.1.ear.txt
name|dumps
operator|.
name|put
argument_list|(
literal|"daytrader-ear"
argument_list|,
name|createArchivaArtifact
argument_list|(
literal|"org.apache.geronimo"
argument_list|,
literal|"daytrader-ear"
argument_list|,
literal|"1.1"
argument_list|,
literal|""
argument_list|,
literal|"ear"
argument_list|)
argument_list|)
expr_stmt|;
comment|// maven-archetype-simple-1.0-alpha-4.jar.txt
name|dumps
operator|.
name|put
argument_list|(
literal|"maven-archetype-simple"
argument_list|,
name|createArchivaArtifact
argument_list|(
literal|"org.apache.maven"
argument_list|,
literal|"maven-archetype-simple"
argument_list|,
literal|"1.0-alpha-4"
argument_list|,
literal|""
argument_list|,
literal|"maven-archetype"
argument_list|)
argument_list|)
expr_stmt|;
comment|// maven-help-plugin-2.0.2-20070119.121239-2.jar.txt
name|dumps
operator|.
name|put
argument_list|(
literal|"maven-help-plugin"
argument_list|,
name|createArchivaArtifact
argument_list|(
literal|"org.apache.maven.plugins"
argument_list|,
literal|"maven-help-plugin"
argument_list|,
literal|"2.0.2-20070119.121239-2"
argument_list|,
literal|""
argument_list|,
literal|"maven-plugin"
argument_list|)
argument_list|)
expr_stmt|;
comment|// redback-authorization-open-1.0-alpha-1-SNAPSHOT.jar.txt
name|dumps
operator|.
name|put
argument_list|(
literal|"redback-authorization-open"
argument_list|,
name|createArchivaArtifact
argument_list|(
literal|"org.codehaus.plexus.redback"
argument_list|,
literal|"redback-authorization-open"
argument_list|,
literal|"1.0-alpha-1-SNAPSHOT"
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|)
argument_list|)
expr_stmt|;
comment|// testng-5.1-jdk15.jar.txt
name|dumps
operator|.
name|put
argument_list|(
literal|"testng"
argument_list|,
name|createArchivaArtifact
argument_list|(
literal|"org.testng"
argument_list|,
literal|"testng"
argument_list|,
literal|"5.1"
argument_list|,
literal|"jdk15"
argument_list|,
literal|"jar"
argument_list|)
argument_list|)
expr_stmt|;
comment|// wagon-provider-api-1.0-beta-3-20070209.213958-2.jar.txt
name|dumps
operator|.
name|put
argument_list|(
literal|"wagon-provider-api"
argument_list|,
name|createArchivaArtifact
argument_list|(
literal|"org.apache.maven.wagon"
argument_list|,
literal|"wagon-provider-api"
argument_list|,
literal|"1.0-beta-3-20070209.213958-2"
argument_list|,
literal|""
argument_list|,
literal|"jar"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|dumps
return|;
block|}
specifier|protected
name|File
name|getDumpFile
parameter_list|(
name|ArchivaArtifact
name|artifact
parameter_list|)
block|{
name|File
name|dumpDir
init|=
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"src/test/artifact-dumps"
argument_list|)
decl_stmt|;
name|StringBuffer
name|filename
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|filename
operator|.
name|append
argument_list|(
name|artifact
operator|.
name|getArtifactId
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"-"
argument_list|)
operator|.
name|append
argument_list|(
name|artifact
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|artifact
operator|.
name|hasClassifier
argument_list|()
condition|)
block|{
name|filename
operator|.
name|append
argument_list|(
literal|"-"
argument_list|)
operator|.
name|append
argument_list|(
name|artifact
operator|.
name|getClassifier
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|filename
operator|.
name|append
argument_list|(
literal|"."
argument_list|)
expr_stmt|;
comment|// TODO: use the ArtifactExtensionMapping object!
if|if
condition|(
literal|"maven-plugin"
operator|.
name|equals
argument_list|(
name|artifact
operator|.
name|getType
argument_list|()
argument_list|)
operator|||
literal|"maven-archetype"
operator|.
name|equals
argument_list|(
name|artifact
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
block|{
name|filename
operator|.
name|append
argument_list|(
literal|"jar"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|filename
operator|.
name|append
argument_list|(
name|artifact
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|filename
operator|.
name|append
argument_list|(
literal|".txt"
argument_list|)
expr_stmt|;
name|File
name|dumpFile
init|=
operator|new
name|File
argument_list|(
name|dumpDir
argument_list|,
name|filename
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|dumpFile
operator|.
name|exists
argument_list|()
condition|)
block|{
name|fail
argument_list|(
literal|"Dump file "
operator|+
name|dumpFile
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|" does not exist (should it?)."
argument_list|)
expr_stmt|;
block|}
return|return
name|dumpFile
return|;
block|}
specifier|private
name|ArchivaArtifact
name|createArchivaArtifact
parameter_list|(
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|String
name|classifier
parameter_list|,
name|String
name|type
parameter_list|)
block|{
name|ArchivaArtifact
name|artifact
init|=
operator|new
name|ArchivaArtifact
argument_list|(
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
name|classifier
argument_list|,
name|type
argument_list|)
decl_stmt|;
return|return
name|artifact
return|;
block|}
specifier|protected
name|void
name|createEmptyIndex
parameter_list|()
throws|throws
name|IOException
block|{
name|createIndex
argument_list|(
name|Collections
operator|.
name|EMPTY_LIST
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|createIndex
parameter_list|(
name|List
name|documents
parameter_list|)
throws|throws
name|IOException
block|{
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|index
operator|.
name|getIndexDirectory
argument_list|()
argument_list|,
name|indexHandlers
operator|.
name|getAnalyzer
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|documents
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Document
name|document
init|=
operator|(
name|Document
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|optimize
argument_list|()
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

