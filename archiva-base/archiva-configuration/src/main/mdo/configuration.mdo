<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<model>
  <id>configuration</id>
  <name>Configuration</name>
  <description>
    Configuration for the Maven Repository Manager.
  </description>
  <defaults>
    <default>
      <key>package</key>
      <value>org.apache.maven.archiva.configuration</value>
    </default>
  </defaults>
  <classes>
    <class rootElement="true" xml.tagName="configuration">
      <name>Configuration</name>
      <version>1.0.0+</version>
      <fields>
        <field>
          <name>repositories</name>
          <version>1.0.0+</version>
          <association>
            <type>RepositoryConfiguration</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>The list of repositories that this archiva instance uses.</description>
        </field>
        <field>
          <name>proxyConnectors</name>
          <version>1.0.0+</version>
          <association>
            <type>RepositoryProxyConnectorConfiguration</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>The list of proxy connectors for this archiva instance.</description>
        </field>
        <!-- To be introduced later.
        <field>
          <name>syncConnectors</name>
          <version>1.0.0+</version>
          <association>
            <type>RepositorySyncConnectorConfiguration</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>The list of sync connectors for this archiva instance.</description>
        </field>
           -->
        <field>
          <name>networkProxies</name>
          <version>1.0.0+</version>
          <association>
            <type>ProxyConfiguration</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>
          	The list of network proxies to use for outgoing requests.
          </description>
        </field>
        <field>
          <name>repositoryScanning</name>
          <version>1.0.0+</version>
          <association>
            <type>RepositoryScanningConfiguration</type>
            <multiplicity>1</multiplicity>
          </association>
          <description>
            The repository scanning configuration.
          </description>
        </field>
        <field>
          <name>databaseScanning</name>
          <version>1.0.0+</version>
          <association>
            <type>DatabaseScanningConfiguration</type>
            <multiplicity>1</multiplicity>
          </association>
          <description>
            The database scanning configuration.
          </description>
        </field>
      </fields>
      <codeSegments>
        <codeSegment>
          <version>1.0.0+</version>
          <code><![CDATA[
    /**
     * Find {@link RepositoryConfiguration} with specified Id.
     *  
     * @param id the id of the repository to find.
     * @return the repository configuration.
     */
    public RepositoryConfiguration findRepositoryById( String id )
    {
        // null id = null repo config.
        if ( id == null )
        {
            return null;
        }

        // empty id = null repo config.
        if ( id.trim().length() <= 0 )
        {
            return null;
        }

        // null repository list = null repo config.
        if ( getRepositories() == null )
        {
            return null;
        }

        // empty repository list == null repo config.
        if ( getRepositories().isEmpty() )
        {
            return null;
        }

        // find the repository
        java.util.Iterator it = getRepositories().iterator();
        while ( it.hasNext() )
        {
            RepositoryConfiguration repoConfig = (RepositoryConfiguration) it.next();
            if ( id.equals( repoConfig.getId() ) )
            {
                return repoConfig;
            }
        }

        return null;
    }          
          ]]></code>
        </codeSegment>
      </codeSegments>
    </class>
    
    <!-- 
       ____                      _ _
      |  _ \ ___ _ __   ___  ___(_) |_ ___  _ __ _   _
      | |_) / _ \ '_ \ / _ \/ __| | __/ _ \| '__| | | |
      |  _ <  __/ |_) | (_) \__ \ | || (_) | |  | |_| |
      |_| \_\___| .__/ \___/|___/_|\__\___/|_|   \__, |
                |_|                              |___/
    
      -->
    
    <class>
      <name>RepositoryConfiguration</name>
      <version>1.0.0+</version>
      <fields>
        <field>
          <name>id</name>
          <version>1.0.0+</version>
          <type>String</type>
          <required>true</required>
          <description>
            The repository identifier.
          </description>
        </field>
        <field>
          <name>name</name>
          <version>1.0.0+</version>
          <type>String</type>
          <required>true</required>
          <description>
            The descriptive name of the repository.
          </description>
        </field>
        <field>
          <name>url</name>
          <version>1.0.0+</version>
          <type>String</type>
          <required>true</required>
          <description>
            The URL for this repository.
          </description>
        </field>
        <field>
          <name>layout</name>
          <version>1.0.0+</version>
          <type>String</type>
          <required>true</required>
          <description>
            The layout of the repository. Valid values are "default" and "legacy".
          </description>
          <!-- TODO: should be able to detect this from the repository (perhaps by metadata at the root) -->
          <defaultValue>default</defaultValue>
        </field>
        <field>
          <name>releases</name>
          <version>1.0.0+</version>
          <type>boolean</type>
          <description>True if this repository contains release versioned artifacts.</description>
          <defaultValue>true</defaultValue>
        </field>
        <field>
          <name>snapshots</name>
          <version>1.0.0+</version>
          <type>boolean</type>
          <description>True if this repository contains snapshot versioned artifacts.</description>
          <defaultValue>false</defaultValue>
        </field>
        <field>
          <name>indexed</name>
          <version>1.0.0+</version>
          <type>boolean</type>
          <description>True if this repository should be indexed.</description>
          <defaultValue>true</defaultValue>
        </field>
        <field>
          <name>indexDir</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            The directory for the indexes of this repository.
          </description>
        </field>
        <field>
          <name>refreshCronExpression</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
          	When to run the refresh task. 
          	Default is every 30 minutes (translated as every 0 and 30 minute reading of every hour)
          </description>
          <defaultValue>0 0,30 * * * ?</defaultValue>
        </field>
      </fields>
    </class>
    
    <!-- 
        ____                            _
       / ___|___  _ __  _ __   ___  ___| |_ ___  _ __ ___
      | |   / _ \| '_ \| '_ \ / _ \/ __| __/ _ \| '__/ __|
      | |__| (_) | | | | | | |  __/ (__| || (_) | |  \__ \
       \____\___/|_| |_|_| |_|\___|\___|\__\___/|_|  |___/
    
      -->
    
    <class>
      <name>AbstractRepositoryConnectorConfiguration</name>
      <abstract>true</abstract>
      <version>1.0.0+</version>
      <fields>
        <field>
          <name>sourceRepoId</name>
          <version>1.0.0+</version>
          <type>String</type>
          <required>true</required>
          <description>
            The Repository Source for this connector.
          </description>
        </field>
        <field>
          <name>targetRepoId</name>
          <version>1.0.0+</version>
          <type>String</type>
          <required>true</required>
          <description>
            The Repository Target for this connector.
          </description>
        </field>
        <field>
          <name>proxyId</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            The network proxy ID to use for this connector.
          </description>
        </field>
        <field>
          <name>blackListPatterns</name>
          <version>1.0.0+</version>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>
            The list of blacklisted patterns for this connector.
          </description>
        </field>
        <field>
          <name>whiteListPatterns</name>
          <version>1.0.0+</version>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>
            The list of whitelisted patterns for this connector.
          </description>
        </field>
      </fields>
    </class>
    
    <class>
      <superClass>AbstractRepositoryConnectorConfiguration</superClass>
      <name>RepositoryProxyConnectorConfiguration</name>
      <version>1.0.0+</version>
      <fields>
        <field>
          <name>snapshotsPolicy</name>
          <version>1.0.0+</version>
          <type>String</type>
          <defaultValue>disabled</defaultValue>
          <description>
            The policy for snapshots: 
              Can be one of the following keywords:
                "disabled" - means retrieval isn't even attempted.
                "daily"    - means snapshot is fetched, but only updated on
                             a daily basis. (equivalent to "1440" minutes)
                "hourly"   - means snapshot is fetched, but only updated on
                             an hourly basis. (equivalent to "60" minutes)
                "never"    - means snapshot is fetched once, but never updated.
                             (equivalent to "-1" minutes)
              Or it can be a number of minutes before updating of the snapshot.
          </description>
        </field>
        <field>
          <name>releasesPolicy</name>
          <version>1.0.0+</version>
          <type>String</type>
          <defaultValue>never</defaultValue>
          <description>
            The policy for releases: 
              Can be one of the following keywords:
                "disabled" - means retrieval isn't even attempted.
                "daily"    - means release is fetched, but only updated on
                             a daily basis. (equivalent to "1440" minutes)
                "hourly"   - means release is fetched, but only updated on
                             an hourly basis. (equivalent to "60" minutes)
                "never"    - means release is fetched once, but never updated.
                             (equivalent to "-1" minutes)
              Or it can be a number of minutes before updating of the release.
          </description>
        </field>
        <field>
          <name>failurePolicy</name>
          <version>1.0.0+</version>
          <type>String</type>
          <defaultValue>not-found</defaultValue>
          <description>
            The policy for dealing with proxy failures.
              Can be one of the following keywords:
                "not-found" - means if the retrieval has a failure, an HTTP 404 
                              (not found) is returned to the client of this
                              archiva instance.
                              This policy setting will allow other proxies
                              to be checked for content.
                "failure"   - means if the retrieval has a failure, an HTTP 500
                              (server error) is returned to the client of this
                              archiva instance.
                              This policy setting will return immediately to the
                              client of the archiva instance and not allow 
                              furthor attempts on other proxies for this content.
          </description>
        </field>
      </fields>
      <codeSegments>
        <codeSegment>
          <version>1.0.0+</version>
          <code><![CDATA[
          
   public static final String NEVER = "never";
   
   public static final String DISABLED = "disabled";
   
   public static final String DAILY = "daily";
   
   public static final String HOURLY = "hourly";
   
   public static final String NOT_FOUND = "not-found";
   
   public static final String FAILURE = "failure";
          
          ]]></code>
        </codeSegment>
      </codeSegments>
    </class>
    
    <class>
      <superClass>AbstractRepositoryConnectorConfiguration</superClass>
      <name>RepositorySynchConnectorConfiguration</name>
      <abstract>true</abstract>
      <version>1.0.0+</version>
      <fields>
        <field>
          <name>cronExpression</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>When to run the sync mechanism. Default is every hour on the hour.</description>
          <defaultValue>0 0 * * * ?</defaultValue>
        </field>
        <field>
          <name>method</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>The type of synchronization to use.</description>
          <defaultValue>rsync</defaultValue>
        </field>
        <field>
          <name>properties</name>
          <version>1.0.0+</version>
          <type>Properties</type>
          <description>Configuration for the repository synchronization.</description>
          <association xml.mapStyle="inline">
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
      </fields>
    </class>
    
    <!-- 
       ____                _
      |  _ \ _ __ _____  _(_) ___  ___
      | |_) | '__/ _ \ \/ / |/ _ \/ __|
      |  __/| | | (_) >  <| |  __/\__ \
      |_|   |_|  \___/_/\_\_|\___||___/
    
      -->
    
    <class>
      <name>ProxyConfiguration</name>
      <version>1.0.0+</version>
      <fields>
        <field>
          <name>id</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            The ID for this proxy.
          </description>
        </field>
        <field>
          <name>protocol</name>
          <version>1.0.0+</version>
          <description>
            The network protocol to use with this proxy.
          </description>
          <type>String</type>
          <required>true</required>
          <defaultValue>http</defaultValue>
        </field>
        <field>
          <name>host</name>
          <version>1.0.0+</version>
          <description>
          	The proxy host.
          </description>
          <type>String</type>
          <required>true</required>
        </field>
        <field>
          <name>port</name>
          <version>1.0.0+</version>
          <description>
          	The proxy port.
          </description>
          <type>int</type>
          <defaultValue>8080</defaultValue>
        </field>
        <field>
          <name>username</name>
          <version>1.0.0+</version>
          <description>
          	The proxy user.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>password</name>
          <version>1.0.0+</version>
          <description>
          	The proxy password.
          </description>
          <type>String</type>
        </field>
      </fields>
    </class>
    
    <!-- 
       ____                        _
      / ___|  ___ __ _ _ __  _ __ (_)_ __   __ _
      \___ \ / __/ _` | '_ \| '_ \| | '_ \ / _` |
       ___) | (_| (_| | | | | | | | | | | | (_| |
      |____/ \___\__,_|_| |_|_| |_|_|_| |_|\__, |
                                           |___/
    
      -->
    <class>
      <name>RepositoryScanningConfiguration</name>
      <version>1.0.0+</version>
      <fields>
        <field>
          <name>fileTypes</name>
          <version>1.0.0+</version>
          <required>true</required>
          <association>
            <type>FileType</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>
            The FileTypes for the repository scanning configuration.
          </description>
        </field>
        <field>
          <name>goodConsumers</name>
          <version>1.0.0+</version>
          <required>true</required>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>
            The list of consumers for good content.
          </description>
        </field>
        <field>
          <name>badConsumers</name>
          <version>1.0.0+</version>
          <required>true</required>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>
            The list of consumer IDs for this file processor.
          </description>
        </field>
      </fields>
      <codeSegments>
        <codeSegment>
          <version>1.0.0+</version>
          <code><![CDATA[
    /**
     * Get a specific file type by ID.
     * 
     * @param id the id of the filetype to get. (null or empty will result in null return)
     * @return the {@link FileType} or null if the id is not found.
     */
    public FileType getFileTypeById( String id )
    {
        if ( id == null )
        {
            return null;
        }

        if ( id.trim().length() <= 0 )
        {
            return null;
        }

        java.util.List types = getFileTypes();
        if ( types == null )
        {
            return null;
        }
        
        java.util.Iterator it = types.iterator();
        while ( it.hasNext() )
        {
            FileType filetype = (FileType) it.next();
            if ( id.equals( filetype.getId() ) )
            {
                return filetype;
            }
        }

        return null;
    }          
          ]]></code>
        </codeSegment>
      </codeSegments>
    </class>
    <class>
      <name>FileType</name>
      <version>1.0.0+</version>
      <description>The FileType object</description>
      <fields>
        <field>
          <name>id</name>
          <version>1.0.0+</version>
          <required>true</required>
          <type>String</type>
        </field>
        <field>
          <name>patterns</name>
          <version>1.0.0+</version>
          <required>true</required>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
      </fields>
    </class>
    <class>
      <name>DatabaseScanningConfiguration</name>
      <version>1.0.0+</version>
      <description>
        The scanning configuration for unprocessed ArchivaArtifact database objects.
      </description>
      <fields>
        <field>
          <name>cronExpression</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>When to run the database scanning mechanism. Default is every hour on the hour.</description>
          <defaultValue>0 0 * * * ?</defaultValue>
        </field>
        <field>
          <name>unprocessedConsumers</name>
          <version>1.0.0+</version>
          <required>true</required>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>
            The list of consumers for the unprocessed ArchivaArtifact database objects.
          </description>
        </field>
        <field>
          <name>processedConsumers</name>
          <version>1.0.0+</version>
          <required>true</required>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>
            The list of consumers for previously processed ArchivaArtifact database objects.
          </description>
        </field>
      </fields>
    </class>
    
  </classes>
</model>


