begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|common
operator|.
name|artifact
operator|.
name|builder
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_comment
comment|/**  * DefaultLayoutArtifactBuilderTest   *  * @author<a href="mailto:brett@apache.org">Brett Porter</a>  * @author<a href="mailto:joakime@apache.org">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|DefaultLayoutArtifactBuilderTest
extends|extends
name|AbstractLayoutArtifactBuilderTestCase
block|{
name|LayoutArtifactBuilder
name|builder
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|builder
operator|=
operator|(
name|LayoutArtifactBuilder
operator|)
name|lookup
argument_list|(
name|LayoutArtifactBuilder
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|"default"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|builder
operator|!=
literal|null
condition|)
block|{
name|release
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testPathDistributionArtifacts
parameter_list|()
throws|throws
name|BuilderException
block|{
name|assertArtifact
argument_list|(
literal|"org.apache.maven"
argument_list|,
literal|"testing"
argument_list|,
literal|"1.0"
argument_list|,
literal|"distribution-tgz"
argument_list|,
literal|null
argument_list|,
name|builder
operator|.
name|build
argument_list|(
literal|"org/apache/maven/testing/1.0/testing-1.0.tar.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|assertArtifact
argument_list|(
literal|"org.apache.maven"
argument_list|,
literal|"testing"
argument_list|,
literal|"1.0"
argument_list|,
literal|"distribution-zip"
argument_list|,
literal|null
argument_list|,
name|builder
operator|.
name|build
argument_list|(
literal|"org/apache/maven/testing/1.0/testing-1.0.zip"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testPathNormal
parameter_list|()
throws|throws
name|BuilderException
block|{
name|assertArtifact
argument_list|(
literal|"org.apache.maven.wagon"
argument_list|,
literal|"wagon"
argument_list|,
literal|"1.0"
argument_list|,
literal|"jar"
argument_list|,
literal|null
argument_list|,
name|builder
operator|.
name|build
argument_list|(
literal|"/org/apache/maven/wagon/wagon/1.0/wagon-1.0.jar"
argument_list|)
argument_list|)
expr_stmt|;
name|assertArtifact
argument_list|(
literal|"org.apache.maven.wagon"
argument_list|,
literal|"wagon"
argument_list|,
literal|"1.0"
argument_list|,
literal|"jar"
argument_list|,
literal|null
argument_list|,
name|builder
operator|.
name|build
argument_list|(
literal|"org/apache/maven/wagon/wagon/1.0/wagon-1.0.jar"
argument_list|)
argument_list|)
expr_stmt|;
name|assertArtifact
argument_list|(
literal|"javax.sql"
argument_list|,
literal|"jdbc"
argument_list|,
literal|"2.0"
argument_list|,
literal|"jar"
argument_list|,
literal|null
argument_list|,
name|builder
operator|.
name|build
argument_list|(
literal|"javax/sql/jdbc/2.0/jdbc-2.0.jar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testPathSnapshots
parameter_list|()
throws|throws
name|BuilderException
block|{
name|assertArtifact
argument_list|(
literal|"org.apache.maven"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0-SNAPSHOT"
argument_list|,
literal|"jar"
argument_list|,
literal|null
argument_list|,
name|builder
operator|.
name|build
argument_list|(
literal|"org/apache/maven/test/1.0-SNAPSHOT/test-1.0-SNAPSHOT.jar"
argument_list|)
argument_list|)
expr_stmt|;
name|assertArtifact
argument_list|(
literal|"org.apache.maven"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0-20050611.112233-1"
argument_list|,
literal|"jar"
argument_list|,
literal|null
argument_list|,
name|builder
operator|.
name|build
argument_list|(
literal|"org/apache/maven/test/1.0-SNAPSHOT/test-1.0-20050611.112233-1.jar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testPathSnapshotWithClassifier
parameter_list|()
throws|throws
name|BuilderException
block|{
name|assertArtifact
argument_list|(
literal|"org.apache.maven"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0-20050611.112233-1"
argument_list|,
literal|"jar"
argument_list|,
literal|"javadoc"
argument_list|,
name|builder
operator|.
name|build
argument_list|(
literal|"org/apache/maven/test/1.0-SNAPSHOT/test-1.0-20050611.112233-1-javadoc.jar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testPathWithClassifier
parameter_list|()
throws|throws
name|BuilderException
block|{
name|assertArtifact
argument_list|(
literal|"org.apache.maven"
argument_list|,
literal|"some-ejb"
argument_list|,
literal|"1.0"
argument_list|,
literal|"jar"
argument_list|,
literal|"client"
argument_list|,
name|builder
operator|.
name|build
argument_list|(
literal|"org/apache/maven/some-ejb/1.0/some-ejb-1.0-client.jar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testPathWithJavaSourceInclusion
parameter_list|()
throws|throws
name|BuilderException
block|{
name|assertArtifact
argument_list|(
literal|"org.apache.maven"
argument_list|,
literal|"testing"
argument_list|,
literal|"1.0"
argument_list|,
literal|"java-source"
argument_list|,
literal|"sources"
argument_list|,
name|builder
operator|.
name|build
argument_list|(
literal|"org/apache/maven/testing/1.0/testing-1.0-sources.jar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testProblemMissingType
parameter_list|()
block|{
try|try
block|{
name|builder
operator|.
name|build
argument_list|(
literal|"invalid/invalid/1/invalid-1"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have detected missing type."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BuilderException
name|e
parameter_list|)
block|{
comment|/* expected path */
name|assertEquals
argument_list|(
literal|"Path filename does not have an extension."
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testProblemNonSnapshotInSnapshotDir
parameter_list|()
block|{
try|try
block|{
name|builder
operator|.
name|build
argument_list|(
literal|"invalid/invalid/1.0-SNAPSHOT/invalid-1.0.jar"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Non Snapshot artifact inside of an Snapshot dir is invalid."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BuilderException
name|e
parameter_list|)
block|{
comment|/* expected path */
name|assertEquals
argument_list|(
literal|"Failed to create a snapshot artifact: invalid:invalid:jar:1.0:runtime"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testProblemPathTooShort
parameter_list|()
block|{
try|try
block|{
name|builder
operator|.
name|build
argument_list|(
literal|"invalid/invalid-1.0.jar"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have detected that path is too short."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BuilderException
name|e
parameter_list|)
block|{
comment|/* expected path */
name|assertEquals
argument_list|(
literal|"Path is too short to build an artifact from."
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testProblemTimestampSnapshotNotInSnapshotDir
parameter_list|()
block|{
try|try
block|{
name|builder
operator|.
name|build
argument_list|(
literal|"invalid/invalid/1.0-20050611.123456-1/invalid-1.0-20050611.123456-1.jar"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Timestamped Snapshot artifact not inside of an Snapshot dir is invalid."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BuilderException
name|e
parameter_list|)
block|{
comment|/* expected path */
comment|// TODO: Is this really the right thing to do for this kind of artifact??
name|assertEquals
argument_list|(
literal|"Built snapshot artifact base version does not match path version: 1.0-SNAPSHOT; "
operator|+
literal|"should have been version: 1.0-20050611.123456-1"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testProblemVersionPathMismatch
parameter_list|()
block|{
try|try
block|{
name|builder
operator|.
name|build
argument_list|(
literal|"invalid/invalid/1.0/invalid-2.0.jar"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have detected version mismatch between path and artifact."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BuilderException
name|e
parameter_list|)
block|{
comment|/* expected path */
name|assertEquals
argument_list|(
literal|"Built artifact version does not match path version"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testProblemVersionPathMismatchAlt
parameter_list|()
block|{
try|try
block|{
name|builder
operator|.
name|build
argument_list|(
literal|"invalid/invalid/1.0/invalid-1.0b.jar"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have version mismatch between directory and artifact."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BuilderException
name|e
parameter_list|)
block|{
comment|/* expected path */
name|assertEquals
argument_list|(
literal|"Path version does not corresspond to an artifact version"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testProblemWrongArtifactId
parameter_list|()
block|{
try|try
block|{
name|builder
operator|.
name|build
argument_list|(
literal|"org/apache/maven/test/1.0-SNAPSHOT/wrong-artifactId-1.0-20050611.112233-1.jar"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have detected wrong artifact Id."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BuilderException
name|e
parameter_list|)
block|{
comment|/* expected path */
name|assertEquals
argument_list|(
literal|"Path filename does not correspond to an artifact."
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

