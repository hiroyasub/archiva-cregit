begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|metadata
operator|.
name|ArtifactMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepositoryPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|layout
operator|.
name|ArtifactRepositoryLayout
import|;
end_import

begin_comment
comment|/**  * Repository   *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|Repository
implements|implements
name|ArtifactRepository
block|{
specifier|protected
name|String
name|id
decl_stmt|;
specifier|protected
name|String
name|name
decl_stmt|;
specifier|protected
name|String
name|source
decl_stmt|;
specifier|protected
name|RepositoryURL
name|url
decl_stmt|;
specifier|protected
name|ArtifactRepositoryLayout
name|layout
decl_stmt|;
specifier|protected
name|ArtifactRepositoryPolicy
name|releases
decl_stmt|;
specifier|protected
name|ArtifactRepositoryPolicy
name|snapshots
decl_stmt|;
specifier|protected
name|boolean
name|blacklisted
decl_stmt|;
comment|/* .\ Constructor \.__________________________________________________ */
comment|/**      * Construct a Repository.      *       * @param id the unique identifier for this repository.      * @param name the name for this repository.      * @param url the base URL for this repository (this should point to the top level URL for the entire repository)      * @param layout the layout technique for this repository.      */
specifier|public
name|Repository
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|url
parameter_list|,
name|ArtifactRepositoryLayout
name|layout
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|url
operator|=
operator|new
name|RepositoryURL
argument_list|(
name|url
argument_list|)
expr_stmt|;
name|this
operator|.
name|layout
operator|=
name|layout
expr_stmt|;
block|}
comment|/* .\ Information \.__________________________________________________ */
comment|/**      * Get the unique ID for this repository.      *       * @return the unique ID for this repository.      */
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
comment|/**      * Get the Name of this repository.      * This is usually the human readable name for the repository.      *       * @return the name of this repository.      */
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|String
name|getUrl
parameter_list|()
block|{
return|return
name|url
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|void
name|setLayout
parameter_list|(
name|ArtifactRepositoryLayout
name|layout
parameter_list|)
block|{
name|this
operator|.
name|layout
operator|=
name|layout
expr_stmt|;
block|}
specifier|public
name|ArtifactRepositoryLayout
name|getLayout
parameter_list|()
block|{
return|return
name|layout
return|;
block|}
specifier|public
name|void
name|setSource
parameter_list|(
name|String
name|source
parameter_list|)
block|{
name|this
operator|.
name|source
operator|=
name|source
expr_stmt|;
block|}
specifier|public
name|String
name|getSource
parameter_list|()
block|{
return|return
name|source
return|;
block|}
comment|/* .\ Tasks \.________________________________________________________ */
specifier|public
name|String
name|pathOf
parameter_list|(
name|Artifact
name|artifact
parameter_list|)
block|{
return|return
name|getLayout
argument_list|()
operator|.
name|pathOf
argument_list|(
name|artifact
argument_list|)
return|;
block|}
comment|/* .\ State \.________________________________________________________ */
specifier|public
name|void
name|setBlacklisted
parameter_list|(
name|boolean
name|blacklisted
parameter_list|)
block|{
name|this
operator|.
name|blacklisted
operator|=
name|blacklisted
expr_stmt|;
block|}
specifier|public
name|boolean
name|isBlacklisted
parameter_list|()
block|{
return|return
name|blacklisted
return|;
block|}
specifier|public
name|boolean
name|isManaged
parameter_list|()
block|{
return|return
name|this
operator|.
name|url
operator|.
name|getProtocol
argument_list|()
operator|.
name|equals
argument_list|(
literal|"file"
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isRemote
parameter_list|()
block|{
return|return
operator|!
name|this
operator|.
name|url
operator|.
name|getProtocol
argument_list|()
operator|.
name|equals
argument_list|(
literal|"file"
argument_list|)
return|;
block|}
specifier|public
name|void
name|setSnapshots
parameter_list|(
name|ArtifactRepositoryPolicy
name|snapshots
parameter_list|)
block|{
name|this
operator|.
name|snapshots
operator|=
name|snapshots
expr_stmt|;
block|}
specifier|public
name|ArtifactRepositoryPolicy
name|getSnapshots
parameter_list|()
block|{
return|return
name|snapshots
return|;
block|}
specifier|public
name|void
name|setReleases
parameter_list|(
name|ArtifactRepositoryPolicy
name|releases
parameter_list|)
block|{
name|this
operator|.
name|releases
operator|=
name|releases
expr_stmt|;
block|}
specifier|public
name|ArtifactRepositoryPolicy
name|getReleases
parameter_list|()
block|{
return|return
name|releases
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|other
parameter_list|)
block|{
return|return
operator|(
name|other
operator|==
name|this
operator|||
operator|(
operator|(
name|other
operator|instanceof
name|Repository
operator|)
operator|&&
operator|(
operator|(
name|Repository
operator|)
name|other
operator|)
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|getId
argument_list|()
argument_list|)
operator|)
operator|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
comment|/* .\ ArtifactRepository Requirements \.______________________________ */
specifier|public
name|String
name|getBasedir
parameter_list|()
block|{
return|return
name|url
operator|.
name|getPath
argument_list|()
return|;
block|}
specifier|public
name|String
name|getKey
parameter_list|()
block|{
return|return
name|getId
argument_list|()
return|;
block|}
specifier|public
name|String
name|getProtocol
parameter_list|()
block|{
return|return
name|url
operator|.
name|getProtocol
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isUniqueVersion
parameter_list|()
block|{
comment|// TODO: Determine Importance
return|return
literal|false
return|;
block|}
specifier|public
name|String
name|pathOfRemoteRepositoryMetadata
parameter_list|(
name|ArtifactMetadata
name|artifactMetadata
parameter_list|)
block|{
return|return
name|layout
operator|.
name|pathOfRemoteRepositoryMetadata
argument_list|(
name|artifactMetadata
argument_list|)
return|;
block|}
specifier|public
name|String
name|pathOfLocalRepositoryMetadata
parameter_list|(
name|ArtifactMetadata
name|metadata
parameter_list|,
name|ArtifactRepository
name|repository
parameter_list|)
block|{
return|return
name|layout
operator|.
name|pathOfLocalRepositoryMetadata
argument_list|(
name|metadata
argument_list|,
name|repository
argument_list|)
return|;
block|}
block|}
end_class

end_unit

