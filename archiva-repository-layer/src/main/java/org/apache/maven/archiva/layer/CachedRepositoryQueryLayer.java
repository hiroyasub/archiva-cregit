begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|layer
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepository
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|CachedRepositoryQueryLayer
implements|implements
name|RepositoryQueryLayer
block|{
specifier|private
name|Cache
name|cache
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|double
name|CACHE_HIT_RATIO
init|=
literal|0.5
decl_stmt|;
specifier|private
name|RepositoryQueryLayer
name|layer
decl_stmt|;
specifier|public
name|CachedRepositoryQueryLayer
parameter_list|(
name|RepositoryQueryLayer
name|layer
parameter_list|)
block|{
name|this
operator|.
name|layer
operator|=
name|layer
expr_stmt|;
name|cache
operator|=
operator|new
name|Cache
argument_list|(
name|CACHE_HIT_RATIO
argument_list|)
expr_stmt|;
block|}
specifier|public
name|CachedRepositoryQueryLayer
parameter_list|(
name|RepositoryQueryLayer
name|layer
parameter_list|,
name|Cache
name|cache
parameter_list|)
block|{
name|this
operator|.
name|cache
operator|=
name|cache
expr_stmt|;
name|this
operator|.
name|layer
operator|=
name|layer
expr_stmt|;
block|}
specifier|public
name|double
name|getCacheHitRate
parameter_list|()
block|{
return|return
name|cache
operator|.
name|getHitRate
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|containsArtifact
parameter_list|(
name|Artifact
name|artifact
parameter_list|)
block|{
name|boolean
name|artifactFound
init|=
literal|true
decl_stmt|;
name|String
name|artifactPath
init|=
name|layer
operator|.
name|getRepository
argument_list|()
operator|.
name|pathOf
argument_list|(
name|artifact
argument_list|)
decl_stmt|;
if|if
condition|(
name|cache
operator|.
name|get
argument_list|(
name|artifactPath
argument_list|)
operator|==
literal|null
condition|)
block|{
name|artifactFound
operator|=
name|layer
operator|.
name|containsArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
if|if
condition|(
name|artifactFound
condition|)
block|{
name|cache
operator|.
name|put
argument_list|(
name|artifactPath
argument_list|,
name|artifactPath
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|artifactFound
return|;
block|}
specifier|public
name|List
name|getVersions
parameter_list|(
name|Artifact
name|artifact
parameter_list|)
throws|throws
name|RepositoryQueryLayerException
block|{
name|List
name|list
init|=
operator|(
name|List
operator|)
name|cache
operator|.
name|get
argument_list|(
name|artifact
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|list
operator|==
literal|null
condition|)
block|{
name|list
operator|=
name|layer
operator|.
name|getVersions
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|cache
operator|.
name|put
argument_list|(
name|artifact
operator|.
name|getId
argument_list|()
argument_list|,
name|list
argument_list|)
expr_stmt|;
block|}
return|return
name|list
return|;
block|}
specifier|public
name|ArtifactRepository
name|getRepository
parameter_list|()
block|{
return|return
name|layer
operator|.
name|getRepository
argument_list|()
return|;
block|}
block|}
end_class

end_unit

