begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|scanner
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|model
operator|.
name|RepositoryContentStatistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|ArchivaRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|RepositoryException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|PlexusTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * RepositoryScannerTest   *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|RepositoryScannerTest
extends|extends
name|PlexusTestCase
block|{
specifier|private
name|ArchivaRepository
name|createDefaultRepository
parameter_list|()
block|{
name|File
name|repoDir
init|=
operator|new
name|File
argument_list|(
name|getBasedir
argument_list|()
argument_list|,
literal|"src/test/repositories/default-repository"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Default Test Repository should exist."
argument_list|,
name|repoDir
operator|.
name|exists
argument_list|()
operator|&&
name|repoDir
operator|.
name|isDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|repoUri
init|=
literal|"file://"
operator|+
name|StringUtils
operator|.
name|replace
argument_list|(
name|repoDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
literal|"\\"
argument_list|,
literal|"/"
argument_list|)
decl_stmt|;
name|ArchivaRepository
name|repo
init|=
operator|new
name|ArchivaRepository
argument_list|(
literal|"testDefaultRepo"
argument_list|,
literal|"Test Default Repository"
argument_list|,
name|repoUri
argument_list|)
decl_stmt|;
return|return
name|repo
return|;
block|}
specifier|public
name|void
name|testDefaultRepositoryScanner
parameter_list|()
throws|throws
name|RepositoryException
block|{
name|ArchivaRepository
name|repository
init|=
name|createDefaultRepository
argument_list|()
decl_stmt|;
name|List
name|consumers
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|ScanConsumer
name|consumer
init|=
operator|new
name|ScanConsumer
argument_list|()
decl_stmt|;
name|consumers
operator|.
name|add
argument_list|(
name|consumer
argument_list|)
expr_stmt|;
name|RepositoryScanner
name|scanner
init|=
operator|new
name|RepositoryScanner
argument_list|()
decl_stmt|;
name|boolean
name|includeSnapshots
init|=
literal|true
decl_stmt|;
name|RepositoryContentStatistics
name|stats
init|=
name|scanner
operator|.
name|scan
argument_list|(
name|repository
argument_list|,
name|consumers
argument_list|,
name|includeSnapshots
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Stats should not be null."
argument_list|,
name|stats
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Stats.totalFileCount"
argument_list|,
literal|17
argument_list|,
name|stats
operator|.
name|getTotalFileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Processed Count"
argument_list|,
literal|17
argument_list|,
name|consumer
operator|.
name|getProcessCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

