begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|plugins
operator|.
name|dev
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|plugins
operator|.
name|dev
operator|.
name|testgen
operator|.
name|DependencyGraphTestCreator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|plugins
operator|.
name|dev
operator|.
name|testgen
operator|.
name|MemoryRepositoryCreator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|plugins
operator|.
name|dev
operator|.
name|utils
operator|.
name|VariableNames
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|factory
operator|.
name|ArtifactFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|metadata
operator|.
name|ArtifactMetadataSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|resolver
operator|.
name|ArtifactCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|AbstractMojo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|MojoExecutionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|MojoFailureException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|project
operator|.
name|MavenProject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|shared
operator|.
name|dependency
operator|.
name|tree
operator|.
name|DependencyTreeBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_comment
comment|/**  * CreateArchivaDependencyResolutionTestCaseMojo   *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  *   * @goal generate-dependency-tests  */
end_comment

begin_class
specifier|public
class|class
name|CreateArchivaDependencyResolutionTestCaseMojo
extends|extends
name|AbstractMojo
block|{
comment|/**      * The project of the current build.      *       * @parameter default-value="${project}"      * @required      * @readonly      */
specifier|private
name|MavenProject
name|project
decl_stmt|;
comment|/**      * The artifact respository to use.      *       * @parameter expression="${localRepository}"      * @required      * @readonly      */
specifier|private
name|ArtifactRepository
name|localRepository
decl_stmt|;
comment|/**      * The destination directory to generate the test files.      *       * @parameter expression="${archivadev.outputdir}" default-value="${project.build.directory}"      * @required      */
specifier|private
name|File
name|destDir
decl_stmt|;
comment|/**      * The artifact factory to use.      *       * @component      */
specifier|private
name|ArtifactFactory
name|artifactFactory
decl_stmt|;
comment|/**      * @component      */
specifier|private
name|DependencyTreeBuilder
name|dependencyTreeBuilder
decl_stmt|;
comment|/**      * @component      */
specifier|protected
name|ArtifactMetadataSource
name|artifactMetadataSource
decl_stmt|;
comment|/**      * @component      */
specifier|private
name|ArtifactCollector
name|collector
decl_stmt|;
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|MojoExecutionException
throws|,
name|MojoFailureException
block|{
name|String
name|classPrefix
init|=
name|VariableNames
operator|.
name|toClassName
argument_list|(
name|project
operator|.
name|getArtifactId
argument_list|()
argument_list|)
decl_stmt|;
name|getLog
argument_list|()
operator|.
name|info
argument_list|(
literal|"Generating into "
operator|+
name|destDir
argument_list|)
expr_stmt|;
name|createMemoryRepository
argument_list|(
name|classPrefix
argument_list|)
expr_stmt|;
name|createDependencyGraphTest
argument_list|(
name|classPrefix
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createDependencyGraphTest
parameter_list|(
name|String
name|classPrefix
parameter_list|)
throws|throws
name|MojoExecutionException
block|{
name|DependencyGraphTestCreator
name|creator
init|=
operator|new
name|DependencyGraphTestCreator
argument_list|()
decl_stmt|;
name|creator
operator|.
name|setLog
argument_list|(
name|getLog
argument_list|()
argument_list|)
expr_stmt|;
name|creator
operator|.
name|setOutputDir
argument_list|(
name|destDir
argument_list|)
expr_stmt|;
name|creator
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|creator
operator|.
name|setArtifactFactory
argument_list|(
name|artifactFactory
argument_list|)
expr_stmt|;
name|creator
operator|.
name|setLocalRepository
argument_list|(
name|localRepository
argument_list|)
expr_stmt|;
name|creator
operator|.
name|setDependencyTreeBuilder
argument_list|(
name|dependencyTreeBuilder
argument_list|)
expr_stmt|;
name|creator
operator|.
name|setArtifactMetadataSource
argument_list|(
name|artifactMetadataSource
argument_list|)
expr_stmt|;
name|creator
operator|.
name|setCollector
argument_list|(
name|collector
argument_list|)
expr_stmt|;
name|creator
operator|.
name|create
argument_list|(
name|classPrefix
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createMemoryRepository
parameter_list|(
name|String
name|classPrefix
parameter_list|)
throws|throws
name|MojoExecutionException
block|{
name|MemoryRepositoryCreator
name|creator
init|=
operator|new
name|MemoryRepositoryCreator
argument_list|()
decl_stmt|;
name|creator
operator|.
name|setLog
argument_list|(
name|getLog
argument_list|()
argument_list|)
expr_stmt|;
name|creator
operator|.
name|setOutputDir
argument_list|(
name|destDir
argument_list|)
expr_stmt|;
name|creator
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|creator
operator|.
name|setArtifactFactory
argument_list|(
name|artifactFactory
argument_list|)
expr_stmt|;
name|creator
operator|.
name|setLocalRepository
argument_list|(
name|localRepository
argument_list|)
expr_stmt|;
name|creator
operator|.
name|create
argument_list|(
name|classPrefix
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

