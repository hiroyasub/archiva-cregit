begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) 2005 Your Corporation. All Rights Reserved.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|reporting
package|;
end_package

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|PlexusTestCase
import|;
end_import

begin_comment
comment|/**  * Test the artifact reporter.  *  * @author<a href="mailto:jtolentino@mergere.com">John Tolentino</a>  */
end_comment

begin_class
specifier|public
class|class
name|DefaultRepositoryQueryLayerTest
extends|extends
name|PlexusTestCase
block|{
specifier|private
name|RepositoryQueryLayer
name|queryLayer
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|queryLayer
operator|=
operator|(
name|RepositoryQueryLayer
operator|)
name|lookup
argument_list|(
name|RepositoryQueryLayer
operator|.
name|ROLE
argument_list|,
literal|"default"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testNonExistingArtifact
parameter_list|()
block|{
name|assertTrue
argument_list|(
name|queryLayer
operator|.
name|containsArtifact
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|queryLayer
operator|=
literal|null
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|/*  * Copyright (c) 2005 Your Corporation. All Rights Reserved.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|reporting
package|;
end_package

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|PlexusTestCase
import|;
end_import

begin_comment
comment|/**  * Test the artifact reporter.  *  * @author<a href="mailto:jtolentino@mergere.com">John Tolentino</a>  */
end_comment

begin_class
specifier|public
class|class
name|DefaultRepositoryQueryLayerTest
extends|extends
name|PlexusTestCase
block|{
specifier|private
name|RepositoryQueryLayer
name|queryLayer
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|queryLayer
operator|=
operator|(
name|RepositoryQueryLayer
operator|)
name|lookup
argument_list|(
name|RepositoryQueryLayer
operator|.
name|ROLE
argument_list|,
literal|"default"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testNonExistingArtifact
parameter_list|()
block|{
name|assertTrue
argument_list|(
name|queryLayer
operator|.
name|containsArtifact
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|queryLayer
operator|=
literal|null
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|/*  * Copyright (c) 2005 Your Corporation. All Rights Reserved.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|reporting
package|;
end_package

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|PlexusTestCase
import|;
end_import

begin_comment
comment|/**  * Test the artifact reporter.  *  * @author<a href="mailto:jtolentino@mergere.com">John Tolentino</a>  */
end_comment

begin_class
specifier|public
class|class
name|DefaultRepositoryQueryLayerTest
extends|extends
name|PlexusTestCase
block|{
specifier|private
name|RepositoryQueryLayer
name|queryLayer
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|queryLayer
operator|=
operator|(
name|RepositoryQueryLayer
operator|)
name|lookup
argument_list|(
name|RepositoryQueryLayer
operator|.
name|ROLE
argument_list|,
literal|"default"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testNonExistingArtifact
parameter_list|()
block|{
name|assertTrue
argument_list|(
name|queryLayer
operator|.
name|containsArtifact
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|queryLayer
operator|=
literal|null
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

