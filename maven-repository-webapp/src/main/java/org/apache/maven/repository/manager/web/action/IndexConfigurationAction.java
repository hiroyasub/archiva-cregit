begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|manager
operator|.
name|web
operator|.
name|action
package|;
end_package

begin_comment
comment|/*  * Copyright 2006 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|com
operator|.
name|opensymphony
operator|.
name|xwork
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|com
operator|.
name|opensymphony
operator|.
name|webwork
operator|.
name|interceptor
operator|.
name|ParameterAware
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|manager
operator|.
name|web
operator|.
name|utils
operator|.
name|ConfigurationManager
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:oching@apache.org">Maria Odea Ching</a>  * @plexus.component role="com.opensymphony.xwork.Action" role-hint="org.apache.maven.repository.manager.web.action.IndexConfigurationAction"  */
end_comment

begin_class
specifier|public
class|class
name|IndexConfigurationAction
implements|implements
name|Action
implements|,
name|ParameterAware
block|{
specifier|private
name|Map
name|parameters
decl_stmt|;
comment|/**      * @plexus.requirement      */
specifier|private
name|ConfigurationManager
name|configManager
decl_stmt|;
specifier|public
name|Map
name|getParameters
parameter_list|()
block|{
return|return
name|parameters
return|;
block|}
specifier|public
name|void
name|setParameters
parameter_list|(
name|Map
name|parameters
parameter_list|)
block|{
name|this
operator|.
name|parameters
operator|=
name|parameters
expr_stmt|;
block|}
comment|/**      * Method that is executed when the action is invoked.      *      * @return a String that specifies where to go to next      * @throws Exception      */
specifier|public
name|String
name|execute
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|indexPath
init|=
operator|(
name|String
index|[]
operator|)
name|parameters
operator|.
name|get
argument_list|(
name|ConfigurationManager
operator|.
name|INDEXPATH
argument_list|)
decl_stmt|;
name|Map
name|map
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
if|if
condition|(
name|indexPath
operator|!=
literal|null
operator|&&
name|indexPath
operator|.
name|length
operator|==
literal|1
operator|&&
name|indexPath
index|[
literal|0
index|]
operator|!=
literal|null
condition|)
block|{
name|String
index|[]
name|discoverSnapshots
init|=
operator|(
name|String
index|[]
operator|)
name|parameters
operator|.
name|get
argument_list|(
name|ConfigurationManager
operator|.
name|DISCOVER_SNAPSHOTS
argument_list|)
decl_stmt|;
name|String
index|[]
name|minimalIndexPath
init|=
operator|(
name|String
index|[]
operator|)
name|parameters
operator|.
name|get
argument_list|(
name|ConfigurationManager
operator|.
name|MIN_INDEXPATH
argument_list|)
decl_stmt|;
if|if
condition|(
name|minimalIndexPath
operator|!=
literal|null
operator|&&
name|minimalIndexPath
operator|.
name|length
operator|==
literal|1
operator|&&
name|minimalIndexPath
index|[
literal|0
index|]
operator|!=
literal|null
condition|)
block|{
name|map
operator|.
name|put
argument_list|(
name|ConfigurationManager
operator|.
name|MIN_INDEXPATH
argument_list|,
name|minimalIndexPath
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
name|map
operator|.
name|put
argument_list|(
name|ConfigurationManager
operator|.
name|INDEXPATH
argument_list|,
name|indexPath
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|ConfigurationManager
operator|.
name|DISCOVER_SNAPSHOTS
argument_list|,
name|discoverSnapshots
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|String
index|[]
name|blacklistPatterns
init|=
operator|(
name|String
index|[]
operator|)
name|parameters
operator|.
name|get
argument_list|(
name|ConfigurationManager
operator|.
name|DISCOVERY_BLACKLIST_PATTERNS
argument_list|)
decl_stmt|;
if|if
condition|(
name|blacklistPatterns
operator|!=
literal|null
operator|&&
name|blacklistPatterns
operator|.
name|length
operator|==
literal|1
operator|&&
name|blacklistPatterns
index|[
literal|0
index|]
operator|!=
literal|null
condition|)
block|{
name|map
operator|.
name|put
argument_list|(
name|ConfigurationManager
operator|.
name|DISCOVERY_BLACKLIST_PATTERNS
argument_list|,
name|blacklistPatterns
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
name|configManager
operator|.
name|updateConfiguration
argument_list|(
name|map
argument_list|)
expr_stmt|;
return|return
name|SUCCESS
return|;
block|}
else|else
block|{
return|return
name|ERROR
return|;
block|}
block|}
block|}
end_class

end_unit

