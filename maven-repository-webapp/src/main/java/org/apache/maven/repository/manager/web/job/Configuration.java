begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|manager
operator|.
name|web
operator|.
name|job
package|;
end_package

begin_comment
comment|/*  * Copyright 2005-2006 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|layout
operator|.
name|ArtifactRepositoryLayout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|layout
operator|.
name|DefaultRepositoryLayout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|layout
operator|.
name|LegacyRepositoryLayout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|personality
operator|.
name|plexus
operator|.
name|lifecycle
operator|.
name|phase
operator|.
name|Initializable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|personality
operator|.
name|plexus
operator|.
name|lifecycle
operator|.
name|phase
operator|.
name|InitializationException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_comment
comment|/**  * This class contains the configuration values to be used by the scheduler  */
end_comment

begin_class
specifier|public
class|class
name|Configuration
implements|implements
name|Initializable
block|{
specifier|private
name|Properties
name|props
decl_stmt|;
comment|/**      * @throws InitializationException      */
specifier|public
name|void
name|initialize
parameter_list|()
throws|throws
name|InitializationException
block|{
block|}
comment|/**      * Set the properties object      *      * @param properties      */
specifier|public
name|void
name|setProperties
parameter_list|(
name|Properties
name|properties
parameter_list|)
block|{
name|this
operator|.
name|props
operator|=
name|properties
expr_stmt|;
block|}
comment|/**      * Returns the properties object      *      * @return a Properties object that contains the configuration values      */
specifier|public
name|Properties
name|getProperties
parameter_list|()
block|{
return|return
name|props
return|;
block|}
specifier|public
name|ArtifactRepositoryLayout
name|getLayout
parameter_list|()
block|{
name|ArtifactRepositoryLayout
name|layout
decl_stmt|;
if|if
condition|(
literal|"legacy"
operator|.
name|equals
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
literal|"layout"
argument_list|)
argument_list|)
condition|)
block|{
name|layout
operator|=
operator|new
name|LegacyRepositoryLayout
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|layout
operator|=
operator|new
name|DefaultRepositoryLayout
argument_list|()
expr_stmt|;
block|}
return|return
name|layout
return|;
block|}
specifier|public
name|String
name|getIndexDirectory
parameter_list|()
block|{
return|return
name|props
operator|.
name|getProperty
argument_list|(
literal|"index.path"
argument_list|)
return|;
block|}
specifier|public
name|String
name|getRepositoryDirectory
parameter_list|()
block|{
name|String
name|repositoryDir
init|=
literal|""
decl_stmt|;
if|if
condition|(
literal|"default"
operator|.
name|equals
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
literal|"layout"
argument_list|)
argument_list|)
condition|)
block|{
name|repositoryDir
operator|=
name|props
operator|.
name|getProperty
argument_list|(
literal|"default.repository.dir"
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
literal|"legacy"
operator|.
name|equals
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
literal|"layout"
argument_list|)
argument_list|)
condition|)
block|{
name|repositoryDir
operator|=
name|props
operator|.
name|getProperty
argument_list|(
literal|"legacy.repository.dir"
argument_list|)
expr_stmt|;
block|}
return|return
name|repositoryDir
return|;
block|}
block|}
end_class

end_unit

