begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|proxy
operator|.
name|web
operator|.
name|action
operator|.
name|test
package|;
end_package

begin_comment
comment|/*  * Copyright 2005-2006 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|proxy
operator|.
name|web
operator|.
name|action
operator|.
name|RepositoryProxyAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|proxy
operator|.
name|web
operator|.
name|action
operator|.
name|test
operator|.
name|stub
operator|.
name|ProxyManagerStub
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|PlexusTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_class
specifier|public
class|class
name|RepositoryProxyActionTest
extends|extends
name|PlexusTestCase
block|{
comment|/**      * test basic proxy operation      *      * @throws Exception      */
specifier|public
name|void
name|testProxy
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|testDir
init|=
name|getBasedir
argument_list|()
operator|+
literal|"/target/test-classes/unit/proxy-test"
decl_stmt|;
name|RepositoryProxyAction
name|action
init|=
operator|new
name|RepositoryProxyAction
argument_list|()
decl_stmt|;
name|ProxyManagerStub
name|proxyManager
init|=
operator|new
name|ProxyManagerStub
argument_list|(
name|testDir
argument_list|)
decl_stmt|;
name|File
name|cachedFile
init|=
name|proxyManager
operator|.
name|get
argument_list|(
literal|"dummyFile"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|cachedFile
operator|.
name|getParentFile
argument_list|()
operator|.
name|exists
argument_list|()
condition|)
block|{
name|assertTrue
argument_list|(
literal|"can not create test file"
argument_list|,
name|cachedFile
operator|.
name|getParentFile
argument_list|()
operator|.
name|mkdirs
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|cachedFile
operator|.
name|exists
argument_list|()
condition|)
block|{
name|assertTrue
argument_list|(
literal|"can not create test file"
argument_list|,
name|cachedFile
operator|.
name|createNewFile
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|File
name|tmpDir
init|=
name|getTestFile
argument_list|(
literal|"target/tmp-repo"
argument_list|)
decl_stmt|;
name|tmpDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
comment|// TODO: configure manually, test the property loader elsewhere
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|properties
operator|.
name|load
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/unit/proxy-test/maven-proxy-complete.conf"
argument_list|)
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"repo.local.store"
argument_list|,
name|tmpDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|tempFile
init|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"test"
argument_list|,
literal|"tmp"
argument_list|)
decl_stmt|;
name|tempFile
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
name|properties
operator|.
name|store
argument_list|(
operator|new
name|FileOutputStream
argument_list|(
name|tempFile
argument_list|)
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|action
operator|.
name|setConfigFile
argument_list|(
name|tempFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|action
operator|.
name|setProxyManager
argument_list|(
name|proxyManager
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|action
operator|.
name|execute
argument_list|()
decl_stmt|;
name|FileInputStream
name|fileStream
init|=
name|action
operator|.
name|getArtifactStream
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"proxy error"
argument_list|,
name|action
operator|.
name|SUCCESS
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"inputstream not set"
argument_list|,
name|fileStream
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"cached file not set"
argument_list|,
name|action
operator|.
name|getCachedFile
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"proxy error"
argument_list|,
name|cachedFile
operator|.
name|getPath
argument_list|()
operator|.
name|equals
argument_list|(
name|action
operator|.
name|getCachedFile
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

