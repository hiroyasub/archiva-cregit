begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repository
operator|.
name|assembly
package|;
end_package

begin_comment
comment|/*  * Copyright 2001-2005 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|layout
operator|.
name|ArtifactRepositoryLayout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|resolver
operator|.
name|filter
operator|.
name|ArtifactFilter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * Component responsible for writing out {@link Set}s of artifacts to a local directory. The resultant repository  * structure should be suitable for use as a remote repository.  *  * @author Jason van Zyl  */
end_comment

begin_interface
specifier|public
interface|interface
name|RepositoryAssembler
block|{
name|String
name|ROLE
init|=
name|RepositoryAssembler
operator|.
name|class
operator|.
name|getName
argument_list|()
decl_stmt|;
comment|/**      * Write out a set of {@link org.apache.maven.artifact.Artifact}s, which are found in a      * specified local repository and remote repositories, with a given {@link ArtifactRepositoryLayout}      * to a specified directory.      *      * @param artifacts Artifacts to be written out to disk.      * @param localRepository Local repository to check for artifacts in the provided set.      * @param remoteRepositories Remote repositories to check for artifacts in the provided set.      * @param repositoryLayout The repository layout to use for the target repository.      * @param repositoryDirectory The directory to write out the repository in.      * @throws RepositoryAssemblyException      */
specifier|public
name|void
name|assemble
parameter_list|(
name|Set
name|artifacts
parameter_list|,
name|File
name|localRepository
parameter_list|,
name|Set
name|remoteRepositories
parameter_list|,
name|ArtifactRepositoryLayout
name|repositoryLayout
parameter_list|,
name|File
name|repositoryDirectory
parameter_list|)
throws|throws
name|RepositoryAssemblyException
function_decl|;
comment|/**      * Write out a set of {@link org.apache.maven.artifact.Artifact}s, which are found in a      * specified local repository and remote repositories, with a given {@link ArtifactRepositoryLayout}      * to a specified directory.      *      * @param artifacts Artifacts to be written out to disk.      * @param localRepository Local repository to check for artifacts in the provided set.      * @param remoteRepositories Remote repositories to check for artifacts in the provided set.      * @param artifactFilter Filter to use while processing artifacts. Can change or restrict given artifacts.      * @param repositoryLayout The repository layout to use for the target repository.      * @param repositoryDirectory The directory to write out the repository in.      * @throws RepositoryAssemblyException      */
specifier|public
name|void
name|assemble
parameter_list|(
name|Set
name|artifacts
parameter_list|,
name|File
name|localRepository
parameter_list|,
name|Set
name|remoteRepositories
parameter_list|,
name|ArtifactFilter
name|artifactFilter
parameter_list|,
name|ArtifactRepositoryLayout
name|repositoryLayout
parameter_list|,
name|File
name|repositoryDirectory
parameter_list|)
throws|throws
name|RepositoryAssemblyException
function_decl|;
block|}
end_interface

end_unit

