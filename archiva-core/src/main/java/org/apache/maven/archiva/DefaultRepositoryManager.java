begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|converter
operator|.
name|RepositoryConversionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|converter
operator|.
name|RepositoryConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|discoverer
operator|.
name|ArtifactDiscoverer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|discoverer
operator|.
name|DiscovererException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|reporting
operator|.
name|ArtifactReporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepositoryFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|layout
operator|.
name|ArtifactRepositoryLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * @author Jason van Zyl  * @plexus.component  */
end_comment

begin_class
specifier|public
class|class
name|DefaultRepositoryManager
implements|implements
name|RepositoryManager
block|{
comment|/**      * @plexus.requirement role-hint="legacy"      */
specifier|private
name|ArtifactDiscoverer
name|artifactDiscoverer
decl_stmt|;
comment|/**      * @plexus.requirement role-hint="legacy"      */
specifier|private
name|ArtifactRepositoryLayout
name|legacyLayout
decl_stmt|;
comment|/**      * @plexus.requirement role-hint="default"      */
specifier|private
name|ArtifactRepositoryLayout
name|defaultLayout
decl_stmt|;
comment|/**      * @plexus.requirement      */
specifier|private
name|ArtifactRepositoryFactory
name|artifactRepositoryFactory
decl_stmt|;
comment|/**      * @plexus.requirement      */
specifier|private
name|RepositoryConverter
name|repositoryConverter
decl_stmt|;
comment|/**      * @plexus.requirement role-hint="default"      */
specifier|private
name|ArtifactReporter
name|reporter
decl_stmt|;
specifier|public
name|void
name|convertLegacyRepository
parameter_list|(
name|File
name|legacyRepositoryDirectory
parameter_list|,
name|File
name|repositoryDirectory
parameter_list|,
name|boolean
name|includeSnapshots
parameter_list|)
throws|throws
name|RepositoryConversionException
throws|,
name|DiscovererException
block|{
name|ArtifactRepository
name|legacyRepository
decl_stmt|;
name|ArtifactRepository
name|repository
decl_stmt|;
try|try
block|{
name|legacyRepository
operator|=
name|artifactRepositoryFactory
operator|.
name|createArtifactRepository
argument_list|(
literal|"legacy"
argument_list|,
name|legacyRepositoryDirectory
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|legacyLayout
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|repository
operator|=
name|artifactRepositoryFactory
operator|.
name|createArtifactRepository
argument_list|(
literal|"default"
argument_list|,
name|repositoryDirectory
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|defaultLayout
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MalformedURLException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RepositoryConversionException
argument_list|(
literal|"Error convering legacy repository."
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|List
name|legacyArtifacts
init|=
name|artifactDiscoverer
operator|.
name|discoverArtifacts
argument_list|(
name|legacyRepository
argument_list|,
literal|"converter"
argument_list|,
literal|null
argument_list|,
name|includeSnapshots
argument_list|)
decl_stmt|;
name|repositoryConverter
operator|.
name|convert
argument_list|(
name|legacyArtifacts
argument_list|,
name|repository
argument_list|,
name|reporter
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

