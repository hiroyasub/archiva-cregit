begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|configuration
package|;
end_package

begin_comment
comment|/*  * Copyright 2005-2006 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|proxy
operator|.
name|ProxiedArtifactRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepositoryFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepositoryPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|layout
operator|.
name|ArtifactRepositoryLayout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Create artifact repositories from a configuration.  *  * @author<a href="mailto:brett@apache.org">Brett Porter</a>  * @plexus.component role="org.apache.maven.archiva.configuration.ConfiguredRepositoryFactory"  */
end_comment

begin_class
specifier|public
class|class
name|DefaultConfiguredRepositoryFactory
implements|implements
name|ConfiguredRepositoryFactory
block|{
comment|/**      * @plexus.requirement role="org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout"      */
specifier|private
name|Map
name|repositoryLayouts
decl_stmt|;
comment|/**      * @plexus.requirement      */
specifier|private
name|ArtifactRepositoryFactory
name|repoFactory
decl_stmt|;
specifier|public
name|ArtifactRepository
name|createRepository
parameter_list|(
name|RepositoryConfiguration
name|configuration
parameter_list|)
block|{
name|File
name|repositoryDirectory
init|=
operator|new
name|File
argument_list|(
name|configuration
operator|.
name|getDirectory
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|repoDir
init|=
name|repositoryDirectory
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
comment|//workaround for spaces non converted by PathUtils in wagon
comment|//todo: remove it when PathUtils will be fixed
if|if
condition|(
name|repoDir
operator|.
name|indexOf
argument_list|(
literal|"%20"
argument_list|)
operator|>=
literal|0
condition|)
block|{
name|repoDir
operator|=
name|StringUtils
operator|.
name|replace
argument_list|(
name|repoDir
argument_list|,
literal|"%20"
argument_list|,
literal|" "
argument_list|)
expr_stmt|;
block|}
name|ArtifactRepositoryLayout
name|layout
init|=
operator|(
name|ArtifactRepositoryLayout
operator|)
name|repositoryLayouts
operator|.
name|get
argument_list|(
name|configuration
operator|.
name|getLayout
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|repoFactory
operator|.
name|createArtifactRepository
argument_list|(
name|configuration
operator|.
name|getId
argument_list|()
argument_list|,
name|repoDir
argument_list|,
name|layout
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|public
name|ProxiedArtifactRepository
name|createProxiedRepository
parameter_list|(
name|ProxiedRepositoryConfiguration
name|configuration
parameter_list|)
block|{
name|boolean
name|enabled
init|=
name|isEnabled
argument_list|(
name|configuration
operator|.
name|getSnapshotsPolicy
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|updatePolicy
init|=
name|getUpdatePolicy
argument_list|(
name|configuration
operator|.
name|getSnapshotsPolicy
argument_list|()
argument_list|,
name|configuration
operator|.
name|getSnapshotsInterval
argument_list|()
argument_list|)
decl_stmt|;
name|ArtifactRepositoryPolicy
name|snapshotsPolicy
init|=
operator|new
name|ArtifactRepositoryPolicy
argument_list|(
name|enabled
argument_list|,
name|updatePolicy
argument_list|,
name|ArtifactRepositoryPolicy
operator|.
name|CHECKSUM_POLICY_FAIL
argument_list|)
decl_stmt|;
name|enabled
operator|=
name|isEnabled
argument_list|(
name|configuration
operator|.
name|getReleasesPolicy
argument_list|()
argument_list|)
expr_stmt|;
name|updatePolicy
operator|=
name|getUpdatePolicy
argument_list|(
name|configuration
operator|.
name|getReleasesPolicy
argument_list|()
argument_list|,
name|configuration
operator|.
name|getReleasesInterval
argument_list|()
argument_list|)
expr_stmt|;
name|ArtifactRepositoryPolicy
name|releasesPolicy
init|=
operator|new
name|ArtifactRepositoryPolicy
argument_list|(
name|enabled
argument_list|,
name|updatePolicy
argument_list|,
name|ArtifactRepositoryPolicy
operator|.
name|CHECKSUM_POLICY_FAIL
argument_list|)
decl_stmt|;
name|ArtifactRepositoryLayout
name|layout
init|=
operator|(
name|ArtifactRepositoryLayout
operator|)
name|repositoryLayouts
operator|.
name|get
argument_list|(
name|configuration
operator|.
name|getLayout
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|layout
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Invalid layout: "
operator|+
name|configuration
operator|.
name|getLayout
argument_list|()
argument_list|)
throw|;
block|}
name|ArtifactRepository
name|artifactRepository
init|=
name|repoFactory
operator|.
name|createArtifactRepository
argument_list|(
name|configuration
operator|.
name|getId
argument_list|()
argument_list|,
name|configuration
operator|.
name|getUrl
argument_list|()
argument_list|,
name|layout
argument_list|,
name|snapshotsPolicy
argument_list|,
name|releasesPolicy
argument_list|)
decl_stmt|;
name|ProxiedArtifactRepository
name|repository
init|=
operator|new
name|ProxiedArtifactRepository
argument_list|(
name|artifactRepository
argument_list|)
decl_stmt|;
name|repository
operator|.
name|setCacheFailures
argument_list|(
name|configuration
operator|.
name|isCacheFailures
argument_list|()
argument_list|)
expr_stmt|;
name|repository
operator|.
name|setHardFail
argument_list|(
name|configuration
operator|.
name|isHardFail
argument_list|()
argument_list|)
expr_stmt|;
name|repository
operator|.
name|setName
argument_list|(
name|configuration
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|repository
operator|.
name|setUseNetworkProxy
argument_list|(
name|configuration
operator|.
name|isUseNetworkProxy
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|repository
return|;
block|}
specifier|public
name|List
name|createRepositories
parameter_list|(
name|Configuration
name|configuration
parameter_list|)
block|{
name|List
name|managedRepositories
init|=
name|configuration
operator|.
name|getRepositories
argument_list|()
decl_stmt|;
name|List
name|repositories
init|=
operator|new
name|ArrayList
argument_list|(
name|managedRepositories
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|managedRepositories
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|repositories
operator|.
name|add
argument_list|(
name|createRepository
argument_list|(
operator|(
name|RepositoryConfiguration
operator|)
name|i
operator|.
name|next
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|repositories
return|;
block|}
specifier|public
name|List
name|createProxiedRepositories
parameter_list|(
name|Configuration
name|configuration
parameter_list|)
block|{
name|List
name|proxiedRepositories
init|=
name|configuration
operator|.
name|getProxiedRepositories
argument_list|()
decl_stmt|;
name|List
name|repositories
init|=
operator|new
name|ArrayList
argument_list|(
name|proxiedRepositories
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|proxiedRepositories
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|repositories
operator|.
name|add
argument_list|(
name|createProxiedRepository
argument_list|(
operator|(
name|ProxiedRepositoryConfiguration
operator|)
name|i
operator|.
name|next
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|repositories
return|;
block|}
specifier|public
name|ArtifactRepository
name|createLocalRepository
parameter_list|(
name|Configuration
name|configuration
parameter_list|)
block|{
name|ArtifactRepositoryLayout
name|layout
init|=
operator|(
name|ArtifactRepositoryLayout
operator|)
name|repositoryLayouts
operator|.
name|get
argument_list|(
literal|"default"
argument_list|)
decl_stmt|;
name|File
name|localRepository
init|=
operator|new
name|File
argument_list|(
name|configuration
operator|.
name|getLocalRepository
argument_list|()
argument_list|)
decl_stmt|;
name|localRepository
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
return|return
name|repoFactory
operator|.
name|createArtifactRepository
argument_list|(
literal|"local"
argument_list|,
name|localRepository
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|layout
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|String
name|getUpdatePolicy
parameter_list|(
name|String
name|policy
parameter_list|,
name|int
name|interval
parameter_list|)
block|{
return|return
literal|"interval"
operator|.
name|equals
argument_list|(
name|policy
argument_list|)
condition|?
name|policy
operator|+
literal|":"
operator|+
name|interval
else|:
name|policy
return|;
block|}
specifier|private
specifier|static
name|boolean
name|isEnabled
parameter_list|(
name|String
name|policy
parameter_list|)
block|{
return|return
operator|!
literal|"disabled"
operator|.
name|equals
argument_list|(
name|policy
argument_list|)
return|;
block|}
block|}
end_class

end_unit

