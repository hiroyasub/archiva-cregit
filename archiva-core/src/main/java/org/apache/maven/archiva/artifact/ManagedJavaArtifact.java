begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|artifact
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|Artifact
import|;
end_import

begin_comment
comment|/**  * ManagedJavaArtifact - a ManagedArtifact with optional javadoc and source   * reference jars.  *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|ManagedJavaArtifact
extends|extends
name|ManagedArtifact
block|{
specifier|public
specifier|static
specifier|final
name|String
name|JAVADOC
init|=
literal|"javadoc"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SOURCES
init|=
literal|"sources"
decl_stmt|;
specifier|public
name|ManagedJavaArtifact
parameter_list|(
name|String
name|repoId
parameter_list|,
name|Artifact
name|artifact
parameter_list|,
name|String
name|path
parameter_list|)
block|{
name|super
argument_list|(
name|repoId
argument_list|,
name|artifact
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getJavadocPath
parameter_list|()
block|{
return|return
operator|(
name|String
operator|)
name|super
operator|.
name|attached
operator|.
name|get
argument_list|(
name|JAVADOC
argument_list|)
return|;
block|}
specifier|public
name|void
name|setJavadocPath
parameter_list|(
name|String
name|javadocPath
parameter_list|)
block|{
name|super
operator|.
name|attached
operator|.
name|put
argument_list|(
name|JAVADOC
argument_list|,
name|javadocPath
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getSourcesPath
parameter_list|()
block|{
return|return
operator|(
name|String
operator|)
name|super
operator|.
name|attached
operator|.
name|get
argument_list|(
name|SOURCES
argument_list|)
return|;
block|}
specifier|public
name|void
name|setSourcesPath
parameter_list|(
name|String
name|sourcesPath
parameter_list|)
block|{
name|super
operator|.
name|attached
operator|.
name|put
argument_list|(
name|SOURCES
argument_list|,
name|sourcesPath
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

