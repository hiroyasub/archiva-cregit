begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|repositories
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|artifact
operator|.
name|ManagedArtifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|artifact
operator|.
name|ManagedEjbArtifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|artifact
operator|.
name|ManagedJavaArtifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|PlexusTestCase
import|;
end_import

begin_comment
comment|/**  * DefaultActiveManagedRepositoriesTest  *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  */
end_comment

begin_class
specifier|public
class|class
name|DefaultActiveManagedRepositoriesTest
extends|extends
name|PlexusTestCase
block|{
specifier|private
name|ActiveManagedRepositories
name|managedRepos
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|managedRepos
operator|=
operator|(
name|ActiveManagedRepositories
operator|)
name|lookup
argument_list|(
name|ActiveManagedRepositories
operator|.
name|ROLE
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test a simple java find artifact with extras (sources / javadoc).      */
specifier|public
name|void
name|testFindArtifactJavaWithExtras
parameter_list|()
block|{
name|ManagedArtifact
name|artifact
init|=
name|managedRepos
operator|.
name|findArtifact
argument_list|(
literal|"geronimo"
argument_list|,
literal|"daytrader-wsappclient"
argument_list|,
literal|"1.1"
argument_list|,
literal|"jar"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|artifact
operator|instanceof
name|ManagedJavaArtifact
operator|)
condition|)
block|{
name|fail
argument_list|(
literal|"Expected artifact to be type<"
operator|+
name|ManagedJavaArtifact
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|"> but was actually<"
operator|+
name|artifact
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|">."
argument_list|)
expr_stmt|;
block|}
name|ManagedJavaArtifact
name|javaArtifact
init|=
operator|(
name|ManagedJavaArtifact
operator|)
name|artifact
decl_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|javaArtifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|pathPrefix
init|=
literal|"geronimo/daytrader-wsappclient/1.1"
decl_stmt|;
name|String
name|pathArtifactVersion
init|=
literal|"daytrader-wsappclient-1.1"
decl_stmt|;
name|assertEquals
argument_list|(
name|pathPrefix
operator|+
literal|"/"
operator|+
name|pathArtifactVersion
operator|+
literal|".jar"
argument_list|,
name|javaArtifact
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|pathPrefix
operator|+
literal|"/"
operator|+
name|pathArtifactVersion
operator|+
literal|"-javadoc.jar"
argument_list|,
name|javaArtifact
operator|.
name|getJavadocPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|pathPrefix
operator|+
literal|"/"
operator|+
name|pathArtifactVersion
operator|+
literal|"-sources.jar"
argument_list|,
name|javaArtifact
operator|.
name|getSourcesPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test a simple java find artifact with no extras.      */
specifier|public
name|void
name|testFindArtifactJavaSimple
parameter_list|()
block|{
name|ManagedArtifact
name|artifact
init|=
name|managedRepos
operator|.
name|findArtifact
argument_list|(
literal|"geronimo"
argument_list|,
literal|"daytrader-streamer"
argument_list|,
literal|"1.1"
argument_list|,
literal|"jar"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|artifact
operator|instanceof
name|ManagedJavaArtifact
operator|)
condition|)
block|{
name|fail
argument_list|(
literal|"Expected artifact to be type<"
operator|+
name|ManagedJavaArtifact
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|"> but was actually<"
operator|+
name|artifact
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|">."
argument_list|)
expr_stmt|;
block|}
name|ManagedJavaArtifact
name|javaArtifact
init|=
operator|(
name|ManagedJavaArtifact
operator|)
name|artifact
decl_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|javaArtifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|pathPrefix
init|=
literal|"geronimo/daytrader-streamer/1.1"
decl_stmt|;
name|String
name|pathArtifactVersion
init|=
literal|"daytrader-streamer-1.1"
decl_stmt|;
name|assertEquals
argument_list|(
name|pathPrefix
operator|+
literal|"/"
operator|+
name|pathArtifactVersion
operator|+
literal|".jar"
argument_list|,
name|javaArtifact
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"should have no javadoc jar."
argument_list|,
name|javaArtifact
operator|.
name|getJavadocPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"should have no sources jar."
argument_list|,
name|javaArtifact
operator|.
name|getSourcesPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test a java find of a snapshot artifact that uses a timestamp format.      */
specifier|public
name|void
name|testFindArtifactJavaSnapshotTimestamp
parameter_list|()
block|{
name|ManagedArtifact
name|artifact
init|=
name|managedRepos
operator|.
name|findArtifact
argument_list|(
literal|"org.apache.geronimo.daytrader"
argument_list|,
literal|"daytrader-wsappclient"
argument_list|,
literal|"2.0-20070201.183230-5"
argument_list|,
literal|"jar"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|artifact
operator|instanceof
name|ManagedJavaArtifact
operator|)
condition|)
block|{
name|fail
argument_list|(
literal|"Expected artifact to be type<"
operator|+
name|ManagedJavaArtifact
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|"> but was actually<"
operator|+
name|artifact
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|">."
argument_list|)
expr_stmt|;
block|}
name|ManagedJavaArtifact
name|javaArtifact
init|=
operator|(
name|ManagedJavaArtifact
operator|)
name|artifact
decl_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|javaArtifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|pathPrefix
init|=
literal|"org/apache/geronimo/daytrader/daytrader-wsappclient/2.0-SNAPSHOT"
decl_stmt|;
name|String
name|pathArtifactVersion
init|=
literal|"daytrader-wsappclient-2.0-20070201.183230-5"
decl_stmt|;
name|assertEquals
argument_list|(
name|pathPrefix
operator|+
literal|"/"
operator|+
name|pathArtifactVersion
operator|+
literal|".jar"
argument_list|,
name|javaArtifact
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|pathPrefix
operator|+
literal|"/"
operator|+
name|pathArtifactVersion
operator|+
literal|"-javadoc.jar"
argument_list|,
name|javaArtifact
operator|.
name|getJavadocPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|pathPrefix
operator|+
literal|"/"
operator|+
name|pathArtifactVersion
operator|+
literal|"-sources.jar"
argument_list|,
name|javaArtifact
operator|.
name|getSourcesPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test a java find of a snapshot artifact.      */
specifier|public
name|void
name|testFindArtifactJavaSnapshot
parameter_list|()
block|{
name|ManagedArtifact
name|artifact
init|=
name|managedRepos
operator|.
name|findArtifact
argument_list|(
literal|"org.apache.geronimo.daytrader"
argument_list|,
literal|"daytrader-wsappclient"
argument_list|,
literal|"2.0-SNAPSHOT"
argument_list|,
literal|"jar"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|artifact
operator|instanceof
name|ManagedJavaArtifact
operator|)
condition|)
block|{
name|fail
argument_list|(
literal|"Expected artifact to be type<"
operator|+
name|ManagedJavaArtifact
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|"> but was actually<"
operator|+
name|artifact
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|">."
argument_list|)
expr_stmt|;
block|}
name|ManagedJavaArtifact
name|javaArtifact
init|=
operator|(
name|ManagedJavaArtifact
operator|)
name|artifact
decl_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|javaArtifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|pathPrefix
init|=
literal|"org/apache/geronimo/daytrader/daytrader-wsappclient/2.0-SNAPSHOT"
decl_stmt|;
name|String
name|pathArtifactVersion
init|=
literal|"daytrader-wsappclient-2.0-SNAPSHOT"
decl_stmt|;
name|assertEquals
argument_list|(
name|pathPrefix
operator|+
literal|"/"
operator|+
name|pathArtifactVersion
operator|+
literal|".jar"
argument_list|,
name|javaArtifact
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|pathPrefix
operator|+
literal|"/"
operator|+
name|pathArtifactVersion
operator|+
literal|"-javadoc.jar"
argument_list|,
name|javaArtifact
operator|.
name|getJavadocPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|pathPrefix
operator|+
literal|"/"
operator|+
name|pathArtifactVersion
operator|+
literal|"-sources.jar"
argument_list|,
name|javaArtifact
operator|.
name|getSourcesPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test a ejb find of a snapshot artifact that also has a client jar available.      */
specifier|public
name|void
name|testFindArtifactEjbSnapshot
parameter_list|()
block|{
name|ManagedArtifact
name|artifact
init|=
name|managedRepos
operator|.
name|findArtifact
argument_list|(
literal|"org.apache.geronimo.daytrader"
argument_list|,
literal|"daytrader-ejb"
argument_list|,
literal|"2.0-SNAPSHOT"
argument_list|,
literal|"ejb"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|artifact
operator|instanceof
name|ManagedEjbArtifact
operator|)
condition|)
block|{
name|fail
argument_list|(
literal|"Expected artifact to be type<"
operator|+
name|ManagedEjbArtifact
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|"> but was actually<"
operator|+
name|artifact
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|">."
argument_list|)
expr_stmt|;
block|}
name|ManagedEjbArtifact
name|ejbArtifact
init|=
operator|(
name|ManagedEjbArtifact
operator|)
name|artifact
decl_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|ejbArtifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|pathPrefix
init|=
literal|"org/apache/geronimo/daytrader/daytrader-ejb/2.0-SNAPSHOT"
decl_stmt|;
name|String
name|pathArtifactVersion
init|=
literal|"daytrader-ejb-2.0-SNAPSHOT"
decl_stmt|;
name|assertEquals
argument_list|(
name|pathPrefix
operator|+
literal|"/"
operator|+
name|pathArtifactVersion
operator|+
literal|".jar"
argument_list|,
name|ejbArtifact
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|pathPrefix
operator|+
literal|"/"
operator|+
name|pathArtifactVersion
operator|+
literal|"-client.jar"
argument_list|,
name|ejbArtifact
operator|.
name|getClientPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|pathPrefix
operator|+
literal|"/"
operator|+
name|pathArtifactVersion
operator|+
literal|"-javadoc.jar"
argument_list|,
name|ejbArtifact
operator|.
name|getJavadocPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|pathPrefix
operator|+
literal|"/"
operator|+
name|pathArtifactVersion
operator|+
literal|"-sources.jar"
argument_list|,
name|ejbArtifact
operator|.
name|getSourcesPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test a simple java find artifact with no extras.      */
specifier|public
name|void
name|testFindArtifactWar
parameter_list|()
block|{
name|ManagedArtifact
name|artifact
init|=
name|managedRepos
operator|.
name|findArtifact
argument_list|(
literal|"geronimo"
argument_list|,
literal|"daytrader-web"
argument_list|,
literal|"1.1"
argument_list|,
literal|"war"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|artifact
operator|instanceof
name|ManagedJavaArtifact
operator|)
condition|)
block|{
name|fail
argument_list|(
literal|"Expected artifact to be type<"
operator|+
name|ManagedJavaArtifact
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|"> but was actually<"
operator|+
name|artifact
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|">."
argument_list|)
expr_stmt|;
block|}
name|ManagedJavaArtifact
name|warArtifact
init|=
operator|(
name|ManagedJavaArtifact
operator|)
name|artifact
decl_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|warArtifact
operator|.
name|getRepositoryId
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|pathPrefix
init|=
literal|"geronimo/daytrader-web/1.1"
decl_stmt|;
name|String
name|pathArtifactVersion
init|=
literal|"daytrader-web-1.1"
decl_stmt|;
name|assertEquals
argument_list|(
name|pathPrefix
operator|+
literal|"/"
operator|+
name|pathArtifactVersion
operator|+
literal|".war"
argument_list|,
name|warArtifact
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|pathPrefix
operator|+
literal|"/"
operator|+
name|pathArtifactVersion
operator|+
literal|"-javadoc.jar"
argument_list|,
name|warArtifact
operator|.
name|getJavadocPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"should have no sources jar."
argument_list|,
name|warArtifact
operator|.
name|getSourcesPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

