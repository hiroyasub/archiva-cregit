begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|converter
operator|.
name|legacy
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|common
operator|.
name|consumers
operator|.
name|GenericArtifactConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|common
operator|.
name|utils
operator|.
name|BaseFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|converter
operator|.
name|ConversionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|converter
operator|.
name|RepositoryConversionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|converter
operator|.
name|RepositoryConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepository
import|;
end_import

begin_comment
comment|/**  * LegacyConverterArtifactConsumer - convert artifacts as they are found  * into the destination repository.   *  * @author<a href="mailto:joakim@erdfelt.com">Joakim Erdfelt</a>  * @version $Id$  *   * @plexus.component role="org.apache.maven.archiva.common.consumers.Consumers"  *     role-hint="legacy-converter"  *     instantiation-strategy="per-lookup"  */
end_comment

begin_class
specifier|public
class|class
name|LegacyConverterArtifactConsumer
extends|extends
name|GenericArtifactConsumer
block|{
comment|/**      * @plexus.requirement      */
specifier|private
name|RepositoryConverter
name|repositoryConverter
decl_stmt|;
specifier|private
name|ArtifactRepository
name|destinationRepository
decl_stmt|;
specifier|public
name|void
name|processArtifact
parameter_list|(
name|Artifact
name|artifact
parameter_list|,
name|BaseFile
name|file
parameter_list|)
block|{
try|try
block|{
name|repositoryConverter
operator|.
name|convert
argument_list|(
name|artifact
argument_list|,
name|destinationRepository
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RepositoryConversionException
name|e
parameter_list|)
block|{
name|getLogger
argument_list|()
operator|.
name|error
argument_list|(
literal|"Unable to convert artifact "
operator|+
name|artifact
operator|+
literal|" to destination repository "
operator|+
name|destinationRepository
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|processFileProblem
parameter_list|(
name|BaseFile
name|path
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|getLogger
argument_list|()
operator|.
name|error
argument_list|(
literal|"Artifact Build Failure on "
operator|+
name|path
operator|+
literal|" : "
operator|+
name|message
argument_list|)
expr_stmt|;
comment|// TODO: report this to the ConversionListener?
block|}
specifier|public
name|ArtifactRepository
name|getDestinationRepository
parameter_list|()
block|{
return|return
name|destinationRepository
return|;
block|}
specifier|public
name|void
name|setDestinationRepository
parameter_list|(
name|ArtifactRepository
name|destinationRepository
parameter_list|)
block|{
name|this
operator|.
name|destinationRepository
operator|=
name|destinationRepository
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"Legacy Artifact Converter Consumer"
return|;
block|}
comment|/**      * Add a listener to the conversion process.      *       * @param listener the listener to add.      */
specifier|public
name|void
name|addConversionListener
parameter_list|(
name|ConversionListener
name|listener
parameter_list|)
block|{
name|repositoryConverter
operator|.
name|addConversionListener
argument_list|(
name|listener
argument_list|)
expr_stmt|;
block|}
comment|/**      * Remove a listener from the conversion process.      *       * @param listener the listener to remove.      */
specifier|public
name|void
name|removeConversionListener
parameter_list|(
name|ConversionListener
name|listener
parameter_list|)
block|{
name|repositoryConverter
operator|.
name|removeConversionListener
argument_list|(
name|listener
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

