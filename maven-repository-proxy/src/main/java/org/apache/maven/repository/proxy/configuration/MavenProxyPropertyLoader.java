begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|proxy
operator|.
name|configuration
package|;
end_package

begin_comment
comment|/*  * Copyright 2003-2004 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|StringTokenizer
import|;
end_import

begin_comment
comment|/**  * @author Ben Walding  */
end_comment

begin_class
specifier|public
class|class
name|MavenProxyPropertyLoader
block|{
specifier|public
specifier|static
specifier|final
name|String
name|REPO_LOCAL_STORE
init|=
literal|"repo.local.store"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|REPO_CUSTOM_STORE
init|=
literal|"repo.custom.store"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PORT
init|=
literal|"port"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SNAPSHOT_UPDATE
init|=
literal|"snapshot.update"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SNAPSHOT_CACHE_FAILURES
init|=
literal|"snapshot.cache.failures"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|METADATA_UPDATE
init|=
literal|"metadata.update"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|POM_UPDATE
init|=
literal|"pom.update"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_PORT
init|=
literal|4321
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|LAST_MODIFIED_DATE_FORMAT
init|=
literal|"lastModifiedDateFormat"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_LAST_MODIFIED_DATE_FORMAT
init|=
literal|null
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|BROWSABLE
init|=
literal|"browsable"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SEARCHABLE
init|=
literal|"searchable"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|STYLESHEET
init|=
literal|"stylesheet"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|BGCOLOR
init|=
literal|"css.bgColor"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|BGCOLORHIGHLIGHT
init|=
literal|"css.bgColorHighlight"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ROWCOLOR
init|=
literal|"css.rowColor"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ROWCOLORHIGHLIGHT
init|=
literal|"css.rowColorHighlight"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PREFIX
init|=
literal|"prefix"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|SERVERNAME
init|=
literal|"serverName"
decl_stmt|;
specifier|public
name|RetrievalComponentConfiguration
name|load
parameter_list|(
name|Properties
name|props
parameter_list|)
throws|throws
name|ValidationException
block|{
name|RetrievalComponentConfiguration
name|rcc
init|=
operator|new
name|RetrievalComponentConfiguration
argument_list|()
decl_stmt|;
name|String
name|localStore
init|=
name|getMandatoryProperty
argument_list|(
name|props
argument_list|,
name|REPO_LOCAL_STORE
argument_list|)
decl_stmt|;
name|GlobalRepoConfiguration
name|globalRepo
init|=
operator|new
name|GlobalRepoConfiguration
argument_list|(
name|localStore
argument_list|)
decl_stmt|;
name|rcc
operator|.
name|setLocalStore
argument_list|(
name|localStore
argument_list|)
expr_stmt|;
name|rcc
operator|.
name|addRepo
argument_list|(
name|globalRepo
argument_list|)
expr_stmt|;
if|if
condition|(
name|props
operator|.
name|getProperty
argument_list|(
name|PORT
argument_list|)
operator|==
literal|null
condition|)
block|{
name|rcc
operator|.
name|setPort
argument_list|(
name|DEFAULT_PORT
argument_list|)
expr_stmt|;
block|}
else|else
block|{
try|try
block|{
name|rcc
operator|.
name|setPort
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|PORT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|ValidationException
argument_list|(
literal|"Property "
operator|+
name|PORT
operator|+
literal|" must be a integer"
argument_list|)
throw|;
block|}
block|}
name|rcc
operator|.
name|setSnapshotUpdate
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
name|getMandatoryProperty
argument_list|(
name|props
argument_list|,
name|SNAPSHOT_UPDATE
argument_list|)
argument_list|)
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|rcc
operator|.
name|setMetaDataUpdate
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
name|getOptionalProperty
argument_list|(
name|props
argument_list|,
name|METADATA_UPDATE
argument_list|,
literal|"true"
argument_list|)
argument_list|)
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|rcc
operator|.
name|setPOMUpdate
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
name|getOptionalProperty
argument_list|(
name|props
argument_list|,
name|POM_UPDATE
argument_list|,
literal|"false"
argument_list|)
argument_list|)
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|rcc
operator|.
name|setBrowsable
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
name|getMandatoryProperty
argument_list|(
name|props
argument_list|,
name|BROWSABLE
argument_list|)
argument_list|)
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|rcc
operator|.
name|setSearchable
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
name|getOptionalProperty
argument_list|(
name|props
argument_list|,
name|SEARCHABLE
argument_list|,
literal|"true"
argument_list|)
argument_list|)
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|rcc
operator|.
name|setServerName
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|SERVERNAME
argument_list|)
argument_list|)
expr_stmt|;
name|rcc
operator|.
name|setPrefix
argument_list|(
name|getMandatoryProperty
argument_list|(
name|props
argument_list|,
name|PREFIX
argument_list|)
argument_list|)
expr_stmt|;
name|rcc
operator|.
name|setLastModifiedDateFormat
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|LAST_MODIFIED_DATE_FORMAT
argument_list|)
argument_list|)
expr_stmt|;
name|rcc
operator|.
name|setStylesheet
argument_list|(
name|getOptionalProperty
argument_list|(
name|props
argument_list|,
name|STYLESHEET
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|rcc
operator|.
name|setBgColor
argument_list|(
name|getOptionalProperty
argument_list|(
name|props
argument_list|,
name|BGCOLOR
argument_list|,
literal|"#14B"
argument_list|)
argument_list|)
expr_stmt|;
name|rcc
operator|.
name|setBgColorHighlight
argument_list|(
name|getOptionalProperty
argument_list|(
name|props
argument_list|,
name|BGCOLORHIGHLIGHT
argument_list|,
literal|"#9BF"
argument_list|)
argument_list|)
expr_stmt|;
name|rcc
operator|.
name|setRowColor
argument_list|(
name|getOptionalProperty
argument_list|(
name|props
argument_list|,
name|ROWCOLOR
argument_list|,
literal|"#CCF"
argument_list|)
argument_list|)
expr_stmt|;
name|rcc
operator|.
name|setRowColorHighlight
argument_list|(
name|getOptionalProperty
argument_list|(
name|props
argument_list|,
name|ROWCOLORHIGHLIGHT
argument_list|,
literal|"#DDF"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|rcc
operator|.
name|getPrefix
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Using an empty 'prefix' is deprecated behaviour.  Please set a prefix."
argument_list|)
expr_stmt|;
block|}
block|{
name|String
name|propertyList
init|=
name|props
operator|.
name|getProperty
argument_list|(
literal|"proxy.list"
argument_list|)
decl_stmt|;
if|if
condition|(
name|propertyList
operator|!=
literal|null
condition|)
block|{
name|StringTokenizer
name|tok
init|=
operator|new
name|StringTokenizer
argument_list|(
name|propertyList
argument_list|,
literal|","
argument_list|)
decl_stmt|;
while|while
condition|(
name|tok
operator|.
name|hasMoreTokens
argument_list|()
condition|)
block|{
name|String
name|key
init|=
name|tok
operator|.
name|nextToken
argument_list|()
decl_stmt|;
name|String
name|host
init|=
name|getMandatoryProperty
argument_list|(
name|props
argument_list|,
literal|"proxy."
operator|+
name|key
operator|+
literal|".host"
argument_list|)
decl_stmt|;
name|int
name|port
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|getMandatoryProperty
argument_list|(
name|props
argument_list|,
literal|"proxy."
operator|+
name|key
operator|+
literal|".port"
argument_list|)
argument_list|)
decl_stmt|;
comment|// the username and password isn't required
name|String
name|username
init|=
name|props
operator|.
name|getProperty
argument_list|(
literal|"proxy."
operator|+
name|key
operator|+
literal|".username"
argument_list|)
decl_stmt|;
name|String
name|password
init|=
name|props
operator|.
name|getProperty
argument_list|(
literal|"proxy."
operator|+
name|key
operator|+
literal|".password"
argument_list|)
decl_stmt|;
name|MavenProxyConfiguration
name|pc
init|=
operator|new
name|MavenProxyConfiguration
argument_list|(
name|key
argument_list|,
name|host
argument_list|,
name|port
argument_list|,
name|username
argument_list|,
name|password
argument_list|)
decl_stmt|;
name|rcc
operator|.
name|addProxy
argument_list|(
name|pc
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|{
name|String
name|repoList
init|=
name|getMandatoryProperty
argument_list|(
name|props
argument_list|,
literal|"repo.list"
argument_list|)
decl_stmt|;
name|StringTokenizer
name|tok
init|=
operator|new
name|StringTokenizer
argument_list|(
name|repoList
argument_list|,
literal|","
argument_list|)
decl_stmt|;
while|while
condition|(
name|tok
operator|.
name|hasMoreTokens
argument_list|()
condition|)
block|{
name|String
name|key
init|=
name|tok
operator|.
name|nextToken
argument_list|()
decl_stmt|;
name|Properties
name|repoProps
init|=
name|getSubset
argument_list|(
name|props
argument_list|,
literal|"repo."
operator|+
name|key
operator|+
literal|"."
argument_list|)
decl_stmt|;
name|String
name|url
init|=
name|getMandatoryProperty
argument_list|(
name|props
argument_list|,
literal|"repo."
operator|+
name|key
operator|+
literal|".url"
argument_list|)
decl_stmt|;
comment|// the username, password and proxy are not mandatory
name|String
name|username
init|=
name|repoProps
operator|.
name|getProperty
argument_list|(
literal|"username"
argument_list|)
decl_stmt|;
name|String
name|password
init|=
name|repoProps
operator|.
name|getProperty
argument_list|(
literal|"password"
argument_list|)
decl_stmt|;
name|String
name|description
init|=
name|repoProps
operator|.
name|getProperty
argument_list|(
literal|"description"
argument_list|)
decl_stmt|;
name|String
name|proxyKey
init|=
name|repoProps
operator|.
name|getProperty
argument_list|(
literal|"proxy"
argument_list|)
decl_stmt|;
name|Boolean
name|cacheFailures
init|=
name|Boolean
operator|.
name|valueOf
argument_list|(
name|repoProps
operator|.
name|getProperty
argument_list|(
literal|"cache.failures"
argument_list|,
literal|"false"
argument_list|)
argument_list|)
decl_stmt|;
name|Long
name|cachePeriod
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|repoProps
operator|.
name|getProperty
argument_list|(
literal|"cache.period"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
decl_stmt|;
name|Boolean
name|hardFail
init|=
name|Boolean
operator|.
name|valueOf
argument_list|(
name|repoProps
operator|.
name|getProperty
argument_list|(
literal|"hardfail"
argument_list|,
literal|"true"
argument_list|)
argument_list|)
decl_stmt|;
name|MavenProxyConfiguration
name|proxy
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|proxyKey
operator|!=
literal|null
condition|)
block|{
name|proxy
operator|=
name|rcc
operator|.
name|getProxy
argument_list|(
name|proxyKey
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|description
operator|==
literal|null
operator|||
name|description
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|description
operator|=
name|key
expr_stmt|;
block|}
name|RepoConfiguration
name|rc
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|url
operator|.
name|startsWith
argument_list|(
literal|"http://"
argument_list|)
condition|)
block|{
name|rc
operator|=
operator|new
name|HttpRepoConfiguration
argument_list|(
name|key
argument_list|,
name|url
argument_list|,
name|description
argument_list|,
name|username
argument_list|,
name|password
argument_list|,
name|hardFail
operator|.
name|booleanValue
argument_list|()
argument_list|,
name|proxy
argument_list|,
name|cacheFailures
operator|.
name|booleanValue
argument_list|()
argument_list|,
name|cachePeriod
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|url
operator|.
name|startsWith
argument_list|(
literal|"file:///"
argument_list|)
condition|)
block|{
name|boolean
name|copy
init|=
literal|"true"
operator|.
name|equalsIgnoreCase
argument_list|(
name|repoProps
operator|.
name|getProperty
argument_list|(
literal|"copy"
argument_list|)
argument_list|)
decl_stmt|;
name|rc
operator|=
operator|new
name|FileRepoConfiguration
argument_list|(
name|key
argument_list|,
name|url
argument_list|,
name|description
argument_list|,
name|copy
argument_list|,
name|hardFail
operator|.
name|booleanValue
argument_list|()
argument_list|,
name|cacheFailures
operator|.
name|booleanValue
argument_list|()
argument_list|,
name|cachePeriod
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|rc
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|ValidationException
argument_list|(
literal|"Unknown upstream repository type: "
operator|+
name|url
argument_list|)
throw|;
block|}
name|rcc
operator|.
name|addRepo
argument_list|(
name|rc
argument_list|)
expr_stmt|;
block|}
block|}
name|validateDirectories
argument_list|(
name|rcc
argument_list|)
expr_stmt|;
name|validateLocalRepo
argument_list|(
name|rcc
argument_list|)
expr_stmt|;
name|validateRemoteRepo
argument_list|(
name|rcc
argument_list|)
expr_stmt|;
return|return
name|rcc
return|;
block|}
comment|/**      * Checks to make sure a specific value is set      *      * @throws ValidationException if value is null      */
specifier|private
name|String
name|checkSet
parameter_list|(
name|String
name|value
parameter_list|,
name|String
name|propertyName
parameter_list|)
throws|throws
name|ValidationException
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|ValidationException
argument_list|(
literal|"Missing property '"
operator|+
name|propertyName
operator|+
literal|"'"
argument_list|)
throw|;
block|}
return|return
name|value
return|;
block|}
specifier|private
name|void
name|validateLocalRepo
parameter_list|(
name|RetrievalComponentConfiguration
name|rcc
parameter_list|)
throws|throws
name|ValidationException
block|{
comment|//Verify local repository set
name|String
name|tmp
init|=
name|checkSet
argument_list|(
name|rcc
operator|.
name|getLocalStore
argument_list|()
argument_list|,
name|MavenProxyPropertyLoader
operator|.
name|REPO_LOCAL_STORE
argument_list|)
decl_stmt|;
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|tmp
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|file
operator|.
name|exists
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|ValidationException
argument_list|(
literal|"The local repository doesn't exist: "
operator|+
name|file
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
throw|;
block|}
if|if
condition|(
operator|!
name|file
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|ValidationException
argument_list|(
literal|"The local repository must be a directory: "
operator|+
name|file
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
throw|;
block|}
block|}
specifier|private
name|void
name|validateRemoteRepo
parameter_list|(
name|RetrievalComponentConfiguration
name|rcc
parameter_list|)
throws|throws
name|ValidationException
block|{
comment|//Verify remote repository set
comment|//only warn if missing
if|if
condition|(
name|rcc
operator|.
name|getRepos
argument_list|()
operator|.
name|size
argument_list|()
operator|<
literal|1
condition|)
block|{
throw|throw
operator|new
name|ValidationException
argument_list|(
literal|"At least one remote repository must be configured."
argument_list|)
throw|;
block|}
block|}
specifier|private
name|Properties
name|getSubset
parameter_list|(
name|Properties
name|props
parameter_list|,
name|String
name|prefix
parameter_list|)
block|{
name|Enumeration
name|keys
init|=
name|props
operator|.
name|keys
argument_list|()
decl_stmt|;
name|Properties
name|result
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
while|while
condition|(
name|keys
operator|.
name|hasMoreElements
argument_list|()
condition|)
block|{
name|String
name|key
init|=
operator|(
name|String
operator|)
name|keys
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|String
name|value
init|=
name|props
operator|.
name|getProperty
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|prefix
argument_list|)
condition|)
block|{
name|String
name|newKey
init|=
name|key
operator|.
name|substring
argument_list|(
name|prefix
operator|.
name|length
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|setProperty
argument_list|(
name|newKey
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|result
return|;
block|}
specifier|public
name|RetrievalComponentConfiguration
name|load
parameter_list|(
name|InputStream
name|is
parameter_list|)
throws|throws
name|IOException
throws|,
name|ValidationException
block|{
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|props
operator|.
name|load
argument_list|(
name|is
argument_list|)
expr_stmt|;
return|return
name|load
argument_list|(
name|props
argument_list|)
return|;
block|}
specifier|private
name|String
name|getMandatoryProperty
parameter_list|(
name|Properties
name|props
parameter_list|,
name|String
name|key
parameter_list|)
throws|throws
name|ValidationException
block|{
specifier|final
name|String
name|value
init|=
name|props
operator|.
name|getProperty
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|ValidationException
argument_list|(
literal|"Missing property: "
operator|+
name|key
argument_list|)
throw|;
block|}
return|return
name|value
return|;
block|}
specifier|private
name|String
name|getOptionalProperty
parameter_list|(
name|Properties
name|props
parameter_list|,
name|String
name|key
parameter_list|,
name|String
name|defaultValue
parameter_list|)
block|{
specifier|final
name|String
name|value
init|=
name|props
operator|.
name|getProperty
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
return|return
name|defaultValue
return|;
block|}
return|return
name|value
return|;
block|}
specifier|private
name|void
name|validateDirectories
parameter_list|(
name|RetrievalComponentConfiguration
name|rcc
parameter_list|)
throws|throws
name|ValidationException
block|{
name|File
name|f
init|=
operator|new
name|File
argument_list|(
name|rcc
operator|.
name|getLocalStore
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|f
operator|.
name|exists
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|ValidationException
argument_list|(
literal|"Specified directory does not exist: "
operator|+
name|f
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
throw|;
block|}
name|List
name|repos
init|=
name|rcc
operator|.
name|getRepos
argument_list|()
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|repos
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|RepoConfiguration
name|repo
init|=
operator|(
name|RepoConfiguration
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|repo
operator|instanceof
name|FileRepoConfiguration
condition|)
block|{
name|FileRepoConfiguration
name|fileRepo
init|=
operator|(
name|FileRepoConfiguration
operator|)
name|repo
decl_stmt|;
name|File
name|f2
init|=
operator|new
name|File
argument_list|(
name|fileRepo
operator|.
name|getBasePath
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|f2
operator|.
name|exists
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|ValidationException
argument_list|(
literal|"Specified directory does not exist: "
operator|+
name|f2
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

