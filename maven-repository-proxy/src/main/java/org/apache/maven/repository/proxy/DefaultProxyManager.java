begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|proxy
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|manager
operator|.
name|ChecksumFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|manager
operator|.
name|WagonManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|ArtifactRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|proxy
operator|.
name|configuration
operator|.
name|ProxyConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|proxy
operator|.
name|files
operator|.
name|DefaultRepositoryFileManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|proxy
operator|.
name|files
operator|.
name|Checksum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|proxy
operator|.
name|repository
operator|.
name|ProxyRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|wagon
operator|.
name|ConnectionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|wagon
operator|.
name|ResourceDoesNotExistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|wagon
operator|.
name|TransferFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|wagon
operator|.
name|UnsupportedProtocolException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|wagon
operator|.
name|Wagon
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|wagon
operator|.
name|authentication
operator|.
name|AuthenticationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|wagon
operator|.
name|authorization
operator|.
name|AuthorizationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|wagon
operator|.
name|observers
operator|.
name|ChecksumObserver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|util
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|NoSuchAlgorithmException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_comment
comment|/**  * @author Edwin Punzalan  */
end_comment

begin_class
specifier|public
class|class
name|DefaultProxyManager
comment|//implements ProxyManager
block|{
comment|/* @plexus.requirement */
specifier|private
name|WagonManager
name|wagon
decl_stmt|;
specifier|private
name|ProxyConfiguration
name|config
decl_stmt|;
specifier|public
name|DefaultProxyManager
parameter_list|(
name|ProxyConfiguration
name|configuration
parameter_list|)
block|{
name|config
operator|=
name|configuration
expr_stmt|;
block|}
specifier|public
name|File
name|get
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|ProxyException
block|{
name|String
name|cachePath
init|=
name|config
operator|.
name|getRepositoryCachePath
argument_list|()
decl_stmt|;
name|File
name|cachedFile
init|=
operator|new
name|File
argument_list|(
name|cachePath
argument_list|,
name|path
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|cachedFile
operator|.
name|exists
argument_list|()
condition|)
block|{
name|getRemoteFile
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
return|return
name|cachedFile
return|;
block|}
specifier|public
name|File
name|getRemoteFile
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|ProxyException
block|{
try|try
block|{
if|if
condition|(
name|path
operator|.
name|indexOf
argument_list|(
literal|"/jars/"
argument_list|)
operator|>=
literal|0
condition|)
block|{
comment|//@todo maven 1 repo request
throw|throw
operator|new
name|ProxyException
argument_list|(
literal|"Maven 1 repository requests not yet supported."
argument_list|)
throw|;
block|}
if|else if
condition|(
name|path
operator|.
name|indexOf
argument_list|(
literal|"/poms/"
argument_list|)
operator|>=
literal|0
condition|)
block|{
comment|//@todo maven 1 repo request
throw|throw
operator|new
name|ProxyException
argument_list|(
literal|"Maven 1 repository requests not yet supported."
argument_list|)
throw|;
block|}
else|else
block|{
comment|//maven 2 repo request
name|Object
name|obj
init|=
operator|new
name|DefaultRepositoryFileManager
argument_list|()
operator|.
name|getRequestedObjectFromPath
argument_list|(
name|path
argument_list|)
decl_stmt|;
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
block|{
comment|//right now, only metadata is known to fit here
return|return
name|getRepositoryFile
argument_list|(
name|path
argument_list|)
return|;
block|}
if|else if
condition|(
name|obj
operator|instanceof
name|Checksum
condition|)
block|{
return|return
name|getRepositoryFile
argument_list|(
name|path
argument_list|,
literal|false
argument_list|)
return|;
block|}
if|else if
condition|(
name|obj
operator|instanceof
name|Artifact
condition|)
block|{
name|Artifact
name|artifact
init|=
operator|(
name|Artifact
operator|)
name|obj
decl_stmt|;
return|return
name|getArtifactFile
argument_list|(
name|artifact
argument_list|)
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|ProxyException
argument_list|(
literal|"Could not hande repository object: "
operator|+
name|obj
operator|.
name|getClass
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|TransferFailedException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ProxyException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|ResourceDoesNotExistException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ProxyException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
name|File
name|getArtifactFile
parameter_list|(
name|Artifact
name|artifact
parameter_list|)
throws|throws
name|TransferFailedException
throws|,
name|ResourceDoesNotExistException
block|{
name|ArtifactRepository
name|repoCache
init|=
name|config
operator|.
name|getRepositoryCache
argument_list|()
decl_stmt|;
name|File
name|artifactFile
init|=
operator|new
name|File
argument_list|(
name|repoCache
operator|.
name|getBasedir
argument_list|()
argument_list|,
name|repoCache
operator|.
name|pathOf
argument_list|(
name|artifact
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|artifactFile
operator|.
name|exists
argument_list|()
condition|)
block|{
name|wagon
operator|.
name|getArtifact
argument_list|(
name|artifact
argument_list|,
name|config
operator|.
name|getRepositories
argument_list|()
argument_list|)
expr_stmt|;
name|artifactFile
operator|=
name|artifact
operator|.
name|getFile
argument_list|()
expr_stmt|;
block|}
return|return
name|artifactFile
return|;
block|}
specifier|private
name|File
name|getRepositoryFile
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|ProxyException
block|{
return|return
name|getRepositoryFile
argument_list|(
name|path
argument_list|,
literal|true
argument_list|)
return|;
block|}
specifier|private
name|File
name|getRepositoryFile
parameter_list|(
name|String
name|path
parameter_list|,
name|boolean
name|useChecksum
parameter_list|)
throws|throws
name|ProxyException
block|{
name|ArtifactRepository
name|cache
init|=
name|config
operator|.
name|getRepositoryCache
argument_list|()
decl_stmt|;
name|File
name|target
init|=
operator|new
name|File
argument_list|(
name|cache
operator|.
name|getBasedir
argument_list|()
argument_list|,
name|path
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|repositories
init|=
name|config
operator|.
name|getRepositories
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|repositories
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|ProxyRepository
name|repository
init|=
operator|(
name|ProxyRepository
operator|)
name|repositories
operator|.
name|next
argument_list|()
decl_stmt|;
try|try
block|{
name|Wagon
name|wagon
init|=
name|this
operator|.
name|wagon
operator|.
name|getWagon
argument_list|(
name|repository
operator|.
name|getProtocol
argument_list|()
argument_list|)
decl_stmt|;
comment|//@todo configure wagon
name|ChecksumObserver
name|listener
init|=
literal|null
decl_stmt|;
try|try
block|{
name|listener
operator|=
name|repository
operator|.
name|getChecksumObserver
argument_list|()
expr_stmt|;
if|if
condition|(
name|listener
operator|!=
literal|null
condition|)
block|{
name|wagon
operator|.
name|addTransferListener
argument_list|(
name|listener
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|NoSuchAlgorithmException
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Skipping checksum validation for unsupported algorithm: "
operator|+
name|repository
operator|.
name|getChecksum
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|connectToRepository
argument_list|(
name|wagon
argument_list|,
name|repository
argument_list|)
condition|)
block|{
name|File
name|temp
init|=
operator|new
name|File
argument_list|(
name|target
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|".tmp"
argument_list|)
decl_stmt|;
name|temp
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
name|int
name|tries
init|=
literal|0
decl_stmt|;
name|boolean
name|success
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|success
condition|)
block|{
name|tries
operator|++
expr_stmt|;
name|wagon
operator|.
name|get
argument_list|(
name|path
argument_list|,
name|temp
argument_list|)
expr_stmt|;
if|if
condition|(
name|useChecksum
condition|)
block|{
name|success
operator|=
name|doChecksumCheck
argument_list|(
name|listener
argument_list|,
name|repository
argument_list|,
name|path
argument_list|,
name|wagon
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|success
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|tries
operator|>
literal|1
operator|&&
operator|!
name|success
condition|)
block|{
throw|throw
operator|new
name|ProxyException
argument_list|(
literal|"Checksum failures occurred while downloading "
operator|+
name|path
argument_list|)
throw|;
block|}
block|}
name|disconnectWagon
argument_list|(
name|wagon
argument_list|)
expr_stmt|;
return|return
name|target
return|;
block|}
comment|//try next repository
block|}
catch|catch
parameter_list|(
name|TransferFailedException
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Skipping repository "
operator|+
name|repository
operator|.
name|getUrl
argument_list|()
operator|+
literal|": "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ResourceDoesNotExistException
name|e
parameter_list|)
block|{
comment|//do nothing, file not found in this repository
block|}
catch|catch
parameter_list|(
name|AuthorizationException
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Skipping repository "
operator|+
name|repository
operator|.
name|getUrl
argument_list|()
operator|+
literal|": "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedProtocolException
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Skipping repository "
operator|+
name|repository
operator|.
name|getUrl
argument_list|()
operator|+
literal|": no wagon configured for protocol "
operator|+
name|repository
operator|.
name|getProtocol
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
throw|throw
operator|new
name|ProxyException
argument_list|(
literal|"Could not find "
operator|+
name|path
operator|+
literal|" in any of the repositories."
argument_list|)
throw|;
block|}
specifier|private
name|boolean
name|connectToRepository
parameter_list|(
name|Wagon
name|wagon
parameter_list|,
name|ProxyRepository
name|repository
parameter_list|)
block|{
name|boolean
name|connected
init|=
literal|false
decl_stmt|;
try|try
block|{
name|wagon
operator|.
name|connect
argument_list|(
name|repository
argument_list|)
expr_stmt|;
name|connected
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ConnectionException
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Could not connect to "
operator|+
name|repository
operator|.
name|getId
argument_list|()
operator|+
literal|": "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AuthenticationException
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Could not connect to "
operator|+
name|repository
operator|.
name|getId
argument_list|()
operator|+
literal|": "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|connected
return|;
block|}
specifier|private
name|boolean
name|doChecksumCheck
parameter_list|(
name|ChecksumObserver
name|listener
parameter_list|,
name|ProxyRepository
name|repository
parameter_list|,
name|String
name|path
parameter_list|,
name|Wagon
name|wagon
parameter_list|)
comment|//throws ChecksumFailedException
block|{
name|boolean
name|success
init|=
literal|false
decl_stmt|;
try|try
block|{
name|String
name|checksumExt
init|=
name|repository
operator|.
name|getChecksum
argument_list|()
operator|.
name|getFileExtension
argument_list|()
decl_stmt|;
name|String
name|remotePath
init|=
name|path
operator|+
literal|"."
operator|+
name|checksumExt
decl_stmt|;
name|File
name|checksumFile
init|=
operator|new
name|File
argument_list|(
name|config
operator|.
name|getRepositoryCache
argument_list|()
operator|.
name|getBasedir
argument_list|()
argument_list|,
name|remotePath
argument_list|)
decl_stmt|;
name|verifyChecksum
argument_list|(
name|listener
operator|.
name|getActualChecksum
argument_list|()
argument_list|,
name|checksumFile
argument_list|,
name|remotePath
argument_list|,
name|checksumExt
argument_list|,
name|wagon
argument_list|)
expr_stmt|;
name|wagon
operator|.
name|removeTransferListener
argument_list|(
name|listener
argument_list|)
expr_stmt|;
name|success
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ChecksumFailedException
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"*** CHECKSUM FAILED - "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
operator|+
literal|" - RETRYING"
argument_list|)
expr_stmt|;
block|}
return|return
name|success
return|;
block|}
specifier|private
name|void
name|verifyChecksum
parameter_list|(
name|String
name|actualChecksum
parameter_list|,
name|File
name|destination
parameter_list|,
name|String
name|remotePath
parameter_list|,
name|String
name|checksumFileExtension
parameter_list|,
name|Wagon
name|wagon
parameter_list|)
throws|throws
name|ChecksumFailedException
block|{
try|try
block|{
name|File
name|tempDestination
init|=
operator|new
name|File
argument_list|(
name|destination
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|".tmp"
argument_list|)
decl_stmt|;
name|tempDestination
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
name|File
name|tempChecksumFile
init|=
operator|new
name|File
argument_list|(
name|tempDestination
operator|+
name|checksumFileExtension
operator|+
literal|".tmp"
argument_list|)
decl_stmt|;
name|tempChecksumFile
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
name|wagon
operator|.
name|get
argument_list|(
name|remotePath
operator|+
name|checksumFileExtension
argument_list|,
name|tempChecksumFile
argument_list|)
expr_stmt|;
name|String
name|expectedChecksum
init|=
name|FileUtils
operator|.
name|fileRead
argument_list|(
name|tempChecksumFile
argument_list|)
decl_stmt|;
comment|// remove whitespaces at the end
name|expectedChecksum
operator|=
name|expectedChecksum
operator|.
name|trim
argument_list|()
expr_stmt|;
comment|// check for 'MD5 (name) = CHECKSUM'
if|if
condition|(
name|expectedChecksum
operator|.
name|startsWith
argument_list|(
literal|"MD5"
argument_list|)
condition|)
block|{
name|int
name|lastSpacePos
init|=
name|expectedChecksum
operator|.
name|lastIndexOf
argument_list|(
literal|' '
argument_list|)
decl_stmt|;
name|expectedChecksum
operator|=
name|expectedChecksum
operator|.
name|substring
argument_list|(
name|lastSpacePos
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// remove everything after the first space (if available)
name|int
name|spacePos
init|=
name|expectedChecksum
operator|.
name|indexOf
argument_list|(
literal|' '
argument_list|)
decl_stmt|;
if|if
condition|(
name|spacePos
operator|!=
operator|-
literal|1
condition|)
block|{
name|expectedChecksum
operator|=
name|expectedChecksum
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|spacePos
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|expectedChecksum
operator|.
name|equals
argument_list|(
name|actualChecksum
argument_list|)
condition|)
block|{
name|File
name|checksumFile
init|=
operator|new
name|File
argument_list|(
name|destination
operator|+
name|checksumFileExtension
argument_list|)
decl_stmt|;
if|if
condition|(
name|checksumFile
operator|.
name|exists
argument_list|()
condition|)
name|checksumFile
operator|.
name|delete
argument_list|()
expr_stmt|;
name|FileUtils
operator|.
name|copyFile
argument_list|(
name|tempChecksumFile
argument_list|,
name|checksumFile
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|ChecksumFailedException
argument_list|(
literal|"Checksum failed on download: local = '"
operator|+
name|actualChecksum
operator|+
literal|"'; remote = '"
operator|+
name|expectedChecksum
operator|+
literal|"'"
argument_list|)
throw|;
block|}
block|}
catch|catch
parameter_list|(
name|TransferFailedException
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Skipping checksum validation for "
operator|+
name|remotePath
operator|+
literal|": "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ResourceDoesNotExistException
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Skipping checksum validation for "
operator|+
name|remotePath
operator|+
literal|": "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AuthorizationException
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Skipping checksum validation for "
operator|+
name|remotePath
operator|+
literal|": "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ChecksumFailedException
argument_list|(
literal|"Invalid checksum file"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
name|void
name|disconnectWagon
parameter_list|(
name|Wagon
name|wagon
parameter_list|)
block|{
try|try
block|{
name|wagon
operator|.
name|disconnect
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ConnectionException
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Problem disconnecting from wagon - ignoring: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

