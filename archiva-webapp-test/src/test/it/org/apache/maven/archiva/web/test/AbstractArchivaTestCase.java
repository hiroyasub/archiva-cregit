begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|archiva
operator|.
name|web
operator|.
name|test
package|;
end_package

begin_comment
comment|/*  * Copyright 2006 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|com
operator|.
name|thoughtworks
operator|.
name|selenium
operator|.
name|Selenium
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|shared
operator|.
name|web
operator|.
name|test
operator|.
name|AbstractSeleniumTestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_comment
comment|/**  * @author Edwin Punzalan  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractArchivaTestCase
extends|extends
name|AbstractSeleniumTestCase
block|{
specifier|protected
name|String
name|adminUsername
init|=
literal|"admin"
decl_stmt|;
specifier|protected
name|String
name|adminPassword
init|=
literal|"admin1"
decl_stmt|;
specifier|protected
name|String
name|adminFullName
init|=
literal|"Archiva Admin"
decl_stmt|;
specifier|protected
name|String
name|adminEmail
init|=
literal|"admin@localhost.localdomain.com"
decl_stmt|;
specifier|private
name|String
name|baseUrl
init|=
literal|"http://localhost:9595/archiva"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CREATE_ADMIN_USER_PAGE_TITLE
init|=
literal|"Maven Archiva :: Create Admin User"
decl_stmt|;
specifier|protected
name|void
name|initialize
parameter_list|()
block|{
name|getSelenium
argument_list|()
operator|.
name|open
argument_list|(
literal|"/archiva"
argument_list|)
expr_stmt|;
if|if
condition|(
name|CREATE_ADMIN_USER_PAGE_TITLE
operator|.
name|equals
argument_list|(
name|getSelenium
argument_list|()
operator|.
name|getTitle
argument_list|()
argument_list|)
condition|)
block|{
name|assertCreateAdminUserPage
argument_list|()
expr_stmt|;
name|submitCreateAdminUserPage
argument_list|(
name|adminFullName
argument_list|,
name|adminEmail
argument_list|,
name|adminPassword
argument_list|,
name|adminPassword
argument_list|)
expr_stmt|;
name|assertLoginPage
argument_list|()
expr_stmt|;
name|submitLoginPage
argument_list|(
name|adminUsername
argument_list|,
name|adminPassword
argument_list|)
expr_stmt|;
name|logout
argument_list|()
expr_stmt|;
block|}
name|login
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|String
name|getApplicationName
parameter_list|()
block|{
return|return
literal|"Archiva"
return|;
block|}
specifier|protected
name|String
name|getInceptionYear
parameter_list|()
block|{
return|return
literal|"2005"
return|;
block|}
specifier|public
specifier|abstract
name|void
name|login
parameter_list|()
function_decl|;
specifier|public
name|void
name|assertFooter
parameter_list|()
block|{
name|int
name|currentYear
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|Calendar
operator|.
name|YEAR
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|getSelenium
argument_list|()
operator|.
name|getText
argument_list|(
literal|"xpath=//div[@id='footer']/div"
argument_list|)
operator|.
name|endsWith
argument_list|(
literal|" "
operator|+
name|getInceptionYear
argument_list|()
operator|+
literal|"-"
operator|+
name|currentYear
operator|+
literal|" Apache Software Foundation"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|assertHeader
parameter_list|()
block|{
name|assertTrue
argument_list|(
literal|"banner is missing"
argument_list|,
name|getSelenium
argument_list|()
operator|.
name|isElementPresent
argument_list|(
literal|"xpath=//div[@id='banner']"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"bannerLeft is missing"
argument_list|,
name|getSelenium
argument_list|()
operator|.
name|isElementPresent
argument_list|(
literal|"xpath=//div[@id='banner']"
operator|+
literal|"/span[@id='bannerLeft']"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"bannerLeft link is missing"
argument_list|,
name|getSelenium
argument_list|()
operator|.
name|isElementPresent
argument_list|(
literal|"xpath=//div[@id='banner']"
operator|+
literal|"/span[@id='bannerLeft']/a[@href='http://maven.apache.org/archiva/']"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"bannerLeft img is missing"
argument_list|,
name|getSelenium
argument_list|()
operator|.
name|isElementPresent
argument_list|(
literal|"xpath=//div[@id='banner']"
operator|+
literal|"/span[@id='bannerLeft']/a[@href='http://maven.apache.org/archiva/']"
operator|+
literal|"/img[@src='http://maven.apache.org/images/maven.jpg']"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"bannerRight is missing"
argument_list|,
name|getSelenium
argument_list|()
operator|.
name|isElementPresent
argument_list|(
literal|"xpath=//div[@id='banner']/span[@id='bannerRight']"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getBaseUrl
parameter_list|()
block|{
return|return
name|baseUrl
return|;
block|}
comment|//////////////////////////////////////
comment|// Create Admin User
comment|//////////////////////////////////////
specifier|public
name|void
name|assertCreateAdminUserPage
parameter_list|()
block|{
name|assertPage
argument_list|(
name|CREATE_ADMIN_USER_PAGE_TITLE
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Create Admin User"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Username"
argument_list|)
expr_stmt|;
name|assertElementPresent
argument_list|(
literal|"user.username"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Full Name"
argument_list|)
expr_stmt|;
name|assertElementPresent
argument_list|(
literal|"user.fullName"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Email Address"
argument_list|)
expr_stmt|;
name|assertElementPresent
argument_list|(
literal|"user.email"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Password"
argument_list|)
expr_stmt|;
name|assertElementPresent
argument_list|(
literal|"user.password"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Confirm Password"
argument_list|)
expr_stmt|;
name|assertElementPresent
argument_list|(
literal|"user.confirmPassword"
argument_list|)
expr_stmt|;
block|}
comment|//////////////////////////////////////
comment|// Login
comment|//////////////////////////////////////
specifier|public
name|void
name|assertLoginPage
parameter_list|()
block|{
name|assertPage
argument_list|(
literal|"Maven Archiva :: Login Page"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Login"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Username"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Password"
argument_list|)
expr_stmt|;
name|assertTextPresent
argument_list|(
literal|"Remember Me"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|isChecked
argument_list|(
literal|"rememberMe"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|submitCreateAdminUserPage
parameter_list|(
name|String
name|fullName
parameter_list|,
name|String
name|email
parameter_list|,
name|String
name|password
parameter_list|,
name|String
name|confirmPassword
parameter_list|)
block|{
name|Selenium
name|sel
init|=
name|getSelenium
argument_list|()
decl_stmt|;
name|sel
operator|.
name|type
argument_list|(
literal|"user.fullName"
argument_list|,
name|fullName
argument_list|)
expr_stmt|;
name|sel
operator|.
name|type
argument_list|(
literal|"user.email"
argument_list|,
name|email
argument_list|)
expr_stmt|;
name|sel
operator|.
name|type
argument_list|(
literal|"user.password"
argument_list|,
name|password
argument_list|)
expr_stmt|;
name|sel
operator|.
name|type
argument_list|(
literal|"user.confirmPassword"
argument_list|,
name|confirmPassword
argument_list|)
expr_stmt|;
name|sel
operator|.
name|click
argument_list|(
literal|"//input[@type='submit']"
argument_list|)
expr_stmt|;
name|waitPage
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

