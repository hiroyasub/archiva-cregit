 ------
 Understanding Consumers in Apache Archiva
 ------
 Maria Odea Ching
 Olivier Lamy
 ------
 2011-12-18
 ------

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/guides/mini/guide-apt-format.html

Understanding Consumers in Apache Archiva

 Archiva makes use of the concept of consumers. Consumers are components which consumes or processes an artifact. There is on type
 of consumers in Archiva: repository content consumers.

* Repository Content Consumers
  
  The repository content consumers consume or process artifacts during repository scanning. For every artifact found in the repository,
  each consumer processes them. There are 8 available repository content consumers which can be configured in the Repository Scanning
  page. These are:
  
  * <<auto-remove>> - Removes files in the repository being scanned if the file type matches any of the configured file types to be removed.  
  
  * <<auto-rename>> - Automatically renames common artifact mistakes. 
  
  * <<create-missing-checksums>> - Creates the md5 and sha1 checksum files of the artifact if there are none available in the repository.  
  
  * <<index-content>> - Adds the content of the artifact (specifically the pom) to the index, allowing the artifact to be searched in Archiva.
  
  * <<metadata-updater>> - Updates artifact metadata files depending on the content of the repository.  
  
  * <<repository-purge>> - Removes old snapshots from the repository either by the number of days old or by the retention count.

  * <<validate-checksums>> - Validates the checksum files of the artifact.

  * <<create-archiva-metadata>> - Take an artifact off of disk and put it into the metadata repository.

  * <<duplicate-artifacts>> - Search the artifact repository of known SHA1 Checksums for potential duplicate artifacts.

  []

  
[../images/consumers.png]